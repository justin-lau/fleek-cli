{
  "version": 3,
  "sources": ["../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/helpers/util.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/ZodError.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/locales/en.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/errors.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/helpers/parseUtil.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/helpers/typeAliases.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/helpers/errorUtil.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/types.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/external.js", "../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/index.js", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/version.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/errors.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/narrow.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/regex.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/formatAbiParameter.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/formatAbiParameters.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/formatAbiItem.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/formatAbi.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/runtime/signatures.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/errors/abiItem.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/errors/abiParameter.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/errors/signature.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/errors/struct.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/errors/splitParameters.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/runtime/cache.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/runtime/utils.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/runtime/structs.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/parseAbi.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/parseAbiItem.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/parseAbiParameter.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/human-readable/parseAbiParameters.ts", "../node_modules/.pnpm/abitype@0.9.8_typescript@4.9.3_zod@3.22.4/node_modules/abitype/src/index.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/getAction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/formatAbiItem.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/data/isHex.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/data/size.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/version.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/utils.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/base.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/abi.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/log.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/data.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/data/pad.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/encoding.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/data/trim.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/encoding/fromHex.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/encoding/toHex.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/encoding/toBytes.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/normalizeSignature.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/getFunctionSignature.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/getEventSignature.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/_u64.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/cryptoNode.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/utils.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/sha3.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/keccak256.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/getEventSelector.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/address.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/address/isAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/data/concat.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/data/slice.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/encodeAbiParameters.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/getFunctionSelector.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/getAbiItem.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/encodeEventTopics.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/filters/createFilterRequestScope.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/createContractEventFilter.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/accounts/utils/parseAccount.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/encodeFunctionData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/solidity.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/address/getAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/decodeAbiParameters.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/decodeErrorResult.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/stringify.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/formatAbiItemWithArgs.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/unit.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/unit/formatUnits.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/unit/formatEther.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/unit/formatGwei.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/transaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/contract.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/request.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/rpc.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/errors/getContractError.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/account.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/estimateGas.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/node.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/errors/getNodeError.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/errors/getEstimateGasError.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/extract.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/formatter.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/transactionRequest.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/transaction/assertRequest.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/fee.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/block.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/transaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/block.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getBlock.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getGasPrice.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/estimateMaxPriorityFeePerGas.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/estimateFeesPerGas.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getTransactionCount.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/transaction/getTransactionType.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/prepareTransactionRequest.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/estimateGas.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/estimateContractGas.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/decodeEventLog.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/log.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getLogs.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getContractEvents.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/decodeFunctionResult.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/abis.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/contract.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/chain.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/chain/getChainContractAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/errors/getCallError.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/promise/createBatchScheduler.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/ccip.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/address/isAddressEqual.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ccip.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/call.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/readContract.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/simulateContract.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/observe.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/wait.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/poll.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/promise/withCache.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getBlockNumber.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getFilterChanges.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/uninstallFilter.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/watchContractEvent.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/chain/assertCurrentChain.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/errors/getTransactionError.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getChainId.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/sendRawTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/sendTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/writeContract.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/getContract.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/accounts/utils/publicKeyToAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/accounts.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/uid.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/createClient.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/promise/withRetry.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/buildRequest.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/transports/createTransport.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/transports/custom.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/transports/fallback.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/transport.ts", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/constants.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/buffer-util.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/limiter.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/permessage-deflate.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/validation.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/receiver.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/sender.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/event-target.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/extension.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/websocket.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/stream.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/subprotocol.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/lib/websocket-server.js", "../node_modules/.pnpm/ws@8.13.0/node_modules/ws/index.js", "../node_modules/.pnpm/isows@1.0.3_ws@8.13.0/node_modules/isows/utils.ts", "../node_modules/.pnpm/isows@1.0.3_ws@8.13.0/node_modules/isows/index.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/promise/withTimeout.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/rpc.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/transports/http.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ens/errors.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ens/encodedLabelToLabelhash.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ens/namehash.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ens/encodeLabelhash.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ens/labelhash.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ens/packetToBytes.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/ens/getEnsAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/ens.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ens/avatar/utils.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/ens/avatar/parseAvatarRecord.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/ens/getEnsText.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/ens/getEnsAvatar.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/ens/getEnsName.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/ens/getEnsResolver.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/createBlockFilter.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/createEventFilter.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/createPendingTransactionFilter.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getBalance.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getBlockTransactionCount.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getBytecode.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/feeHistory.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getFeeHistory.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getFilterLogs.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/chain/defineChain.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/chain/extractChain.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/regex.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/hashTypedData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/typedData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/decodeFunctionData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/encodeDeployData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/encodeErrorResult.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/encodeFunctionResult.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/encodePacked.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/data/isBytes.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/errors/cursor.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/cursor.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/encoding/toRlp.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/address/getContractAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/contract/extractFunctionParts.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/transactionReceipt.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/encoding/fromBytes.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/encoding/fromRlp.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/isHash.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/sha256.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/ripemd160.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/hash/ripemd160.ts", "../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/src/abstract/utils.ts", "../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/src/abstract/modular.ts", "../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/src/abstract/curve.ts", "../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/src/abstract/weierstrass.ts", "../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/src/_shortw_utils.ts", "../node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/src/secp256k1.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/recoverPublicKey.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/recoverAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/strings.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/hashMessage.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/recoverMessageAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/recoverTypedDataAddress.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/verifyMessage.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/verifyTypedData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/transaction/getSerializedTransactionType.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/transaction/assertTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/transaction/parseTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/transaction/serializeAccessList.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/transaction/serializeTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/unit/parseUnits.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/unit/parseEther.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/unit/parseGwei.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/index.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/formatters/proof.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getProof.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getStorageAt.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getTransactionConfirmations.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/getTransactionReceipt.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/multicall.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/contracts.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/data/isBytesEqual.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/verifyHash.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/verifyMessage.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/verifyTypedData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/watchBlockNumber.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/waitForTransactionReceipt.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/watchBlocks.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/watchEvent.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/public/watchPendingTransactions.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/decorators/public.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/createPublicClient.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/dropTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/dumpState.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/getAutomine.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/getTxpoolContent.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/getTxpoolStatus.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/impersonateAccount.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/increaseTime.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/inspectTxpool.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/loadState.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/mine.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/removeBlockTimestampInterval.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/reset.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/revert.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/sendUnsignedTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setAutomine.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setBalance.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setBlockGasLimit.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setBlockTimestampInterval.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setCode.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setCoinbase.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setIntervalMining.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setLoggingEnabled.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setMinGasPrice.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setNextBlockBaseFeePerGas.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setNextBlockTimestamp.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setNonce.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setRpcUrl.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/setStorageAt.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/snapshot.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/test/stopImpersonatingAccount.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/decorators/test.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/createTestClient.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/addChain.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/deployContract.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/getAddresses.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/getPermissions.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/requestAddresses.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/requestPermissions.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/signMessage.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/signTransaction.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/signTypedData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/switchChain.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/actions/wallet/watchAsset.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/decorators/wallet.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/createWalletClient.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/clients/transports/webSocket.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/address.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/number.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/constants/bytes.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/abi/decodeDeployData.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/compactSignatureToSignature.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/hexToCompactSignature.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/hexToSignature.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/signatureToCompactSignature.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/compactSignatureToHex.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/utils/signature/signatureToHex.ts", "../node_modules/.pnpm/viem@1.21.4_typescript@4.9.3_zod@3.22.4/node_modules/viem/index.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/validationHelpers.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/auth.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/domains.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/ipns.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/ipfs.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/site.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/privateGateway.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/ens.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/template.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/index.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/isZodErrorLike.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/ValidationError.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/isValidationError.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/isValidationErrorLike.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/fromZodIssue.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/MessageBuilder.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/utils/NonEmptyArray.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/utils/joinPath.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/config.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/errorMap.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/fromZodError.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/toValidationError.ts", "../node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.22.4/node_modules/zod-validation-error/lib/fromError.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/configuration/validateConfigurationWithResult.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isHostnameValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isPrivateGatewayNameValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isProjectNameValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isFunctionNameValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isFunctionSlugValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isFunctionStatusValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isSiteNameValid.ts", "../node_modules/.pnpm/@adraffy+ens-normalize@1.11.0/node_modules/@adraffy/ens-normalize/dist/index.cjs", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isEnsValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isEmailValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isPhoneNumberValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/billing.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/services/salesContactRequest.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/inputs/isFunctionPathValid.ts", "../node_modules/.pnpm/@fleek-platform+utils-validation@2.4.0_typescript@4.9.3/node_modules/@fleek-platform/utils-validation/src/index.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/BunnyPullZoneNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainAlreadyExistsInProjectError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainInPendingStateError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainHostnameInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UnknownError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SitesNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteDeploymentNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteHasDependentsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteHasNoSourceProviderError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteNotDeployedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/IpnsRecordNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/IpnsRecordsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/IpnsFailToDecryptKeyError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/IpnsRecordsForSiteLimitError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/StorageIpfsUploadFailedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SdkRequiredNodeRuntimeError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/AuthorizationError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectMembershipNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GithubAppInstallationNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UserNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UserAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectHasDependentsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectInvalidNameError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PublicKeyAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/VerificationSessionAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UnauthenticatedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainZoneNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainZoneHasDependentsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainZoneInPendingStateError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainNotFoundUnderPullzoneError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DomainZoneInvalidTypeError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UnauthorizedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekConfigInvalidContentError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekConfigMissingFileError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ApplicationWhitelistDomainDuplicityError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ApplicationAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ApplicationsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ApplicationNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ApplicationNameInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/EnsRecordNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/EnsRecordAlreadyExistsInProjectError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/EnsNameInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/EnsRecordInPendingStateError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/InvalidPersonalAccessTokenError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PersonalAccessTokenNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PrivateGatewayNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PrivateGatewayAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PrivateGatewayNameInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PrivateGatewaysNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/TemplateAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/TemplateNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UserHasNoAccessToAnotherUserError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteFrameworkAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteFrameworkNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/TemplateCategoryNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/TemplateDeploymentNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectMembershipHasInefficientRoleError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SecretGroupNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SecretNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SecretVisibilityAlreadyEncryptedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SecretKeyAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SecretFailToEncryptError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PinNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PinAlreadyExistsInProjectError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UnstoppableDeploymentError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteDeploymentNotReleasedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/InvalidDeploymentTriggerError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/IpfsGatewayContentUnreachableError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/InvitationNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/MigrationTokenInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/MigrationRequestsAlreadyExistError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/MigrationRequestNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/MigrationRequestInPendingStateError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectInvitationAlreadyExistError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectMembershipAlreadyExistError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectMembershipNoOwnersError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UploadedS3KeyNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PathIsNotADirectoryError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionDeploymentNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionPathNotValidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionNameNotValidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionStatusNotValidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionSlugNotValidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/MaintenanceError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UserHasNoAccessToFeatureError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/InvalidCidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ValidationError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UserInBlocklistError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/EnsNameContentHashCodecMistmatchError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/EnsNameContentHashUndefinedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DnsConfigAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DnsConfigNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/TwoFactorSecretKeyFailedToEncryptError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UserSecretKeyAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UserSecretKeyNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/TwoFactorSecretKeyFailedToDecryptError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/RecoveryCodesAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/WriteFileFromStreamError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/InvalidTOTPTokenError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/InvalidRecoveryCodeError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/MissingTwoFactorProtectionCredentialsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/DeploymentInProgressError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PullzoneNotFoundForZoneIdError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/RecoveryCodeFailedToEncryptError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/RecoveryCodeFailedToDecryptError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PermissionGroupNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PermissionScopeError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/InvalidAdminAccessTokenError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/MissingExpectedDataError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/EnvNotSetError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitSecretsFailedToEncryptError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitConfigFailedToParseError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PathIsNotAFileError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionBundlingFailedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitIntegrationNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitProviderNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ExpectedOneOfValuesError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/InvalidJSONFormat.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/StorageUploadFileCountQuotaExceededError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/StorageUploadTotalSizeQuotaExceededError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitProviderNotSupportedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitProviderNotAuthorizedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitAccessTokenInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/QueuedDeploymentsLimitError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitIntegrationInstallationConflictError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitLinkMultipleAccountError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitRepoByNameAndOwnerNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/GitAccessTokenNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FolderNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FolderAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FolderNameContainsReservedWordError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/PinsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/SiteCreationFailedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionInvalidWasmCodeError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/FleekFunctionWasmEncryptionFailedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UploadProxyStoreAsCarError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UploadProxyUploadFileError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/IpfsDenylistUpdateWorkflowTriggerFailedError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectSiteLimitExceededError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/ProjectFleekFunctionLimitExceededError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/UserProjectLimitExceededError.ts", "../node_modules/.pnpm/@fleek-platform+errors@2.7.0/node_modules/@fleek-platform/errors/src/index.ts", "../node_modules/.pnpm/@multiformats+base-x@4.0.1/node_modules/@multiformats/base-x/src/index.js", "../node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/util.js", "../node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/base.js", "../node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/rfc4648.js", "../node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/constants.js", "../node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/index.js", "../node_modules/.pnpm/varint@5.0.2/node_modules/varint/encode.js", "../node_modules/.pnpm/varint@5.0.2/node_modules/varint/decode.js", "../node_modules/.pnpm/varint@5.0.2/node_modules/varint/length.js", "../node_modules/.pnpm/varint@5.0.2/node_modules/varint/index.js", "../node_modules/.pnpm/multihashes@4.0.3/node_modules/multihashes/src/constants.js", "../node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/cjs/src/util/as-uint8array.js", "../node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/cjs/src/alloc.js", "../node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/cjs/src/util/bases.js", "../node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/cjs/src/to-string.js", "../node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/cjs/src/from-string.js", "../node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/cjs/src/concat.js", "../node_modules/.pnpm/multihashes@4.0.3/node_modules/multihashes/src/index.js", "../node_modules/.pnpm/varint@6.0.0/node_modules/varint/encode.js", "../node_modules/.pnpm/varint@6.0.0/node_modules/varint/decode.js", "../node_modules/.pnpm/varint@6.0.0/node_modules/varint/length.js", "../node_modules/.pnpm/varint@6.0.0/node_modules/varint/index.js", "../node_modules/.pnpm/multicodec@3.2.1/node_modules/multicodec/src/util.js", "../node_modules/.pnpm/multicodec@3.2.1/node_modules/multicodec/src/generated-table.js", "../node_modules/.pnpm/multicodec@3.2.1/node_modules/multicodec/src/maps.js", "../node_modules/.pnpm/multicodec@3.2.1/node_modules/multicodec/src/index.js", "../node_modules/.pnpm/cids@1.1.9/node_modules/cids/src/cid-util.js", "../node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/cjs/src/equals.js", "../node_modules/.pnpm/cids@1.1.9/node_modules/cids/src/index.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/BunnyPullZoneNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainAlreadyExistsInProjectError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainInPendingStateError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainHostnameInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UnknownError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SitesNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteDeploymentNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteHasDependentsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteHasNoSourceProviderError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteNotDeployedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/IpnsRecordNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/IpnsRecordsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/IpnsFailToDecryptKeyError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/IpnsRecordsForSiteLimitError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/StorageIpfsUploadFailedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SdkRequiredNodeRuntimeError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/AuthorizationError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectMembershipNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GithubAppInstallationNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UserNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UserAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectHasDependentsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectInvalidNameError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PublicKeyAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/VerificationSessionAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UnauthenticatedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainZoneNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainZoneHasDependentsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainZoneInPendingStateError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainNotFoundUnderPullzoneError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DomainZoneInvalidTypeError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UnauthorizedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekConfigInvalidContentError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekConfigMissingFileError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ApplicationWhitelistDomainDuplicityError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ApplicationAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ApplicationsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ApplicationNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ApplicationNameInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/EnsRecordNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/EnsRecordAlreadyExistsInProjectError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/EnsNameInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/EnsRecordInPendingStateError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/InvalidPersonalAccessTokenError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PersonalAccessTokenNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PrivateGatewayNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PrivateGatewayAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PrivateGatewayNameInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PrivateGatewaysNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/TemplateAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/TemplateNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UserHasNoAccessToAnotherUserError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteFrameworkAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteFrameworkNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/TemplateCategoryNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/TemplateDeploymentNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectMembershipHasInefficientRoleError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SecretGroupNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SecretNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SecretVisibilityAlreadyEncryptedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SecretKeyAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SecretFailToEncryptError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PinNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PinAlreadyExistsInProjectError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UnstoppableDeploymentError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteDeploymentNotReleasedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/InvalidDeploymentTriggerError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/IpfsGatewayContentUnreachableError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/InvitationNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/MigrationTokenInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/MigrationRequestsAlreadyExistError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/MigrationRequestNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/MigrationRequestInPendingStateError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectInvitationAlreadyExistError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectMembershipAlreadyExistError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectMembershipNoOwnersError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UploadedS3KeyNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PathIsNotADirectoryError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionDeploymentNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionPathNotValidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionNameNotValidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionStatusNotValidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionSlugNotValidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/MaintenanceError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UserHasNoAccessToFeatureError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/InvalidCidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ValidationError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UserInBlocklistError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/EnsNameContentHashCodecMistmatchError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/EnsNameContentHashUndefinedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DnsConfigAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DnsConfigNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/TwoFactorSecretKeyFailedToEncryptError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UserSecretKeyAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UserSecretKeyNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/TwoFactorSecretKeyFailedToDecryptError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/RecoveryCodesAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/WriteFileFromStreamError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/InvalidTOTPTokenError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/InvalidRecoveryCodeError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/MissingTwoFactorProtectionCredentialsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/DeploymentInProgressError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PullzoneNotFoundForZoneIdError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/RecoveryCodeFailedToEncryptError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/RecoveryCodeFailedToDecryptError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PermissionGroupNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PermissionScopeError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/InvalidAdminAccessTokenError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/MissingExpectedDataError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/EnvNotSetError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitSecretsFailedToEncryptError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitConfigFailedToParseError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PathIsNotAFileError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionBundlingFailedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitIntegrationNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitProviderNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ExpectedOneOfValuesError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/InvalidJSONFormat.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/StorageUploadFileCountQuotaExceededError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/StorageUploadTotalSizeQuotaExceededError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitProviderNotSupportedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitProviderNotAuthorizedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitAccessTokenInvalidError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/QueuedDeploymentsLimitError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitIntegrationInstallationConflictError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitLinkMultipleAccountError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitRepoByNameAndOwnerNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/GitAccessTokenNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FolderNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FolderAlreadyExistsError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FolderNameContainsReservedWordError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/PinsNotFoundError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/SiteCreationFailedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionInvalidWasmCodeError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekFunctionWasmEncryptionFailedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UploadProxyStoreAsCarError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UploadProxyUploadFileError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/IpfsDenylistUpdateWorkflowTriggerFailedError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectSiteLimitExceededError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectFleekFunctionLimitExceededError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/UserProjectLimitExceededError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectDomainsLimitExceededError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/ProjectMembershipsLimitExceededError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/FleekRestApiInternalError.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/errors/src/index.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/digest.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/buffer_utils.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/base64url.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/util/errors.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/random.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/iv.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/check_iv_length.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/is_key_object.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/check_cek_length.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/cbc_tag.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/webcrypto.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/env.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/crypto_key.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/ciphers.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/is_key_like.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/decrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/zlib.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/is_disjoint.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/is_object.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/aeskw.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/get_named_curve.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/ecdhes.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/check_p2s.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/pbes2kw.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/rsaes.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/cek.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/asn1.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/flags.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/format_pem.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/key/import.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/check_key_type.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/encrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/aesgcmkw.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/validate_crit.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/validate_algorithms.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwe/general/decrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/key/export.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwe/general/encrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/dsa_digest.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/node_key.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/hmac_digest.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/sign.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/verify.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jws/flattened/verify.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jws/compact/verify.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jws/general/verify.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/epoch.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/secs.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwt/verify.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwt/decrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jws/flattened/sign.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jws/compact/sign.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jws/general/sign.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwt/produce.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwt/sign.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwt/encrypt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwk/thumbprint.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwk/embedded.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwks/local.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwks/remote.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/jwt/unsecured.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/util/base64url.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/util/decode_protected_header.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/util/decode_jwt.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/runtime/generate.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/key/generate_key_pair.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/key/generate_secret.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/node/cjs/index.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/createToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/createAccessToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/createAssetsAccessToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/nanoid@3.3.7/node_modules/nanoid/url-alphabet/index.cjs", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/nanoid@3.3.7/node_modules/nanoid/index.cjs", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/createChallengeToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/createMigrationToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/createPersonalAccessToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/decodeToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/decodeAccessToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/getTokenFromRequest.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/.pnpm/jscrypto@1.0.3/node_modules/jscrypto/index.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/tokenToHash.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/verifyToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/verifyAccessToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/verifyAssetsAccessToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/verifyChallengeToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/verifyMigrationToken.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/createApplicationClientId.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/token/dist/index.js", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/utils-ipfs/src/index.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/utils-ipfs/src/ipfs/index.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/utils-ipfs/src/ipfs/getIpfsInternalGatewayUrl.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/utils-ipfs/src/defined.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/utils-ipfs/src/ipfs/getInternalGatewayUrlByStorageType.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/utils-ipfs/src/ipfs/getIpfsGatewayAssetsUrl.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipfs@0.4.4/node_modules/@fleek-platform/utils-ipfs/src/cache.ts", "../node_modules/.pnpm/@fleek-platform+utils-ipns@0.1.13/node_modules/@fleek-platform/utils-ipns/index.ts", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/identity.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/visit.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/doc/directives.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/doc/anchors.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/doc/applyReviver.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/toJS.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/Node.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/Alias.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/Scalar.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/doc/createNode.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/Collection.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/stringify/stringifyComment.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/stringify/foldFlowLines.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/stringify/stringifyString.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/stringify/stringify.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/stringify/stringifyPair.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/log.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/merge.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/addPairToJSMap.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/Pair.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/stringify/stringifyCollection.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/YAMLMap.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/common/map.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/nodes/YAMLSeq.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/common/seq.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/common/string.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/common/null.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/core/bool.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/stringify/stringifyNumber.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/core/float.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/core/int.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/core/schema.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/json/schema.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/binary.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/pairs.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/omap.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/bool.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/float.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/int.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/set.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/timestamp.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/yaml-1.1/schema.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/tags.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/schema/Schema.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/stringify/stringifyDocument.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/doc/Document.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/errors.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/resolve-props.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/util-contains-newline.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/util-flow-indent-check.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/util-map-includes.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/resolve-block-map.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/resolve-block-seq.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/resolve-end.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/resolve-flow-collection.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/compose-collection.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/resolve-block-scalar.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/resolve-flow-scalar.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/compose-scalar.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/util-empty-scalar-position.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/compose-node.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/compose-doc.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/compose/composer.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/parse/cst-scalar.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/parse/cst-stringify.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/parse/cst-visit.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/parse/cst.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/parse/lexer.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/parse/line-counter.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/parse/parser.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/public-api.js", "../node_modules/.pnpm/yaml@2.6.1/node_modules/yaml/dist/index.js", "../node_modules/.pnpm/@fleek-platform+utils-github@0.1.0/node_modules/@fleek-platform/utils-github/src/index.ts", "../node_modules/.pnpm/@fleek-platform+utils-gateways@0.1.12/node_modules/@fleek-platform/utils-gateways/src/defined.ts", "../node_modules/.pnpm/@fleek-platform+utils-gateways@0.1.12/node_modules/@fleek-platform/utils-gateways/src/cache.ts", "../node_modules/.pnpm/@fleek-platform+utils-gateways@0.1.12/node_modules/@fleek-platform/utils-gateways/src/index.ts", "../src/cli.ts", "../src/utils/json.ts", "../src/utils/translation.ts", "../src/commands/applications/create.ts", "../src/guards/loginGuard.ts", "../src/commands/auth/login.ts", "../src/config.ts", "../src/secrets.ts", "../src/utils/token/generateVerificationSessionId.ts", "../src/utils/token/showVerificationSessionLink.ts", "../src/utils/checkPeriodicallyUntil.ts", "../src/utils/token/waitForPersonalAccessTokenFromVerificationSession.ts", "../src/defined.ts", "../src/guards/sdkGuard.ts", "../src/commands/projects/prompts/getProjectNameOrPrompt.ts", "../src/prompts/prompt.ts", "../src/prompts/textPrompt.ts", "../src/commands/projects/create.ts", "../src/commands/projects/prompts/getProjectOrPrompt.ts", "../src/output/utils/eraseLines.ts", "../src/prompts/selectPrompt.ts", "../src/commands/projects/switch.ts", "../src/guards/projectGuard.ts", "../src/prompts/confirmPrompt.ts", "../src/commands/sites/prompts/confirmUseExistingSitePrompt.ts", "../src/commands/sites/prompts/getSiteOrPrompt.ts", "../src/commands/sites/prompts/enterSiteNamePrompt.ts", "../src/commands/sites/utils/createSite.ts", "../src/commands/sites/utils/chooseOrCreateSite.ts", "../src/utils/configuration/saveConfiguration.ts", "../src/utils/configuration/getConfiguration.ts", "../src/utils/configuration/types.ts", "../src/utils/configuration/loadConfiguration.ts", "../src/utils/configuration/readConfigurationFile.ts", "../src/utils/formats.ts", "../src/utils/fs.ts", "../src/commands/sites/prompts/enterDirectoryPathPrompt.ts", "../src/commands/sites/utils/directoryExists.ts", "../src/commands/sites/prompts/selectConfigurationFormatPrompt.ts", "../src/commands/sites/prompts/confirmIncludeBuildCommandPrompt.ts", "../src/commands/sites/prompts/enterBuildCommandPrompt.ts", "../src/commands/sites/utils/selectBuildCommandOrSkip.ts", "../src/commands/sites/utils/initConfiguration.ts", "../src/guards/sitesGuard.ts", "../src/guards/withGuards.ts", "../src/utils/prompts/promptUntil.ts", "../src/commands/applications/prompts/enterApplicationNameOrPrompt.ts", "../src/commands/applications/utils/isNameValid.ts", "../src/prompts/listPrompt.ts", "../src/commands/applications/prompts/getWhitelistDomainsOrPrompt.ts", "../src/commands/applications/prompts/getApplicationOrPrompt.ts", "../src/commands/applications/delete.ts", "../src/commands/applications/utils/parser.ts", "../src/commands/applications/utils/truncateAndJoinStrings.ts", "../src/commands/applications/list.ts", "../src/commands/applications/update.ts", "../src/commands/applications/index.ts", "../src/commands/auth/index.ts", "../src/commands/auth/logout.ts", "../src/utils/pressAnyKey.ts", "../src/commands/domains/prompts/getHostnameOrPrompt.ts", "../src/commands/gateways/prompts/getPrivateGatewayOrPrompt.ts", "../src/commands/domains/prompts/getSiteOrPrivateGateway.ts", "../src/commands/domains/wait/waitForZoneCreationResult.ts", "../src/commands/domains/utils/getZoneForSiteOrPrivateGateway.ts", "../src/commands/domains/wait/waitForDomainCreationResult.ts", "../src/commands/domains/wait/waitForDomainVerificationResult.ts", "../src/commands/domains/create.ts", "../src/commands/domains/prompts/getDomainOrPrompt.ts", "../src/commands/domains/wait/waitUntilDomainDeleted.ts", "../src/commands/domains/delete.ts", "../src/commands/domains/detail.ts", "../src/commands/domains/utils/getSiteDomains.ts", "../src/commands/domains/list.ts", "../src/commands/domains/verify.ts", "../src/commands/domains/index.ts", "../src/commands/ens/prompts/getEnsNameOrPrompt.ts", "../src/commands/ens/prompts/getIpnsRecordOrPrompt.ts", "../src/commands/ens/wait/waitForEnsRecordCreationResult.ts", "../src/commands/ens/wait/waitForEnsRecordVerificationResult.ts", "../src/commands/ens/create.ts", "../src/commands/ens/prompts/getEnsRecordOrPrompt.ts", "../src/commands/ens/wait/waitUntilEnsRecordDeleted.ts", "../src/commands/ens/delete.ts", "../src/commands/ens/detail.ts", "../src/commands/ens/utils/getSiteEnsRecords.ts", "../src/commands/ens/list.ts", "../src/commands/ens/verify.ts", "../src/commands/ens/index.ts", "../src/commands/functions/prompts/getFunctionNameOrPrompt.ts", "../src/commands/functions/prompts/enterFunctionNamePrompt.ts", "../src/commands/functions/utils/isSiteIdValid.ts", "../src/commands/functions/create.ts", "../src/commands/functions/prompts/getFunctionOrPrompt.ts", "../src/commands/functions/delete.ts", "../src/commands/functions/deploy.ts", "../src/utils/blake3.ts", "../src/commands/functions/prompts/getFunctionPathOrPrompt.ts", "../src/commands/functions/utils/getJsCodeFromPath.ts", "../src/commands/functions/utils/parseEnvironmentVariables.ts", "../src/output/utils/uploadOnProgress.ts", "../src/commands/functions/utils/upload.ts", "../src/commands/functions/wait/waitUntilFileAvailable.ts", "../src/commands/functions/utils/getWasmCodeFromPath.ts", "../src/commands/functions/utils/uploadFunctionAssets.ts", "../src/commands/functions/list.ts", "../src/commands/functions/listDeployments.ts", "../src/commands/functions/prompts/getFunctionSlugOrPrompt.ts", "../src/commands/functions/prompts/getFunctionStatusOrPrompt.ts", "../src/commands/functions/update.ts", "../src/commands/functions/index.ts", "../src/commands/gateways/prompts/getPrivateGatewayNameOrPrompt.ts", "../src/commands/gateways/create.ts", "../src/commands/gateways/delete.ts", "../src/commands/gateways/detail.ts", "../src/commands/gateways/list.ts", "../src/commands/gateways/index.ts", "../src/commands/ipfs/add.ts", "../src/commands/gateways/utils/getAllPrivateGatewayDomains.ts", "../src/commands/ipfs/utils/uploadPathOnIpfs.ts", "../src/commands/ipfs/index.ts", "../src/commands/ipns/create.ts", "../src/commands/ipns/prompts/getSiteToAssignRecordOrPrompt.ts", "../src/commands/ipns/prompts/confirmDeleteRecordPrompt.ts", "../src/commands/ipns/prompts/getRecordOrPrompt.ts", "../src/commands/ipns/delete.ts", "../src/commands/ipns/list.ts", "../src/commands/ipns/publish.ts", "../src/commands/ipns/prompts/getHashOrPrompt.ts", "../src/commands/ipns/resolve.ts", "../src/commands/ipns/index.ts", "../src/commands/pat/index.ts", "../src/commands/pat/create.ts", "../src/utils/prompts/getPersonalAccessTokenNameOrPrompt.ts", "../src/commands/pat/utils/deletePersonalAccessToken.ts", "../src/commands/pat/delete.ts", "../src/commands/pat/list.ts", "../src/output/Output.ts", "../src/output/utils/wait.ts", "../src/commands/projects/list.ts", "../src/commands/projects/index.ts", "../src/commands/sites/prompts/getCIProviderOrPrompt.ts", "../src/commands/sites/utils/prepareGitHubActionsIntegration.ts", "../src/commands/sites/prompts/confirmFileOverridePrompt.ts", "../src/commands/sites/utils/getDeploymentWorkflowYamlLocation.ts", "../src/commands/sites/prompts/confirmWorkflowCustomPathPrompt.ts", "../src/commands/sites/utils/initializeDeploymentWorkflowDirectory.ts", "../src/commands/sites/prompts/confirmInstallCommandPrompt.ts", "../src/commands/sites/prompts/confirmUserWantsInstallCommandPrompt.ts", "../src/commands/sites/prompts/confirmUserWantsToSpecifyInstallCommandPrompt.ts", "../src/commands/sites/prompts/enterInstallCommandPrompt.ts", "../src/commands/sites/utils/deriveInstallCommandFromLockfile.ts", "../src/commands/sites/utils/requestDeploymentWorkflowInstallCommand.ts", "../src/commands/sites/utils/saveDeploymentWorkflowYaml.ts", "../src/commands/sites/ci.ts", "../src/commands/sites/utils/runCommandAndForwardOutput.ts", "../src/commands/sites/utils/waitUntilDeploymentFinishedAndInformUser.ts", "../src/commands/sites/utils/returnDeploymentWhenFinished.ts", "../src/commands/sites/deploy.ts", "../src/commands/sites/init.ts", "../src/commands/sites/list.ts", "../src/commands/sites/utils/printDeploymentsTable.ts", "../src/commands/sites/listDeployments.ts", "../src/commands/sites/index.ts", "../src/commands/storage/add.ts", "../src/commands/storage/utils/upload.ts", "../src/commands/storage/delete.ts", "../src/utils/processPromisesBatch.ts", "../src/commands/storage/get.ts", "../src/commands/storage/utils/CreateOutputTable.ts", "../src/commands/storage/list.ts", "../src/commands/storage/index.ts"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\nvar util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util = exports.util || (exports.util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"symbol\":\n            return exports.ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../helpers/util\");\nconst ZodError_1 = require(\"../ZodError\");\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodError_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodError_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_1.util.jsonStringifyReplacer)}`;\n            break;\n        case ZodError_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util_1.util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodError_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodError_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodError_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.default = errorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorMap = exports.setErrorMap = exports.defaultErrorMap = void 0;\nconst en_1 = __importDefault(require(\"./locales/en\"));\nexports.defaultErrorMap = en_1.default;\nlet overrideErrorMap = en_1.default;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexports.setErrorMap = setErrorMap;\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\nexports.getErrorMap = getErrorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst errors_1 = require(\"../errors\");\nconst en_1 = __importDefault(require(\"../locales/en\"));\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = (0, exports.makeIssue)({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            (0, errors_1.getErrorMap)(),\n            en_1.default, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\nexports.isAsync = isAsync;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodReadonly = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.NEVER = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = exports.discriminatedUnion = void 0;\nconst errors_1 = require(\"./errors\");\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if ((0, parseUtil_1.isValid)(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError_1.ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return (0, util_1.getParsedType)(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: (0, util_1.getParsedType)(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if ((0, parseUtil_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await ((0, parseUtil_1.isAsync)(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_+-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"emoji\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ulid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ip\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil_1.errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util_1.util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodSymbol = ZodSymbol;\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_1.addIssueToContext)(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: tooBig ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util_1.util.objectKeys(this.shape));\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = (0, util_1.getParsedType)(a);\n    const bType = (0, util_1.getParsedType)(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_1.isAborted)(parsedLeft) || (0, parseUtil_1.isAborted)(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if ((0, parseUtil_1.isDirty)(parsedLeft) || (0, parseUtil_1.isDirty)(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_1.OK)(async function (...args) {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_1.OK)(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodFunction = ZodFunction;\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return (0, parseUtil_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                (0, parseUtil_1.addIssueToContext)(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.issues.length) {\n                return {\n                    status: \"dirty\",\n                    value: ctx.data,\n                };\n            }\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!(0, parseUtil_1.isValid)(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!(0, parseUtil_1.isValid)(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return (0, parseUtil_1.OK)(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return (0, parseUtil_1.OK)(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if ((0, parseUtil_1.isAsync)(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError_1.ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError_1.ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nexports.ZodCatch = ZodCatch;\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexports.BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexports.ZodBranded = ZodBranded;\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return (0, parseUtil_1.DIRTY)(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return parseUtil_1.INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexports.ZodPipeline = ZodPipeline;\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        if ((0, parseUtil_1.isValid)(result)) {\n            result.value = Object.freeze(result.value);\n        }\n        return result;\n    }\n}\nexports.ZodReadonly = ZodReadonly;\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => (0, exports.custom)((data) => data instanceof cls, params);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst symbolType = ZodSymbol.create;\nexports.symbol = symbolType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst pipelineType = ZodPipeline.create;\nexports.pipeline = pipelineType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\nexports.coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexports.NEVER = parseUtil_1.INVALID;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\n__exportStar(require(\"./helpers/util\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst z = __importStar(require(\"./external\"));\nexports.z = z;\n__exportStar(require(\"./external\"), exports);\nexports.default = z;\n", "export const version = '0.9.8'\n", "import type { OneOf, Pretty } from './types.js'\nimport { version } from './version.js'\n\ntype BaseErrorArgs = Pretty<\n  {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n  } & OneOf<{ details?: string | undefined } | { cause?: BaseError | Error }>\n>\n\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n\n  override name = 'AbiTypeError'\n\n  constructor(shortMessage: string, args: BaseErrorArgs = {}) {\n    const details =\n      args.cause instanceof BaseError\n        ? args.cause.details\n        : args.cause?.message\n        ? args.cause.message\n        : args.details!\n    const docsPath =\n      args.cause instanceof BaseError\n        ? args.cause.docsPath || args.docsPath\n        : args.docsPath\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsPath ? [`Docs: https://abitype.dev${docsPath}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: abitype@${version}`,\n    ].join('\\n')\n\n    super(message)\n\n    if (args.cause) this.cause = args.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.shortMessage = shortMessage\n  }\n}\n", "/**\n * Infers embedded primitive type of any type\n *\n * @param T - Type to infer\n * @returns Embedded type of {@link TType}\n *\n * @example\n * type Result = Narrow<['foo', 'bar', 1]>\n */\n// s/o https://twitter.com/hd_nvim/status/1578567206190780417\nexport type Narrow<TType> =\n  | (unknown extends TType ? unknown : never)\n  | (TType extends Function ? TType : never)\n  | (TType extends bigint | boolean | number | string ? TType : never)\n  | (TType extends [] ? [] : never)\n  | { [K in keyof TType]: Narrow<TType[K]> }\n\n/**\n * Infers embedded primitive type of any type\n * Same as `as const` but without setting the object as readonly and without needing the user to use it.\n *\n * @param value - Value to infer\n * @returns Value with embedded type inferred\n *\n * @example\n * const result = narrow(['foo', 'bar', 1])\n */\nexport function narrow<TType>(value: Narrow<TType>) {\n  return value\n}\n", "// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.\n// https://twitter.com/GabrielVergnaud/status/1622906834343366657\nexport function execTyped<T>(regex: RegExp, string: string) {\n  const match = regex.exec(string)\n  return match?.groups as T | undefined\n}\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const isTupleRegex = /^\\(.+?\\).*?$/\n", "import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport { execTyped } from '../regex.js'\nimport type { IsNarrowable, Join } from '../types.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param TAbiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * type Result = FormatAbiParameter<{ type: 'address'; name: 'from'; }>\n * //   ^? type Result = 'address from'\n */\nexport type FormatAbiParameter<\n  TAbiParameter extends AbiParameter | AbiEventParameter,\n> = TAbiParameter extends {\n  name?: infer Name extends string\n  type: `tuple${infer Array}`\n  components: infer Components extends readonly AbiParameter[]\n  indexed?: infer Indexed extends boolean\n}\n  ? FormatAbiParameter<\n      {\n        type: `(${Join<\n          {\n            [K in keyof Components]: FormatAbiParameter<\n              {\n                type: Components[K]['type']\n              } & (IsNarrowable<Components[K]['name'], string> extends true\n                ? { name: Components[K]['name'] }\n                : unknown) &\n                (Components[K] extends { components: readonly AbiParameter[] }\n                  ? { components: Components[K]['components'] }\n                  : unknown)\n            >\n          },\n          ', '\n        >})${Array}`\n      } & (IsNarrowable<Name, string> extends true ? { name: Name } : unknown) &\n        (IsNarrowable<Indexed, boolean> extends true\n          ? { indexed: Indexed }\n          : unknown)\n    >\n  : `${TAbiParameter['type']}${TAbiParameter extends { indexed: true }\n      ? ' indexed'\n      : ''}${TAbiParameter['name'] extends infer Name extends string\n      ? Name extends ''\n        ? ''\n        : ` ${AssertName<Name>}`\n      : ''}`\n\n// https://regexr.com/7f7rv\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * const result = formatAbiParameter({ type: 'address', name: 'from' })\n * //    ^? const result: 'address from'\n */\nexport function formatAbiParameter<\n  const TAbiParameter extends AbiParameter | AbiEventParameter,\n>(abiParameter: TAbiParameter): FormatAbiParameter<TAbiParameter> {\n  type Result = FormatAbiParameter<TAbiParameter>\n\n  let type = abiParameter.type\n  if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n    type = '('\n    const length = abiParameter.components.length as number\n    for (let i = 0; i < length; i++) {\n      const component = abiParameter.components[i]!\n      type += formatAbiParameter(component)\n      if (i < length - 1) type += ', '\n    }\n    const result = execTyped<{ array?: string }>(tupleRegex, abiParameter.type)\n    type += `)${result?.array ?? ''}`\n    return formatAbiParameter({\n      ...abiParameter,\n      type,\n    }) as Result\n  }\n  // Add `indexed` to type if in `abiParameter`\n  if ('indexed' in abiParameter && abiParameter.indexed)\n    type = `${type} indexed`\n  // Return human-readable ABI parameter\n  if (abiParameter.name) return `${type} ${abiParameter.name}` as Result\n  return type as Result\n}\n", "import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport type { Join } from '../types.js'\nimport {\n  type FormatAbiParameter,\n  formatAbiParameter,\n} from './formatAbiParameter.js'\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameter.\n *\n * @param TAbiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * type Result = FormatAbiParameters<[\n *   // ^? type Result = 'address from, uint256 tokenId'\n *   { type: 'address'; name: 'from'; },\n *   { type: 'uint256'; name: 'tokenId'; },\n * ]>\n */\nexport type FormatAbiParameters<\n  TAbiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n> = Join<\n  {\n    [K in keyof TAbiParameters]: FormatAbiParameter<TAbiParameters[K]>\n  },\n  ', '\n>\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameters.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * const result = formatAbiParameters([\n *   //  ^? const result: 'address from, uint256 tokenId'\n *   { type: 'address', name: 'from' },\n *   { type: 'uint256', name: 'tokenId' },\n * ])\n */\nexport function formatAbiParameters<\n  const TAbiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n>(abiParameters: TAbiParameters): FormatAbiParameters<TAbiParameters> {\n  let params = ''\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    params += formatAbiParameter(abiParameter)\n    if (i !== length - 1) params += ', '\n  }\n  return params as FormatAbiParameters<TAbiParameters>\n}\n", "import type {\n  Abi,\n  AbiConstructor,\n  AbiError,\n  AbiEvent,\n  AbiEventParameter,\n  AbiFallback,\n  AbiFunction,\n  AbiParameter,\n  AbiReceive,\n  AbiStateMutability,\n} from '../abi.js'\nimport {\n  type FormatAbiParameters as FormatAbiParameters_,\n  formatAbiParameters,\n} from './formatAbiParameters.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param TAbiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport type FormatAbiItem<TAbiItem extends Abi[number]> =\n  Abi[number] extends TAbiItem\n    ? string\n    :\n        | (TAbiItem extends AbiFunction\n            ? AbiFunction extends TAbiItem\n              ? string\n              : `function ${AssertName<TAbiItem['name']>}(${FormatAbiParameters<\n                  TAbiItem['inputs']\n                >})${TAbiItem['stateMutability'] extends Exclude<\n                  AbiStateMutability,\n                  'nonpayable'\n                >\n                  ? ` ${TAbiItem['stateMutability']}`\n                  : ''}${TAbiItem['outputs']['length'] extends 0\n                  ? ''\n                  : ` returns (${FormatAbiParameters<TAbiItem['outputs']>})`}`\n            : never)\n        | (TAbiItem extends AbiEvent\n            ? AbiEvent extends TAbiItem\n              ? string\n              : `event ${AssertName<TAbiItem['name']>}(${FormatAbiParameters<\n                  TAbiItem['inputs']\n                >})`\n            : never)\n        | (TAbiItem extends AbiError\n            ? AbiError extends TAbiItem\n              ? string\n              : `error ${AssertName<TAbiItem['name']>}(${FormatAbiParameters<\n                  TAbiItem['inputs']\n                >})`\n            : never)\n        | (TAbiItem extends AbiConstructor\n            ? AbiConstructor extends TAbiItem\n              ? string\n              : `constructor(${FormatAbiParameters<\n                  TAbiItem['inputs']\n                >})${TAbiItem['stateMutability'] extends 'payable'\n                  ? ' payable'\n                  : ''}`\n            : never)\n        | (TAbiItem extends AbiFallback\n            ? AbiFallback extends TAbiItem\n              ? string\n              : 'fallback()'\n            : never)\n        | (TAbiItem extends AbiReceive\n            ? AbiReceive extends TAbiItem\n              ? string\n              : 'receive() external payable'\n            : never)\n\ntype FormatAbiParameters<\n  TAbiParameters extends readonly (AbiParameter | AbiEventParameter)[],\n> = TAbiParameters['length'] extends 0\n  ? ''\n  : FormatAbiParameters_<\n      TAbiParameters extends readonly [\n        AbiParameter | AbiEventParameter,\n        ...(readonly (AbiParameter | AbiEventParameter)[]),\n      ]\n        ? TAbiParameters\n        : never\n    >\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport function formatAbiItem<const TAbiItem extends Abi[number]>(\n  abiItem: TAbiItem,\n): FormatAbiItem<TAbiItem> {\n  type Result = FormatAbiItem<TAbiItem>\n  type Params = readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ]\n\n  if (abiItem.type === 'function')\n    return `function ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})${\n      abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'\n        ? ` ${abiItem.stateMutability}`\n        : ''\n    }${\n      abiItem.outputs.length\n        ? ` returns (${formatAbiParameters(abiItem.outputs as Params)})`\n        : ''\n    }`\n  else if (abiItem.type === 'event')\n    return `event ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  else if (abiItem.type === 'error')\n    return `error ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  else if (abiItem.type === 'constructor')\n    return `constructor(${formatAbiParameters(abiItem.inputs as Params)})${\n      abiItem.stateMutability === 'payable' ? ' payable' : ''\n    }`\n  else if (abiItem.type === 'fallback') return 'fallback()' as Result\n  return 'receive() external payable' as Result\n}\n", "import type { Abi } from '../abi.js'\nimport { type FormatAbiItem, formatAbiItem } from './formatAbiItem.js'\n\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param TAbi - ABI\n * @returns Human-readable ABI\n */\nexport type FormatAbi<TAbi extends Abi | readonly unknown[]> = Abi extends TAbi\n  ? readonly string[]\n  : TAbi extends readonly []\n  ? never\n  : TAbi extends Abi\n  ? {\n      [K in keyof TAbi]: FormatAbiItem<TAbi[K]>\n    }\n  : readonly string[]\n\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param abi - ABI\n * @returns Human-readable ABI\n */\nexport function formatAbi<const TAbi extends Abi | readonly unknown[]>(\n  abi: TAbi,\n): FormatAbi<TAbi> {\n  const signatures = []\n  const length = abi.length\n  for (let i = 0; i < length; i++) {\n    const abiItem = abi[i]!\n    const signature = formatAbiItem(abiItem as Abi[number])\n    signatures.push(signature)\n  }\n  return signatures as unknown as FormatAbi<TAbi>\n}\n", "import type { AbiStateMutability } from '../../abi.js'\nimport { execTyped } from '../../regex.js'\nimport type {\n  EventModifier,\n  FunctionModifier,\n  Modifier,\n} from '../types/signatures.js'\n\n// https://regexr.com/7gmok\nconst errorSignatureRegex =\n  /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/\nexport function isErrorSignature(signature: string) {\n  return errorSignatureRegex.test(signature)\n}\nexport function execErrorSignature(signature: string) {\n  return execTyped<{ name: string; parameters: string }>(\n    errorSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/7gmoq\nconst eventSignatureRegex =\n  /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/\nexport function isEventSignature(signature: string) {\n  return eventSignatureRegex.test(signature)\n}\nexport function execEventSignature(signature: string) {\n  return execTyped<{ name: string; parameters: string }>(\n    eventSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/7gmot\nconst functionSignatureRegex =\n  /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\\s?\\((?<returns>.*?)\\))?$/\nexport function isFunctionSignature(signature: string) {\n  return functionSignatureRegex.test(signature)\n}\nexport function execFunctionSignature(signature: string) {\n  return execTyped<{\n    name: string\n    parameters: string\n    stateMutability?: AbiStateMutability\n    returns?: string\n  }>(functionSignatureRegex, signature)\n}\n\n// https://regexr.com/7gmp3\nconst structSignatureRegex =\n  /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \\{(?<properties>.*?)\\}$/\nexport function isStructSignature(signature: string) {\n  return structSignatureRegex.test(signature)\n}\nexport function execStructSignature(signature: string) {\n  return execTyped<{ name: string; properties: string }>(\n    structSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/78u01\nconst constructorSignatureRegex =\n  /^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$/\nexport function isConstructorSignature(signature: string) {\n  return constructorSignatureRegex.test(signature)\n}\nexport function execConstructorSignature(signature: string) {\n  return execTyped<{\n    parameters: string\n    stateMutability?: Extract<AbiStateMutability, 'payable'>\n  }>(constructorSignatureRegex, signature)\n}\n\n// https://regexr.com/78u18\nconst fallbackSignatureRegex = /^fallback\\(\\)$/\nexport function isFallbackSignature(signature: string) {\n  return fallbackSignatureRegex.test(signature)\n}\n\n// https://regexr.com/78u1k\nconst receiveSignatureRegex = /^receive\\(\\) external payable$/\nexport function isReceiveSignature(signature: string) {\n  return receiveSignatureRegex.test(signature)\n}\n\nexport const modifiers = new Set<Modifier>([\n  'memory',\n  'indexed',\n  'storage',\n  'calldata',\n])\nexport const eventModifiers = new Set<EventModifier>(['indexed'])\nexport const functionModifiers = new Set<FunctionModifier>([\n  'calldata',\n  'memory',\n  'storage',\n])\n", "import { BaseError } from '../../errors.js'\n\nexport class InvalidAbiItemError extends BaseError {\n  override name = 'InvalidAbiItemError'\n\n  constructor({ signature }: { signature: string | object }) {\n    super('Failed to parse ABI item.', {\n      details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,\n      docsPath: '/api/human.html#parseabiitem-1',\n    })\n  }\n}\n\nexport class UnknownTypeError extends BaseError {\n  override name = 'UnknownTypeError'\n\n  constructor({ type }: { type: string }) {\n    super('Unknown type.', {\n      metaMessages: [\n        `Type \"${type}\" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,\n      ],\n    })\n  }\n}\n\nexport class UnknownSolidityTypeError extends BaseError {\n  override name = 'UnknownSolidityTypeError'\n\n  constructor({ type }: { type: string }) {\n    super('Unknown type.', {\n      metaMessages: [`Type \"${type}\" is not a valid ABI type.`],\n    })\n  }\n}\n", "import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\nimport type { Modifier } from '../types/signatures.js'\n\nexport class InvalidAbiParameterError extends BaseError {\n  override name = 'InvalidAbiParameterError'\n\n  constructor({ param }: { param: string | object }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human.html#parseabiparameter-1',\n    })\n  }\n}\n\nexport class InvalidAbiParametersError extends BaseError {\n  override name = 'InvalidAbiParametersError'\n\n  constructor({ params }: { params: string | object }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human.html#parseabiparameters-1',\n    })\n  }\n}\n\nexport class InvalidParameterError extends BaseError {\n  override name = 'InvalidParameterError'\n\n  constructor({ param }: { param: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n    })\n  }\n}\n\nexport class SolidityProtectedKeywordError extends BaseError {\n  override name = 'SolidityProtectedKeywordError'\n\n  constructor({ param, name }: { param: string; name: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,\n      ],\n    })\n  }\n}\n\nexport class InvalidModifierError extends BaseError {\n  override name = 'InvalidModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidFunctionModifierError extends BaseError {\n  override name = 'InvalidFunctionModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n        `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidAbiTypeParameterError extends BaseError {\n  override name = 'InvalidAbiTypeParameterError'\n\n  constructor({\n    abiParameter,\n  }: {\n    abiParameter: AbiParameter & { indexed?: boolean | undefined }\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.'],\n    })\n  }\n}\n", "import type { AbiItemType } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\n\nexport class InvalidSignatureError extends BaseError {\n  override name = 'InvalidSignatureError'\n\n  constructor({\n    signature,\n    type,\n  }: {\n    signature: string\n    type: AbiItemType | 'struct'\n  }) {\n    super(`Invalid ${type} signature.`, {\n      details: signature,\n    })\n  }\n}\n\nexport class UnknownSignatureError extends BaseError {\n  override name = 'UnknownSignatureError'\n\n  constructor({ signature }: { signature: string }) {\n    super('Unknown signature.', {\n      details: signature,\n    })\n  }\n}\n\nexport class InvalidStructSignatureError extends BaseError {\n  override name = 'InvalidStructSignatureError'\n\n  constructor({ signature }: { signature: string }) {\n    super('Invalid struct signature.', {\n      details: signature,\n      metaMessages: ['No properties exist.'],\n    })\n  }\n}\n", "import { BaseError } from '../../errors.js'\n\nexport class CircularReferenceError extends BaseError {\n  override name = 'CircularReferenceError'\n\n  constructor({ type }: { type: string }) {\n    super('Circular reference detected.', {\n      metaMessages: [`Struct \"${type}\" is a circular reference.`],\n    })\n  }\n}\n", "import { BaseError } from '../../errors.js'\n\nexport class InvalidParenthesisError extends BaseError {\n  override name = 'InvalidParenthesisError'\n\n  constructor({ current, depth }: { current: string; depth: number }) {\n    super('Unbalanced parentheses.', {\n      metaMessages: [\n        `\"${current.trim()}\" has too many ${\n          depth > 0 ? 'opening' : 'closing'\n        } parentheses.`,\n      ],\n      details: `Depth \"${depth}\"`,\n    })\n  }\n}\n", "import type { AbiItemType, AbiParameter } from '../../abi.js'\n\n/**\n * Gets {@link parameterCache} cache key namespaced by {@link type}. This prevents parameters from being accessible to types that don't allow them (e.g. `string indexed foo` not allowed outside of `type: 'event'`).\n * @param param ABI parameter string\n * @param type ABI parameter type\n * @returns Cache key for {@link parameterCache}\n */\nexport function getParameterCacheKey(\n  param: string,\n  type?: AbiItemType | 'struct',\n) {\n  if (type) return `${type}:${param}`\n  return param\n}\n\n/**\n * Basic cache seeded with common ABI parameter strings.\n *\n * **Note: When seeding more parameters, make sure you benchmark performance. The current number is the ideal balance between performance and having an already existing cache.**\n */\nexport const parameterCache = new Map<\n  string,\n  AbiParameter & { indexed?: boolean }\n>([\n  // Unnamed\n  ['address', { type: 'address' }],\n  ['bool', { type: 'bool' }],\n  ['bytes', { type: 'bytes' }],\n  ['bytes32', { type: 'bytes32' }],\n  ['int', { type: 'int256' }],\n  ['int256', { type: 'int256' }],\n  ['string', { type: 'string' }],\n  ['uint', { type: 'uint256' }],\n  ['uint8', { type: 'uint8' }],\n  ['uint16', { type: 'uint16' }],\n  ['uint24', { type: 'uint24' }],\n  ['uint32', { type: 'uint32' }],\n  ['uint64', { type: 'uint64' }],\n  ['uint96', { type: 'uint96' }],\n  ['uint112', { type: 'uint112' }],\n  ['uint160', { type: 'uint160' }],\n  ['uint192', { type: 'uint192' }],\n  ['uint256', { type: 'uint256' }],\n\n  // Named\n  ['address owner', { type: 'address', name: 'owner' }],\n  ['address to', { type: 'address', name: 'to' }],\n  ['bool approved', { type: 'bool', name: 'approved' }],\n  ['bytes _data', { type: 'bytes', name: '_data' }],\n  ['bytes data', { type: 'bytes', name: 'data' }],\n  ['bytes signature', { type: 'bytes', name: 'signature' }],\n  ['bytes32 hash', { type: 'bytes32', name: 'hash' }],\n  ['bytes32 r', { type: 'bytes32', name: 'r' }],\n  ['bytes32 root', { type: 'bytes32', name: 'root' }],\n  ['bytes32 s', { type: 'bytes32', name: 's' }],\n  ['string name', { type: 'string', name: 'name' }],\n  ['string symbol', { type: 'string', name: 'symbol' }],\n  ['string tokenURI', { type: 'string', name: 'tokenURI' }],\n  ['uint tokenId', { type: 'uint256', name: 'tokenId' }],\n  ['uint8 v', { type: 'uint8', name: 'v' }],\n  ['uint256 balance', { type: 'uint256', name: 'balance' }],\n  ['uint256 tokenId', { type: 'uint256', name: 'tokenId' }],\n  ['uint256 value', { type: 'uint256', name: 'value' }],\n\n  // Indexed\n  [\n    'event:address indexed from',\n    { type: 'address', name: 'from', indexed: true },\n  ],\n  ['event:address indexed to', { type: 'address', name: 'to', indexed: true }],\n  [\n    'event:uint indexed tokenId',\n    { type: 'uint256', name: 'tokenId', indexed: true },\n  ],\n  [\n    'event:uint256 indexed tokenId',\n    { type: 'uint256', name: 'tokenId', indexed: true },\n  ],\n])\n", "import type {\n  AbiItemType,\n  AbiType,\n  SolidityArray,\n  SolidityBytes,\n  SolidityString,\n  SolidityTuple,\n} from '../../abi.js'\nimport {\n  bytesRegex,\n  execTyped,\n  integerRegex,\n  isTupleRegex,\n} from '../../regex.js'\nimport { UnknownSolidityTypeError } from '../errors/abiItem.js'\nimport {\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  InvalidParameterError,\n  SolidityProtectedKeywordError,\n} from '../errors/abiParameter.js'\nimport {\n  InvalidSignatureError,\n  UnknownSignatureError,\n} from '../errors/signature.js'\nimport { InvalidParenthesisError } from '../errors/splitParameters.js'\nimport type { FunctionModifier, Modifier } from '../types/signatures.js'\nimport type { StructLookup } from '../types/structs.js'\nimport { getParameterCacheKey, parameterCache } from './cache.js'\nimport {\n  eventModifiers,\n  execConstructorSignature,\n  execErrorSignature,\n  execEventSignature,\n  execFunctionSignature,\n  functionModifiers,\n  isConstructorSignature,\n  isErrorSignature,\n  isEventSignature,\n  isFallbackSignature,\n  isFunctionSignature,\n  isReceiveSignature,\n} from './signatures.js'\n\nexport function parseSignature(signature: string, structs: StructLookup = {}) {\n  if (isFunctionSignature(signature)) {\n    const match = execFunctionSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'function' })\n\n    const inputParams = splitParameters(match.parameters)\n    const inputs = []\n    const inputLength = inputParams.length\n    for (let i = 0; i < inputLength; i++) {\n      inputs.push(\n        parseAbiParameter(inputParams[i]!, {\n          modifiers: functionModifiers,\n          structs,\n          type: 'function',\n        }),\n      )\n    }\n\n    const outputs = []\n    if (match.returns) {\n      const outputParams = splitParameters(match.returns)\n      const outputLength = outputParams.length\n      for (let i = 0; i < outputLength; i++) {\n        outputs.push(\n          parseAbiParameter(outputParams[i]!, {\n            modifiers: functionModifiers,\n            structs,\n            type: 'function',\n          }),\n        )\n      }\n    }\n\n    return {\n      name: match.name,\n      type: 'function',\n      stateMutability: match.stateMutability ?? 'nonpayable',\n      inputs,\n      outputs,\n    }\n  }\n\n  if (isEventSignature(signature)) {\n    const match = execEventSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'event' })\n\n    const params = splitParameters(match.parameters)\n    const abiParameters = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i]!, {\n          modifiers: eventModifiers,\n          structs,\n          type: 'event',\n        }),\n      )\n    }\n    return { name: match.name, type: 'event', inputs: abiParameters }\n  }\n\n  if (isErrorSignature(signature)) {\n    const match = execErrorSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'error' })\n\n    const params = splitParameters(match.parameters)\n    const abiParameters = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i]!, { structs, type: 'error' }),\n      )\n    }\n    return { name: match.name, type: 'error', inputs: abiParameters }\n  }\n\n  if (isConstructorSignature(signature)) {\n    const match = execConstructorSignature(signature)\n    if (!match)\n      throw new InvalidSignatureError({ signature, type: 'constructor' })\n\n    const params = splitParameters(match.parameters)\n    const abiParameters = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i]!, { structs, type: 'constructor' }),\n      )\n    }\n    return {\n      type: 'constructor',\n      stateMutability: match.stateMutability ?? 'nonpayable',\n      inputs: abiParameters,\n    }\n  }\n\n  if (isFallbackSignature(signature)) return { type: 'fallback' }\n  if (isReceiveSignature(signature))\n    return {\n      type: 'receive',\n      stateMutability: 'payable',\n    }\n\n  throw new UnknownSignatureError({ signature })\n}\n\nconst abiParameterWithoutTupleRegex =\n  /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/\nconst abiParameterWithTupleRegex =\n  /^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/\nconst dynamicIntegerRegex = /^u?int$/\n\ntype ParseOptions = {\n  modifiers?: Set<Modifier>\n  structs?: StructLookup\n  type?: AbiItemType | 'struct'\n}\n\nexport function parseAbiParameter(param: string, options?: ParseOptions) {\n  // optional namespace cache by `type`\n  const parameterCacheKey = getParameterCacheKey(param, options?.type)\n  if (parameterCache.has(parameterCacheKey))\n    return parameterCache.get(parameterCacheKey)!\n\n  const isTuple = isTupleRegex.test(param)\n  const match = execTyped<{\n    array?: string\n    modifier?: Modifier\n    name?: string\n    type: string\n  }>(\n    isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex,\n    param,\n  )\n  if (!match) throw new InvalidParameterError({ param })\n\n  if (match.name && isSolidityKeyword(match.name))\n    throw new SolidityProtectedKeywordError({ param, name: match.name })\n\n  const name = match.name ? { name: match.name } : {}\n  const indexed = match.modifier === 'indexed' ? { indexed: true } : {}\n  const structs = options?.structs ?? {}\n  let type: string\n  let components = {}\n  if (isTuple) {\n    type = 'tuple'\n    const params = splitParameters(match.type)\n    const components_ = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      // remove `modifiers` from `options` to prevent from being added to tuple components\n      components_.push(parseAbiParameter(params[i]!, { structs }))\n    }\n    components = { components: components_ }\n  } else if (match.type in structs) {\n    type = 'tuple'\n    components = { components: structs[match.type] }\n  } else if (dynamicIntegerRegex.test(match.type)) {\n    type = `${match.type}256`\n  } else {\n    type = match.type\n    if (!(options?.type === 'struct') && !isSolidityType(type))\n      throw new UnknownSolidityTypeError({ type })\n  }\n\n  if (match.modifier) {\n    // Check if modifier exists, but is not allowed (e.g. `indexed` in `functionModifiers`)\n    if (!options?.modifiers?.has?.(match.modifier))\n      throw new InvalidModifierError({\n        param,\n        type: options?.type,\n        modifier: match.modifier,\n      })\n\n    // Check if resolved `type` is valid if there is a function modifier\n    if (\n      functionModifiers.has(match.modifier as FunctionModifier) &&\n      !isValidDataLocation(type, !!match.array)\n    )\n      throw new InvalidFunctionModifierError({\n        param,\n        type: options?.type,\n        modifier: match.modifier,\n      })\n  }\n\n  const abiParameter = {\n    type: `${type}${match.array ?? ''}`,\n    ...name,\n    ...indexed,\n    ...components,\n  }\n  parameterCache.set(parameterCacheKey, abiParameter)\n  return abiParameter\n}\n\n// s/o latika for this\nexport function splitParameters(\n  params: string,\n  result: string[] = [],\n  current = '',\n  depth = 0,\n): readonly string[] {\n  if (params === '') {\n    if (current === '') return result\n    if (depth !== 0) throw new InvalidParenthesisError({ current, depth })\n\n    result.push(current.trim())\n    return result\n  }\n\n  const length = params.length\n  // rome-ignore lint/correctness/noUnreachable: recursive\n  for (let i = 0; i < length; i++) {\n    const char = params[i]\n    const tail = params.slice(i + 1)\n    switch (char) {\n      case ',':\n        return depth === 0\n          ? splitParameters(tail, [...result, current.trim()])\n          : splitParameters(tail, result, `${current}${char}`, depth)\n      case '(':\n        return splitParameters(tail, result, `${current}${char}`, depth + 1)\n      case ')':\n        return splitParameters(tail, result, `${current}${char}`, depth - 1)\n      default:\n        return splitParameters(tail, result, `${current}${char}`, depth)\n    }\n  }\n\n  return []\n}\n\nexport function isSolidityType(\n  type: string,\n): type is Exclude<AbiType, SolidityTuple | SolidityArray> {\n  return (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'function' ||\n    type === 'string' ||\n    bytesRegex.test(type) ||\n    integerRegex.test(type)\n  )\n}\n\nconst protectedKeywordsRegex =\n  /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/\n\nexport function isSolidityKeyword(name: string) {\n  return (\n    name === 'address' ||\n    name === 'bool' ||\n    name === 'function' ||\n    name === 'string' ||\n    name === 'tuple' ||\n    bytesRegex.test(name) ||\n    integerRegex.test(name) ||\n    protectedKeywordsRegex.test(name)\n  )\n}\n\nexport function isValidDataLocation(\n  type: string,\n  isArray: boolean,\n): type is Exclude<\n  AbiType,\n  SolidityString | Extract<SolidityBytes, 'bytes'> | SolidityArray\n> {\n  return isArray || type === 'bytes' || type === 'string' || type === 'tuple'\n}\n", "import type { AbiParameter } from '../../abi.js'\nimport { execTyped, isTupleRegex } from '../../regex.js'\nimport { UnknownTypeError } from '../errors/abiItem.js'\nimport { InvalidAbiTypeParameterError } from '../errors/abiParameter.js'\nimport {\n  InvalidSignatureError,\n  InvalidStructSignatureError,\n} from '../errors/signature.js'\nimport { CircularReferenceError } from '../errors/struct.js'\nimport type { StructLookup } from '../types/structs.js'\nimport { execStructSignature, isStructSignature } from './signatures.js'\nimport { isSolidityType, parseAbiParameter } from './utils.js'\n\nexport function parseStructs(signatures: readonly string[]) {\n  // Create \"shallow\" version of each struct (and filter out non-structs or invalid structs)\n  const shallowStructs: StructLookup = {}\n  const signaturesLength = signatures.length\n  for (let i = 0; i < signaturesLength; i++) {\n    const signature = signatures[i]!\n    if (!isStructSignature(signature)) continue\n\n    const match = execStructSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'struct' })\n\n    const properties = match.properties.split(';')\n\n    const components: AbiParameter[] = []\n    const propertiesLength = properties.length\n    for (let k = 0; k < propertiesLength; k++) {\n      const property = properties[k]!\n      const trimmed = property.trim()\n      if (!trimmed) continue\n      const abiParameter = parseAbiParameter(trimmed, {\n        type: 'struct',\n      })\n      components.push(abiParameter)\n    }\n\n    if (!components.length) throw new InvalidStructSignatureError({ signature })\n    shallowStructs[match.name] = components\n  }\n\n  // Resolve nested structs inside each parameter\n  const resolvedStructs: StructLookup = {}\n  const entries = Object.entries(shallowStructs)\n  const entriesLength = entries.length\n  for (let i = 0; i < entriesLength; i++) {\n    const [name, parameters] = entries[i]!\n    resolvedStructs[name] = resolveStructs(parameters, shallowStructs)\n  }\n\n  return resolvedStructs\n}\n\nconst typeWithoutTupleRegex =\n  /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?$/\n\nfunction resolveStructs(\n  abiParameters: readonly (AbiParameter & { indexed?: true })[],\n  structs: StructLookup,\n  ancestors = new Set<string>(),\n) {\n  const components: AbiParameter[] = []\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    const isTuple = isTupleRegex.test(abiParameter.type)\n    if (isTuple) components.push(abiParameter)\n    else {\n      const match = execTyped<{ array?: string; type: string }>(\n        typeWithoutTupleRegex,\n        abiParameter.type,\n      )\n      if (!match?.type) throw new InvalidAbiTypeParameterError({ abiParameter })\n\n      const { array, type } = match\n      if (type in structs) {\n        if (ancestors.has(type)) throw new CircularReferenceError({ type })\n\n        components.push({\n          ...abiParameter,\n          type: `tuple${array ?? ''}`,\n          components: resolveStructs(\n            structs[type] ?? [],\n            structs,\n            new Set([...ancestors, type]),\n          ),\n        })\n      } else {\n        if (isSolidityType(type)) components.push(abiParameter)\n        else throw new UnknownTypeError({ type })\n      }\n    }\n  }\n\n  return components\n}\n", "import type { Abi } from '../abi.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseSignature } from './runtime/utils.js'\nimport type { Signatures } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseSignature } from './types/utils.js'\n\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param TSignatures - Human-readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * type Result = ParseAbi<\n *   // ^? type Result = readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   [\n *     'function balanceOf(address owner) view returns (uint256)',\n *     'event Transfer(address indexed from, address indexed to, uint256 amount)',\n *   ]\n * >\n */\nexport type ParseAbi<TSignatures extends readonly string[]> =\n  string[] extends TSignatures\n    ? Abi // If `T` was not able to be inferred (e.g. just `string[]`), return `Abi`\n    : TSignatures extends readonly string[]\n    ? TSignatures extends Signatures<TSignatures> // Validate signatures\n      ? ParseStructs<TSignatures> extends infer Structs\n        ? {\n            [K in keyof TSignatures]: TSignatures[K] extends string\n              ? ParseSignature<TSignatures[K], Structs>\n              : never\n          } extends infer Mapped extends readonly unknown[]\n          ? Filter<Mapped, never> extends infer Result\n            ? Result extends readonly []\n              ? never\n              : Result\n            : never\n          : never\n        : never\n      : never\n    : never\n\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param signatures - Human-Readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * const abi = parseAbi([\n *   //  ^? const abi: readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   'function balanceOf(address owner) view returns (uint256)',\n *   'event Transfer(address indexed from, address indexed to, uint256 amount)',\n * ])\n */\nexport function parseAbi<const TSignatures extends readonly string[]>(\n  signatures: TSignatures['length'] extends 0\n    ? Error<'At least one signature required'>\n    : Signatures<TSignatures> extends TSignatures\n    ? TSignatures\n    : Signatures<TSignatures>,\n): ParseAbi<TSignatures> {\n  const structs = parseStructs(signatures as readonly string[])\n  const abi = []\n  const length = signatures.length as number\n  for (let i = 0; i < length; i++) {\n    const signature = (signatures as readonly string[])[i]!\n    if (isStructSignature(signature)) continue\n    abi.push(parseSignature(signature, structs))\n  }\n  return abi as unknown as ParseAbi<TSignatures>\n}\n", "import type { Abi } from '../abi.js'\nimport { InvalidAbiItemError } from '../index.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseSignature } from './runtime/utils.js'\nimport type { Signature, Signatures } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseSignature } from './types/utils.js'\n\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param TSignature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * type Result = ParseAbiItem<'function balanceOf(address owner) view returns (uint256)'>\n * //   ^? type Result = { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * type Result = ParseAbiItem<\n *   // ^? type Result = { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   ['function foo(Baz bar) view returns (string)', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiItem<\n  TSignature extends string | readonly string[] | readonly unknown[],\n> =\n  | (TSignature extends string\n      ? string extends TSignature\n        ? Abi[number]\n        : TSignature extends Signature<TSignature> // Validate signature\n        ? ParseSignature<TSignature>\n        : never\n      : never)\n  | (TSignature extends readonly string[]\n      ? string[] extends TSignature\n        ? Abi[number] // Return generic Abi item since type was no inferrable\n        : TSignature extends Signatures<TSignature> // Validate signature\n        ? ParseStructs<TSignature> extends infer Structs\n          ? {\n              [K in keyof TSignature]: ParseSignature<\n                TSignature[K] extends string ? TSignature[K] : never,\n                Structs\n              >\n            } extends infer Mapped extends readonly unknown[]\n            ? // Filter out `never` since those are structs\n              Filter<Mapped, never>[0] extends infer Result\n              ? Result extends undefined // convert `undefined` to `never` (e.g. `ParseAbiItem<['struct Foo { string name; }']>`)\n                ? never\n                : Result\n              : never\n            : never\n          : never\n        : never\n      : never)\n\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param signature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\n * //    ^? const abiItem: { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * const abiItem = parseAbiItem([\n *   //  ^? const abiItem: { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   'function foo(Baz bar) view returns (string)',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiItem<\n  TSignature extends string | readonly string[] | readonly unknown[],\n>(\n  signature: Narrow<TSignature> &\n    (\n      | (TSignature extends string\n          ? string extends TSignature\n            ? unknown\n            : Signature<TSignature>\n          : never)\n      | (TSignature extends readonly string[]\n          ? TSignature extends readonly [] // empty array\n            ? Error<'At least one signature required.'>\n            : string[] extends TSignature\n            ? unknown\n            : Signatures<TSignature>\n          : never)\n    ),\n): ParseAbiItem<TSignature> {\n  let abiItem\n  if (typeof signature === 'string')\n    abiItem = parseSignature(signature) as ParseAbiItem<TSignature>\n  else {\n    const structs = parseStructs(signature as readonly string[])\n    const length = signature.length as number\n    for (let i = 0; i < length; i++) {\n      const signature_ = (signature as readonly string[])[i]!\n      if (isStructSignature(signature_)) continue\n      abiItem = parseSignature(signature_, structs)\n      break\n    }\n  }\n\n  if (!abiItem) throw new InvalidAbiItemError({ signature })\n  return abiItem as ParseAbiItem<TSignature>\n}\n", "import type { AbiParameter } from '../abi.js'\nimport { InvalidAbiParameterError } from '../index.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature, modifiers } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseAbiParameter as parseAbiParameter_ } from './runtime/utils.js'\nimport type { IsStructSignature, Modifier } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseAbiParameter as ParseAbiParameter_ } from './types/utils.js'\n\n/**\n * Parses human-readable ABI parameter into {@link AbiParameter}\n *\n * @param TParam - Human-readable ABI parameter\n * @returns Parsed {@link AbiParameter}\n *\n * @example\n * type Result = ParseAbiParameter<'address from'>\n * //   ^? type Result = { type: \"address\"; name: \"from\"; }\n *\n * @example\n * type Result = ParseAbiParameter<\n *   // ^? type Result = { type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   ['Baz bar', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiParameter<\n  TParam extends string | readonly string[] | readonly unknown[],\n> =\n  | (TParam extends string\n      ? TParam extends ''\n        ? never\n        : string extends TParam\n        ? AbiParameter\n        : ParseAbiParameter_<TParam, { Modifier: Modifier }>\n      : never)\n  | (TParam extends readonly string[]\n      ? string[] extends TParam\n        ? AbiParameter // Return generic AbiParameter item since type was no inferrable\n        : ParseStructs<TParam> extends infer Structs\n        ? {\n            [K in keyof TParam]: TParam[K] extends string\n              ? IsStructSignature<TParam[K]> extends true\n                ? never\n                : ParseAbiParameter_<\n                    TParam[K],\n                    { Modifier: Modifier; Structs: Structs }\n                  >\n              : never\n          } extends infer Mapped extends readonly unknown[]\n          ? Filter<Mapped, never>[0] extends infer Result\n            ? Result extends undefined\n              ? never\n              : Result\n            : never\n          : never\n        : never\n      : never)\n\n/**\n * Parses human-readable ABI parameter into {@link AbiParameter}\n *\n * @param param - Human-readable ABI parameter\n * @returns Parsed {@link AbiParameter}\n *\n * @example\n * const abiParameter = parseAbiParameter('address from')\n * //    ^? const abiParameter: { type: \"address\"; name: \"from\"; }\n *\n * @example\n * const abiParameter = parseAbiParameter([\n *   //  ^? const abiParameter: { type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   'Baz bar',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiParameter<\n  TParam extends string | readonly string[] | readonly unknown[],\n>(\n  param: Narrow<TParam> &\n    (\n      | (TParam extends string\n          ? TParam extends ''\n            ? Error<'Empty string is not allowed.'>\n            : unknown\n          : never)\n      | (TParam extends readonly string[]\n          ? TParam extends readonly [] // empty array\n            ? Error<'At least one parameter required.'>\n            : string[] extends TParam\n            ? unknown\n            : unknown // TODO: Validate param string\n          : never)\n    ),\n): ParseAbiParameter<TParam> {\n  let abiParameter\n  if (typeof param === 'string')\n    abiParameter = parseAbiParameter_(param, {\n      modifiers,\n    }) as ParseAbiParameter<TParam>\n  else {\n    const structs = parseStructs(param as readonly string[])\n    const length = param.length as number\n    for (let i = 0; i < length; i++) {\n      const signature = (param as readonly string[])[i]!\n      if (isStructSignature(signature)) continue\n      abiParameter = parseAbiParameter_(signature, { modifiers, structs })\n      break\n    }\n  }\n\n  if (!abiParameter) throw new InvalidAbiParameterError({ param })\n\n  return abiParameter as ParseAbiParameter<TParam>\n}\n", "import type { AbiParameter } from '../abi.js'\nimport { InvalidAbiParametersError } from '../index.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature, modifiers } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { splitParameters } from './runtime/utils.js'\nimport { parseAbiParameter as parseAbiParameter_ } from './runtime/utils.js'\nimport type { IsStructSignature, Modifier } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { SplitParameters } from './types/utils.js'\nimport type { ParseAbiParameters as ParseAbiParameters_ } from './types/utils.js'\n\n/**\n * Parses human-readable ABI parameters into {@link AbiParameter}s\n *\n * @param TParams - Human-readable ABI parameters\n * @returns Parsed {@link AbiParameter}s\n *\n * @example\n * type Result = ParseAbiParameters('address from, address to, uint256 amount')\n * //   ^? type Result: [{ type: \"address\"; name: \"from\"; }, { type: \"address\";...\n *\n * @example\n * type Result = ParseAbiParameters<\n *   // ^? type Result: [{ type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   ['Baz bar', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiParameters<\n  TParams extends string | readonly string[] | readonly unknown[],\n> =\n  | (TParams extends string\n      ? TParams extends ''\n        ? never\n        : string extends TParams\n        ? readonly AbiParameter[]\n        : ParseAbiParameters_<SplitParameters<TParams>, { Modifier: Modifier }>\n      : never)\n  | (TParams extends readonly string[]\n      ? string[] extends TParams\n        ? AbiParameter // Return generic AbiParameter item since type was no inferrable\n        : ParseStructs<TParams> extends infer Structs\n        ? {\n            [K in keyof TParams]: TParams[K] extends string\n              ? IsStructSignature<TParams[K]> extends true\n                ? never\n                : ParseAbiParameters_<\n                    SplitParameters<TParams[K]>,\n                    { Modifier: Modifier; Structs: Structs }\n                  >\n              : never\n          } extends infer Mapped extends readonly unknown[]\n          ? Filter<Mapped, never>[0] extends infer Result\n            ? Result extends undefined\n              ? never\n              : Result\n            : never\n          : never\n        : never\n      : never)\n\n/**\n * Parses human-readable ABI parameters into {@link AbiParameter}s\n *\n * @param params - Human-readable ABI parameters\n * @returns Parsed {@link AbiParameter}s\n *\n * @example\n * const abiParameters = parseAbiParameters('address from, address to, uint256 amount')\n * //    ^? const abiParameters: [{ type: \"address\"; name: \"from\"; }, { type: \"address\";...\n *\n * @example\n * const abiParameters = parseAbiParameters([\n *   //  ^? const abiParameters: [{ type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   'Baz bar',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiParameters<\n  TParams extends string | readonly string[] | readonly unknown[],\n>(\n  params: Narrow<TParams> &\n    (\n      | (TParams extends string\n          ? TParams extends ''\n            ? Error<'Empty string is not allowed.'>\n            : unknown\n          : never)\n      | (TParams extends readonly string[]\n          ? TParams extends readonly [] // empty array\n            ? Error<'At least one parameter required.'>\n            : string[] extends TParams\n            ? unknown\n            : unknown // TODO: Validate param string\n          : never)\n    ),\n): ParseAbiParameters<TParams> {\n  const abiParameters: AbiParameter[] = []\n  if (typeof params === 'string') {\n    const parameters = splitParameters(params)\n    const length = parameters.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(parseAbiParameter_(parameters[i]!, { modifiers }))\n    }\n  } else {\n    const structs = parseStructs(params as readonly string[])\n    const length = params.length as number\n    for (let i = 0; i < length; i++) {\n      const signature = (params as readonly string[])[i]!\n      if (isStructSignature(signature)) continue\n      const parameters = splitParameters(signature)\n      const length = parameters.length\n      for (let k = 0; k < length; k++) {\n        abiParameters.push(\n          parseAbiParameter_(parameters[k]!, { modifiers, structs }),\n        )\n      }\n    }\n  }\n\n  if (abiParameters.length === 0)\n    throw new InvalidAbiParametersError({ params })\n\n  return abiParameters as ParseAbiParameters<TParams>\n}\n", "export type {\n  Abi,\n  AbiConstructor,\n  AbiError,\n  AbiEvent,\n  AbiEventParameter,\n  AbiFallback,\n  AbiFunction,\n  AbiInternalType,\n  AbiItemType,\n  AbiParameter,\n  AbiParameterKind,\n  AbiReceive,\n  AbiStateMutability,\n  AbiType,\n  Address,\n  SolidityAddress,\n  SolidityArray,\n  SolidityArrayWithoutTuple,\n  SolidityArrayWithTuple,\n  SolidityBool,\n  SolidityBytes,\n  SolidityFixedArrayRange,\n  SolidityFixedArraySizeLookup,\n  SolidityFunction,\n  SolidityInt,\n  SolidityString,\n  SolidityTuple,\n  TypedData,\n  TypedDataDomain,\n  TypedDataParameter,\n  TypedDataType,\n} from './abi.js'\n\nexport type { Config, DefaultConfig, ResolvedConfig } from './config.js'\n\nexport { BaseError } from './errors.js'\n\nexport type { Narrow } from './narrow.js'\nexport { narrow } from './narrow.js'\n\nexport type {\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n  AbiTypeToPrimitiveType,\n  ExtractAbiError,\n  ExtractAbiErrorNames,\n  ExtractAbiErrors,\n  ExtractAbiEvent,\n  ExtractAbiEventNames,\n  ExtractAbiEvents,\n  ExtractAbiFunction,\n  ExtractAbiFunctionNames,\n  ExtractAbiFunctions,\n  IsAbi,\n  IsTypedData,\n  TypedDataToPrimitiveTypes,\n} from './utils.js'\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n// Human-Readable\n\nexport {\n  formatAbi,\n  type FormatAbi,\n} from './human-readable/formatAbi.js'\n\nexport {\n  formatAbiItem,\n  type FormatAbiItem,\n} from './human-readable/formatAbiItem.js'\n\nexport {\n  formatAbiParameter,\n  type FormatAbiParameter,\n} from './human-readable/formatAbiParameter.js'\n\nexport {\n  formatAbiParameters,\n  type FormatAbiParameters,\n} from './human-readable/formatAbiParameters.js'\n\nexport { parseAbi, type ParseAbi } from './human-readable/parseAbi.js'\n\nexport {\n  parseAbiItem,\n  type ParseAbiItem,\n} from './human-readable/parseAbiItem.js'\n\nexport {\n  parseAbiParameter,\n  type ParseAbiParameter,\n} from './human-readable/parseAbiParameter.js'\n\nexport {\n  parseAbiParameters,\n  type ParseAbiParameters,\n} from './human-readable/parseAbiParameters.js'\n\nexport {\n  UnknownTypeError,\n  InvalidAbiItemError,\n  UnknownSolidityTypeError,\n} from './human-readable/errors/abiItem.js'\n\nexport {\n  InvalidAbiTypeParameterError,\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  SolidityProtectedKeywordError,\n  InvalidParameterError,\n  InvalidAbiParametersError,\n  InvalidAbiParameterError,\n} from './human-readable/errors/abiParameter.js'\n\nexport {\n  InvalidStructSignatureError,\n  InvalidSignatureError,\n  UnknownSignatureError,\n} from './human-readable/errors/signature.js'\n\nexport { InvalidParenthesisError } from './human-readable/errors/splitParameters.js'\n\nexport { CircularReferenceError } from './human-readable/errors/struct.js'\n", "import type { Client } from '../clients/createClient.js'\n\n/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */\nexport function getAction<params extends {}, returnType extends {}>(\n  client: Client,\n  action: (_: any, params: params) => returnType,\n  // Some minifiers drop `Function.prototype.name`, meaning that `action.name`\n  // will not work. For that case, the consumer needs to pass the name explicitly.\n  name: string,\n) {\n  return (params: params): returnType =>\n    (\n      client as Client & {\n        [key: string]: (params: params) => returnType\n      }\n    )[action.name || name]?.(params) ?? action(client, params)\n}\n", "import type { AbiParameter } from 'abitype'\n\nimport {\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\n\nexport type FormatAbiItemErrorType =\n  | FormatAbiParamsErrorType\n  | InvalidDefinitionTypeErrorType\n  | ErrorType\n\nexport function formatAbiItem(\n  abiItem: AbiItem,\n  { includeName = false }: { includeName?: boolean } = {},\n) {\n  if (\n    abiItem.type !== 'function' &&\n    abiItem.type !== 'event' &&\n    abiItem.type !== 'error'\n  )\n    throw new InvalidDefinitionTypeError(abiItem.type)\n\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`\n}\n\nexport type FormatAbiParamsErrorType = ErrorType\n\nexport function formatAbiParams(\n  params: readonly AbiParameter[] | undefined,\n  { includeName = false }: { includeName?: boolean } = {},\n): string {\n  if (!params) return ''\n  return params\n    .map((param) => formatAbiParam(param, { includeName }))\n    .join(includeName ? ', ' : ',')\n}\n\nexport type FormatAbiParamErrorType = ErrorType\n\nfunction formatAbiParam(\n  param: AbiParameter,\n  { includeName }: { includeName: boolean },\n): string {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(\n      (param as unknown as { components: AbiParameter[] }).components,\n      { includeName },\n    )})${param.type.slice('tuple'.length)}`\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '')\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type IsHexErrorType = ErrorType\n\nexport function isHex(\n  value: unknown,\n  { strict = true }: { strict?: boolean } = {},\n): value is Hex {\n  if (!value) return false\n  if (typeof value !== 'string') return false\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x')\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type SizeErrorType = IsHexErrorType | ErrorType\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value: Hex | ByteArray) {\n  if (isHex(value, { strict: false })) return Math.ceil((value.length - 2) / 2)\n  return value.length\n}\n", "export const version = '1.21.3'\n", "import type { Address } from 'abitype'\n\nimport { version } from './version.js'\n\nexport type ErrorType<name extends string = 'Error'> = Error & { name: name }\n\nexport const getContractAddress = (address: Address) => address\nexport const getUrl = (url: string) => url\nexport const getVersion = () => `viem@${version}`\n", "import { getVersion } from './utils.js'\n\ntype BaseErrorParameters = {\n  docsPath?: string\n  docsSlug?: string\n  metaMessages?: string[]\n} & (\n  | {\n      cause?: never\n      details?: string\n    }\n  | {\n      cause: BaseError | Error\n      details?: never\n    }\n)\n\nexport type BaseErrorType = BaseError & { name: 'ViemError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string\n  metaMessages?: string[]\n  shortMessage: string\n\n  override name = 'ViemError'\n  version = getVersion()\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    super()\n\n    const details =\n      args.cause instanceof BaseError\n        ? args.cause.details\n        : args.cause?.message\n          ? args.cause.message\n          : args.details!\n    const docsPath =\n      args.cause instanceof BaseError\n        ? args.cause.docsPath || args.docsPath\n        : args.docsPath\n\n    this.message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsPath\n        ? [\n            `Docs: https://viem.sh${docsPath}.html${\n              args.docsSlug ? `#${args.docsSlug}` : ''\n            }`,\n          ]\n        : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: ${this.version}`,\n    ].join('\\n')\n\n    if (args.cause) this.cause = args.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(err: unknown, fn?: (err: unknown) => boolean): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n", "import type { Abi, AbiEvent, AbiParameter } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js'\nimport { size } from '../utils/data/size.js'\n\nimport { BaseError } from './base.js'\n\nexport type AbiConstructorNotFoundErrorType = AbiConstructorNotFoundError & {\n  name: 'AbiConstructorNotFoundError'\n}\nexport class AbiConstructorNotFoundError extends BaseError {\n  override name = 'AbiConstructorNotFoundError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'A constructor was not found on the ABI.',\n        'Make sure you are using the correct ABI and that the constructor exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiConstructorParamsNotFoundErrorType =\n  AbiConstructorParamsNotFoundError & {\n    name: 'AbiConstructorParamsNotFoundError'\n  }\n\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n  override name = 'AbiConstructorParamsNotFoundError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n        'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeInvalidErrorType =\n  AbiDecodingDataSizeInvalidError & {\n    name: 'AbiDecodingDataSizeInvalidError'\n  }\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n  override name = 'AbiDecodingDataSizeInvalidError'\n  constructor({ data, size }: { data: Hex; size: number }) {\n    super(\n      [\n        `Data size of ${size} bytes is invalid.`,\n        'Size must be in increments of 32 bytes (size % 32 === 0).',\n      ].join('\\n'),\n      { metaMessages: [`Data: ${data} (${size} bytes)`] },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeTooSmallErrorType =\n  AbiDecodingDataSizeTooSmallError & {\n    name: 'AbiDecodingDataSizeTooSmallError'\n  }\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n  override name = 'AbiDecodingDataSizeTooSmallError'\n\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    data,\n    params,\n    size,\n  }: { data: Hex; params: readonly AbiParameter[]; size: number }) {\n    super(\n      [`Data size of ${size} bytes is too small for given parameters.`].join(\n        '\\n',\n      ),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n      },\n    )\n\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type AbiDecodingZeroDataErrorType = AbiDecodingZeroDataError & {\n  name: 'AbiDecodingZeroDataError'\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n  override name = 'AbiDecodingZeroDataError'\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.')\n  }\n}\n\nexport type AbiEncodingArrayLengthMismatchErrorType =\n  AbiEncodingArrayLengthMismatchError & {\n    name: 'AbiEncodingArrayLengthMismatchError'\n  }\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n  override name = 'AbiEncodingArrayLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      [\n        `ABI encoding array length mismatch for type ${type}.`,\n        `Expected length: ${expectedLength}`,\n        `Given length: ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type AbiEncodingBytesSizeMismatchErrorType =\n  AbiEncodingBytesSizeMismatchError & {\n    name: 'AbiEncodingBytesSizeMismatchError'\n  }\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n  override name = 'AbiEncodingBytesSizeMismatchError'\n  constructor({ expectedSize, value }: { expectedSize: number; value: Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n    )\n  }\n}\n\nexport type AbiEncodingLengthMismatchErrorType =\n  AbiEncodingLengthMismatchError & {\n    name: 'AbiEncodingLengthMismatchError'\n  }\nexport class AbiEncodingLengthMismatchError extends BaseError {\n  override name = 'AbiEncodingLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding params/values length mismatch.',\n        `Expected length (params): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type AbiErrorInputsNotFoundErrorType = AbiErrorInputsNotFoundError & {\n  name: 'AbiErrorInputsNotFoundError'\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n  override name = 'AbiErrorInputsNotFoundError'\n  constructor(errorName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n        'Cannot encode error result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the inputs exist on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiErrorNotFoundErrorType = AbiErrorNotFoundError & {\n  name: 'AbiErrorNotFoundError'\n}\nexport class AbiErrorNotFoundError extends BaseError {\n  override name = 'AbiErrorNotFoundError'\n  constructor(errorName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiErrorSignatureNotFoundErrorType =\n  AbiErrorSignatureNotFoundError & {\n    name: 'AbiErrorSignatureNotFoundError'\n  }\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n  override name = 'AbiErrorSignatureNotFoundError'\n\n  signature: Hex\n\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded error signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n    this.signature = signature\n  }\n}\n\nexport type AbiEventSignatureEmptyTopicsErrorType =\n  AbiEventSignatureEmptyTopicsError & {\n    name: 'AbiEventSignatureEmptyTopicsError'\n  }\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n  override name = 'AbiEventSignatureEmptyTopicsError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super('Cannot extract event signature from empty topics.', {\n      docsPath,\n    })\n  }\n}\n\nexport type AbiEventSignatureNotFoundErrorType =\n  AbiEventSignatureNotFoundError & {\n    name: 'AbiEventSignatureNotFoundError'\n  }\nexport class AbiEventSignatureNotFoundError extends BaseError {\n  override name = 'AbiEventSignatureNotFoundError'\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded event signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiEventNotFoundErrorType = AbiEventNotFoundError & {\n  name: 'AbiEventNotFoundError'\n}\nexport class AbiEventNotFoundError extends BaseError {\n  override name = 'AbiEventNotFoundError'\n  constructor(eventName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiFunctionNotFoundErrorType = AbiFunctionNotFoundError & {\n  name: 'AbiFunctionNotFoundError'\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n  override name = 'AbiFunctionNotFoundError'\n  constructor(functionName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiFunctionOutputsNotFoundErrorType =\n  AbiFunctionOutputsNotFoundError & {\n    name: 'AbiFunctionOutputsNotFoundError'\n  }\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n  override name = 'AbiFunctionOutputsNotFoundError'\n  constructor(functionName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n        'Cannot decode function result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiFunctionSignatureNotFoundErrorType =\n  AbiFunctionSignatureNotFoundError & {\n    name: 'AbiFunctionSignatureNotFoundError'\n  }\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n  override name = 'AbiFunctionSignatureNotFoundError'\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded function signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiItemAmbiguityErrorType = AbiItemAmbiguityError & {\n  name: 'AbiItemAmbiguityError'\n}\nexport class AbiItemAmbiguityError extends BaseError {\n  override name = 'AbiItemAmbiguityError'\n  constructor(\n    x: { abiItem: Abi[number]; type: string },\n    y: { abiItem: Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI items.', {\n      metaMessages: [\n        `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n        `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n    })\n  }\n}\n\nexport type BytesSizeMismatchErrorType = BytesSizeMismatchError & {\n  name: 'BytesSizeMismatchError'\n}\nexport class BytesSizeMismatchError extends BaseError {\n  override name = 'BytesSizeMismatchError'\n  constructor({\n    expectedSize,\n    givenSize,\n  }: { expectedSize: number; givenSize: number }) {\n    super(`Expected bytes${expectedSize}, got bytes${givenSize}.`)\n  }\n}\n\nexport type DecodeLogDataMismatchErrorType = DecodeLogDataMismatch & {\n  name: 'DecodeLogDataMismatch'\n}\nexport class DecodeLogDataMismatch extends BaseError {\n  override name = 'DecodeLogDataMismatch'\n\n  abiItem: AbiEvent\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    abiItem,\n    data,\n    params,\n    size,\n  }: {\n    abiItem: AbiEvent\n    data: Hex\n    params: readonly AbiParameter[]\n    size: number\n  }) {\n    super(\n      [\n        `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n      ].join('\\n'),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n      },\n    )\n\n    this.abiItem = abiItem\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type DecodeLogTopicsMismatchErrorType = DecodeLogTopicsMismatch & {\n  name: 'DecodeLogTopicsMismatch'\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n  override name = 'DecodeLogTopicsMismatch'\n\n  abiItem: AbiEvent\n\n  constructor({\n    abiItem,\n    param,\n  }: {\n    abiItem: AbiEvent\n    param: AbiParameter & { indexed: boolean }\n  }) {\n    super(\n      [\n        `Expected a topic for indexed event parameter${\n          param.name ? ` \"${param.name}\"` : ''\n        } on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n      ].join('\\n'),\n    )\n\n    this.abiItem = abiItem\n  }\n}\n\nexport type InvalidAbiEncodingTypeErrorType = InvalidAbiEncodingTypeError & {\n  name: 'InvalidAbiEncodingTypeError'\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n  override name = 'InvalidAbiEncodingType'\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid encoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath },\n    )\n  }\n}\n\nexport type InvalidAbiDecodingTypeErrorType = InvalidAbiDecodingTypeError & {\n  name: 'InvalidAbiDecodingTypeError'\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n  override name = 'InvalidAbiDecodingType'\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid decoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath },\n    )\n  }\n}\n\nexport type InvalidArrayErrorType = InvalidArrayError & {\n  name: 'InvalidArrayError'\n}\nexport class InvalidArrayError extends BaseError {\n  override name = 'InvalidArrayError'\n  constructor(value: unknown) {\n    super([`Value \"${value}\" is not a valid array.`].join('\\n'))\n  }\n}\n\nexport type InvalidDefinitionTypeErrorType = InvalidDefinitionTypeError & {\n  name: 'InvalidDefinitionTypeError'\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n  override name = 'InvalidDefinitionTypeError'\n  constructor(type: string) {\n    super(\n      [\n        `\"${type}\" is not a valid definition type.`,\n        'Valid types: \"function\", \"event\", \"error\"',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type UnsupportedPackedAbiTypeErrorType = UnsupportedPackedAbiType & {\n  name: 'UnsupportedPackedAbiType'\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n  override name = 'UnsupportedPackedAbiType'\n  constructor(type: unknown) {\n    super(`Type \"${type}\" is not supported for packed encoding.`)\n  }\n}\n", "import { BaseError } from './base.js'\n\nexport type FilterTypeNotSupportedErrorType = FilterTypeNotSupportedError & {\n  name: 'FilterTypeNotSupportedError'\n}\nexport class FilterTypeNotSupportedError extends BaseError {\n  override name = 'FilterTypeNotSupportedError'\n  constructor(type: string) {\n    super(`Filter type \"${type}\" is not supported.`)\n  }\n}\n", "import { BaseError } from './base.js'\n\nexport type SliceOffsetOutOfBoundsErrorType = SliceOffsetOutOfBoundsError & {\n  name: 'SliceOffsetOutOfBoundsError'\n}\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n  override name = 'SliceOffsetOutOfBoundsError'\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \"${offset}\" is out-of-bounds (size: ${size}).`,\n    )\n  }\n}\n\nexport type SizeExceedsPaddingSizeErrorType = SizeExceedsPaddingSizeError & {\n  name: 'SizeExceedsPaddingSizeError'\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n  override name = 'SizeExceedsPaddingSizeError'\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`,\n    )\n  }\n}\n", "import {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype PadOptions = {\n  dir?: 'left' | 'right'\n  size?: number | null\n}\nexport type PadReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport type PadErrorType = PadHexErrorType | PadBytesErrorType | ErrorType\n\nexport function pad<TValue extends ByteArray | Hex>(\n  hexOrBytes: TValue,\n  { dir, size = 32 }: PadOptions = {},\n): PadReturnType<TValue> {\n  if (typeof hexOrBytes === 'string')\n    return padHex(hexOrBytes, { dir, size }) as PadReturnType<TValue>\n  return padBytes(hexOrBytes, { dir, size }) as PadReturnType<TValue>\n}\n\nexport type PadHexErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padHex(hex_: Hex, { dir, size = 32 }: PadOptions = {}) {\n  if (size === null) return hex_\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](\n    size * 2,\n    '0',\n  )}` as Hex\n}\n\nexport type PadBytesErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padBytes(\n  bytes: ByteArray,\n  { dir, size = 32 }: PadOptions = {},\n) {\n  if (size === null) return bytes\n  if (bytes.length > size)\n    throw new SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]\n  }\n  return paddedBytes\n}\n", "import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type DataLengthTooLongErrorType = DataLengthTooLongError & {\n  name: 'DataLengthTooLongError'\n}\n/** @deprecated */\nexport class DataLengthTooLongError extends BaseError {\n  override name = 'DataLengthTooLongError'\n  constructor({ consumed, length }: { consumed: number; length: number }) {\n    super(\n      `Consumed bytes (${consumed}) is shorter than data length (${\n        length - 1\n      }).`,\n    )\n  }\n}\n\nexport type DataLengthTooShortErrorType = DataLengthTooShortError & {\n  name: 'DataLengthTooShortError'\n}\n/** @deprecated */\nexport class DataLengthTooShortError extends BaseError {\n  override name = 'DataLengthTooShortError'\n  constructor({ length, dataLength }: { length: number; dataLength: number }) {\n    super(\n      `Data length (${dataLength - 1}) is shorter than consumed bytes length (${\n        length - 1\n      }).`,\n    )\n  }\n}\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  override name = 'IntegerOutOfRangeError'\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string\n    min: string\n    signed?: boolean\n    size?: number\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  override name = 'InvalidBytesBooleanError'\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  override name = 'InvalidHexBooleanError'\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  override name = 'InvalidHexValueError'\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n    )\n  }\n}\n\nexport type OffsetOutOfBoundsErrorType = OffsetOutOfBoundsError & {\n  name: 'OffsetOutOfBoundsError'\n}\n/** @deprecated */\nexport class OffsetOutOfBoundsError extends BaseError {\n  override name = 'OffsetOutOfBoundsError' as const\n  constructor({ nextOffset, offset }: { nextOffset: number; offset: number }) {\n    super(\n      `Next offset (${nextOffset}) is greater than previous offset + consumed bytes (${offset})`,\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  override name = 'SizeOverflowError' as const\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n    )\n  }\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype TrimOptions = {\n  dir?: 'left' | 'right'\n}\nexport type TrimReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport type TrimErrorType = ErrorType\n\nexport function trim<TValue extends ByteArray | Hex>(\n  hexOrBytes: TValue,\n  { dir = 'left' }: TrimOptions = {},\n): TrimReturnType<TValue> {\n  let data: any =\n    typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (typeof hexOrBytes === 'string') {\n    if (data.length === 1 && dir === 'right') data = `${data}0`\n    return `0x${\n      data.length % 2 === 1 ? `0${data}` : data\n    }` as TrimReturnType<TValue>\n  }\n  return data as TrimReturnType<TValue>\n}\n", "import {\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type SizeErrorType, size as size_ } from '../data/size.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\n\nexport type AssertSizeErrorType =\n  | SizeOverflowErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function assertSize(\n  hexOrBytes: Hex | ByteArray,\n  { size }: { size: number },\n): void {\n  if (size_(hexOrBytes) > size)\n    throw new SizeOverflowError({\n      givenSize: size_(hexOrBytes),\n      maxSize: size,\n    })\n}\n\nexport type FromHexParameters<\n  TTo extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n> =\n  | TTo\n  | {\n      /** Size (in bytes) of the hex value. */\n      size?: number\n      /** Type to convert to. */\n      to: TTo\n    }\n\nexport type FromHexReturnType<TTo> = TTo extends 'string'\n  ? string\n  : TTo extends 'bigint'\n    ? bigint\n    : TTo extends 'number'\n      ? number\n      : TTo extends 'bytes'\n        ? ByteArray\n        : TTo extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromHexErrorType =\n  | HexToNumberErrorType\n  | HexToBigIntErrorType\n  | HexToBoolErrorType\n  | HexToStringErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html\n * - Example: https://viem.sh/docs/utilities/fromHex.html#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex<\n  TTo extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n>(hex: Hex, toOrOpts: FromHexParameters<TTo>): FromHexReturnType<TTo> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number') return hexToNumber(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'bigint') return hexToBigInt(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'string') return hexToString(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'boolean') return hexToBool(hex, opts) as FromHexReturnType<TTo>\n  return hexToBytes(hex, opts) as FromHexReturnType<TTo>\n}\n\nexport type HexToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\nexport type HexToBigIntErrorType = AssertSizeErrorType | ErrorType\n\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex: Hex, opts: HexToBigIntOpts = {}): bigint {\n  const { signed } = opts\n\n  if (opts.size) assertSize(hex, { size: opts.size })\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n  const max = (1n << (BigInt(size) * 8n - 1n)) - 1n\n  if (value <= max) return value\n\n  return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n\n}\n\nexport type HexToBoolOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\nexport type HexToBoolErrorType =\n  | AssertSizeErrorType\n  | InvalidHexBooleanErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_: Hex, opts: HexToBoolOpts = {}): boolean {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = trim(hex)\n  }\n  if (trim(hex) === '0x00') return false\n  if (trim(hex) === '0x01') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport type HexToNumberOpts = HexToBigIntOpts\n\nexport type HexToNumberErrorType = HexToBigIntErrorType | ErrorType\n\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex: Hex, opts: HexToNumberOpts = {}): number {\n  return Number(hexToBigInt(hex, opts))\n}\n\nexport type HexToStringOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\nexport type HexToStringErrorType =\n  | AssertSizeErrorType\n  | HexToBytesErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex: Hex, opts: HexToStringOpts = {}): string {\n  let bytes = hexToBytes(hex)\n  if (opts.size) {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n", "import {\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\nexport type ToHexParameters = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nexport type ToHexErrorType =\n  | BoolToHexErrorType\n  | BytesToHexErrorType\n  | NumberToHexErrorType\n  | StringToHexErrorType\n  | ErrorType\n\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html\n * - Example: https://viem.sh/docs/utilities/toHex.html#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(\n  value: string | number | bigint | boolean | ByteArray,\n  opts: ToHexParameters = {},\n): Hex {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToHex(value, opts)\n  if (typeof value === 'string') {\n    return stringToHex(value, opts)\n  }\n  if (typeof value === 'boolean') return boolToHex(value, opts)\n  return bytesToHex(value, opts)\n}\n\nexport type BoolToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nexport type BoolToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value: boolean, opts: BoolToHexOpts = {}): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { size: opts.size })\n  }\n  return hex\n}\n\nexport type BytesToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nexport type BytesToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value: ByteArray, opts: BytesToHexOpts = {}): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) {\n    string += hexes[value[i]]\n  }\n  const hex = `0x${string}` as const\n\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { dir: 'right', size: opts.size })\n  }\n  return hex\n}\n\nexport type NumberToHexOpts =\n  | {\n      /** Whether or not the number of a signed representation. */\n      signed?: boolean\n      /** The size (in bytes) of the output hex value. */\n      size: number\n    }\n  | {\n      signed?: never\n      /** The size (in bytes) of the output hex value. */\n      size?: number\n    }\n\nexport type NumberToHexErrorType =\n  | IntegerOutOfRangeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(\n  value_: number | bigint,\n  opts: NumberToHexOpts = {},\n): Hex {\n  const { signed, size } = opts\n\n  const value = BigInt(value_)\n\n  let maxValue\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value_ === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value > maxValue) || value < minValue) {\n    const suffix = typeof value_ === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value_}${suffix}`,\n    })\n  }\n\n  const hex = `0x${(signed && value < 0\n    ? (1n << BigInt(size * 8)) + BigInt(value)\n    : value\n  ).toString(16)}` as Hex\n  if (size) return pad(hex, { size }) as Hex\n  return hex\n}\n\nexport type StringToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nexport type StringToHexErrorType = BytesToHexErrorType | ErrorType\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_: string, opts: StringToHexOpts = {}): Hex {\n  const value = encoder.encode(value_)\n  return bytesToHex(value, opts)\n}\n", "import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n} from './toHex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nexport type ToBytesParameters = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\nexport type ToBytesErrorType =\n  | NumberToBytesErrorType\n  | BoolToBytesErrorType\n  | HexToBytesErrorType\n  | StringToBytesErrorType\n  | IsHexErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html\n * - Example: https://viem.sh/docs/utilities/toBytes.html#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(\n  value: string | bigint | number | boolean | Hex,\n  opts: ToBytesParameters = {},\n): ByteArray {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToBytes(value, opts)\n  if (typeof value === 'boolean') return boolToBytes(value, opts)\n  if (isHex(value)) return hexToBytes(value, opts)\n  return stringToBytes(value, opts)\n}\n\nexport type BoolToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\nexport type BoolToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value: boolean, opts: BoolToBytesOpts = {}) {\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { size: opts.size })\n  }\n  return bytes\n}\n\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\nfunction charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\nexport type HexToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\nexport type HexToBytesErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_: Hex, opts: HexToBytesOpts = {}): ByteArray {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = pad(hex, { dir: 'right', size: opts.size })\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${\n          hexString[j - 1]\n        }\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport type NumberToBytesErrorType =\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value: bigint | number, opts?: NumberToHexOpts) {\n  const hex = numberToHex(value, opts)\n  return hexToBytes(hex)\n}\n\nexport type StringToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\nexport type StringToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(\n  value: string,\n  opts: StringToBytesOpts = {},\n): ByteArray {\n  const bytes = encoder.encode(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { dir: 'right', size: opts.size })\n  }\n  return bytes\n}\n", "import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nexport type NormalizeSignatureParameters = string\nexport type NormalizeSignatureReturnType = string\nexport type NormalizeSignatureErrorType = ErrorType\n\nexport function normalizeSignature(\n  signature: NormalizeSignatureParameters,\n): NormalizeSignatureReturnType {\n  let active = true\n  let current = ''\n  let level = 0\n  let result = ''\n  let valid = false\n\n  for (let i = 0; i < signature.length; i++) {\n    const char = signature[i]\n\n    // If the character is a separator, we want to reactivate.\n    if (['(', ')', ','].includes(char)) active = true\n\n    // If the character is a \"level\" token, we want to increment/decrement.\n    if (char === '(') level++\n    if (char === ')') level--\n\n    // If we aren't active, we don't want to mutate the result.\n    if (!active) continue\n\n    // If level === 0, we are at the definition level.\n    if (level === 0) {\n      if (char === ' ' && ['event', 'function', ''].includes(result))\n        result = ''\n      else {\n        result += char\n\n        // If we are at the end of the definition, we must be finished.\n        if (char === ')') {\n          valid = true\n          break\n        }\n      }\n\n      continue\n    }\n\n    // Ignore spaces\n    if (char === ' ') {\n      // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n      if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n        current = ''\n        active = false\n      }\n      continue\n    }\n\n    result += char\n    current += char\n  }\n\n  if (!valid) throw new BaseError('Unable to normalize signature.')\n\n  return result\n}\n", "import { type AbiFunction, formatAbiItem } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type NormalizeSignatureErrorType,\n  normalizeSignature,\n} from './normalizeSignature.js'\n\nexport type GetFunctionSignatureErrorType =\n  | NormalizeSignatureErrorType\n  | ErrorType\n\nexport const getFunctionSignature = (fn_: string | AbiFunction) => {\n  const fn = (() => {\n    if (typeof fn_ === 'string') return fn_\n    return formatAbiItem(fn_)\n  })()\n  return normalizeSignature(fn)\n}\n", "import type { AbiEvent, AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type GetFunctionSignatureErrorType,\n  getFunctionSignature,\n} from './getFunctionSignature.js'\n\nexport type GetEventSignatureErrorType =\n  | GetFunctionSignatureErrorType\n  | ErrorType\n\nexport const getEventSignature = (fn: string | AbiEvent) => {\n  return getFunctionSignature(fn as {} as AbiFunction)\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\n// The file will throw on node.js 14 and earlier.\n// @ts-ignore\nimport * as nc from 'node:crypto';\nexport const crypto =\n  nc && typeof nc === 'object' && 'webcrypto' in nc ? (nc.webcrypto as any) : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta \u03B8\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (\u03C1) and Pi (\u03C0)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (\u03C7)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (\u03B9)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n", "import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo,\n): Keccak256Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<TTo>\n  return toHex(bytes) as Keccak256Hash<TTo>\n}\n", "import type { AbiEvent } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { getEventSignature } from './getEventSignature.js'\nimport { type Keccak256ErrorType, keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport type GetEventSelectorErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport const getEventSelector = (fn: string | AbiEvent) =>\n  hash(getEventSignature(fn))\n", "import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  override name = 'InvalidAddressError'\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`)\n  }\n}\n", "import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\nexport type IsAddressErrorType = ErrorType\n\nexport function isAddress(address: string): address is Address {\n  return addressRegex.test(address)\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<TValue extends Hex | ByteArray> =\n  TValue extends Hex ? Hex : ByteArray\n\nexport type ConcatErrorType =\n  | ConcatBytesErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function concat<TValue extends Hex | ByteArray>(\n  values: readonly TValue[],\n): ConcatReturnType<TValue> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as readonly Hex[]) as ConcatReturnType<TValue>\n  return concatBytes(values as readonly ByteArray[]) as ConcatReturnType<TValue>\n}\n\nexport type ConcatBytesErrorType = ErrorType\n\nexport function concatBytes(values: readonly ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport type ConcatHexErrorType = ErrorType\n\nexport function concatHex(values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n", "import {\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\nimport { type SizeErrorType, size } from './size.js'\n\nexport type SliceReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport type SliceErrorType =\n  | IsHexErrorType\n  | SliceBytesErrorType\n  | SliceHexErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<TValue extends ByteArray | Hex>(\n  value: TValue,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): SliceReturnType<TValue> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<TValue>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<TValue>\n}\n\nexport type AssertStartOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nexport type AssertEndOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertEndOffset(value: Hex | ByteArray, start?: number, end?: number) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\nexport type SliceBytesErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\nexport type SliceHexErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n", "import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { type PadHexErrorType, padHex } from '../data/pad.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type BoolToHexErrorType,\n  type NumberToHexErrorType,\n  type StringToHexErrorType,\n  boolToHex,\n  numberToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type EncodeAbiParametersReturnType = Hex\n\nexport type EncodeAbiParametersErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | PrepareParamsErrorType\n  | EncodeParamsErrorType\n  | ErrorType\n\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n */\nexport function encodeAbiParameters<\n  const TParams extends readonly AbiParameter[] | readonly unknown[],\n>(\n  params: TParams,\n  values: TParams extends readonly AbiParameter[]\n    ? AbiParametersToPrimitiveTypes<TParams>\n    : never,\n): EncodeAbiParametersReturnType {\n  if (params.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: params.length as number,\n      givenLength: values.length,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParams = prepareParams({\n    params: params as readonly AbiParameter[],\n    values,\n  })\n  const data = encodeParams(preparedParams)\n  if (data.length === 0) return '0x'\n  return data\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype PreparedParam = { dynamic: boolean; encoded: Hex }\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\ntype Tuple = AbiParameterToPrimitiveType<TupleAbiParameter>\n\nexport type PrepareParamsErrorType = ErrorType\n\nfunction prepareParams<const TParams extends readonly AbiParameter[]>({\n  params,\n  values,\n}: {\n  params: TParams\n  values: AbiParametersToPrimitiveTypes<TParams>\n}) {\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < params.length; i++) {\n    preparedParams.push(prepareParam({ param: params[i], value: values[i] }))\n  }\n  return preparedParams\n}\n\nexport type PrepareParamErrorType =\n  | GetArrayComponentsErrorType\n  | InvalidAbiEncodingTypeErrorType\n  | ErrorType\n\nfunction prepareParam<const TParam extends AbiParameter>({\n  param,\n  value,\n}: {\n  param: TParam\n  value: AbiParameterToPrimitiveType<TParam>\n}): PreparedParam {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, { length, param: { ...param, type } })\n  }\n  if (param.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      param: param as TupleAbiParameter,\n    })\n  }\n  if (param.type === 'address') {\n    return encodeAddress(value as unknown as Hex)\n  }\n  if (param.type === 'bool') {\n    return encodeBool(value as unknown as boolean)\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    const signed = param.type.startsWith('int')\n    return encodeNumber(value as unknown as number, { signed })\n  }\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex, { param })\n  }\n  if (param.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new InvalidAbiEncodingTypeError(param.type, {\n    docsPath: '/docs/contract/encodeAbiParameters',\n  })\n}\n\n/////////////////////////////////////////////////////////////////\n\nexport type EncodeParamsErrorType =\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction encodeParams(preparedParams: PreparedParam[]): Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) staticSize += 32\n    else staticSize += size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParams: Hex[] = []\n  const dynamicParams: Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) {\n      staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }))\n      dynamicParams.push(encoded)\n      dynamicSize += size(encoded)\n    } else {\n      staticParams.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return concat([...staticParams, ...dynamicParams])\n}\n\n/////////////////////////////////////////////////////////////////\n\nexport type EncodeAddressErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nfunction encodeAddress(value: Hex): PreparedParam {\n  if (!isAddress(value)) throw new InvalidAddressError({ address: value })\n  return { dynamic: false, encoded: padHex(value.toLowerCase() as Hex) }\n}\n\nexport type EncodeArrayErrorType =\n  | AbiEncodingArrayLengthMismatchErrorType\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  | InvalidArrayErrorType\n  | NumberToHexErrorType\n  | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeArray<const TParam extends AbiParameter>(\n  value: AbiParameterToPrimitiveType<TParam>,\n  {\n    length,\n    param,\n  }: {\n    length: number | null\n    param: TParam\n  },\n): PreparedParam {\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiEncodingArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${param.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParam({ param, value: value[i] })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParams.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encodeParams(preparedParams)\n    if (dynamic) {\n      const length = numberToHex(preparedParams.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\nexport type EncodeBytesErrorType =\n  | AbiEncodingBytesSizeMismatchErrorType\n  | ConcatErrorType\n  | PadHexErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction encodeBytes<const TParam extends AbiParameter>(\n  value: Hex,\n  { param }: { param: TParam },\n): PreparedParam {\n  const [, paramSize] = param.type.split('bytes')\n  const bytesSize = size(value)\n  if (!paramSize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = padHex(value_, {\n        dir: 'right',\n        size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n      })\n    return {\n      dynamic: true,\n      encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n    }\n  }\n  if (bytesSize !== parseInt(paramSize))\n    throw new AbiEncodingBytesSizeMismatchError({\n      expectedSize: parseInt(paramSize),\n      value,\n    })\n  return { dynamic: false, encoded: padHex(value, { dir: 'right' }) }\n}\n\nexport type EncodeBoolErrorType =\n  | PadHexErrorType\n  | BoolToHexErrorType\n  | ErrorType\n\nfunction encodeBool(value: boolean): PreparedParam {\n  return { dynamic: false, encoded: padHex(boolToHex(value)) }\n}\n\nexport type EncodeNumberErrorType = NumberToHexErrorType | ErrorType\n\nfunction encodeNumber(\n  value: number,\n  { signed }: { signed: boolean },\n): PreparedParam {\n  return {\n    dynamic: false,\n    encoded: numberToHex(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\nexport type EncodeStringErrorType =\n  | ConcatErrorType\n  | NumberToHexErrorType\n  | PadHexErrorType\n  | SizeErrorType\n  | SliceErrorType\n  | StringToHexErrorType\n  | ErrorType\n\nfunction encodeString(value: string): PreparedParam {\n  const hexValue = stringToHex(value)\n  const partsLength = Math.ceil(size(hexValue) / 32)\n  const parts: Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(\n      padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n        dir: 'right',\n      }),\n    )\n  }\n  return {\n    dynamic: true,\n    encoded: concat([\n      padHex(numberToHex(size(hexValue), { size: 32 })),\n      ...parts,\n    ]),\n  }\n}\n\nexport type EncodeTupleErrorType =\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeTuple<\n  const TParam extends AbiParameter & { components: readonly AbiParameter[] },\n>(\n  value: AbiParameterToPrimitiveType<TParam>,\n  { param }: { param: TParam },\n): PreparedParam {\n  let dynamic = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < param.components.length; i++) {\n    const param_ = param.components[i]\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParam({\n      param: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParams.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encodeParams(preparedParams)\n      : concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\nexport type GetArrayComponentsErrorType = ErrorType\n\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2] ? Number(matches[2]) : null, matches[1]]\n    : undefined\n}\n", "import type { AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport {\n  type GetFunctionSignatureErrorType,\n  getFunctionSignature,\n} from './getFunctionSignature.js'\nimport { type Keccak256ErrorType, keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport type GetFunctionSelectorErrorType =\n  | GetFunctionSignatureErrorType\n  | Keccak256ErrorType\n  | SliceErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport const getFunctionSelector = (fn: string | AbiFunction) =>\n  slice(hash(getFunctionSignature(fn)), 0, 4)\n", "import { type Abi, type AbiParameter, type Address } from 'abitype'\n\nimport { AbiItemAmbiguityError } from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  GetFunctionArgs,\n  InferItemName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { getEventSelector } from '../../utils/hash/getEventSelector.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../../utils/hash/getFunctionSelector.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\n\nexport type GetAbiItemParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TItemName extends string = string,\n> = {\n  abi: TAbi\n  name: InferItemName<TAbi, TItemName> | Hex\n} & Partial<GetFunctionArgs<TAbi, TItemName>>\n\nexport type GetAbiItemReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TItemName extends string = string,\n> = Extract<\n  TAbi[number],\n  {\n    name: TItemName\n  }\n>\n\nexport type GetAbiItemErrorType =\n  | IsArgOfTypeErrorType\n  | IsHexErrorType\n  | GetFunctionSelectorErrorType\n  | ErrorType\n\nexport function getAbiItem<\n  const TAbi extends Abi | readonly unknown[],\n  TItemName extends string,\n>({\n  abi,\n  args = [],\n  name,\n}: GetAbiItemParameters<TAbi, TItemName>): GetAbiItemReturnType<\n  TAbi,\n  TItemName\n> {\n  const isSelector = isHex(name, { strict: false })\n\n  const abiItems = (abi as Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function')\n        return getFunctionSelector(abiItem) === name\n      if (abiItem.type === 'event') return getEventSelector(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0) return undefined as any\n  if (abiItems.length === 1) return abiItems[0] as any\n\n  let matchedAbiItem: AbiItem | undefined = undefined\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0) return abiItem as any\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = (args as readonly unknown[]).every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return isArgOfType(arg, abiParameter as AbiParameter)\n    })\n    if (matched) {\n      // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n      if (\n        matchedAbiItem &&\n        'inputs' in matchedAbiItem &&\n        matchedAbiItem.inputs\n      ) {\n        const ambiguousTypes = getAmbiguousTypes(\n          abiItem.inputs,\n          matchedAbiItem.inputs,\n          args as readonly unknown[],\n        )\n        if (ambiguousTypes)\n          throw new AbiItemAmbiguityError(\n            {\n              abiItem,\n              type: ambiguousTypes[0],\n            },\n            {\n              abiItem: matchedAbiItem,\n              type: ambiguousTypes[1],\n            },\n          )\n      }\n\n      matchedAbiItem = abiItem\n    }\n  }\n\n  if (matchedAbiItem)\n    return matchedAbiItem as GetAbiItemReturnType<TAbi, TItemName>\n  return abiItems[0] as GetAbiItemReturnType<TAbi, TItemName>\n}\n\nexport type IsArgOfTypeErrorType = IsAddressErrorType | ErrorType\n\nexport function isArgOfType(arg: unknown, abiParameter: AbiParameter): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return isAddress(arg as Address)\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n\nexport function getAmbiguousTypes(\n  sourceParameters: readonly AbiParameter[],\n  targetParameters: readonly AbiParameter[],\n  args: readonly unknown[],\n): AbiParameter['type'][] | undefined {\n  for (const parameterIndex in sourceParameters) {\n    const sourceParameter = sourceParameters[parameterIndex]\n    const targetParameter = targetParameters[parameterIndex]\n\n    if (\n      sourceParameter.type === 'tuple' &&\n      targetParameter.type === 'tuple' &&\n      'components' in sourceParameter &&\n      'components' in targetParameter\n    )\n      return getAmbiguousTypes(\n        sourceParameter.components,\n        targetParameter.components,\n        (args as any)[parameterIndex],\n      )\n\n    const types = [sourceParameter.type, targetParameter.type]\n\n    const ambiguous = (() => {\n      if (types.includes('address') && types.includes('bytes20')) return true\n      if (types.includes('address') && types.includes('string'))\n        return isAddress(args[parameterIndex] as Address)\n      if (types.includes('address') && types.includes('bytes'))\n        return isAddress(args[parameterIndex] as Address)\n      return false\n    })()\n\n    if (ambiguous) return types\n  }\n\n  return\n}\n", "import type { Abi, AbiParameter, AbiParameterToPrimitiveType } from 'abitype'\n\nimport {\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n} from '../../errors/abi.js'\nimport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from '../../errors/log.js'\nimport type {\n  AbiItem,\n  EventDefinition,\n  GetEventArgs,\n  InferEventName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport {\n  type GetEventSelectorErrorType,\n  getEventSelector,\n} from '../hash/getEventSelector.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nexport type EncodeEventTopicsParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  _EventName = InferEventName<TAbi, TEventName>,\n> = {\n  eventName?: _EventName\n} & (TEventName extends string\n  ? { abi: TAbi; args?: GetEventArgs<TAbi, TEventName> }\n  : _EventName extends string\n    ? { abi: [TAbi[number]]; args?: GetEventArgs<TAbi, _EventName> }\n    : never)\n\nexport type EncodeEventTopicsErrorType =\n  | AbiEventNotFoundErrorType\n  | EncodeArgErrorType\n  | FormatAbiItemErrorType\n  | GetEventSelectorErrorType\n  | ErrorType\n\nexport function encodeEventTopics<\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n>({ abi, eventName, args }: EncodeEventTopicsParameters<TAbi, TEventName>) {\n  let abiItem = abi[0] as AbiItem\n  if (eventName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: eventName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiEventNotFoundError(eventName, {\n        docsPath: '/docs/contract/encodeEventTopics',\n      })\n  }\n\n  if (abiItem.type !== 'event')\n    throw new AbiEventNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeEventTopics',\n    })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getEventSelector(definition as EventDefinition)\n\n  let topics: Hex[] = []\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(\n      (param) => 'indexed' in param && param.indexed,\n    )\n    const args_ = Array.isArray(args)\n      ? args\n      : Object.values(args).length > 0\n        ? indexedInputs?.map((x: any) => (args as any)[x.name]) ?? []\n        : []\n\n    if (args_.length > 0) {\n      topics =\n        indexedInputs?.map((param, i) =>\n          Array.isArray(args_[i])\n            ? args_[i].map((_: any, j: number) =>\n                encodeArg({ param, value: args_[i][j] }),\n              )\n            : args_[i]\n              ? encodeArg({ param, value: args_[i] })\n              : null,\n        ) ?? []\n    }\n  }\n  return [signature, ...topics]\n}\n\nexport type EncodeArgErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | EncodeAbiParametersErrorType\n  | FilterTypeNotSupportedErrorType\n  | ErrorType\n\nfunction encodeArg({\n  param,\n  value,\n}: { param: AbiParameter; value: AbiParameterToPrimitiveType<AbiParameter> }) {\n  if (param.type === 'string' || param.type === 'bytes')\n    return keccak256(toBytes(value as string))\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n    throw new FilterTypeNotSupportedError(param.type)\n  return encodeAbiParameters([param], [value])\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { OnResponseFn } from '../../clients/transports/fallback.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { PublicRpcSchema } from '../../types/eip1193.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Filter } from '../../types/utils.js'\n\ntype CreateFilterRequestScopeParameters = {\n  method:\n    | 'eth_newFilter'\n    | 'eth_newPendingTransactionFilter'\n    | 'eth_newBlockFilter'\n}\n\ntype FilterRpcSchema = Filter<\n  PublicRpcSchema,\n  { Method: 'eth_getFilterLogs' | 'eth_getFilterChanges' }\n>\n\ntype CreateFilterRequestScopeReturnType = (\n  id: Hex,\n) => EIP1193RequestFn<FilterRpcSchema>\n\n/**\n * Scopes `request` to the filter ID. If the client is a fallback, it will\n * listen for responses and scope the child transport `request` function\n * to the successful filter ID.\n */\nexport function createFilterRequestScope<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { method }: CreateFilterRequestScopeParameters,\n): CreateFilterRequestScopeReturnType {\n  const requestMap: Record<Hex, EIP1193RequestFn> = {}\n\n  if (client.transport.type === 'fallback')\n    client.transport.onResponse?.(\n      ({\n        method: method_,\n        response: id,\n        status,\n        transport,\n      }: Parameters<OnResponseFn>[0]) => {\n        if (status === 'success' && method === method_)\n          requestMap[id as Hex] = transport.request\n      },\n    )\n\n  return ((id) =>\n    requestMap[id] || client.request) as CreateFilterRequestScopeReturnType\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  InferEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateContractEventFilterParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = undefined,\n  TArgs extends\n    | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n    | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  address?: Address | Address[]\n  abi: TAbi\n  eventName?: InferEventName<TAbi, TEventName>\n  fromBlock?: TFromBlock | BlockNumber | BlockTag\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments in the event ABI item.\n   * @default false\n   */\n  strict?: TStrict\n  toBlock?: TToBlock | BlockNumber | BlockTag\n} & (undefined extends TEventName\n  ? {\n      args?: never\n    }\n  : MaybeExtractEventArgsFromAbi<\n        TAbi,\n        TEventName\n      > extends infer TEventFilterArgs\n    ? {\n        args?:\n          | TEventFilterArgs\n          | (TArgs extends TEventFilterArgs ? TArgs : never)\n      }\n    : {\n        args?: never\n      })\n\nexport type CreateContractEventFilterReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = undefined,\n  TArgs extends\n    | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n    | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = Filter<'event', TAbi, TEventName, TArgs, TStrict, TFromBlock, TToBlock>\n\nexport type CreateContractEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n *\n * - Docs: https://viem.sh/docs/contract/createContractEventFilter.html\n *\n * @param client - Client to use\n * @param parameters - {@link CreateContractEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateContractEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n * })\n */\nexport async function createContractEventFilter<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined,\n  TArgs extends MaybeExtractEventArgsFromAbi<TAbi, TEventName> | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    abi,\n    args,\n    eventName,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateContractEventFilterParameters<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >,\n): Promise<\n  CreateContractEventFilterReturnType<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  const topics = eventName\n    ? encodeEventTopics({\n        abi,\n        args,\n        eventName,\n      } as unknown as EncodeEventTopicsParameters)\n    : undefined\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        topics,\n      },\n    ],\n  })\n\n  return {\n    abi,\n    args,\n    eventName,\n    id,\n    request: getRequest(id),\n    strict,\n    type: 'event',\n  } as unknown as CreateContractEventFilterReturnType<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../types.js'\n\nexport type ParseAccountErrorType = ErrorType\n\nexport function parseAccount(account: Address | Account): Account {\n  if (typeof account === 'string') return { address: account, type: 'json-rpc' }\n  return account\n}\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  GetFunctionArgs,\n  InferFunctionName,\n} from '../../types/contract.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../hash/getFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './getAbiItem.js'\n\nexport type EncodeFunctionDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n} & (TFunctionName extends string\n  ? { abi: TAbi } & GetFunctionArgs<TAbi, TFunctionName>\n  : _FunctionName extends string\n    ? { abi: [TAbi[number]] } & GetFunctionArgs<TAbi, _FunctionName>\n    : never)\n\nexport type EncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | GetFunctionSelectorErrorType\n  | ErrorType\n\nexport function encodeFunctionData<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  args,\n  functionName,\n}: EncodeFunctionDataParameters<TAbi, TFunctionName>) {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiFunctionNotFoundError(functionName, {\n        docsPath: '/docs/contract/encodeFunctionData',\n      })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeFunctionData',\n    })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getFunctionSelector(definition)\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, (args ?? []) as readonly unknown[])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n", "import type { AbiError } from 'abitype'\n\n// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.',\n} as const\n\nexport const solidityError: AbiError = {\n  inputs: [\n    {\n      name: 'message',\n      type: 'string',\n    },\n  ],\n  name: 'Error',\n  type: 'error',\n}\nexport const solidityPanic: AbiError = {\n  inputs: [\n    {\n      name: 'reason',\n      type: 'uint256',\n    },\n  ],\n  name: 'Panic',\n  type: 'error',\n}\n", "import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(address_: Address, chainId?: number): Address {\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  return `0x${address.join('')}`\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(address: string, chainId?: number): Address {\n  if (!isAddress(address)) throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n", "import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  InvalidAbiDecodingTypeError,\n  type InvalidAbiDecodingTypeErrorType,\n} from '../../errors/abi.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../address/getAddress.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\nimport {\n  type HexToBigIntErrorType,\n  type HexToBoolErrorType,\n  type HexToNumberErrorType,\n  type HexToStringErrorType,\n  hexToBigInt,\n  hexToBool,\n  hexToNumber,\n  hexToString,\n} from '../encoding/fromHex.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type GetArrayComponentsErrorType,\n  getArrayComponents,\n} from './encodeAbiParameters.js'\n\nexport type DecodeAbiParametersReturnType<\n  TParams extends\n    | readonly AbiParameter[]\n    | readonly unknown[] = readonly AbiParameter[],\n> = AbiParametersToPrimitiveTypes<\n  TParams extends readonly AbiParameter[] ? TParams : AbiParameter[]\n>\n\nexport type DecodeAbiParametersErrorType =\n  | AbiDecodingDataSizeTooSmallErrorType\n  | AbiDecodingZeroDataErrorType\n  | DecodeParamsErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function decodeAbiParameters<\n  const TParams extends readonly AbiParameter[] | readonly unknown[],\n>(params: TParams, data: Hex): DecodeAbiParametersReturnType<TParams> {\n  if (data === '0x' && (params as unknown[]).length > 0)\n    throw new AbiDecodingZeroDataError()\n  if (size(data) && size(data) < 32)\n    throw new AbiDecodingDataSizeTooSmallError({\n      data,\n      params: params as readonly AbiParameter[],\n      size: size(data),\n    })\n  return decodeParams({\n    data,\n    params: params as readonly AbiParameter[],\n  }) as unknown as DecodeAbiParametersReturnType<TParams>\n}\n\n////////////////////////////////////////////////////////////////////\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\n\ntype DecodeParamsErrorType = DecodeParamErrorType | SizeErrorType | ErrorType\n\nfunction decodeParams<const TParams extends readonly AbiParameter[]>({\n  data,\n  params,\n}: { data: Hex; params: TParams }) {\n  const decodedValues: unknown[] = []\n  let position = 0\n\n  for (let i = 0; i < params.length; i++) {\n    if (position >= size(data))\n      throw new AbiDecodingDataSizeTooSmallError({\n        data,\n        params,\n        size: size(data),\n      })\n\n    const param = params[i]\n    const { consumed, value } = decodeParam({ data, param, position })\n    decodedValues.push(value)\n    // Step across the data by the amount of data consumed by this parameter.\n    position += consumed\n  }\n\n  return decodedValues as unknown as AbiParametersToPrimitiveTypes<TParams>\n}\n\ntype DecodeParamErrorType =\n  | DecodeArrayErrorType\n  | DecodeTupleErrorType\n  | DecodeStringErrorType\n  | DecodeBytesErrorType\n  | DecodeNumberErrorType\n  | DecodeAddressErrorType\n  | DecodeBoolErrorType\n  | InvalidAbiDecodingTypeErrorType\n  | ErrorType\n\nfunction decodeParam({\n  data,\n  param,\n  position,\n}: { data: Hex; param: AbiParameter; position: number }): {\n  consumed: number\n  value: any\n} {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return decodeArray(data, {\n      length,\n      param: { ...param, type: type } as AbiParameter,\n      position,\n    })\n  }\n  if (param.type === 'tuple') {\n    return decodeTuple(data, { param: param as TupleAbiParameter, position })\n  }\n  if (param.type === 'string') {\n    return decodeString(data, { position })\n  }\n  if (param.type.startsWith('bytes')) {\n    return decodeBytes(data, { param, position })\n  }\n\n  const value = slice(data, position, position + 32, { strict: true }) as Hex\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return decodeNumber(value, { param })\n  }\n  if (param.type === 'address') {\n    return decodeAddress(value)\n  }\n  if (param.type === 'bool') {\n    return decodeBool(value)\n  }\n  throw new InvalidAbiDecodingTypeError(param.type, {\n    docsPath: '/docs/contract/decodeAbiParameters',\n  })\n}\n\n////////////////////////////////////////////////////////////////////\n\ntype DecodeAddressErrorType =\n  | ChecksumAddressErrorType\n  | SliceErrorType\n  | ErrorType\n\nfunction decodeAddress(value: Hex) {\n  return { consumed: 32, value: checksumAddress(slice(value, -20)) }\n}\n\ntype DecodeArrayErrorType = HexToNumberErrorType | SliceErrorType | ErrorType\n\nfunction decodeArray<const TParam extends AbiParameter>(\n  data: Hex,\n  {\n    param,\n    length,\n    position,\n  }: {\n    param: TParam\n    length: number | null\n    position: number\n  },\n) {\n  // If the length of the array is not known in advance (dynamic array),\n  // we will need to decode the offset of the array data.\n  if (!length) {\n    // Get the offset of the array data.\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    // Get the length of the array from the offset.\n    const length = hexToNumber(\n      slice(data, offset, offset + 32, { strict: true }),\n    )\n\n    let consumed = 0\n    const value: AbiParameterToPrimitiveType<TParam>[] = []\n    for (let i = 0; i < length; ++i) {\n      const decodedChild = decodeParam({\n        data: slice(data, offset + 32),\n        param,\n        position: consumed,\n      })\n      consumed += decodedChild.consumed\n      value.push(decodedChild.value)\n    }\n    return { value, consumed: 32 }\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of an element deeply nested in the array is not known,\n  // we need to decode the offset of the array data.\n  if (hasDynamicChild(param)) {\n    // Get the child type of the array.\n    const arrayComponents = getArrayComponents(param.type)\n    // If the child type is not known, the array is dynamic.\n    const dynamicChild = !arrayComponents?.[0]\n\n    let consumed = 0\n    const value: AbiParameterToPrimitiveType<TParam>[] = []\n    for (let i = 0; i < length; ++i) {\n      const offset = hexToNumber(\n        slice(data, position, position + 32, { strict: true }),\n      )\n      const decodedChild = decodeParam({\n        data: slice(data, offset),\n        param,\n        position: dynamicChild ? consumed : i * 32,\n      })\n      consumed += decodedChild.consumed\n      value.push(decodedChild.value)\n    }\n    return { value, consumed: 32 }\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of each element in the array is known,\n  // the array data is encoded contiguously after the array.\n  let consumed = 0\n  const value: AbiParameterToPrimitiveType<TParam>[] = []\n  for (let i = 0; i < length; ++i) {\n    const decodedChild = decodeParam({\n      data,\n      param,\n      position: position + consumed,\n    })\n    consumed += decodedChild.consumed\n    value.push(decodedChild.value)\n  }\n  return { value, consumed }\n}\n\ntype DecodeBoolErrorType = HexToBoolErrorType | ErrorType\n\nfunction decodeBool(value: Hex) {\n  return { consumed: 32, value: hexToBool(value) }\n}\n\ntype DecodeBytesErrorType = HexToNumberErrorType | SliceErrorType | ErrorType\n\nfunction decodeBytes<const TParam extends AbiParameter>(\n  data: Hex,\n  { param, position }: { param: TParam; position: number },\n) {\n  const [_, size] = param.type.split('bytes')\n  if (!size) {\n    // If we don't have a size, we're dealing with a dynamic-size array\n    // so we need to read the offset of the data part first.\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    const length = hexToNumber(\n      slice(data, offset, offset + 32, { strict: true }),\n    )\n    // If there is no length, we have zero data.\n    if (length === 0) return { consumed: 32, value: '0x' }\n    const value = slice(data, offset + 32, offset + 32 + length, {\n      strict: true,\n    })\n    return { consumed: 32, value }\n  }\n\n  const value = slice(data, position, position + parseInt(size), {\n    strict: true,\n  })\n  return { consumed: 32, value }\n}\n\ntype DecodeNumberErrorType =\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\nfunction decodeNumber<const TParam extends AbiParameter>(\n  value: Hex,\n  { param }: { param: TParam },\n) {\n  const signed = param.type.startsWith('int')\n  const size = parseInt(param.type.split('int')[1] || '256')\n  return {\n    consumed: 32,\n    value:\n      size > 48\n        ? hexToBigInt(value, { signed })\n        : hexToNumber(value, { signed }),\n  }\n}\n\ntype DecodeStringErrorType =\n  | HexToNumberErrorType\n  | HexToStringErrorType\n  | SliceErrorType\n  | TrimErrorType\n  | ErrorType\n\nfunction decodeString(data: Hex, { position }: { position: number }) {\n  const offset = hexToNumber(\n    slice(data, position, position + 32, { strict: true }),\n  )\n  const length = hexToNumber(slice(data, offset, offset + 32, { strict: true }))\n  // If there is no length, we have zero data (empty string).\n  if (length === 0) return { consumed: 32, value: '' }\n  const value = hexToString(\n    trim(slice(data, offset + 32, offset + 32 + length, { strict: true })),\n  )\n  return { consumed: 32, value }\n}\n\ntype DecodeTupleErrorType =\n  | HasDynamicChildErrorType\n  | HexToNumberErrorType\n  | SliceErrorType\n  | ErrorType\n\nfunction decodeTuple<\n  const TParam extends AbiParameter & { components: readonly AbiParameter[] },\n>(data: Hex, { param, position }: { param: TParam; position: number }) {\n  // Tuples can have unnamed components (i.e. they are arrays), so we must\n  // determine whether the tuple is named or unnamed. In the case of a named\n  // tuple, the value will be an object where each property is the name of the\n  // component. In the case of an unnamed tuple, the value will be an array.\n  const hasUnnamedChild =\n    param.components.length === 0 || param.components.some(({ name }) => !name)\n\n  // Initialize the value to an object or an array, depending on whether the\n  // tuple is named or unnamed.\n  const value: any = hasUnnamedChild ? [] : {}\n  let consumed = 0\n\n  // If the tuple has a dynamic child, we must first decode the offset to the\n  // tuple data.\n  if (hasDynamicChild(param)) {\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    // Decode each component of the tuple, starting at the offset.\n    for (let i = 0; i < param.components.length; ++i) {\n      const component = param.components[i]\n      const decodedChild = decodeParam({\n        data: slice(data, offset),\n        param: component,\n        position: consumed,\n      })\n      consumed += decodedChild.consumed\n      value[hasUnnamedChild ? i : component?.name!] = decodedChild.value\n    }\n    return { consumed: 32, value }\n  }\n\n  // If the tuple has static children, we can just decode each component\n  // in sequence.\n  for (let i = 0; i < param.components.length; ++i) {\n    const component = param.components[i]\n    const decodedChild = decodeParam({\n      data,\n      param: component,\n      position: position + consumed,\n    })\n    consumed += decodedChild.consumed\n    value[hasUnnamedChild ? i : component?.name!] = decodedChild.value\n  }\n  return { consumed, value }\n}\n\ntype HasDynamicChildErrorType = GetArrayComponentsErrorType | ErrorType\n\nfunction hasDynamicChild(param: AbiParameter) {\n  const { type } = param\n  if (type === 'string') return true\n  if (type === 'bytes') return true\n  if (type.endsWith('[]')) return true\n\n  if (type === 'tuple') return (param as any).components?.some(hasDynamicChild)\n\n  const arrayComponents = getArrayComponents(param.type)\n  if (\n    arrayComponents &&\n    hasDynamicChild({ ...param, type: arrayComponents[1] } as AbiParameter)\n  )\n    return true\n\n  return false\n}\n", "import type { Abi, ExtractAbiError, ExtractAbiErrorNames } from 'abitype'\n\nimport { solidityError, solidityPanic } from '../../constants/solidity.js'\nimport {\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { AbiItem, GetErrorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { slice } from '../data/slice.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../hash/getFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeErrorResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = { abi?: TAbi; data: Hex }\n\nexport type DecodeErrorResultReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  _ErrorNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiErrorNames<TAbi>\n    : string,\n> = {\n  [TName in _ErrorNames]: {\n    abiItem: TAbi extends Abi ? ExtractAbiError<TAbi, TName> : AbiItem\n    args: GetErrorArgs<TAbi, TName>['args']\n    errorName: TName\n  }\n}[_ErrorNames]\n\nexport type DecodeErrorResultErrorType =\n  | AbiDecodingZeroDataErrorType\n  | AbiErrorSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetFunctionSelectorErrorType\n  | ErrorType\n\nexport function decodeErrorResult<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  data,\n}: DecodeErrorResultParameters<TAbi>): DecodeErrorResultReturnType<TAbi> {\n  const signature = slice(data, 0, 4)\n  if (signature === '0x') throw new AbiDecodingZeroDataError()\n\n  const abi_ = [...((abi as Abi) || []), solidityError, solidityPanic]\n  const abiItem = abi_.find(\n    (x) =>\n      x.type === 'error' && signature === getFunctionSelector(formatAbiItem(x)),\n  )\n  if (!abiItem)\n    throw new AbiErrorSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeErrorResult',\n    })\n  return {\n    abiItem,\n    args: ('inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n      ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n      : undefined) as readonly unknown[] | undefined,\n    errorName: (abiItem as { name: string }).name,\n  } as DecodeErrorResultReturnType<TAbi>\n}\n", "import type { ErrorType } from '../errors/utils.js'\n\nexport type StringifyErrorType = ErrorType\n\nexport const stringify: typeof JSON.stringify = (value, replacer, space) =>\n  JSON.stringify(\n    value,\n    (key, value_) => {\n      const value = typeof value_ === 'bigint' ? value_.toString() : value_\n      return typeof replacer === 'function' ? replacer(key, value) : value\n    },\n    space,\n  )\n", "import type { AbiParameter } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\nimport { stringify } from '../stringify.js'\n\nexport type FormatAbiItemWithArgsErrorType = ErrorType\n\nexport function formatAbiItemWithArgs({\n  abiItem,\n  args,\n  includeFunctionName = true,\n  includeName = false,\n}: {\n  abiItem: AbiItem\n  args: readonly unknown[]\n  includeFunctionName?: boolean\n  includeName?: boolean\n}) {\n  if (!('name' in abiItem)) return\n  if (!('inputs' in abiItem)) return\n  if (!abiItem.inputs) return\n  return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n    .map(\n      (input: AbiParameter, i: number) =>\n        `${includeName && input.name ? `${input.name}: ` : ''}${\n          typeof args[i] === 'object' ? stringify(args[i]) : args[i]\n        }`,\n    )\n    .join(', ')})`\n}\n", "export const etherUnits = {\n  gwei: 9,\n  wei: 18,\n}\nexport const gweiUnits = {\n  ether: -9,\n  wei: 9,\n}\nexport const weiUnits = {\n  ether: -18,\n  gwei: -9,\n}\n", "import type { ErrorType } from '../../errors/utils.js'\n\nexport type FormatUnitsErrorType = ErrorType\n\n/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits.html\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value: bigint, decimals: number) {\n  let display = value.toString()\n\n  const negative = display.startsWith('-')\n  if (negative) display = display.slice(1)\n\n  display = display.padStart(decimals, '0')\n\n  let [integer, fraction] = [\n    display.slice(0, display.length - decimals),\n    display.slice(display.length - decimals),\n  ]\n  fraction = fraction.replace(/(0+)$/, '')\n  return `${negative ? '-' : ''}${integer || '0'}${\n    fraction ? `.${fraction}` : ''\n  }`\n}\n", "import { etherUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatEtherErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther.html\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei: bigint, unit: 'wei' | 'gwei' = 'wei') {\n  return formatUnits(wei, etherUnits[unit])\n}\n", "import { gweiUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatGweiErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei.html\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n", "import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport type FeeConflictErrorType = FeeConflictError & {\n  name: 'FeeConflictError'\n}\nexport class FeeConflictError extends BaseError {\n  override name = 'FeeConflictError'\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type InvalidLegacyVErrorType = InvalidLegacyVError & {\n  name: 'InvalidLegacyVError'\n}\nexport class InvalidLegacyVError extends BaseError {\n  override name = 'InvalidLegacyVError'\n\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`)\n  }\n}\n\nexport type InvalidSerializableTransactionErrorType =\n  InvalidSerializableTransactionError & {\n    name: 'InvalidSerializableTransactionError'\n  }\nexport class InvalidSerializableTransactionError extends BaseError {\n  override name = 'InvalidSerializableTransactionError'\n\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n    })\n  }\n}\n\nexport type InvalidSerializedTransactionTypeErrorType =\n  InvalidSerializedTransactionTypeError & {\n    name: 'InvalidSerializedTransactionTypeError'\n  }\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  override name = 'InvalidSerializedTransactionType'\n\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`)\n\n    this.serializedType = serializedType\n  }\n}\n\nexport type InvalidSerializedTransactionErrorType =\n  InvalidSerializedTransactionError & {\n    name: 'InvalidSerializedTransactionError'\n  }\nexport class InvalidSerializedTransactionError extends BaseError {\n  override name = 'InvalidSerializedTransactionError'\n\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport type InvalidStorageKeySizeErrorType = InvalidStorageKeySizeError & {\n  name: 'InvalidStorageKeySizeError'\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n  override name = 'InvalidStorageKeySizeError'\n\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n    )\n  }\n}\n\nexport type TransactionExecutionErrorType = TransactionExecutionError & {\n  name: 'TransactionExecutionError'\n}\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'TransactionExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account\n      chain?: Chain\n      docsPath?: string\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n\nexport type TransactionNotFoundErrorType = TransactionNotFoundError & {\n  name: 'TransactionNotFoundError'\n}\nexport class TransactionNotFoundError extends BaseError {\n  override name = 'TransactionNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash\n    blockNumber?: bigint\n    blockTag?: BlockTag\n    hash?: Hash\n    index?: number\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n\nexport type TransactionReceiptNotFoundErrorType =\n  TransactionReceiptNotFoundError & {\n    name: 'TransactionReceiptNotFoundError'\n  }\nexport class TransactionReceiptNotFoundError extends BaseError {\n  override name = 'TransactionReceiptNotFoundError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n    )\n  }\n}\n\nexport type WaitForTransactionReceiptTimeoutErrorType =\n  WaitForTransactionReceiptTimeoutError & {\n    name: 'WaitForTransactionReceiptTimeoutError'\n  }\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  override name = 'WaitForTransactionReceiptTimeoutError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n    )\n  }\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport { parseAccount } from '../accounts/utils/parseAccount.js'\nimport type { CallParameters } from '../actions/public/call.js'\nimport { panicReasons } from '../constants/solidity.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hex } from '../types/misc.js'\nimport {\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from '../utils/abi/decodeErrorResult.js'\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js'\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js'\nimport { getAbiItem } from '../utils/abi/getAbiItem.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { AbiErrorSignatureNotFoundError } from './abi.js'\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\nimport { getContractAddress } from './utils.js'\n\nexport type CallExecutionErrorType = CallExecutionError & {\n  name: 'CallExecutionError'\n}\nexport class CallExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'CallExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account: account_,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: CallParameters & { chain?: Chain; docsPath?: string },\n  ) {\n    const account = account_ ? parseAccount(account_) : undefined\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Raw Call Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n\nexport type ContractFunctionExecutionErrorType =\n  ContractFunctionExecutionError & {\n    name: 'ContractFunctionExecutionError'\n  }\nexport class ContractFunctionExecutionError extends BaseError {\n  abi: Abi\n  args?: unknown[]\n  override cause: BaseError\n  contractAddress?: Address\n  formattedArgs?: string\n  functionName: string\n  sender?: Address\n\n  override name = 'ContractFunctionExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      abi,\n      args,\n      contractAddress,\n      docsPath,\n      functionName,\n      sender,\n    }: {\n      abi: Abi\n      args?: any\n      contractAddress?: Address\n      docsPath?: string\n      functionName: string\n      sender?: Address\n    },\n  ) {\n    const abiItem = getAbiItem({ abi, args, name: functionName })\n    const formattedArgs = abiItem\n      ? formatAbiItemWithArgs({\n          abiItem,\n          args,\n          includeFunctionName: false,\n          includeName: false,\n        })\n      : undefined\n    const functionWithParams = abiItem\n      ? formatAbiItem(abiItem, { includeName: true })\n      : undefined\n\n    const prettyArgs = prettyPrint({\n      address: contractAddress && getContractAddress(contractAddress),\n      function: functionWithParams,\n      args:\n        formattedArgs &&\n        formattedArgs !== '()' &&\n        `${[...Array(functionName?.length ?? 0).keys()]\n          .map(() => ' ')\n          .join('')}${formattedArgs}`,\n      sender,\n    })\n\n    super(\n      cause.shortMessage ||\n        `An unknown error occurred while executing the contract function \"${functionName}\".`,\n      {\n        cause,\n        docsPath,\n        metaMessages: [\n          ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n          'Contract Call:',\n          prettyArgs,\n        ].filter(Boolean) as string[],\n      },\n    )\n    this.abi = abi\n    this.args = args\n    this.cause = cause\n    this.contractAddress = contractAddress\n    this.functionName = functionName\n    this.sender = sender\n  }\n}\n\nexport type ContractFunctionRevertedErrorType =\n  ContractFunctionRevertedError & {\n    name: 'ContractFunctionRevertedError'\n  }\nexport class ContractFunctionRevertedError extends BaseError {\n  override name = 'ContractFunctionRevertedError'\n\n  data?: DecodeErrorResultReturnType\n  reason?: string\n  signature?: Hex\n\n  constructor({\n    abi,\n    data,\n    functionName,\n    message,\n  }: { abi: Abi; data?: Hex; functionName: string; message?: string }) {\n    let cause: Error | undefined\n    let decodedData: DecodeErrorResultReturnType | undefined = undefined\n    let metaMessages\n    let reason\n    if (data && data !== '0x') {\n      try {\n        decodedData = decodeErrorResult({ abi, data })\n        const { abiItem, errorName, args: errorArgs } = decodedData\n        if (errorName === 'Error') {\n          reason = (errorArgs as [string])[0]\n        } else if (errorName === 'Panic') {\n          const [firstArg] = errorArgs as [number]\n          reason = panicReasons[firstArg as keyof typeof panicReasons]\n        } else {\n          const errorWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined\n          const formattedArgs =\n            abiItem && errorArgs\n              ? formatAbiItemWithArgs({\n                  abiItem,\n                  args: errorArgs,\n                  includeFunctionName: false,\n                  includeName: false,\n                })\n              : undefined\n\n          metaMessages = [\n            errorWithParams ? `Error: ${errorWithParams}` : '',\n            formattedArgs && formattedArgs !== '()'\n              ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                  .map(() => ' ')\n                  .join('')}${formattedArgs}`\n              : '',\n          ]\n        }\n      } catch (err) {\n        cause = err as Error\n      }\n    } else if (message) reason = message\n\n    let signature: Hex | undefined\n    if (cause instanceof AbiErrorSignatureNotFoundError) {\n      signature = cause.signature\n      metaMessages = [\n        `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ]\n    }\n\n    super(\n      (reason && reason !== 'execution reverted') || signature\n        ? [\n            `The contract function \"${functionName}\" reverted with the following ${\n              signature ? 'signature' : 'reason'\n            }:`,\n            reason || signature,\n          ].join('\\n')\n        : `The contract function \"${functionName}\" reverted.`,\n      {\n        cause,\n        metaMessages,\n      },\n    )\n\n    this.data = decodedData\n    this.reason = reason\n    this.signature = signature\n  }\n}\n\nexport type ContractFunctionZeroDataErrorType =\n  ContractFunctionZeroDataError & {\n    name: 'ContractFunctionZeroDataError'\n  }\nexport class ContractFunctionZeroDataError extends BaseError {\n  override name = 'ContractFunctionZeroDataError'\n  constructor({ functionName }: { functionName: string }) {\n    super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n      metaMessages: [\n        'This could be due to any of the following:',\n        `  - The contract does not have the function \"${functionName}\",`,\n        '  - The parameters passed to the contract function may be invalid, or',\n        '  - The address is not a contract.',\n      ],\n    })\n  }\n}\n\nexport type RawContractErrorType = RawContractError & {\n  name: 'RawContractError'\n}\nexport class RawContractError extends BaseError {\n  code = 3\n  override name = 'RawContractError'\n\n  data?: Hex | { data?: Hex }\n\n  constructor({\n    data,\n    message,\n  }: { data?: Hex | { data?: Hex }; message?: string }) {\n    super(message || '')\n    this.data = data\n  }\n}\n", "import { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type HttpRequestErrorType = HttpRequestError & {\n  name: 'HttpRequestError'\n}\nexport class HttpRequestError extends BaseError {\n  override name = 'HttpRequestError'\n\n  body?: { [x: string]: unknown } | { [y: string]: unknown }[]\n  headers?: Headers\n  status?: number\n  url: string\n\n  constructor({\n    body,\n    details,\n    headers,\n    status,\n    url,\n  }: {\n    body?: { [x: string]: unknown } | { [y: string]: unknown }[]\n    details?: string\n    headers?: Headers\n    status?: number\n    url: string\n  }) {\n    super('HTTP request failed.', {\n      details,\n      metaMessages: [\n        status && `Status: ${status}`,\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n    })\n    this.body = body\n    this.headers = headers\n    this.status = status\n    this.url = url\n  }\n}\n\nexport type WebSocketRequestErrorType = WebSocketRequestError & {\n  name: 'WebSocketRequestError'\n}\nexport class WebSocketRequestError extends BaseError {\n  override name = 'WebSocketRequestError'\n\n  constructor({\n    body,\n    details,\n    url,\n  }: {\n    body: { [key: string]: unknown }\n    details: string\n    url: string\n  }) {\n    super('WebSocket request failed.', {\n      details,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n  }\n}\n\nexport type RpcRequestErrorType = RpcRequestError & {\n  name: 'RpcRequestError'\n}\nexport class RpcRequestError extends BaseError {\n  override name = 'RpcRequestError'\n\n  code: number\n\n  constructor({\n    body,\n    error,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    error: { code: number; message: string }\n    url: string\n  }) {\n    super('RPC Request failed.', {\n      cause: error as any,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n    this.code = error.code\n  }\n}\n\nexport type TimeoutErrorType = TimeoutError & {\n  name: 'TimeoutError'\n}\nexport class TimeoutError extends BaseError {\n  override name = 'TimeoutError'\n\n  constructor({\n    body,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    url: string\n  }) {\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n  }\n}\n", "import type { Prettify } from '../types/utils.js'\nimport { BaseError } from './base.js'\nimport { RpcRequestError } from './request.js'\n\nconst unknownErrorCode = -1\n\nexport type RpcErrorCode =\n  | -1\n  | -32700 // Parse error\n  | -32600 // Invalid request\n  | -32601 // Method not found\n  | -32602 // Invalid params\n  | -32603 // Internal error\n  | -32000 // Invalid input\n  | -32001 // Resource not found\n  | -32002 // Resource unavailable\n  | -32003 // Transaction rejected\n  | -32004 // Method not supported\n  | -32005 // Limit exceeded\n  | -32006 // JSON-RPC version not supported\n  | -32042 // Method not found\n\ntype RpcErrorOptions<TCode extends number = RpcErrorCode> = {\n  code?: TCode | (number & {})\n  docsPath?: string\n  metaMessages?: string[]\n  shortMessage: string\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1474\n */\nexport type RpcErrorType = RpcError & { name: 'RpcError' }\nexport class RpcError<TCode extends number = RpcErrorCode> extends BaseError {\n  override name = 'RpcError'\n\n  code: TCode | (number & {})\n\n  constructor(\n    cause: Error,\n    { code, docsPath, metaMessages, shortMessage }: RpcErrorOptions<TCode>,\n  ) {\n    super(shortMessage, {\n      cause,\n      docsPath,\n      metaMessages:\n        metaMessages || (cause as { metaMessages?: string[] })?.metaMessages,\n    })\n    this.name = cause.name\n    this.code = (\n      cause instanceof RpcRequestError ? cause.code : code ?? unknownErrorCode\n    ) as TCode\n  }\n}\n\nexport type ProviderRpcErrorCode =\n  | 4001 // User Rejected Request\n  | 4100 // Unauthorized\n  | 4200 // Unsupported Method\n  | 4900 // Disconnected\n  | 4901 // Chain Disconnected\n  | 4902 // Chain Not Recognized\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1193\n */\nexport type ProviderRpcErrorType = ProviderRpcError & {\n  name: 'ProviderRpcError'\n}\nexport class ProviderRpcError<\n  T = undefined,\n> extends RpcError<ProviderRpcErrorCode> {\n  override name = 'ProviderRpcError'\n\n  data?: T\n\n  constructor(\n    cause: Error,\n    options: Prettify<\n      RpcErrorOptions<ProviderRpcErrorCode> & {\n        data?: T\n      }\n    >,\n  ) {\n    super(cause, options)\n\n    this.data = options.data\n  }\n}\n\n/**\n * Subclass for a \"Parse error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ParseRpcErrorType = ParseRpcError & {\n  code: -32700\n  name: 'ParseRpcError'\n}\nexport class ParseRpcError extends RpcError {\n  override name = 'ParseRpcError'\n  static code = -32700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ParseRpcError.code,\n      shortMessage:\n        'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Invalid request\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidRequestRpcErrorType = InvalidRequestRpcError & {\n  code: -32600\n  name: 'InvalidRequestRpcError'\n}\nexport class InvalidRequestRpcError extends RpcError {\n  override name = 'InvalidRequestRpcError'\n  static code = -32600 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidRequestRpcError.code,\n      shortMessage: 'JSON is not a valid request object.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotFoundRpcErrorType = MethodNotFoundRpcError & {\n  code: -32601\n  name: 'MethodNotFoundRpcError'\n}\nexport class MethodNotFoundRpcError extends RpcError {\n  override name = 'MethodNotFoundRpcError'\n  static code = -32601 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: MethodNotFoundRpcError.code,\n      shortMessage: 'The method does not exist / is not available.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid params\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidParamsRpcErrorType = InvalidParamsRpcError & {\n  code: -32602\n  name: 'InvalidParamsRpcError'\n}\nexport class InvalidParamsRpcError extends RpcError {\n  override name = 'InvalidParamsRpcError'\n  static code = -32602 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidParamsRpcError.code,\n      shortMessage: [\n        'Invalid parameters were provided to the RPC method.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for an \"Internal error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InternalRpcErrorType = InternalRpcError & {\n  code: -32603\n  name: 'InternalRpcError'\n}\nexport class InternalRpcError extends RpcError {\n  override name = 'InternalRpcError'\n  static code = -32603 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InternalRpcError.code,\n      shortMessage: 'An internal error was received.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid input\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidInputRpcErrorType = InvalidInputRpcError & {\n  code: -32000\n  name: 'InvalidInputRpcError'\n}\nexport class InvalidInputRpcError extends RpcError {\n  override name = 'InvalidInputRpcError'\n  static code = -32000 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidInputRpcError.code,\n      shortMessage: [\n        'Missing or invalid parameters.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceNotFoundRpcErrorType = ResourceNotFoundRpcError & {\n  code: -32001\n  name: 'ResourceNotFoundRpcError'\n}\nexport class ResourceNotFoundRpcError extends RpcError {\n  override name = 'ResourceNotFoundRpcError'\n  static code = -32001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceNotFoundRpcError.code,\n      shortMessage: 'Requested resource not found.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource unavailable\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceUnavailableRpcErrorType = ResourceUnavailableRpcError & {\n  code: -32002\n  name: 'ResourceUnavailableRpcError'\n}\nexport class ResourceUnavailableRpcError extends RpcError {\n  override name = 'ResourceUnavailableRpcError'\n  static code = -32002 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceUnavailableRpcError.code,\n      shortMessage: 'Requested resource not available.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Transaction rejected\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type TransactionRejectedRpcErrorType = TransactionRejectedRpcError & {\n  code: -32003\n  name: 'TransactionRejectedRpcError'\n}\nexport class TransactionRejectedRpcError extends RpcError {\n  override name = 'TransactionRejectedRpcError'\n  static code = -32003 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: TransactionRejectedRpcError.code,\n      shortMessage: 'Transaction creation failed.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotSupportedRpcErrorType = MethodNotSupportedRpcError & {\n  code: -32004\n  name: 'MethodNotSupportedRpcError'\n}\nexport class MethodNotSupportedRpcError extends RpcError {\n  override name = 'MethodNotSupportedRpcError'\n  static code = -32004 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: MethodNotSupportedRpcError.code,\n      shortMessage: 'Method is not implemented.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Limit exceeded\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type LimitExceededRpcErrorType = LimitExceededRpcError & {\n  code: -32005\n  name: 'LimitExceededRpcError'\n}\nexport class LimitExceededRpcError extends RpcError {\n  override name = 'LimitExceededRpcError'\n  static code = -32005 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: LimitExceededRpcError.code,\n      shortMessage: 'Request exceeds defined limit.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"JSON-RPC version not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type JsonRpcVersionUnsupportedErrorType =\n  JsonRpcVersionUnsupportedError & {\n    code: -32006\n    name: 'JsonRpcVersionUnsupportedError'\n  }\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n  override name = 'JsonRpcVersionUnsupportedError'\n  static code = -32006 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: JsonRpcVersionUnsupportedError.code,\n      shortMessage: 'Version of JSON-RPC protocol is not supported.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"User Rejected Request\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UserRejectedRequestErrorType = UserRejectedRequestError & {\n  code: 4001\n  name: 'UserRejectedRequestError'\n}\nexport class UserRejectedRequestError extends ProviderRpcError {\n  override name = 'UserRejectedRequestError'\n  static code = 4001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UserRejectedRequestError.code,\n      shortMessage: 'User rejected the request.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unauthorized\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnauthorizedProviderErrorType = UnauthorizedProviderError & {\n  code: 4100\n  name: 'UnauthorizedProviderError'\n}\nexport class UnauthorizedProviderError extends ProviderRpcError {\n  override name = 'UnauthorizedProviderError'\n  static code = 4100 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnauthorizedProviderError.code,\n      shortMessage:\n        'The requested method and/or account has not been authorized by the user.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported Method\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnsupportedProviderMethodErrorType =\n  UnsupportedProviderMethodError & {\n    code: 4200\n    name: 'UnsupportedProviderMethodError'\n  }\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n  override name = 'UnsupportedProviderMethodError'\n  static code = 4200 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnsupportedProviderMethodError.code,\n      shortMessage: 'The Provider does not support the requested method.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ProviderDisconnectedErrorType = ProviderDisconnectedError & {\n  code: 4900\n  name: 'ProviderDisconnectedError'\n}\nexport class ProviderDisconnectedError extends ProviderRpcError {\n  override name = 'ProviderDisconnectedError'\n  static code = 4900 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ProviderDisconnectedError.code,\n      shortMessage: 'The Provider is disconnected from all chains.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Chain Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ChainDisconnectedErrorType = ChainDisconnectedError & {\n  code: 4901\n  name: 'ChainDisconnectedError'\n}\nexport class ChainDisconnectedError extends ProviderRpcError {\n  override name = 'ChainDisconnectedError'\n  static code = 4901 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ChainDisconnectedError.code,\n      shortMessage: 'The Provider is not connected to the requested chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Switch Chain\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type SwitchChainErrorType = SwitchChainError & {\n  code: 4902\n  name: 'SwitchChainError'\n}\nexport class SwitchChainError extends ProviderRpcError {\n  override name = 'SwitchChainError'\n  static code = 4902 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: SwitchChainError.code,\n      shortMessage: 'An error occurred when attempting to switch chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an unknown RPC error.\n */\nexport type UnknownRpcErrorType = UnknownRpcError & {\n  name: 'UnknownRpcError'\n}\nexport class UnknownRpcError extends RpcError {\n  override name = 'UnknownRpcError'\n\n  constructor(cause: Error) {\n    super(cause, {\n      shortMessage: 'An unknown RPC error occurred.',\n    })\n  }\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n} from '../../errors/contract.js'\nimport { InternalRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nconst EXECUTION_REVERTED_ERROR_CODE = 3\n\nexport type GetContractErrorReturnType<cause = ErrorType> = Omit<\n  ContractFunctionExecutionErrorType,\n  'cause'\n> & {\n  cause:\n    | cause\n    | ContractFunctionZeroDataErrorType\n    | ContractFunctionRevertedErrorType\n}\n\nexport function getContractError<err extends ErrorType<string>>(\n  err: err,\n  {\n    abi,\n    address,\n    args,\n    docsPath,\n    functionName,\n    sender,\n  }: {\n    abi: Abi\n    args: any\n    address?: Address\n    docsPath?: string\n    functionName: string\n    sender?: Address\n  },\n): GetContractErrorReturnType {\n  const { code, data, message, shortMessage } = (\n    err instanceof RawContractError\n      ? err\n      : err instanceof BaseError\n        ? err.walk((err) => 'data' in (err as Error)) || err.walk()\n        : {}\n  ) as RawContractError\n\n  const cause = (() => {\n    if (err instanceof AbiDecodingZeroDataError)\n      return new ContractFunctionZeroDataError({ functionName })\n    if (\n      [EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n      (data || message || shortMessage)\n    ) {\n      return new ContractFunctionRevertedError({\n        abi,\n        data: typeof data === 'object' ? data.data : data,\n        functionName,\n        message: shortMessage ?? message,\n      })\n    }\n    return err\n  })()\n\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender,\n  }) as GetContractErrorReturnType\n}\n", "import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  override name = 'AccountNotFoundError'\n  constructor({ docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n      },\n    )\n  }\n}\n", "import type { Account } from '../accounts/types.js'\nimport type { EstimateGasParameters } from '../actions/public/estimateGas.js'\nimport type { Chain } from '../types/chain.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\n\nexport type EstimateGasExecutionErrorType = EstimateGasExecutionError & {\n  name: 'EstimateGasExecutionError'\n}\nexport class EstimateGasExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'EstimateGasExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<EstimateGasParameters<any, any>, 'account'> & {\n      account?: Account\n      chain?: Chain\n      docsPath?: string\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Estimate Gas Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n", "import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: 3\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  override name = 'ExecutionRevertedError'\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError; message?: string } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type FeeCapTooHighErrorType = FeeCapTooHighError & {\n  name: 'FeeCapTooHighError'\n}\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  override name = 'FeeCapTooHigh'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: { cause?: BaseError; maxFeePerGas?: bigint } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type FeeCapTooLowErrorType = FeeCapTooLowError & {\n  name: 'FeeCapTooLowError'\n}\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  override name = 'FeeCapTooLow'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: { cause?: BaseError; maxFeePerGas?: bigint } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type NonceTooHighErrorType = NonceTooHighError & {\n  name: 'NonceTooHighError'\n}\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  override name = 'NonceTooHighError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause },\n    )\n  }\n}\n\nexport type NonceTooLowErrorType = NonceTooLowError & {\n  name: 'NonceTooLowError'\n}\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  override name = 'NonceTooLowError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause },\n    )\n  }\n}\n\nexport type NonceMaxValueErrorType = NonceMaxValueError & {\n  name: 'NonceMaxValueError'\n}\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  override name = 'NonceMaxValueError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause },\n    )\n  }\n}\n\nexport type InsufficientFundsErrorType = InsufficientFundsError & {\n  name: 'InsufficientFundsError'\n}\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage = /insufficient funds/\n  override name = 'InsufficientFundsError'\n  constructor({ cause }: { cause?: BaseError } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooHighErrorType = IntrinsicGasTooHighError & {\n  name: 'IntrinsicGasTooHighError'\n}\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  override name = 'IntrinsicGasTooHighError'\n  constructor({ cause, gas }: { cause?: BaseError; gas?: bigint } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooLowErrorType = IntrinsicGasTooLowError & {\n  name: 'IntrinsicGasTooLowError'\n}\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  override name = 'IntrinsicGasTooLowError'\n  constructor({ cause, gas }: { cause?: BaseError; gas?: bigint } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type TransactionTypeNotSupportedErrorType =\n  TransactionTypeNotSupportedError & {\n    name: 'TransactionTypeNotSupportedError'\n  }\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  override name = 'TransactionTypeNotSupportedError'\n  constructor({ cause }: { cause?: BaseError }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n    })\n  }\n}\n\nexport type TipAboveFeeCapErrorType = TipAboveFeeCapError & {\n  name: 'TipAboveFeeCapError'\n}\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  override name = 'TipAboveFeeCapError'\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError\n    maxPriorityFeePerGas?: bigint\n    maxFeePerGas?: bigint\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type UnknownNodeErrorType = UnknownNodeError & {\n  name: 'UnknownNodeError'\n}\nexport class UnknownNodeError extends BaseError {\n  override name = 'UnknownNodeError'\n\n  constructor({ cause }: { cause?: BaseError }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n    })\n  }\n}\n", "import type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  FeeCapTooLowError,\n  type FeeCapTooLowErrorType,\n  InsufficientFundsError,\n  type InsufficientFundsErrorType,\n  IntrinsicGasTooHighError,\n  type IntrinsicGasTooHighErrorType,\n  IntrinsicGasTooLowError,\n  type IntrinsicGasTooLowErrorType,\n  NonceMaxValueError,\n  type NonceMaxValueErrorType,\n  NonceTooHighError,\n  type NonceTooHighErrorType,\n  NonceTooLowError,\n  type NonceTooLowErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n  TransactionTypeNotSupportedError,\n  type TransactionTypeNotSupportedErrorType,\n  UnknownNodeError,\n  type UnknownNodeErrorType,\n} from '../../errors/node.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport {\n  InvalidInputRpcError,\n  TransactionRejectedRpcError,\n} from '../../errors/rpc.js'\n\nexport function containsNodeError(err: BaseError) {\n  return (\n    err instanceof TransactionRejectedRpcError ||\n    err instanceof InvalidInputRpcError ||\n    (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code)\n  )\n}\n\nexport type GetNodeErrorParameters = Partial<SendTransactionParameters<any>>\n\nexport type GetNodeErrorReturnType =\n  | ExecutionRevertedErrorType\n  | FeeCapTooHighErrorType\n  | FeeCapTooLowErrorType\n  | NonceTooHighErrorType\n  | NonceTooLowErrorType\n  | NonceMaxValueErrorType\n  | InsufficientFundsErrorType\n  | IntrinsicGasTooHighErrorType\n  | IntrinsicGasTooLowErrorType\n  | TransactionTypeNotSupportedErrorType\n  | TipAboveFeeCapErrorType\n  | UnknownNodeErrorType\n\nexport function getNodeError(\n  err: BaseError,\n  args: GetNodeErrorParameters,\n): GetNodeErrorReturnType {\n  const message = (err.details || '').toLowerCase()\n\n  const executionRevertedError = err.walk(\n    (e) => (e as { code: number }).code === ExecutionRevertedError.code,\n  )\n  if (executionRevertedError instanceof BaseError) {\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details,\n    }) as any\n  }\n  if (ExecutionRevertedError.nodeMessage.test(message))\n    return new ExecutionRevertedError({\n      cause: err,\n      message: err.details,\n    }) as any\n  if (FeeCapTooHighError.nodeMessage.test(message))\n    return new FeeCapTooHighError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (FeeCapTooLowError.nodeMessage.test(message))\n    return new FeeCapTooLowError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (NonceTooHighError.nodeMessage.test(message))\n    return new NonceTooHighError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceTooLowError.nodeMessage.test(message))\n    return new NonceTooLowError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceMaxValueError.nodeMessage.test(message))\n    return new NonceMaxValueError({ cause: err, nonce: args?.nonce }) as any\n  if (InsufficientFundsError.nodeMessage.test(message))\n    return new InsufficientFundsError({ cause: err }) as any\n  if (IntrinsicGasTooHighError.nodeMessage.test(message))\n    return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas }) as any\n  if (IntrinsicGasTooLowError.nodeMessage.test(message))\n    return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas }) as any\n  if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n    return new TransactionTypeNotSupportedError({ cause: err }) as any\n  if (TipAboveFeeCapError.nodeMessage.test(message))\n    return new TipAboveFeeCapError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n      maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n    }) as any\n  return new UnknownNodeError({\n    cause: err,\n  }) as any\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { EstimateGasParameters } from '../../actions/public/estimateGas.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  EstimateGasExecutionError,\n  type EstimateGasExecutionErrorType,\n} from '../../errors/estimateGas.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetEstimateGasErrorReturnType<cause = ErrorType> = Omit<\n  EstimateGasExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getEstimateGasError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: Omit<EstimateGasParameters, 'account'> & {\n    account?: Account\n    chain?: Chain\n    docsPath?: string\n  },\n): GetEstimateGasErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new EstimateGasExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetEstimateGasErrorReturnType<err>\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { ChainFormatter } from '../../types/chain.js'\n\nexport type ExtractErrorType = ErrorType\n\n/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(\n  value_: Record<string, unknown>,\n  { format }: { format?: ChainFormatter['format'] },\n) {\n  if (!format) return {}\n\n  const value: Record<string, unknown> = {}\n  function extract_(formatted: Record<string, any>) {\n    const keys = Object.keys(formatted)\n    for (const key of keys) {\n      if (key in value_) value[key] = value_[key]\n      if (\n        formatted[key] &&\n        typeof formatted[key] === 'object' &&\n        !Array.isArray(formatted[key])\n      )\n        extract_(formatted[key])\n    }\n  }\n\n  const formatted = format(value_ || {})\n  extract_(formatted)\n\n  return value\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport type DefineFormatterErrorType = ErrorType\n\nexport function defineFormatter<TType extends string, TParameters, TReturnType>(\n  type: TType,\n  format: (_: TParameters) => TReturnType,\n) {\n  return <\n    TOverrideParameters,\n    TOverrideReturnType,\n    TExclude extends (keyof TParameters | keyof TOverrideParameters)[] = [],\n  >({\n    exclude,\n    format: overrides,\n  }: {\n    exclude?: TExclude\n    format: (_: TOverrideParameters) => TOverrideReturnType\n  }) => {\n    return {\n      exclude,\n      format: (args: Assign<TParameters, TOverrideParameters>) => {\n        const formatted = format(args as any)\n        if (exclude) {\n          for (const key of exclude) {\n            delete (formatted as any)[key]\n          }\n        }\n        return {\n          ...formatted,\n          ...overrides(args),\n        } as Prettify<Assign<TReturnType, TOverrideReturnType>> & {\n          [_key in TExclude[number]]: never\n        }\n      },\n      type,\n    }\n  }\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport { numberToHex } from '../encoding/toHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  TChain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n} as const\n\nexport type FormatTransactionRequestErrorType = ErrorType\n\nexport function formatTransactionRequest(\n  transactionRequest: Partial<TransactionRequest>,\n) {\n  return {\n    ...transactionRequest,\n    gas:\n      typeof transactionRequest.gas !== 'undefined'\n        ? numberToHex(transactionRequest.gas)\n        : undefined,\n    gasPrice:\n      typeof transactionRequest.gasPrice !== 'undefined'\n        ? numberToHex(transactionRequest.gasPrice)\n        : undefined,\n    maxFeePerGas:\n      typeof transactionRequest.maxFeePerGas !== 'undefined'\n        ? numberToHex(transactionRequest.maxFeePerGas)\n        : undefined,\n    maxPriorityFeePerGas:\n      typeof transactionRequest.maxPriorityFeePerGas !== 'undefined'\n        ? numberToHex(transactionRequest.maxPriorityFeePerGas)\n        : undefined,\n    nonce:\n      typeof transactionRequest.nonce !== 'undefined'\n        ? numberToHex(transactionRequest.nonce)\n        : undefined,\n    type:\n      typeof transactionRequest.type !== 'undefined'\n        ? rpcTransactionType[transactionRequest.type]\n        : undefined,\n    value:\n      typeof transactionRequest.value !== 'undefined'\n        ? numberToHex(transactionRequest.value)\n        : undefined,\n  } as RpcTransactionRequest\n}\n\nexport type DefineTransactionRequestErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n", "import {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = Partial<SendTransactionParameters<Chain>>\n\nexport type AssertRequestErrorType =\n  | InvalidAddressErrorType\n  | FeeConflictErrorType\n  | FeeCapTooHighErrorType\n  | ParseAccountErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n", "import { formatGwei } from '../utils/unit/formatGwei.js'\nimport { BaseError } from './base.js'\n\nexport type BaseFeeScalarErrorType = BaseFeeScalarError & {\n  name: 'BaseFeeScalarError'\n}\nexport class BaseFeeScalarError extends BaseError {\n  override name = 'BaseFeeScalarError'\n  constructor() {\n    super('`baseFeeMultiplier` must be greater than 1.')\n  }\n}\n\nexport type Eip1559FeesNotSupportedErrorType = Eip1559FeesNotSupportedError & {\n  name: 'Eip1559FeesNotSupportedError'\n}\nexport class Eip1559FeesNotSupportedError extends BaseError {\n  override name = 'Eip1559FeesNotSupportedError'\n  constructor() {\n    super('Chain does not support EIP-1559 fees.')\n  }\n}\n\nexport type MaxFeePerGasTooLowErrorType = MaxFeePerGasTooLowError & {\n  name: 'MaxFeePerGasTooLowError'\n}\nexport class MaxFeePerGasTooLowError extends BaseError {\n  override name = 'MaxFeePerGasTooLowError'\n  constructor({ maxPriorityFeePerGas }: { maxPriorityFeePerGas: bigint }) {\n    super(\n      `\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(\n        maxPriorityFeePerGas,\n      )} gwei).`,\n    )\n  }\n}\n", "import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlockNotFoundErrorType = BlockNotFoundError & {\n  name: 'BlockNotFoundError'\n}\nexport class BlockNotFoundError extends BaseError {\n  override name = 'BlockNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash\n    blockNumber?: bigint\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  TChain extends { formatters?: Chain['formatters'] } | undefined =\n    | { formatters?: Chain['formatters'] }\n    | undefined,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'transaction'>,\n> = UnionOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_key in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, TBlockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n} as const\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: Partial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type ? transactionType[transaction.type] : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  TChain extends { formatters?: Chain['formatters'] } | undefined =\n    | { formatters?: Chain['formatters'] }\n    | undefined,\n  TIncludeTransactions extends boolean = boolean,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'block',\n    Block<bigint, TIncludeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, TIncludeTransactions, TBlockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = TIncludeTransactions extends true\n    ? Prettify<FormattedTransaction<TChain, TBlockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: Partial<RpcBlock>) {\n  const transactions = block.transactions?.map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from '../../errors/block.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedBlock,\n  formatBlock,\n} from '../../utils/formatters/block.js'\n\nexport type GetBlockParameters<\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: TIncludeTransactions\n} & (\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash\n      blockNumber?: never\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: TBlockTag | BlockTag\n    }\n)\n\nexport type GetBlockReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = FormattedBlock<TChain, TIncludeTransactions, TBlockTag>\n\nexport type GetBlockErrorType =\n  | BlockNotFoundErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    includeTransactions: includeTransactions_,\n  }: GetBlockParameters<TIncludeTransactions, TBlockTag> = {},\n): Promise<GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>> {\n  const blockTag = blockTag_ ?? 'latest'\n  const includeTransactions = includeTransactions_ ?? false\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let block: RpcBlock | null = null\n  if (blockHash) {\n    block = await client.request({\n      method: 'eth_getBlockByHash',\n      params: [blockHash, includeTransactions],\n    })\n  } else {\n    block = await client.request({\n      method: 'eth_getBlockByNumber',\n      params: [blockNumberHex || blockTag, includeTransactions],\n    })\n  }\n\n  if (!block) throw new BlockNotFoundError({ blockHash, blockNumber })\n\n  const format = client.chain?.formatters?.block?.format || formatBlock\n  return format(block)\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetGasPriceReturnType = bigint\n\nexport type GetGasPriceErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the current price of gas (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/public/getGasPrice.html\n * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n *\n * @param client - Client to use\n * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getGasPrice } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasPrice = await getGasPrice(client)\n */\nexport async function getGasPrice<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>): Promise<GetGasPriceReturnType> {\n  const gasPrice = await client.request({\n    method: 'eth_gasPrice',\n  })\n  return BigInt(gasPrice)\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Chain, ChainFeesFnParameters } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToBigIntErrorType,\n  hexToBigInt,\n} from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateMaxPriorityFeePerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n> = GetChain<chain, chainOverride>\n\nexport type EstimateMaxPriorityFeePerGasReturnType = bigint\n\nexport type EstimateMaxPriorityFeePerGasErrorType =\n  | GetBlockErrorType\n  | HexToBigIntErrorType\n  | RequestErrorType\n  | GetBlockErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains.html#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas.html\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>,\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  return internal_estimateMaxPriorityFeePerGas(client, args as any)\n}\n\nexport async function internal_estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride> & {\n    block?: Block\n    request?: PrepareTransactionRequestParameters<\n      chain,\n      Account | undefined,\n      chainOverride\n    >\n  },\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  const { block: block_, chain = client.chain, request } = args || {}\n  if (typeof chain?.fees?.defaultPriorityFee === 'function') {\n    const block = block_ || (await getAction(client, getBlock, 'getBlock')({}))\n    return chain.fees.defaultPriorityFee({\n      block,\n      client,\n      request,\n    } as ChainFeesFnParameters)\n  }\n\n  if (typeof chain?.fees?.defaultPriorityFee !== 'undefined')\n    return chain?.fees?.defaultPriorityFee\n\n  try {\n    const maxPriorityFeePerGasHex = await client.request({\n      method: 'eth_maxPriorityFeePerGas',\n    })\n    return hexToBigInt(maxPriorityFeePerGasHex)\n  } catch {\n    // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n    // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n    // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n    const [block, gasPrice] = await Promise.all([\n      block_\n        ? Promise.resolve(block_)\n        : getAction(client, getBlock, 'getBlock')({}),\n      getAction(client, getGasPrice, 'getGasPrice')({}),\n    ])\n\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas\n\n    if (maxPriorityFeePerGas < 0n) return 0n\n    return maxPriorityFeePerGas\n  }\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BaseFeeScalarError,\n  type BaseFeeScalarErrorType,\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Block } from '../../types/block.js'\nimport type {\n  Chain,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainFeesFnParameters,\n} from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from '../../types/fee.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport {\n  type EstimateMaxPriorityFeePerGasErrorType,\n  internal_estimateMaxPriorityFeePerGas,\n} from './estimateMaxPriorityFeePerGas.js'\nimport { getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateFeesPerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  type extends FeeValuesType = FeeValuesType,\n> = {\n  /**\n   * The type of fee values to return.\n   *\n   * - `legacy`: Returns the legacy gas price.\n   * - `eip1559`: Returns the max fee per gas and max priority fee per gas.\n   *\n   * @default 'eip1559'\n   */\n  type?: type | FeeValuesType\n} & GetChain<chain, chainOverride>\n\nexport type EstimateFeesPerGasReturnType<\n  type extends FeeValuesType = FeeValuesType,\n> =\n  | (type extends 'legacy' ? FeeValuesLegacy : never)\n  | (type extends 'eip1559' ? FeeValuesEIP1559 : never)\n\nexport type EstimateFeesPerGasErrorType =\n  | BaseFeeScalarErrorType\n  | EstimateMaxPriorityFeePerGasErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the fees per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains.html#fees-estimatefeespergas) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas.html\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateFeesPerGasParameters}\n * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateFeesPerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateFeesPerGas(client)\n * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n */\nexport async function estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateFeesPerGasParameters<chain, chainOverride, type>,\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  return internal_estimateFeesPerGas(client, args as any)\n}\n\nexport async function internal_estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args: EstimateFeesPerGasParameters<chain, chainOverride, type> & {\n    block?: Block\n    request?: PrepareTransactionRequestParameters\n  },\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  const {\n    block: block_,\n    chain = client.chain,\n    request,\n    type = 'eip1559',\n  } = args || {}\n\n  const baseFeeMultiplier = await (async () => {\n    if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n      return chain.fees.baseFeeMultiplier({\n        block: block_ as Block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n    return chain?.fees?.baseFeeMultiplier ?? 1.2\n  })()\n  if (baseFeeMultiplier < 1) throw new BaseFeeScalarError()\n\n  const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0\n  const denominator = 10 ** decimals\n  const multiply = (base: bigint) =>\n    (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n    BigInt(denominator)\n\n  const block = block_\n    ? block_\n    : await getAction(client, getBlock, 'getBlock')({})\n\n  if (typeof chain?.fees?.estimateFeesPerGas === 'function')\n    return chain.fees.estimateFeesPerGas({\n      block: block_ as Block,\n      client,\n      multiply,\n      request,\n      type,\n    } as ChainEstimateFeesPerGasFnParameters) as unknown as EstimateFeesPerGasReturnType<type>\n\n  if (type === 'eip1559') {\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = request?.maxPriorityFeePerGas\n      ? request.maxPriorityFeePerGas\n      : await internal_estimateMaxPriorityFeePerGas(\n          client as Client<Transport, Chain>,\n          {\n            block,\n            chain,\n            request,\n          },\n        )\n\n    const baseFeePerGas = multiply(block.baseFeePerGas)\n    const maxFeePerGas =\n      request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas\n\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    } as EstimateFeesPerGasReturnType<type>\n  }\n\n  const gasPrice =\n    request?.gasPrice ??\n    multiply(await getAction(client, getGasPrice, 'getGasPrice')({}))\n  return {\n    gasPrice,\n  } as EstimateFeesPerGasReturnType<type>\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetTransactionCountParameters = {\n  /** The account address. */\n  address: Address\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockNumber?: never\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag\n    }\n)\nexport type GetTransactionCountReturnType = number\n\nexport type GetTransactionCountErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms.html#transaction) an Account has broadcast / sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount.html\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\n): Promise<GetTransactionCountReturnType> {\n  const count = await client.request({\n    method: 'eth_getTransactionCount',\n    params: [address, blockNumber ? numberToHex(blockNumber) : blockTag],\n  })\n  return hexToNumber(count)\n}\n", "import {\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\n\nexport type GetTransactionType<\n  TTransactionSerializable extends\n    TransactionSerializable = TransactionSerializable,\n> =\n  | (TTransactionSerializable extends TransactionSerializableLegacy\n      ? 'legacy'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableEIP1559\n      ? 'eip1559'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableEIP2930\n      ? 'eip2930'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableGeneric\n      ? TTransactionSerializable['type']\n      : never)\n\nexport type GetTransationTypeErrorType =\n  | InvalidSerializableTransactionErrorType\n  | ErrorType\n\nexport function getTransactionType<\n  TTransactionSerializable extends TransactionSerializable,\n>(\n  transaction: TTransactionSerializable,\n): GetTransactionType<TTransactionSerializable> {\n  if (transaction.type)\n    return transaction.type as GetTransactionType<TTransactionSerializable>\n\n  if (\n    typeof transaction.maxFeePerGas !== 'undefined' ||\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  )\n    return 'eip1559' as GetTransactionType<TTransactionSerializable>\n\n  if (typeof transaction.gasPrice !== 'undefined') {\n    if (typeof transaction.accessList !== 'undefined')\n      return 'eip2930' as GetTransactionType<TTransactionSerializable>\n    return 'legacy' as GetTransactionType<TTransactionSerializable>\n  }\n\n  throw new InvalidSerializableTransactionError({ transaction })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport {\n  type EstimateFeesPerGasErrorType,\n  internal_estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type GetBlockErrorType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetTransactionCountErrorType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  MaxFeePerGasTooLowError,\n} from '../../errors/fee.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { TransactionSerializable } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport { getTransactionType } from '../../utils/transaction/getTransactionType.js'\n\nexport type PrepareTransactionRequestParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type PrepareTransactionRequestReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<\n  TChainOverride extends Chain ? TChainOverride : TChain\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type PrepareTransactionRequestErrorType =\n  | AccountNotFoundErrorType\n  | AssertRequestErrorType\n  | ParseAccountErrorType\n  | GetBlockErrorType\n  | GetTransactionCountErrorType\n  | EstimateGasErrorType\n  | EstimateFeesPerGasErrorType\n\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n): Promise<\n  PrepareTransactionRequestReturnType<TChain, TAccount, TChainOverride>\n> {\n  const { account: account_ = client.account, chain, gas, nonce, type } = args\n  if (!account_) throw new AccountNotFoundError()\n  const account = parseAccount(account_)\n\n  const block = await getAction(\n    client,\n    getBlock,\n    'getBlock',\n  )({ blockTag: 'latest' })\n\n  const request = { ...args, from: account.address }\n\n  if (typeof nonce === 'undefined')\n    request.nonce = await getAction(\n      client,\n      getTransactionCount,\n      'getTransactionCount',\n    )({\n      address: account.address,\n      blockTag: 'pending',\n    })\n\n  if (typeof type === 'undefined') {\n    try {\n      request.type = getTransactionType(\n        request as TransactionSerializable,\n      ) as any\n    } catch {\n      // infer type from block\n      request.type =\n        typeof block.baseFeePerGas === 'bigint' ? 'eip1559' : 'legacy'\n    }\n  }\n\n  if (request.type === 'eip1559') {\n    // EIP-1559 fees\n    const { maxFeePerGas, maxPriorityFeePerGas } =\n      await internal_estimateFeesPerGas(client, {\n        block,\n        chain,\n        request: request as PrepareTransactionRequestParameters,\n      })\n\n    if (\n      typeof args.maxPriorityFeePerGas === 'undefined' &&\n      args.maxFeePerGas &&\n      args.maxFeePerGas < maxPriorityFeePerGas\n    )\n      throw new MaxFeePerGasTooLowError({\n        maxPriorityFeePerGas,\n      })\n\n    request.maxPriorityFeePerGas = maxPriorityFeePerGas\n    request.maxFeePerGas = maxFeePerGas\n  } else {\n    // Legacy fees\n    if (\n      typeof args.maxFeePerGas !== 'undefined' ||\n      typeof args.maxPriorityFeePerGas !== 'undefined'\n    )\n      throw new Eip1559FeesNotSupportedError()\n\n    const { gasPrice: gasPrice_ } = await internal_estimateFeesPerGas(client, {\n      block,\n      chain,\n      request: request as PrepareTransactionRequestParameters,\n      type: 'legacy',\n    })\n    request.gasPrice = gasPrice_\n  }\n\n  if (typeof gas === 'undefined')\n    request.gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      ...request,\n      account: { address: account.address, type: 'json-rpc' },\n    } as EstimateGasParameters)\n\n  assertRequest(request as AssertRequestParameters)\n\n  return request as unknown as PrepareTransactionRequestReturnType<\n    TChain,\n    TAccount,\n    TChainOverride\n  >\n}\n", "import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetEstimateGasErrorReturnType,\n  getEstimateGasError,\n} from '../../utils/errors/getEstimateGasError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  prepareTransactionRequest,\n} from '../wallet/prepareTransactionRequest.js'\n\nexport type FormattedEstimateGas<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<TChain>\n\nexport type EstimateGasParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n> = UnionOmit<FormattedEstimateGas<TChain>, 'from'> &\n  GetAccountParameter<TAccount> &\n  (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint\n        blockTag?: never\n      }\n    | {\n        blockNumber?: never\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag\n      }\n  )\n\nexport type EstimateGasReturnType = bigint\n\nexport type EstimateGasErrorType = GetEstimateGasErrorReturnType<\n  | ParseAccountErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | AssertRequestErrorType\n>\n\n/**\n * Estimates the gas necessary to complete a transaction without submitting it to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateGas.html\n * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateGas } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: parseEther('1'),\n * })\n */\nexport async function estimateGas<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: EstimateGasParameters<TChain, TAccount>,\n): Promise<EstimateGasReturnType> {\n  const account_ = args.account ?? client.account\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/public/estimateGas',\n    })\n  const account = parseAccount(account_)\n\n  try {\n    const {\n      accessList,\n      blockNumber,\n      blockTag,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      ...rest\n    } =\n      account.type === 'local'\n        ? ((await prepareTransactionRequest(\n            client,\n            args as PrepareTransactionRequestParameters,\n          )) as EstimateGasParameters)\n        : args\n\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    assertRequest(args as AssertRequestParameters)\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account.address,\n      accessList,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n\n    const balance = await client.request({\n      method: 'eth_estimateGas',\n      params: block ? [request, block] : [request],\n    })\n    return BigInt(balance)\n  } catch (err) {\n    throw getEstimateGasError(err as BaseError, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n", "import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionConfig, GetValue } from '../../types/contract.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from './estimateGas.js'\n\nexport type EstimateContractGasParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n> = ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  UnionOmit<EstimateGasParameters<TChain, TAccount>, 'data' | 'to' | 'value'> &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    EstimateGasParameters<TChain> extends EstimateGasParameters\n      ? EstimateGasParameters<TChain>['value']\n      : EstimateGasParameters['value']\n  >\n\nexport type EstimateContractGasReturnType = bigint\n\nexport type EstimateContractGasErrorType = GetContractErrorReturnType<\n  EncodeFunctionDataErrorType | EstimateGasErrorType | ParseAccountErrorType\n>\n\n/**\n * Estimates the gas required to successfully execute a contract write function call.\n *\n * - Docs: https://viem.sh/docs/contract/estimateContractGas.html\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateContractGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateContractGas } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gas = await estimateContractGas(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint() public']),\n *   functionName: 'mint',\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n * })\n */\nexport async function estimateContractGas<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    address,\n    args,\n    functionName,\n    ...request\n  }: EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n): Promise<EstimateContractGasReturnType> {\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      data,\n      to: address,\n      ...request,\n    } as unknown as EstimateGasParameters<TChain>)\n    return gas\n  } catch (err) {\n    const account = request.account ? parseAccount(request.account) : undefined\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/estimateContractGas',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n", "import type { Abi, AbiParameter, ExtractAbiEventNames } from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n} from '../../errors/abi.js'\nimport type {\n  EventDefinition,\n  GetEventArgsFromTopics,\n  InferEventName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetEventSelectorErrorType,\n  getEventSelector,\n} from '../hash/getEventSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeEventLogParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n> = {\n  abi: TAbi\n  data?: TData\n  eventName?: InferEventName<TAbi, TEventName>\n  strict?: TStrict\n  topics: [signature: Hex, ...args: TTopics] | []\n}\n\nexport type DecodeEventLogReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n  _EventNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiEventNames<TAbi>\n    : string,\n> = TEventName extends _EventNames[number]\n  ? Prettify<\n      {\n        eventName: TEventName\n      } & GetEventArgsFromTopics<TAbi, TEventName, TTopics, TData, TStrict>\n    >\n  : {\n      [TName in _EventNames]: Prettify<\n        {\n          eventName: TName\n        } & GetEventArgsFromTopics<TAbi, TName, TTopics, TData, TStrict>\n      >\n    }[_EventNames]\n\nexport type DecodeEventLogErrorType =\n  | AbiDecodingDataSizeTooSmallErrorType\n  | AbiEventSignatureEmptyTopicsErrorType\n  | AbiEventSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | DecodeLogTopicsMismatchErrorType\n  | DecodeLogDataMismatchErrorType\n  | FormatAbiItemErrorType\n  | GetEventSelectorErrorType\n  | ErrorType\n\nconst docsPath = '/docs/contract/decodeEventLog'\n\nexport function decodeEventLog<\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n>({\n  abi,\n  data,\n  strict: strict_,\n  topics,\n}: DecodeEventLogParameters<\n  TAbi,\n  TEventName,\n  TTopics,\n  TData,\n  TStrict\n>): DecodeEventLogReturnType<TAbi, TEventName, TTopics, TData, TStrict> {\n  const strict = strict_ ?? true\n  const [signature, ...argTopics] = topics\n  if (!signature)\n    throw new AbiEventSignatureEmptyTopicsError({\n      docsPath,\n    })\n  const abiItem = (abi as Abi).find(\n    (x) =>\n      x.type === 'event' &&\n      signature === getEventSelector(formatAbiItem(x) as EventDefinition),\n  )\n  if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n    throw new AbiEventSignatureNotFoundError(signature, {\n      docsPath,\n    })\n\n  const { name, inputs } = abiItem\n  const isUnnamed = inputs?.some((x) => !('name' in x && x.name))\n\n  let args: any = isUnnamed ? [] : {}\n\n  // Decode topics (indexed args).\n  const indexedInputs = inputs.filter((x) => 'indexed' in x && x.indexed)\n  for (let i = 0; i < indexedInputs.length; i++) {\n    const param = indexedInputs[i]\n    const topic = argTopics[i]\n    if (!topic)\n      throw new DecodeLogTopicsMismatch({\n        abiItem,\n        param: param as AbiParameter & { indexed: boolean },\n      })\n    args[param.name || i] = decodeTopic({ param, value: topic })\n  }\n\n  // Decode data (non-indexed args).\n  const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed))\n  if (nonIndexedInputs.length > 0) {\n    if (data && data !== '0x') {\n      try {\n        const decodedData = decodeAbiParameters(nonIndexedInputs, data)\n        if (decodedData) {\n          if (isUnnamed) args = [...args, ...decodedData]\n          else {\n            for (let i = 0; i < nonIndexedInputs.length; i++) {\n              args[nonIndexedInputs[i].name!] = decodedData[i]\n            }\n          }\n        }\n      } catch (err) {\n        if (strict) {\n          if (err instanceof AbiDecodingDataSizeTooSmallError)\n            throw new DecodeLogDataMismatch({\n              abiItem,\n              data: err.data,\n              params: err.params,\n              size: err.size,\n            })\n          throw err\n        }\n      }\n    } else if (strict) {\n      throw new DecodeLogDataMismatch({\n        abiItem,\n        data: '0x',\n        params: nonIndexedInputs,\n        size: 0,\n      })\n    }\n  }\n\n  return {\n    eventName: name,\n    args: Object.values(args).length > 0 ? args : undefined,\n  } as unknown as DecodeEventLogReturnType<\n    TAbi,\n    TEventName,\n    TTopics,\n    TData,\n    TStrict\n  >\n}\n\nfunction decodeTopic({ param, value }: { param: AbiParameter; value: Hex }) {\n  if (\n    param.type === 'string' ||\n    param.type === 'bytes' ||\n    param.type === 'tuple' ||\n    param.type.match(/^(.*)\\[(\\d+)?\\]$/)\n  )\n    return value\n  const decodedArg = decodeAbiParameters([param], value) || []\n  return decodedArg[0]\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: Partial<RpcLog>,\n  { args, eventName }: { args?: unknown; eventName?: string } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n", "import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash, LogTopic } from '../../types/misc.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetLogsParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = {\n  /** Address or list of addresses from which logs originated */\n  address?: Address | Address[]\n} & (\n  | {\n      event: TAbiEvent\n      events?: never\n      args?: MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: TStrict\n    }\n  | {\n      event?: never\n      events: TAbiEvents\n      args?: never\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: TStrict\n    }\n  | {\n      event?: never\n      events?: never\n      args?: never\n      strict?: never\n    }\n) &\n  (\n    | {\n        /** Block number or tag after which to include logs */\n        fromBlock?: TFromBlock | BlockNumber | BlockTag\n        /** Block number or tag before which to include logs */\n        toBlock?: TToBlock | BlockNumber | BlockTag\n        blockHash?: never\n      }\n    | {\n        fromBlock?: never\n        toBlock?: never\n        /** Hash of block to include logs from */\n        blockHash?: Hash\n      }\n  )\n\nexport type GetLogsReturnType<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, TAbiEvent, TStrict, TAbiEvents, _EventName>[]\n\nexport type GetLogsErrorType =\n  | DecodeEventLogErrorType\n  | EncodeEventTopicsErrorType\n  | FormatLogErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs matching the provided parameters.\n *\n * - Docs: https://viem.sh/docs/actions/public/getLogs.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/filters-and-logs/event-logs\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetLogsParameters}\n * @returns A list of event logs. {@link GetLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getLogs(client)\n */\nexport async function getLogs<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    blockHash,\n    fromBlock,\n    toBlock,\n    event,\n    events: events_,\n    args,\n    strict: strict_,\n  }: GetLogsParameters<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  > = {},\n): Promise<\n  GetLogsReturnType<TAbiEvent, TAbiEvents, TStrict, TFromBlock, TToBlock>\n> {\n  const strict = strict_ ?? false\n  const events = events_ ?? (event ? [event] : undefined)\n\n  let topics: LogTopic[] = []\n  if (events) {\n    topics = [\n      (events as AbiEvent[]).flatMap((event) =>\n        encodeEventTopics({\n          abi: [event],\n          eventName: (event as AbiEvent).name,\n          args,\n        } as EncodeEventTopicsParameters),\n      ),\n    ]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  let logs: RpcLog[]\n  if (blockHash) {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [{ address, topics, blockHash }],\n    })\n  } else {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [\n        {\n          address,\n          topics,\n          fromBlock:\n            typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n          toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        },\n      ],\n    })\n  }\n\n  return logs\n    .map((log) => {\n      try {\n        const { eventName, args } = events\n          ? decodeEventLog({\n              abi: events as Abi,\n              data: log.data,\n              topics: log.topics as any,\n              strict,\n            })\n          : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName: eventName as string })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if (strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as unknown as GetLogsReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetEventArgs, InferEventName } from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from '../../utils/abi/getAbiItem.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type GetLogsErrorType,\n  type GetLogsParameters,\n  getLogs,\n} from './getLogs.js'\n\nexport type GetContractEventsParameters<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string | undefined = string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[]\n  /** Contract ABI. */\n  abi: TAbi\n  args?: TEventName extends string ? GetEventArgs<TAbi, TEventName> : undefined\n  /** Contract event. */\n  eventName?: InferEventName<TAbi, TEventName>\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: TStrict\n} & (\n  | {\n      /** Block number or tag after which to include logs */\n      fromBlock?: TFromBlock | BlockNumber | BlockTag\n      /** Block number or tag before which to include logs */\n      toBlock?: TToBlock | BlockNumber | BlockTag\n      blockHash?: never\n    }\n  | {\n      fromBlock?: never\n      toBlock?: never\n      /** Hash of block to include logs from */\n      blockHash?: Hash\n    }\n)\n\nexport type GetContractEventsReturnType<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string | undefined = string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, undefined, TStrict, TAbi, TEventName>[]\n\nexport type GetContractEventsErrorType =\n  | GetAbiItemErrorType\n  | GetLogsErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs emitted by a contract.\n *\n * - Docs: https://viem.sh/docs/actions/public/getContractEvents.html\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetContractEventsParameters}\n * @returns A list of event logs. {@link GetContractEventsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getContractEvents } from 'viem/public'\n * import { wagmiAbi } from './abi'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getContractEvents(client, {\n *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *  abi: wagmiAbi,\n *  eventName: 'Transfer'\n * })\n */\nexport async function getContractEvents<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    blockHash,\n    eventName,\n    fromBlock,\n    toBlock,\n    strict,\n  }: GetContractEventsParameters<\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >,\n): Promise<\n  GetContractEventsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n> {\n  const event = eventName\n    ? getAbiItem({ abi, name: eventName } as GetAbiItemParameters)\n    : undefined\n  const events = !event\n    ? (abi as Abi).filter((x) => x.type === 'event')\n    : undefined\n  return getAction(\n    client,\n    getLogs,\n    'getLogs',\n  )({\n    address,\n    args,\n    blockHash,\n    event,\n    events,\n    fromBlock,\n    toBlock,\n    strict,\n  } as {} as GetLogsParameters) as unknown as GetContractEventsReturnType<\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Abi, ExtractAbiFunctionNames } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n  AbiFunctionOutputsNotFoundError,\n  type AbiFunctionOutputsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  ContractFunctionResult,\n  GetFunctionArgs,\n  InferFunctionName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/decodeFunctionResult'\n\nexport type DecodeFunctionResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n  data: Hex\n} & (TFunctionName extends string\n  ? { abi: TAbi } & Partial<GetFunctionArgs<TAbi, TFunctionName>>\n  : _FunctionName extends string\n    ? { abi: [TAbi[number]] } & Partial<GetFunctionArgs<TAbi, _FunctionName>>\n    : never)\n\nexport type DecodeFunctionResultReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi>[number]\n    : string,\n> = TFunctionName extends string\n  ? ContractFunctionResult<TAbi, TFunctionName>\n  : ContractFunctionResult<TAbi, _FunctionName>\n\nexport type DecodeFunctionResultErrorType =\n  | AbiFunctionNotFoundErrorType\n  | AbiFunctionOutputsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function decodeFunctionResult<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  args,\n  functionName,\n  data,\n}: DecodeFunctionResultParameters<\n  TAbi,\n  TFunctionName\n>): DecodeFunctionResultReturnType<TAbi, TFunctionName> {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = decodeAbiParameters(abiItem.outputs, data)\n  if (values && values.length > 1) return values as any\n  if (values && values.length === 1) return values[0] as any\n  return undefined as any\n}\n", "/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'target',\n            type: 'address',\n          },\n          {\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        name: 'calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        components: [\n          {\n            name: 'success',\n            type: 'bool',\n          },\n          {\n            name: 'returnData',\n            type: 'bytes',\n          },\n        ],\n        name: 'returnData',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nconst universalResolverErrors = [\n  {\n    inputs: [],\n    name: 'ResolverNotFound',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverWildcardNotSupported',\n    type: 'error',\n  },\n] as const\n\nexport const universalResolverResolveAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n] as const\n\nexport const universalResolverReverseAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ type: 'bytes', name: 'reverseName' }],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n] as const\n\nexport const textResolverAbi = [\n  {\n    name: 'text',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'key', type: 'string' },\n    ],\n    outputs: [{ name: '', type: 'string' }],\n  },\n] as const\n\nexport const addressResolverAbi = [\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ name: 'name', type: 'bytes32' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'coinType', type: 'uint256' },\n    ],\n    outputs: [{ name: '', type: 'bytes' }],\n  },\n] as const\n\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) \u2192 bytes4 magicValue\nexport const smartAccountAbi = [\n  {\n    name: 'isValidSignature',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'hash', type: 'bytes32' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    outputs: [{ name: '', type: 'bytes4' }],\n  },\n] as const\n\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) \u2192 bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n] as const\n", "export const aggregate3Signature = '0x82ad56cb'\n", "import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  override name = 'ChainDoesNotSupportContract'\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint\n    chain: Chain\n    contract: { name: string; blockCreated?: number }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  override name = 'ChainMismatchError'\n\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} \u2013 ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} \u2013 ${chain.name}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  override name = 'ChainNotFoundError'\n\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  override name = 'ClientChainNotConfiguredError'\n\n  constructor() {\n    super('No chain was provided to the Client.')\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  override name = 'InvalidChainIdError'\n\n  constructor({ chainId }: { chainId: number }) {\n    super(`Chain ID \"${chainId}\" is invalid.`)\n  }\n}\n", "import {\n  ChainDoesNotSupportContract,\n  type ChainDoesNotSupportContractErrorType,\n} from '../../errors/chain.js'\nimport type { Chain, ChainContract } from '../../types/chain.js'\n\nexport type GetChainContractAddressErrorType =\n  ChainDoesNotSupportContractErrorType\n\nexport function getChainContractAddress({\n  blockNumber,\n  chain,\n  contract: name,\n}: {\n  blockNumber?: bigint\n  chain: Chain\n  contract: string\n}) {\n  const contract = (chain?.contracts as Record<string, ChainContract>)?.[name]\n  if (!contract)\n    throw new ChainDoesNotSupportContract({\n      chain,\n      contract: { name },\n    })\n\n  if (\n    blockNumber &&\n    contract.blockCreated &&\n    contract.blockCreated > blockNumber\n  )\n    throw new ChainDoesNotSupportContract({\n      blockNumber,\n      chain,\n      contract: {\n        name,\n        blockCreated: contract.blockCreated,\n      },\n    })\n\n  return contract.address\n}\n", "import type { CallParameters } from '../../actions/public/call.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n} from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetCallErrorReturnType<cause = ErrorType> = Omit<\n  CallExecutionErrorType,\n  'cause'\n> & {\n  cause: cause | GetNodeErrorReturnType\n}\n\nexport function getCallError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: CallParameters & {\n    chain?: Chain\n    docsPath?: string\n  },\n): GetCallErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new CallExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetCallErrorReturnType<err>\n}\n", "import type { ErrorType } from '../../errors/utils.js'\n\ntype Resolved<TReturnType extends readonly unknown[] = any> = [\n  result: TReturnType[number],\n  results: TReturnType,\n]\n\ntype PendingPromise<TReturnType extends readonly unknown[] = any> = {\n  resolve?: (data: Resolved<TReturnType>) => void\n  reject?: (reason?: unknown) => void\n}\n\ntype SchedulerItem = { args: unknown; pendingPromise: PendingPromise }\n\ntype BatchResultsCompareFn<TResult = unknown> = (\n  a: TResult,\n  b: TResult,\n) => number\n\nexport type CreateBatchSchedulerArguments<\n  TParameters = unknown,\n  TReturnType extends readonly unknown[] = readonly unknown[],\n> = {\n  fn: (args: TParameters[]) => Promise<TReturnType>\n  id: number | string\n  shouldSplitBatch?: (args: TParameters[]) => boolean\n  wait?: number\n  sort?: BatchResultsCompareFn<TReturnType[number]>\n}\n\nexport type CreateBatchSchedulerReturnType<\n  TParameters = unknown,\n  TReturnType extends readonly unknown[] = readonly unknown[],\n> = {\n  flush: () => void\n  schedule: TParameters extends undefined\n    ? (args?: TParameters) => Promise<Resolved<TReturnType>>\n    : (args: TParameters) => Promise<Resolved<TReturnType>>\n}\n\nexport type CreateBatchSchedulerErrorType = ErrorType\n\nconst schedulerCache = /*#__PURE__*/ new Map<number | string, SchedulerItem[]>()\n\nexport function createBatchScheduler<\n  TParameters,\n  TReturnType extends readonly unknown[],\n>({\n  fn,\n  id,\n  shouldSplitBatch,\n  wait = 0,\n  sort,\n}: CreateBatchSchedulerArguments<\n  TParameters,\n  TReturnType\n>): CreateBatchSchedulerReturnType<TParameters, TReturnType> {\n  const exec = async () => {\n    const scheduler = getScheduler()\n    flush()\n\n    const args = scheduler.map(({ args }) => args)\n\n    if (args.length === 0) return\n\n    fn(args as TParameters[])\n      .then((data) => {\n        if (sort && Array.isArray(data)) data.sort(sort)\n        for (let i = 0; i < scheduler.length; i++) {\n          const { pendingPromise } = scheduler[i]\n          pendingPromise.resolve?.([data[i], data])\n        }\n      })\n      .catch((err) => {\n        for (let i = 0; i < scheduler.length; i++) {\n          const { pendingPromise } = scheduler[i]\n          pendingPromise.reject?.(err)\n        }\n      })\n  }\n\n  const flush = () => schedulerCache.delete(id)\n\n  const getBatchedArgs = () =>\n    getScheduler().map(({ args }) => args) as TParameters[]\n\n  const getScheduler = () => schedulerCache.get(id) || []\n\n  const setScheduler = (item: SchedulerItem) =>\n    schedulerCache.set(id, [...getScheduler(), item])\n\n  return {\n    flush,\n    async schedule(args: TParameters) {\n      const pendingPromise: PendingPromise<TReturnType> = {}\n      const promise = new Promise<Resolved<TReturnType>>((resolve, reject) => {\n        pendingPromise.resolve = resolve\n        pendingPromise.reject = reject\n      })\n\n      const split = shouldSplitBatch?.([...getBatchedArgs(), args])\n\n      if (split) exec()\n\n      const hasActiveScheduler = getScheduler().length > 0\n      if (hasActiveScheduler) {\n        setScheduler({ args, pendingPromise })\n        return promise\n      }\n\n      setScheduler({ args, pendingPromise })\n      setTimeout(exec, wait)\n      return promise\n    },\n  } as unknown as CreateBatchSchedulerReturnType<TParameters, TReturnType>\n}\n", "import type { Address } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type OffchainLookupErrorType = OffchainLookupError & {\n  name: 'OffchainLookupError'\n}\nexport class OffchainLookupError extends BaseError {\n  override name = 'OffchainLookupError'\n  constructor({\n    callbackSelector,\n    cause,\n    data,\n    extraData,\n    sender,\n    urls,\n  }: {\n    callbackSelector: Hex\n    cause: BaseError\n    data: Hex\n    extraData: Hex\n    sender: Address\n    urls: readonly string[]\n  }) {\n    super(\n      cause.shortMessage ||\n        'An error occurred while fetching for an offchain result.',\n      {\n        cause,\n        metaMessages: [\n          ...(cause.metaMessages || []),\n          cause.metaMessages?.length ? '' : [],\n          'Offchain Gateway Call:',\n          urls && [\n            '  Gateway URL(s):',\n            ...urls.map((url) => `    ${getUrl(url)}`),\n          ],\n          `  Sender: ${sender}`,\n          `  Data: ${data}`,\n          `  Callback selector: ${callbackSelector}`,\n          `  Extra data: ${extraData}`,\n        ].flat(),\n      },\n    )\n  }\n}\n\nexport type OffchainLookupResponseMalformedErrorType =\n  OffchainLookupResponseMalformedError & {\n    name: 'OffchainLookupResponseMalformedError'\n  }\nexport class OffchainLookupResponseMalformedError extends BaseError {\n  override name = 'OffchainLookupResponseMalformedError'\n  constructor({ result, url }: { result: any; url: string }) {\n    super(\n      'Offchain gateway response is malformed. Response data must be a hex value.',\n      {\n        metaMessages: [\n          `Gateway URL: ${getUrl(url)}`,\n          `Response: ${stringify(result)}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type OffchainLookupSenderMismatchErrorType =\n  OffchainLookupSenderMismatchError & {\n    name: 'OffchainLookupSenderMismatchError'\n  }\nexport class OffchainLookupSenderMismatchError extends BaseError {\n  override name = 'OffchainLookupSenderMismatchError'\n  constructor({ sender, to }: { sender: Address; to: Address }) {\n    super(\n      'Reverted sender address does not match target contract address (`to`).',\n      {\n        metaMessages: [\n          `Contract address: ${to}`,\n          `OffchainLookup sender address: ${sender}`,\n        ],\n      },\n    )\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { isAddress } from './isAddress.js'\n\nexport type IsAddressEqualReturnType = boolean\nexport type IsAddressEqualErrorType = InvalidAddressErrorType | ErrorType\n\nexport function isAddressEqual(a: Address, b: Address) {\n  if (!isAddress(a)) throw new InvalidAddressError({ address: a })\n  if (!isAddress(b)) throw new InvalidAddressError({ address: b })\n  return a.toLowerCase() === b.toLowerCase()\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport { type CallParameters, call } from '../actions/public/call.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport { type BaseError } from '../errors/base.js'\nimport {\n  OffchainLookupError,\n  OffchainLookupResponseMalformedError,\n  OffchainLookupSenderMismatchError,\n} from '../errors/ccip.js'\nimport { HttpRequestError } from '../errors/request.js'\nimport type { Chain } from '../types/chain.js'\nimport type { GetErrorArgs } from '../types/contract.js'\nimport type { Hex } from '../types/misc.js'\n\nimport type { Client } from '../clients/createClient.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport { decodeErrorResult } from './abi/decodeErrorResult.js'\nimport { encodeAbiParameters } from './abi/encodeAbiParameters.js'\nimport { isAddressEqual } from './address/isAddressEqual.js'\nimport { concat } from './data/concat.js'\nimport { isHex } from './data/isHex.js'\nimport { stringify } from './stringify.js'\n\nexport const offchainLookupSignature = '0x556f1830'\nexport const offchainLookupAbiItem = {\n  name: 'OffchainLookup',\n  type: 'error',\n  inputs: [\n    {\n      name: 'sender',\n      type: 'address',\n    },\n    {\n      name: 'urls',\n      type: 'string[]',\n    },\n    {\n      name: 'callData',\n      type: 'bytes',\n    },\n    {\n      name: 'callbackFunction',\n      type: 'bytes4',\n    },\n    {\n      name: 'extraData',\n      type: 'bytes',\n    },\n  ],\n} as const satisfies Abi[number]\n\nexport type OffchainLookupErrorType = ErrorType\n\nexport async function offchainLookup<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    data,\n    to,\n  }: Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n    data: Hex\n    to: Address\n  },\n): Promise<Hex> {\n  const { args } = decodeErrorResult({\n    data,\n    abi: [offchainLookupAbiItem],\n  }) as unknown as GetErrorArgs<\n    [typeof offchainLookupAbiItem],\n    'OffchainLookup'\n  >\n  const [sender, urls, callData, callbackSelector, extraData] = args\n\n  try {\n    if (!isAddressEqual(to, sender))\n      throw new OffchainLookupSenderMismatchError({ sender, to })\n\n    const result = await ccipFetch({ data: callData, sender, urls })\n\n    const { data: data_ } = await call(client, {\n      blockNumber,\n      blockTag,\n      data: concat([\n        callbackSelector,\n        encodeAbiParameters(\n          [{ type: 'bytes' }, { type: 'bytes' }],\n          [result, extraData],\n        ),\n      ]),\n      to,\n    } as CallParameters)\n\n    return data_!\n  } catch (err) {\n    throw new OffchainLookupError({\n      callbackSelector,\n      cause: err as BaseError,\n      data,\n      extraData,\n      sender,\n      urls,\n    })\n  }\n}\n\nexport type CcipFetchErrorType = ErrorType\n\nexport async function ccipFetch({\n  data,\n  sender,\n  urls,\n}: { data: Hex; sender: Address; urls: readonly string[] }) {\n  let error = new Error('An unknown error occurred.')\n\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const method = url.includes('{data}') ? 'GET' : 'POST'\n    const body = method === 'POST' ? { data, sender } : undefined\n\n    try {\n      const response = await fetch(\n        url.replace('{sender}', sender).replace('{data}', data),\n        {\n          body: JSON.stringify(body),\n          method,\n        },\n      )\n\n      let result\n      if (\n        response.headers.get('Content-Type')?.startsWith('application/json')\n      ) {\n        result = (await response.json()).data\n      } else {\n        result = (await response.text()) as any\n      }\n\n      if (!response.ok) {\n        error = new HttpRequestError({\n          body,\n          details: result?.error\n            ? stringify(result.error)\n            : response.statusText,\n          headers: response.headers,\n          status: response.status,\n          url,\n        })\n        continue\n      }\n\n      if (!isHex(result)) {\n        error = new OffchainLookupResponseMalformedError({\n          result,\n          url,\n        })\n        continue\n      }\n\n      return result\n    } catch (err) {\n      error = new HttpRequestError({\n        body,\n        details: (err as Error).message,\n        url,\n      })\n    }\n  }\n\n  throw error\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { aggregate3Signature } from '../../constants/contract.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ChainDoesNotSupportContract,\n  ClientChainNotConfiguredError,\n} from '../../errors/chain.js'\nimport {\n  RawContractError,\n  type RawContractErrorType,\n} from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from '../../utils/errors/getCallError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from '../../utils/promise/createBatchScheduler.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\n\nexport type FormattedCall<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<TChain>\n\nexport type CallParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedCall<TChain>, 'from'> & {\n  account?: Account | Address\n  batch?: boolean\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint\n        blockTag?: never\n      }\n    | {\n        blockNumber?: never\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag\n      }\n  )\n\nexport type CallReturnType = { data: Hex | undefined }\n\nexport type CallErrorType = GetCallErrorReturnType<\n  | ParseAccountErrorType\n  | AssertRequestErrorType\n  | NumberToHexErrorType\n  | FormatTransactionRequestErrorType\n  | ScheduleMulticallErrorType\n  | RequestErrorType\n>\n\n/**\n * Executes a new message call immediately without submitting a transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/call.html\n * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n *\n * @param client - Client to use\n * @param parameters - {@link CallParameters}\n * @returns The call data. {@link CallReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { call } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await call(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function call<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  args: CallParameters<TChain>,\n): Promise<CallReturnType> {\n  const {\n    account: account_ = client.account,\n    batch = Boolean(client.batch?.multicall),\n    blockNumber,\n    blockTag = 'latest',\n    accessList,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      accessList,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest) as TransactionRequest\n\n    if (batch && shouldPerformMulticall({ request })) {\n      try {\n        return await scheduleMulticall(client, {\n          ...request,\n          blockNumber,\n          blockTag,\n        } as unknown as ScheduleMulticallParameters<TChain>)\n      } catch (err) {\n        if (\n          !(err instanceof ClientChainNotConfiguredError) &&\n          !(err instanceof ChainDoesNotSupportContract)\n        )\n          throw err\n      }\n    }\n\n    const response = await client.request({\n      method: 'eth_call',\n      params: block\n        ? [request as Partial<RpcTransactionRequest>, block]\n        : [request as Partial<RpcTransactionRequest>],\n    })\n    if (response === '0x') return { data: undefined }\n    return { data: response }\n  } catch (err) {\n    const data = getRevertErrorData(err)\n    const { offchainLookup, offchainLookupSignature } = await import(\n      '../../utils/ccip.js'\n    )\n    if (data?.slice(0, 10) === offchainLookupSignature && to) {\n      return { data: await offchainLookup(client, { data, to }) }\n    }\n    throw getCallError(err as ErrorType, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n\n// We only want to perform a scheduled multicall if:\n// - The request has calldata,\n// - The request has a target address,\n// - The target address is not already the aggregate3 signature,\n// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).\nfunction shouldPerformMulticall({ request }: { request: TransactionRequest }) {\n  const { data, to, ...request_ } = request\n  if (!data) return false\n  if (data.startsWith(aggregate3Signature)) return false\n  if (!to) return false\n  if (\n    Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0\n  )\n    return false\n  return true\n}\n\ntype ScheduleMulticallParameters<TChain extends Chain | undefined> = Pick<\n  CallParameters<TChain>,\n  'blockNumber' | 'blockTag'\n> & {\n  data: Hex\n  multicallAddress?: Address\n  to: Address\n}\n\nexport type ScheduleMulticallErrorType =\n  | GetChainContractAddressErrorType\n  | NumberToHexErrorType\n  | CreateBatchSchedulerErrorType\n  | EncodeFunctionDataErrorType\n  | DecodeFunctionResultErrorType\n  | RawContractErrorType\n  | ErrorType\n\nasync function scheduleMulticall<TChain extends Chain | undefined>(\n  client: Client<Transport>,\n  args: ScheduleMulticallParameters<TChain>,\n) {\n  const { batchSize = 1024, wait = 0 } =\n    typeof client.batch?.multicall === 'object' ? client.batch.multicall : {}\n  const {\n    blockNumber,\n    blockTag = 'latest',\n    data,\n    multicallAddress: multicallAddress_,\n    to,\n  } = args\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain) throw new ClientChainNotConfiguredError()\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const block = blockNumberHex || blockTag\n\n  const { schedule } = createBatchScheduler({\n    id: `${client.uid}.${block}`,\n    wait,\n    shouldSplitBatch(args) {\n      const size = args.reduce((size, { data }) => size + (data.length - 2), 0)\n      return size > batchSize * 2\n    },\n    fn: async (\n      requests: {\n        data: Hex\n        to: Address\n      }[],\n    ) => {\n      const calls = requests.map((request) => ({\n        allowFailure: true,\n        callData: request.data,\n        target: request.to,\n      }))\n\n      const calldata = encodeFunctionData({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n      })\n\n      const data = await client.request({\n        method: 'eth_call',\n        params: [\n          {\n            data: calldata,\n            to: multicallAddress,\n          },\n          block,\n        ],\n      })\n\n      return decodeFunctionResult({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n        data: data || '0x',\n      })\n    },\n  })\n\n  const [{ returnData, success }] = await schedule({ data, to })\n\n  if (!success) throw new RawContractError({ data: returnData })\n  if (returnData === '0x') return { data: undefined }\n  return { data: returnData }\n}\n\nexport type GetRevertErrorDataErrorType = ErrorType\n\nexport function getRevertErrorData(err: unknown) {\n  if (!(err instanceof BaseError)) return undefined\n  const error = err.walk() as RawContractError\n  return typeof error.data === 'object' ? error.data.data : error.data\n}\n", "import type { Abi } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  ContractFunctionResult,\n} from '../../types/contract.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type ReadContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n> = Pick<CallParameters, 'account' | 'blockNumber' | 'blockTag'> &\n  ContractFunctionConfig<TAbi, TFunctionName, 'view' | 'pure'>\n\nexport type ReadContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n> = ContractFunctionResult<TAbi, TFunctionName>\n\nexport type ReadContractErrorType = GetContractErrorReturnType<\n  CallErrorType | EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n>\n\n/**\n * Calls a read-only function on a contract, and returns the response.\n *\n * - Docs: https://viem.sh/docs/contract/readContract.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/reading-contracts\n *\n * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link ReadContractParameters}\n * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { readContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await readContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n *   functionName: 'balanceOf',\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // 424122n\n */\nexport async function readContract<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    functionName,\n    ...callRequest\n  }: ReadContractParameters<TAbi, TFunctionName>,\n): Promise<ReadContractReturnType<TAbi, TFunctionName>> {\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      data: calldata,\n      to: address,\n      ...callRequest,\n    } as unknown as CallParameters)\n    return decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    } as DecodeFunctionResultParameters<\n      TAbi,\n      TFunctionName\n    >) as ReadContractReturnType<TAbi, TFunctionName>\n  } catch (err) {\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/readContract',\n      functionName,\n    })\n  }\n}\n", "import type { Abi } from 'abitype'\n\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  ContractFunctionResult,\n  GetValue,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport type { WriteContractParameters } from '../wallet/writeContract.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type SimulateContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = any,\n  TChain extends Chain | undefined = Chain | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = {\n  chain?: TChainOverride\n  /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n  dataSuffix?: Hex\n} & ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  UnionOmit<\n    CallParameters<TChainOverride extends Chain ? TChainOverride : TChain>,\n    'batch' | 'to' | 'data' | 'value'\n  > &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    CallParameters<TChain> extends CallParameters\n      ? CallParameters<TChain>['value']\n      : CallParameters['value']\n  >\n\nexport type SimulateContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = {\n  result: ContractFunctionResult<TAbi, TFunctionName>\n  request: UnionOmit<\n    WriteContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      undefined,\n      TChainOverride\n    >,\n    'chain' | 'functionName'\n  > & {\n    chain: TChainOverride\n    functionName: TFunctionName\n  } & ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'>\n}\n\nexport type SimulateContractErrorType =\n  | ParseAccountErrorType\n  | EncodeFunctionDataErrorType\n  | GetContractErrorReturnType<CallErrorType | DecodeFunctionResultErrorType>\n  | ErrorType\n\n/**\n * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n *\n * - Docs: https://viem.sh/docs/contract/simulateContract.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateContractParameters}\n * @returns The simulation result and write request. {@link SimulateContractReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n *   functionName: 'mint',\n *   args: ['69420'],\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function simulateContract<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...callRequest\n  }: SimulateContractParameters<TAbi, TFunctionName, TChain, TChainOverride>,\n): Promise<\n  SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n> {\n  const account = callRequest.account\n    ? parseAccount(callRequest.account)\n    : undefined\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      batch: false,\n      data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      ...callRequest,\n    } as unknown as CallParameters<TChain>)\n    const result = decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    } as DecodeFunctionResultParameters)\n    return {\n      result,\n      request: {\n        abi,\n        address,\n        args,\n        dataSuffix,\n        functionName,\n        ...callRequest,\n      },\n    } as unknown as SimulateContractReturnType<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TChainOverride\n    >\n  } catch (err) {\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/simulateContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n", "import type { ErrorType } from '../errors/utils.js'\nimport type { MaybePromise } from '../types/utils.js'\n\ntype Callback = ((...args: any[]) => any) | undefined\ntype Callbacks = Record<string, Callback>\n\nexport type ObserveErrorType = ErrorType\n\nexport const listenersCache = /*#__PURE__*/ new Map<\n  string,\n  { id: number; fns: Callbacks }[]\n>()\nexport const cleanupCache = /*#__PURE__*/ new Map<string, () => void>()\n\ntype EmitFunction<TCallbacks extends Callbacks> = (\n  emit: TCallbacks,\n) => MaybePromise<void | (() => void)>\n\nlet callbackCount = 0\n\n/**\n * @description Sets up an observer for a given function. If another function\n * is set up under the same observer id, the function will only be called once\n * for both instances of the observer.\n */\nexport function observe<TCallbacks extends Callbacks>(\n  observerId: string,\n  callbacks: TCallbacks,\n  fn: EmitFunction<TCallbacks>,\n) {\n  const callbackId = ++callbackCount\n\n  const getListeners = () => listenersCache.get(observerId) || []\n\n  const unsubscribe = () => {\n    const listeners = getListeners()\n    listenersCache.set(\n      observerId,\n      listeners.filter((cb: any) => cb.id !== callbackId),\n    )\n  }\n\n  const unwatch = () => {\n    const cleanup = cleanupCache.get(observerId)\n    if (getListeners().length === 1 && cleanup) cleanup()\n    unsubscribe()\n  }\n\n  const listeners = getListeners()\n  listenersCache.set(observerId, [\n    ...listeners,\n    { id: callbackId, fns: callbacks },\n  ])\n\n  if (listeners && listeners.length > 0) return unwatch\n\n  const emit: TCallbacks = {} as TCallbacks\n  for (const key in callbacks) {\n    emit[key] = ((\n      ...args: Parameters<NonNullable<TCallbacks[keyof TCallbacks]>>\n    ) => {\n      const listeners = getListeners()\n      if (listeners.length === 0) return\n      for (const listener of listeners) listener.fns[key]?.(...args)\n    }) as TCallbacks[Extract<keyof TCallbacks, string>]\n  }\n\n  const cleanup = fn(emit)\n  if (typeof cleanup === 'function') cleanupCache.set(observerId, cleanup)\n\n  return unwatch\n}\n", "export async function wait(time: number) {\n  return new Promise((res) => setTimeout(res, time))\n}\n", "import type { ErrorType } from '../errors/utils.js'\nimport { wait } from './wait.js'\n\ntype PollOptions<TData> = {\n  // Whether or not to emit when the polling starts.\n  emitOnBegin?: boolean\n  // The initial wait time (in ms) before polling.\n  initialWaitTime?: (data: TData | void) => Promise<number>\n  // The interval (in ms).\n  interval: number\n}\n\nexport type PollErrorType = ErrorType\n\n/**\n * @description Polls a function at a specified interval.\n */\nexport function poll<TData>(\n  fn: ({ unpoll }: { unpoll: () => void }) => Promise<TData | void>,\n  { emitOnBegin, initialWaitTime, interval }: PollOptions<TData>,\n) {\n  let active = true\n\n  const unwatch = () => (active = false)\n\n  const watch = async () => {\n    let data: TData | void = undefined\n    if (emitOnBegin) data = await fn({ unpoll: unwatch })\n\n    const initialWait = (await initialWaitTime?.(data)) ?? interval\n    await wait(initialWait)\n\n    const poll = async () => {\n      if (!active) return\n      await fn({ unpoll: unwatch })\n      await wait(interval)\n      poll()\n    }\n\n    poll()\n  }\n  watch()\n\n  return unwatch\n}\n", "import type { ErrorType } from '../../errors/utils.js'\n\nexport const promiseCache = /*#__PURE__*/ new Map()\nexport const responseCache = /*#__PURE__*/ new Map()\n\nexport type GetCacheErrorType = ErrorType\n\nexport function getCache<TData>(cacheKey: string) {\n  const buildCache = <TData>(cacheKey: string, cache: Map<string, TData>) => ({\n    clear: () => cache.delete(cacheKey),\n    get: () => cache.get(cacheKey),\n    set: (data: TData) => cache.set(cacheKey, data),\n  })\n\n  const promise = buildCache<Promise<TData>>(cacheKey, promiseCache)\n  const response = buildCache<{ created: Date; data: TData }>(\n    cacheKey,\n    responseCache,\n  )\n\n  return {\n    clear: () => {\n      promise.clear()\n      response.clear()\n    },\n    promise,\n    response,\n  }\n}\n\nexport type WithCacheParameters = {\n  /** The key to cache the data against. */\n  cacheKey: string\n  /** The time that cached data will remain in memory. Default: Infinity (no expiry) */\n  cacheTime?: number\n}\n\n/**\n * @description Returns the result of a given promise, and caches the result for\n * subsequent invocations against a provided cache key.\n */\nexport async function withCache<TData>(\n  fn: () => Promise<TData>,\n  { cacheKey, cacheTime = Infinity }: WithCacheParameters,\n) {\n  const cache = getCache<TData>(cacheKey)\n\n  // If a response exists in the cache, and it's not expired, return it\n  // and do not invoke the promise.\n  // If the max age is 0, the cache is disabled.\n  const response = cache.response.get()\n  if (response && cacheTime > 0) {\n    const age = new Date().getTime() - response.created.getTime()\n    if (age < cacheTime) return response.data\n  }\n\n  let promise = cache.promise.get()\n  if (!promise) {\n    promise = fn()\n\n    // Store the promise in the cache so that subsequent invocations\n    // will wait for the same promise to resolve (deduping).\n    cache.promise.set(promise)\n  }\n\n  try {\n    const data = await promise\n\n    // Store the response in the cache so that subsequent invocations\n    // will return the same response.\n    cache.response.set({ created: new Date(), data })\n\n    return data\n  } finally {\n    // Clear the promise cache so that subsequent invocations will\n    // invoke the promise again.\n    cache.promise.clear()\n  }\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { getCache, withCache } from '../../utils/promise/withCache.js'\n\nexport type GetBlockNumberParameters = {\n  /** Time (in ms) that cached block number will remain in memory. */\n  cacheTime?: number\n  /** @deprecated use `cacheTime` instead. */\n  maxAge?: number\n}\n\nexport type GetBlockNumberReturnType = bigint\n\nexport type GetBlockNumberErrorType = RequestErrorType | ErrorType\n\nconst cacheKey = (id: string) => `blockNumber.${id}`\n\nexport function getBlockNumberCache(id: string) {\n  return getCache(cacheKey(id))\n}\n\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { cacheTime = client.cacheTime, maxAge }: GetBlockNumberParameters = {},\n): Promise<GetBlockNumberReturnType> {\n  const blockNumberHex = await withCache(\n    () =>\n      client.request({\n        method: 'eth_blockNumber',\n      }),\n    { cacheKey: cacheKey(client.uid), cacheTime: maxAge ?? cacheTime },\n  )\n  return BigInt(blockNumberHex)\n}\n", "import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter, FilterType } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from '../../utils/abi/decodeEventLog.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterChangesParameters<\n  TFilterType extends FilterType = FilterType,\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<\n    TFilterType,\n    TAbi,\n    TEventName,\n    any,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n\nexport type GetFilterChangesReturnType<\n  TFilterType extends FilterType = FilterType,\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = TAbi extends Abi\n    ? TEventName extends string\n      ? ExtractAbiEvent<TAbi, TEventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = TFilterType extends 'event'\n  ? Log<bigint, number, _Pending, _AbiEvent, TStrict, TAbi, TEventName>[]\n  : Hash[]\n\nexport type GetFilterChangesErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterChanges.html\n * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n *\n * A Filter can be created from the following actions:\n *\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n *\n * Depending on the type of filter, the return value will be different:\n *\n * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterChangesParameters}\n * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n *\n * @example\n * // Blocks\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n *\n * @example\n * // Contract Events\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n *   eventName: 'Transfer',\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Raw Events\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Transactions\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n */\nexport async function getFilterChanges<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n  TFilterType extends FilterType,\n  const TAbi extends Abi | readonly unknown[] | undefined,\n  TEventName extends string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<TTransport, TChain>,\n  {\n    filter,\n  }: GetFilterChangesParameters<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >,\n): Promise<\n  GetFilterChangesReturnType<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n> {\n  const strict = 'strict' in filter && filter.strict\n\n  const logs = await filter.request({\n    method: 'eth_getFilterChanges',\n    params: [filter.id],\n  })\n  return logs\n    .map((log) => {\n      if (typeof log === 'string') return log\n      try {\n        const { eventName, args } =\n          'abi' in filter && filter.abi\n            ? decodeEventLog({\n                abi: filter.abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n            : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if ('strict' in filter && filter.strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args undefined if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as GetFilterChangesReturnType<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type UninstallFilterParameters = {\n  filter: Filter<any>\n}\nexport type UninstallFilterReturnType = boolean\n\nexport type UninstallFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Destroys a [`Filter`](https://viem.sh/docs/glossary/types.html#filter).\n *\n * - Docs: https://viem.sh/docs/actions/public/uninstallFilter.html\n * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n *\n * Destroys a Filter that was created from one of the following Actions:\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n *\n * @param client - Client to use\n * @param parameters - {@link UninstallFilterParameters}\n * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n *\n * const filter = await createPendingTransactionFilter(client)\n * const uninstalled = await uninstallFilter(client, { filter })\n * // true\n */\nexport async function uninstallFilter<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  _client: Client<TTransport, TChain>,\n  { filter }: UninstallFilterParameters,\n): Promise<UninstallFilterReturnType> {\n  return filter.request({\n    method: 'eth_uninstallFilter',\n    params: [filter.id],\n  })\n}\n", "import type { Abi, Address, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetEventArgs, InferEventName } from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\n\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type CreateContractEventFilterParameters,\n  createContractEventFilter,\n} from './createContractEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport {\n  type GetContractEventsParameters,\n  getContractEvents,\n} from './getContractEvents.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchContractEventOnLogsParameter<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = TAbi extends Abi\n  ? Log<bigint, number, false, ExtractAbiEvent<TAbi, TEventName>, TStrict>[]\n  : Log[]\nexport type WatchContractEventOnLogsFn<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = (logs: WatchContractEventOnLogsParameter<TAbi, TEventName, TStrict>) => void\n\nexport type WatchContractEventParameters<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[]\n  /** Contract ABI. */\n  abi: TAbi\n  args?: GetEventArgs<TAbi, TEventName>\n  /** Contract event. */\n  eventName?: InferEventName<TAbi, TEventName>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchContractEventOnLogsFn<TAbi, TEventName, TStrict>\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: TStrict\n} & (GetTransportConfig<Transport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    })\n\nexport type WatchContractEventReturnType = () => void\n\nexport type WatchContractEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted contract event logs.\n *\n * - Docs: https://viem.sh/docs/contract/watchContractEvent.html\n *\n * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n *\n * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchContractEventParameters}\n * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchContractEvent } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchContractEvent(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n *   eventName: 'Transfer',\n *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchContractEvent<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TStrict extends boolean | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    batch = true,\n    eventName,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchContractEventParameters<TAbi, TEventName, TStrict>,\n): WatchContractEventReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  const pollContractEvent = () => {\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n    ])\n    const strict = strict_ ?? false\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      let filter: Filter<'event', TAbi, TEventName> | undefined\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createContractEventFilter,\n                'createContractEventFilter',\n              )({\n                abi,\n                address,\n                args,\n                eventName,\n                strict,\n              } as unknown as CreateContractEventFilterParameters)) as Filter<\n                'event',\n                TAbi,\n                TEventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getAction(\n                  client,\n                  getContractEvents,\n                  'getContractEvents',\n                )({\n                  abi,\n                  address,\n                  args,\n                  eventName,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                  strict,\n                } as {} as GetContractEventsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitalize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeContractEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const topics: LogTopic[] = eventName\n          ? encodeEventTopics({\n              abi: abi,\n              eventName: eventName,\n              args,\n            } as EncodeEventTopicsParameters)\n          : []\n\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict: strict_,\n              })\n              const formatted = formatLog(log, {\n                args,\n                eventName: eventName as string,\n              })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName\n              let isUnnamed\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollContractEvent() : subscribeContractEvent()\n}\n", "import {\n  ChainMismatchError,\n  type ChainMismatchErrorType,\n  ChainNotFoundError,\n  type ChainNotFoundErrorType,\n} from '../../errors/chain.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type AssertCurrentChainParameters = {\n  chain?: Chain\n  currentChainId: number\n}\n\nexport type AssertCurrentChainErrorType =\n  | ChainNotFoundErrorType\n  | ChainMismatchErrorType\n  | ErrorType\n\nexport function assertCurrentChain({\n  chain,\n  currentChainId,\n}: AssertCurrentChainParameters): void {\n  if (!chain) throw new ChainNotFoundError()\n  if (currentChainId !== chain.id)\n    throw new ChainMismatchError({ chain, currentChainId })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport {\n  TransactionExecutionError,\n  type TransactionExecutionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetTransactionErrorParameters = Omit<\n  SendTransactionParameters,\n  'account' | 'chain'\n> & {\n  account: Account\n  chain?: Chain\n  docsPath?: string\n}\n\nexport type GetTransactionErrorReturnType<cause = ErrorType> = Omit<\n  TransactionExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getTransactionError<err extends ErrorType<string>>(\n  err: err,\n  { docsPath, ...args }: GetTransactionErrorParameters,\n): GetTransactionErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new TransactionExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetTransactionErrorReturnType<err>\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\n\nexport type GetChainIdReturnType = number\n\nexport type GetChainIdErrorType =\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the chain ID associated with the current network.\n *\n * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n *\n * @param client - Client to use\n * @returns The current chain ID. {@link GetChainIdReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getChainId } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const chainId = await getChainId(client)\n * // 1\n */\nexport async function getChainId<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>): Promise<GetChainIdReturnType> {\n  const chainIdHex = await client.request({\n    method: 'eth_chainId',\n  })\n  return hexToNumber(chainIdHex)\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionSerialized } from '../../types/transaction.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SendRawTransactionParameters = {\n  /**\n   * The signed serialized tranasction.\n   */\n  serializedTransaction: TransactionSerialized\n}\n\nexport type SendRawTransactionReturnType = Hash\n\nexport type SendRawTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Sends a **signed** transaction to the network\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *\n * @param client - Client to use\n * @param parameters - {@link SendRawTransactionParameters}\n * @returns The transaction hash. {@link SendRawTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendRawTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const hash = await sendRawTransaction(client, {\n *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n * })\n */\nexport async function sendRawTransaction<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { serializedTransaction }: SendRawTransactionParameters,\n): Promise<SendRawTransactionReturnType> {\n  return client.request({\n    method: 'eth_sendRawTransaction',\n    params: [serializedTransaction],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type {\n  TransactionRequest,\n  TransactionSerializable,\n} from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport {\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from '../../utils/errors/getTransactionError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\nimport {\n  type PrepareTransactionRequestErrorType,\n  prepareTransactionRequest,\n} from './prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from './sendRawTransaction.js'\n\nexport type SendTransactionParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type SendTransactionReturnType = Hash\n\nexport type SendTransactionErrorType =\n  | ParseAccountErrorType\n  | GetTransactionErrorReturnType<\n      | AssertCurrentChainErrorType\n      | AssertRequestErrorType\n      | GetChainIdErrorType\n      | PrepareTransactionRequestErrorType\n      | SendRawTransactionReturnType\n      | SignTransactionErrorType\n      | RequestErrorType\n    >\n  | ErrorType\n\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: SendTransactionParameters<TChain, TAccount, TChainOverride>,\n): Promise<SendTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    accessList,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    })\n  const account = parseAccount(account_)\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    let chainId\n    if (chain !== null) {\n      chainId = await getAction(client, getChainId, 'getChainId')({})\n      assertCurrentChain({\n        currentChainId: chainId,\n        chain,\n      })\n    }\n\n    if (account.type === 'local') {\n      // Prepare the request for signing (assign appropriate fees, etc.)\n      const request = await getAction(\n        client,\n        prepareTransactionRequest,\n        'prepareTransactionRequest',\n      )({\n        account,\n        accessList,\n        chain,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value,\n        ...rest,\n      } as any)\n\n      if (!chainId)\n        chainId = await getAction(client, getChainId, 'getChainId')({})\n\n      const serializer = chain?.serializers?.transaction\n      const serializedTransaction = (await account.signTransaction(\n        {\n          ...request,\n          chainId,\n        } as TransactionSerializable,\n        { serializer },\n      )) as Hash\n      return await getAction(\n        client,\n        sendRawTransaction,\n        'sendRawTransaction',\n      )({\n        serializedTransaction,\n      })\n    }\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      accessList,\n      data,\n      from: account.address,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n    return await client.request({\n      method: 'eth_sendTransaction',\n      params: [request],\n    })\n  } catch (err) {\n    throw getTransactionError(err as BaseError, {\n      ...args,\n      account,\n      chain: args.chain || undefined,\n    })\n  }\n}\n", "import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { ContractFunctionConfig, GetValue } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type WriteContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride> &\n  UnionOmit<\n    FormattedTransactionRequest<\n      TChainOverride extends Chain ? TChainOverride : TChain\n    >,\n    'from' | 'to' | 'data' | 'value'\n  > &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    FormattedTransactionRequest<\n      TChainOverride extends Chain ? TChainOverride : TChain\n    >['value']\n  > & {\n    /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n    dataSuffix?: Hex\n  }\n\nexport type WriteContractReturnType = SendTransactionReturnType\n\nexport type WriteContractErrorType =\n  | EncodeFunctionDataErrorType\n  | SendTransactionErrorType\n  | ErrorType\n\n/**\n * Executes a write function on a contract.\n *\n * - Docs: https://viem.sh/docs/contract/writeContract.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n *\n * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * __Warning: The `write` internally sends a transaction \u2013 it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n *\n * @param client - Client to use\n * @param parameters - {@link WriteContractParameters}\n * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms.html#hash). {@link WriteContractReturnType}\n *\n * @example\n * import { createWalletClient, custom, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await writeContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * })\n *\n * @example\n * // With Validation\n * import { createWalletClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract, writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const { request } = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * }\n * const hash = await writeContract(client, request)\n */\nexport async function writeContract<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...request\n  }: WriteContractParameters<\n    TAbi,\n    TFunctionName,\n    TChain,\n    TAccount,\n    TChainOverride\n  >,\n): Promise<WriteContractReturnType> {\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  const hash = await getAction(\n    client,\n    sendTransaction,\n    'sendTransaction',\n  )({\n    data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n    to: address,\n    ...request,\n  } as unknown as SendTransactionParameters<TChain, TAccount, TChainOverride>)\n  return hash\n}\n", "import type {\n  Abi,\n  AbiEvent,\n  AbiFunction,\n  AbiParametersToPrimitiveTypes,\n  Address,\n  ExtractAbiEvent,\n  ExtractAbiEventNames,\n  ExtractAbiFunction,\n  ExtractAbiFunctionNames,\n} from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { Client } from '../clients/createClient.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  AbiEventParametersToPrimitiveTypes,\n  MaybeExtractEventArgsFromAbi,\n} from '../types/contract.js'\nimport type {\n  IsNarrowable,\n  IsNever,\n  IsUndefined,\n  Or,\n  Prettify,\n  UnionOmit,\n} from '../types/utils.js'\n\nimport type { ErrorType } from '../errors/utils.js'\nimport { getAction } from '../utils/getAction.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from './public/createContractEventFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from './public/estimateContractGas.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from './public/getContractEvents.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from './public/readContract.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from './public/simulateContract.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from './public/watchContractEvent.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from './wallet/writeContract.js'\n\nexport type GetContractParameters<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TPublicClient extends Client<TTransport, TChain> | unknown = unknown,\n  TWalletClient extends\n    | Client<TTransport, TChain, TAccount>\n    | unknown = unknown,\n  TAddress extends Address = Address,\n> = {\n  /** Contract ABI */\n  abi: TAbi\n  /** Contract address */\n  address: TAddress\n  /**\n   * Public client\n   *\n   * If you pass in a [`publicClient`](https://viem.sh/docs/clients/public.html), the following methods are available:\n   *\n   * - [`createEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n   * - [`estimateGas`](https://viem.sh/docs/contract/estimateContractGas.html)\n   * - [`getEvents`](https://viem.sh/docs/contract/getContractEvents.html)\n   * - [`read`](https://viem.sh/docs/contract/readContract.html)\n   * - [`simulate`](https://viem.sh/docs/contract/simulateContract.html)\n   * - [`watchEvent`](https://viem.sh/docs/contract/watchContractEvent.html)\n   */\n  publicClient?: TPublicClient\n  /**\n   * Wallet client\n   *\n   * If you pass in a [`walletClient`](https://viem.sh/docs/clients/wallet.html), the following methods are available:\n   *\n   * - [`estimateGas`](https://viem.sh/docs/contract/estimateContractGas.html)\n   * - [`write`](https://viem.sh/docs/contract/writeContract.html)\n   */\n  walletClient?: TWalletClient\n}\n\nexport type GetContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TPublicClient extends Client | unknown = unknown,\n  TWalletClient extends Client | unknown = unknown,\n  TAddress extends Address = Address,\n  _EventNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiEventNames<TAbi>\n    : string,\n  _ReadFunctionNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi, 'pure' | 'view'>\n    : string,\n  _WriteFunctionNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi, 'nonpayable' | 'payable'>\n    : string,\n  _Narrowable extends boolean = IsNarrowable<TAbi, Abi>,\n> = Prettify<\n  (TPublicClient extends Client\n    ? (IsNever<_ReadFunctionNames> extends true\n        ? unknown\n        : {\n            /**\n             * Calls a read-only function on a contract, and returns the response.\n             *\n             * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n             *\n             * Internally, `read` uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n             *\n             * @example\n             * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const publicClient = createPublicClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi([\n             *     'function balanceOf(address owner) view returns (uint256)',\n             *   ]),\n             *   publicClient,\n             * })\n             * const result = await contract.read.balanceOf(['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'])\n             * // 424122n\n             */\n            read: {\n              [_FunctionName in _ReadFunctionNames]: GetReadFunction<\n                _Narrowable,\n                TAbi,\n                _FunctionName\n              >\n            }\n          }) &\n        (IsNever<_WriteFunctionNames> extends true\n          ? unknown\n          : {\n              /**\n               * Estimates the gas necessary to complete a transaction without submitting it to the network.\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['function mint() public']),\n               *   publicClient,\n               * })\n               * const gas = await contract.estimateGas.mint({\n               *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n               * })\n               */\n              estimateGas: {\n                [_FunctionName in _WriteFunctionNames]: GetEstimateFunction<\n                  _Narrowable,\n                  TPublicClient['chain'],\n                  undefined,\n                  TAbi,\n                  _FunctionName\n                >\n              }\n              /**\n               * Simulates/validates a contract interaction. This is useful for retrieving return data and revert reasons of contract write functions.\n               *\n               * This function does not require gas to execute and does not change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n               *\n               * Internally, `simulate` uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['function mint() public']),\n               *   publicClient,\n               * })\n               * const result = await contract.simulate.mint({\n               *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n               * })\n               */\n              simulate: {\n                [_FunctionName in _WriteFunctionNames]: GetSimulateFunction<\n                  _Narrowable,\n                  TPublicClient['chain'],\n                  TAbi,\n                  _FunctionName\n                >\n              }\n            }) &\n        (IsNever<_EventNames> extends true\n          ? unknown\n          : {\n              /**\n               * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n               *   publicClient,\n               * })\n               * const filter = await contract.createEventFilter.Transfer()\n               */\n              createEventFilter: {\n                [_EventName in _EventNames]: GetEventFilter<\n                  _Narrowable,\n                  TAbi,\n                  _EventName\n                >\n              }\n              /**\n               * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n               *   publicClient,\n               * })\n               * const filter = await contract.createEventFilter.Transfer()\n               */\n              getEvents: {\n                [_EventName in _EventNames]: GetEventsFunction<\n                  _Narrowable,\n                  TAbi,\n                  _EventName\n                >\n              }\n              /**\n               * Watches and returns emitted contract event logs.\n               *\n               * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n               *\n               * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getEvents`](https://viem.sh/docs/actions/public/getEvents.html) instead.\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n               *   publicClient,\n               * })\n               * const filter = await contract.createEventFilter.Transfer()\n               * const unwatch = contract.watchEvent.Transfer(\n               *   { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n               *   { onLogs: (logs) => console.log(logs) },\n               * )\n               */\n              watchEvent: {\n                [_EventName in _EventNames]: GetWatchEvent<\n                  _Narrowable,\n                  TAbi,\n                  _EventName\n                >\n              }\n            })\n    : unknown) &\n    (TWalletClient extends Client\n      ? IsNever<_WriteFunctionNames> extends true\n        ? unknown\n        : {\n            /**\n             * Estimates the gas necessary to complete a transaction without submitting it to the network.\n             *\n             * @example\n             * import { createWalletClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const walletClient = createWalletClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi(['function mint() public']),\n             *   walletClient,\n             * })\n             * const gas = await contract.estimateGas.mint({\n             *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n             * })\n             */\n            estimateGas: {\n              [_FunctionName in _WriteFunctionNames]: GetEstimateFunction<\n                _Narrowable,\n                TWalletClient['chain'],\n                TWalletClient['account'],\n                TAbi,\n                _FunctionName\n              >\n            }\n            /**\n             * Executes a write function on a contract.\n             *\n             * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n             *\n             * Internally, `write` uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n             *\n             * __Warning: The `write` internally sends a transaction \u2013 it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n             *\n             * @example\n             * import { createWalletClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const walletClient = createWalletClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n             *   walletClient,\n             * })\n             * const hash = await contract.write.min([69420], {\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             * })\n             */\n            write: {\n              [_FunctionName in _WriteFunctionNames]: GetWriteFunction<\n                _Narrowable,\n                TWalletClient['chain'],\n                TWalletClient['account'],\n                TAbi,\n                _FunctionName\n              >\n            }\n          }\n      : unknown)\n> & { address: TAddress; abi: TAbi }\n\nexport type GetContractErrorType = ErrorType\n\n/**\n * Gets type-safe interface for performing contract-related actions with a specific `abi` and `address`.\n *\n * - Docs https://viem.sh/docs/contract/getContract.html\n *\n * Using Contract Instances can make it easier to work with contracts if you don't want to pass the `abi` and `address` properites every time you perform contract actions, e.g. [`readContract`](https://viem.sh/docs/contract/readContract.html), [`writeContract`](https://viem.sh/docs/contract/writeContract.html), [`estimateContractGas`](https://viem.sh/docs/contract/estimateContractGas.html), etc.\n *\n * @example\n * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const publicClient = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const contract = getContract({\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi([\n *     'function balanceOf(address owner) view returns (uint256)',\n *     'function ownerOf(uint256 tokenId) view returns (address)',\n *     'function totalSupply() view returns (uint256)',\n *   ]),\n *   publicClient,\n * })\n */\nexport function getContract<\n  TTransport extends Transport,\n  TAddress extends Address,\n  const TAbi extends Abi | readonly unknown[],\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TPublicClient extends Client<TTransport, TChain> | undefined =\n    | Client<TTransport, TChain>\n    | undefined,\n  TWalletClient extends Client<TTransport, TChain, TAccount> | undefined =\n    | Client<TTransport, TChain, TAccount>\n    | undefined,\n>({\n  abi,\n  address,\n  publicClient,\n  walletClient,\n}: GetContractParameters<\n  TTransport,\n  TChain,\n  TAccount,\n  TAbi,\n  TPublicClient,\n  TWalletClient,\n  TAddress\n>): GetContractReturnType<TAbi, TPublicClient, TWalletClient, TAddress> {\n  const hasPublicClient = publicClient !== undefined && publicClient !== null\n  const hasWalletClient = walletClient !== undefined && walletClient !== null\n\n  const contract: {\n    [_ in\n      | 'abi'\n      | 'address'\n      | 'createEventFilter'\n      | 'estimateGas'\n      | 'getEvents'\n      | 'read'\n      | 'simulate'\n      | 'watchEvent'\n      | 'write']?: unknown\n  } = {}\n\n  let hasReadFunction = false\n  let hasWriteFunction = false\n  let hasEvent = false\n  for (const item of abi as Abi) {\n    if (item.type === 'function')\n      if (item.stateMutability === 'view' || item.stateMutability === 'pure')\n        hasReadFunction = true\n      else hasWriteFunction = true\n    else if (item.type === 'event') hasEvent = true\n    // Exit early if all flags are `true`\n    if (hasReadFunction && hasWriteFunction && hasEvent) break\n  }\n\n  if (hasPublicClient) {\n    if (hasReadFunction)\n      contract.read = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  ReadContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                publicClient,\n                readContract,\n                'readContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as ReadContractParameters)\n            }\n          },\n        },\n      )\n\n    if (hasWriteFunction)\n      contract.simulate = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  SimulateContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                publicClient,\n                simulateContract,\n                'simulateContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as SimulateContractParameters)\n            }\n          },\n        },\n      )\n\n    if (hasEvent) {\n      contract.createEventFilter = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  CreateContractEventFilterParameters,\n                  'abi' | 'address' | 'eventName' | 'args'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                createContractEventFilter,\n                'createContractEventFilter',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as CreateContractEventFilterParameters)\n            }\n          },\n        },\n      )\n      contract.getEvents = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  GetContractEventsParameters,\n                  'abi' | 'address' | 'eventName'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                getContractEvents,\n                'getContractEvents',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as unknown as GetContractEventsParameters)\n            }\n          },\n        },\n      )\n      contract.watchEvent = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  WatchContractEventParameters,\n                  'abi' | 'address' | 'eventName'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                watchContractEvent,\n                'watchContractEvent',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as unknown as WatchContractEventParameters)\n            }\n          },\n        },\n      )\n    }\n  }\n\n  if (hasWalletClient) {\n    if (hasWriteFunction)\n      contract.write = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  WriteContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                walletClient,\n                writeContract,\n                'writeContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as unknown as WriteContractParameters<\n                TAbi,\n                typeof functionName,\n                TChain,\n                TAccount\n              >)\n            }\n          },\n        },\n      )\n  }\n\n  if (hasPublicClient || hasWalletClient)\n    if (hasWriteFunction)\n      contract.estimateGas = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  EstimateContractGasParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              const client = (publicClient ?? walletClient)!\n              return getAction(\n                client,\n                estimateContractGas,\n                'estimateContractGas',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n                account:\n                  (options as EstimateContractGasParameters).account ??\n                  (walletClient as unknown as Client).account,\n              } as any)\n            }\n          },\n        },\n      )\n  contract.address = address\n  contract.abi = abi\n\n  return contract as unknown as GetContractReturnType<\n    TAbi,\n    TPublicClient,\n    TWalletClient,\n    TAddress\n  >\n}\n\n/**\n * @internal exporting for testing only\n */\nexport function getFunctionParameters(\n  values: [args?: readonly unknown[], options?: object],\n) {\n  const hasArgs = values.length && Array.isArray(values[0])\n  const args = hasArgs ? values[0]! : []\n  const options = (hasArgs ? values[1] : values[0]) ?? {}\n  return { args, options }\n}\n\n/**\n * @internal exporting for testing only\n */\nexport function getEventParameters(\n  values: [args?: object | unknown[], options?: object],\n  abiEvent: AbiEvent,\n) {\n  let hasArgs = false\n  // If first item is array, must be `args`\n  if (Array.isArray(values[0])) hasArgs = true\n  // Check if first item is `args` or `options`\n  else if (values.length === 1) {\n    // if event has indexed inputs, must have `args`\n    hasArgs = abiEvent.inputs.some((x) => x.indexed)\n    // If there are two items in array, must have `args`\n  } else if (values.length === 2) {\n    hasArgs = true\n  }\n\n  const args = hasArgs ? values[0]! : undefined\n  const options = (hasArgs ? values[1] : values[0]) ?? {}\n  return { args, options }\n}\n\ntype GetReadFunction<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  Options = Prettify<\n    UnionOmit<\n      ReadContractParameters<TAbi, TFunctionName>,\n      'abi' | 'address' | 'args' | 'functionName'\n    >\n  >,\n> = Narrowable extends true\n  ? (\n      ...parameters: Args extends readonly []\n        ? [options?: Options]\n        : [args: Args, options?: Options]\n    ) => Promise<ReadContractReturnType<TAbi, TFunctionName>>\n  : (\n      ...parameters:\n        | [options?: Options]\n        | [args: readonly unknown[], options?: Options]\n    ) => Promise<ReadContractReturnType>\n\ntype GetEstimateFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  Options = Prettify<\n    UnionOmit<\n      EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n      'abi' | 'address' | 'args' | 'functionName'\n    >\n  >,\n  // For making `options` parameter required if `TAccount`\n  IsOptionsRequired = IsUndefined<TAccount>,\n> = Narrowable extends true\n  ? (\n      ...parameters: Args extends readonly []\n        ? IsOptionsRequired extends true\n          ? [options: Options]\n          : [options?: Options]\n        : [\n            args: Args,\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<EstimateContractGasReturnType>\n  : (\n      ...parameters:\n        | (IsOptionsRequired extends true\n            ? [options: Options]\n            : [options?: Options])\n        | [\n            args: readonly unknown[],\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<EstimateContractGasReturnType>\n\ntype GetSimulateFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n> = Narrowable extends true\n  ? <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          SimulateContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters: Args extends readonly []\n        ? [options?: Options]\n        : [args: Args, options?: Options]\n    ) => Promise<\n      SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n    >\n  : <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          SimulateContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters:\n        | [options?: Options]\n        | [args: readonly unknown[], options?: Options]\n    ) => Promise<SimulateContractReturnType>\n\ntype GetWriteFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  // For making `options` parameter required if `TAccount` or `TChain` is undefined\n  IsOptionsRequired = Or<[IsUndefined<TAccount>, IsUndefined<TChain>]>,\n> = Narrowable extends true\n  ? <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          WriteContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TAccount,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters: Args extends readonly []\n        ? IsOptionsRequired extends true\n          ? [options: Options]\n          : [options?: Options]\n        : [\n            args: Args,\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<WriteContractReturnType>\n  : <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          WriteContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TAccount,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n      Rest extends unknown[] = IsOptionsRequired extends true\n        ? [options: Options]\n        : [options?: Options],\n    >(\n      ...parameters: Rest | [args: readonly unknown[], ...parameters: Rest]\n    ) => Promise<WriteContractReturnType>\n\ntype GetEventFilter<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TAbiEvent extends AbiEvent = TAbi extends Abi\n    ? ExtractAbiEvent<TAbi, TEventName>\n    : AbiEvent,\n  Args = AbiEventParametersToPrimitiveTypes<TAbiEvent['inputs']>,\n  Options = Prettify<\n    Omit<\n      CreateContractEventFilterParameters<TAbi, TEventName>,\n      'abi' | 'address' | 'args' | 'eventName' | 'strict'\n    >\n  >,\n  IndexedInputs = Extract<TAbiEvent['inputs'][number], { indexed: true }>,\n> = Narrowable extends true\n  ? <\n      const TArgs extends\n        | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n        | undefined,\n      TStrict extends boolean | undefined = undefined,\n    >(\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options?: Options & { strict?: TStrict }]\n        : [\n            args: Args | (Args extends TArgs ? Readonly<TArgs> : never),\n            options?: Options & { strict?: TStrict },\n          ]\n    ) => Promise<\n      CreateContractEventFilterReturnType<TAbi, TEventName, TArgs, TStrict>\n    >\n  : <TStrict extends boolean | undefined = undefined>(\n      ...parameters:\n        | [options?: Options & { strict?: TStrict }]\n        | [\n            args: readonly unknown[] | CreateContractFilterOptions,\n            options?: Options & { strict?: TStrict },\n          ]\n    ) => Promise<CreateContractEventFilterReturnType>\n\ntype GetEventsFunction<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TAbiEvent extends AbiEvent = TAbi extends Abi\n    ? ExtractAbiEvent<TAbi, TEventName>\n    : AbiEvent,\n  Args = AbiEventParametersToPrimitiveTypes<TAbiEvent['inputs']>,\n  Options = Prettify<\n    Omit<\n      GetContractEventsParameters<TAbi, TEventName>,\n      'abi' | 'address' | 'args' | 'eventName'\n    >\n  >,\n  IndexedInputs = Extract<TAbiEvent['inputs'][number], { indexed: true }>,\n> = Narrowable extends true\n  ? (\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options?: Options]\n        : [args?: Args, options?: Options]\n    ) => Promise<GetContractEventsReturnType<TAbi, TEventName>>\n  : (\n      ...parameters:\n        | [options?: Options]\n        | [\n            args?: readonly unknown[] | WatchContractEventOptions,\n            options?: Options,\n          ]\n    ) => Promise<GetContractEventsReturnType<TAbi, TEventName>>\n\ntype GetWatchEvent<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TAbiEvent extends AbiEvent = TAbi extends Abi\n    ? ExtractAbiEvent<TAbi, TEventName>\n    : AbiEvent,\n  Args = AbiEventParametersToPrimitiveTypes<TAbiEvent['inputs']>,\n  Options = Prettify<\n    Omit<\n      WatchContractEventParameters<TAbi, TEventName>,\n      'abi' | 'address' | 'args' | 'eventName'\n    >\n  >,\n  IndexedInputs = Extract<TAbiEvent['inputs'][number], { indexed: true }>,\n> = Narrowable extends true\n  ? (\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options: Options]\n        : [args: Args, options: Options]\n    ) => WatchContractEventReturnType\n  : (\n      ...parameters:\n        | [options?: Options]\n        | [\n            args: readonly unknown[] | WatchContractEventOptions,\n            options?: Options,\n          ]\n    ) => WatchContractEventReturnType\n\ntype CreateContractFilterOptions =\n  RemoveProperties<CreateContractEventFilterParameters>\ntype WatchContractEventOptions = RemoveProperties<WatchContractEventParameters>\n\ntype RemoveProperties<T extends object> = Prettify<\n  {\n    [key: string]: unknown\n  } & {\n    [_ in keyof T]?: never\n  }\n>\n", "import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n", "// Tree-shaking doesn't work well when we import from an index entrypoint. We don't\n// want to bundle libs like `@noble/curves`, etc within the `/accounts` entrypoint\n// as that will dramatically increase bundle size. So we export the modules directly.\nexport { parseAccount } from '../accounts/utils/parseAccount.js'\nexport { publicKeyToAddress } from '../accounts/utils/publicKeyToAddress.js'\n", "const size = 256\nlet index = size\nlet buffer: string\n\nexport function uid(length = 11) {\n  if (!buffer || index + length > size * 2) {\n    buffer = ''\n    index = 0\n    for (let i = 0; i < size; i++) {\n      buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1)\n    }\n  }\n  return buffer.substring(index, index++ + length)\n}\n", "import type { Address } from 'abitype'\n\nimport type { JsonRpcAccount } from '../accounts/types.js'\nimport type { ParseAccountErrorType } from '../accounts/utils/parseAccount.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1474Methods,\n  RpcSchema,\n} from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport { parseAccount } from '../utils/accounts.js'\nimport { uid } from '../utils/uid.js'\nimport type { PublicActions } from './decorators/public.js'\nimport type { WalletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type ClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n> = {\n  /** The Account to use for the Client. This will be used for Actions that require an account as an argument. */\n  account?: accountOrAddress | Account | Address | undefined\n  /** Flags for batch settings. */\n  batch?:\n    | {\n        /** Toggle to enable `eth_call` multicall aggregation. */\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined\n      }\n    | undefined\n  /**\n   * Time (in ms) that cached data will remain in memory.\n   * @default 4_000\n   */\n  cacheTime?: number | undefined\n  /** Chain for the client. */\n  chain?: Chain | undefined | chain\n  /** A key for the client. */\n  key?: string | undefined\n  /** A name for the client. */\n  name?: string | undefined\n  /**\n   * Frequency (in ms) for polling enabled actions & events.\n   * @default 4_000\n   */\n  pollingInterval?: number | undefined\n  /** The RPC transport */\n  transport: transport\n  /** The type of client. */\n  type?: string | undefined\n}\n\n// Actions that are used internally by other Actions (ie. `call` is used by `readContract`).\n// They are allowed to be extended, but must conform to their parameter & return type interfaces.\n// Example: an extended `call` action must accept `CallParameters` as parameters,\n// and conform to the `CallReturnType` return type.\ntype ExtendableProtectedActions = Pick<\n  PublicActions,\n  | 'call'\n  | 'createContractEventFilter'\n  | 'createEventFilter'\n  | 'estimateContractGas'\n  | 'estimateGas'\n  | 'getBlock'\n  | 'getBlockNumber'\n  | 'getChainId'\n  | 'getContractEvents'\n  | 'getEnsText'\n  | 'getFilterChanges'\n  | 'getGasPrice'\n  | 'getLogs'\n  | 'getTransaction'\n  | 'getTransactionCount'\n  | 'getTransactionReceipt'\n  | 'prepareTransactionRequest'\n  | 'readContract'\n  | 'sendRawTransaction'\n  | 'simulateContract'\n  | 'uninstallFilter'\n  | 'watchBlockNumber'\n  | 'watchContractEvent'\n> &\n  Pick<WalletActions, 'sendTransaction' | 'writeContract'>\n\n// TODO: Move `transport` to slot index 2 since `chain` and `account` used more frequently.\n// Otherwise, we end up with a lot of `Client<Transport, chain, account>` in actions.\nexport type Client<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n  extended extends Extended | undefined = Extended | undefined,\n> = Client_Base<transport, chain, account, rpcSchema> &\n  (extended extends Extended ? extended : unknown) & {\n    extend: <\n      const client extends Extended & Partial<ExtendableProtectedActions>,\n    >(\n      fn: (\n        client: Client<transport, chain, account, rpcSchema, extended>,\n      ) => client,\n    ) => Client<\n      transport,\n      chain,\n      account,\n      rpcSchema,\n      Prettify<client> & (extended extends Extended ? extended : unknown)\n    >\n  }\n\ntype Client_Base<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account of the Client. */\n  account: account\n  /** Flags for batch settings. */\n  batch?: ClientConfig['batch']\n  /** Time (in ms) that cached data will remain in memory. */\n  cacheTime: number\n  /** Chain for the client. */\n  chain: chain\n  /** A key for the client. */\n  key: string\n  /** A name for the client. */\n  name: string\n  /** Frequency (in ms) for polling enabled actions & events. Defaults to 4_000 milliseconds. */\n  pollingInterval: number\n  /** Request function wrapped with friendly error handling */\n  request: EIP1193RequestFn<\n    rpcSchema extends undefined ? EIP1474Methods : rpcSchema\n  >\n  /** The RPC transport */\n  transport: ReturnType<transport>['config'] & ReturnType<transport>['value']\n  /** The type of client. */\n  type: string\n  /** A unique ID for the client. */\n  uid: string\n}\n\ntype Extended = Prettify<\n  // disallow redefining base properties\n  { [_ in keyof Client_Base]?: undefined } & {\n    [key: string]: unknown\n  }\n>\n\nexport type MulticallBatchOptions = {\n  /** The maximum size (in bytes) for each calldata chunk. @default 1_024 */\n  batchSize?: number | undefined\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number | undefined\n}\n\nexport type CreateClientErrorType = ParseAccountErrorType | ErrorType\n\n/**\n * Creates a base client with the given transport.\n */\nexport function createClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n>(\n  parameters: ClientConfig<transport, chain, accountOrAddress>,\n): Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress extends Address\n      ? Prettify<JsonRpcAccount<accountOrAddress>>\n      : accountOrAddress\n  >\n>\n\nexport function createClient(parameters: ClientConfig): Client {\n  const {\n    batch,\n    cacheTime = parameters.pollingInterval ?? 4_000,\n    key = 'base',\n    name = 'Base Client',\n    pollingInterval = 4_000,\n    type = 'base',\n  } = parameters\n\n  const chain = parameters.chain\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n  const { config, request, value } = parameters.transport({\n    chain,\n    pollingInterval,\n  })\n  const transport = { ...config, ...value }\n\n  const client = {\n    account,\n    batch,\n    cacheTime,\n    chain,\n    key,\n    name,\n    pollingInterval,\n    request,\n    transport,\n    type,\n    uid: uid(),\n  }\n\n  function extend(base: typeof client) {\n    type ExtendFn = (base: typeof client) => unknown\n    return (extendFn: ExtendFn) => {\n      const extended = extendFn(base) as Extended\n      for (const key in client) delete extended[key]\n      const combined = { ...base, ...extended }\n      return Object.assign(combined, { extend: extend(combined) })\n    }\n  }\n\n  return Object.assign(client, { extend: extend(client) as any })\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport { wait } from '../wait.js'\n\nexport type WithRetryErrorType = ErrorType\n\nexport function withRetry<TData>(\n  fn: () => Promise<TData>,\n  {\n    delay: delay_ = 100,\n    retryCount = 2,\n    shouldRetry = () => true,\n  }: {\n    // The delay (in ms) between retries.\n    delay?: ((config: { count: number; error: Error }) => number) | number\n    // The max number of times to retry.\n    retryCount?: number\n    // Whether or not to retry when an error is thrown.\n    shouldRetry?: ({\n      count,\n      error,\n    }: {\n      count: number\n      error: Error\n    }) => Promise<boolean> | boolean\n  } = {},\n) {\n  return new Promise<TData>((resolve, reject) => {\n    const attemptRetry = async ({ count = 0 } = {}) => {\n      const retry = async ({ error }: { error: Error }) => {\n        const delay =\n          typeof delay_ === 'function' ? delay_({ count, error }) : delay_\n        if (delay) await wait(delay)\n        attemptRetry({ count: count + 1 })\n      }\n\n      try {\n        const data = await fn()\n        resolve(data)\n      } catch (err) {\n        if (\n          count < retryCount &&\n          (await shouldRetry({ count, error: err as Error }))\n        )\n          return retry({ error: err as Error })\n        reject(err)\n      }\n    }\n    attemptRetry()\n  })\n}\n", "import { BaseError } from '../errors/base.js'\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  type RpcRequestErrorType,\n  type TimeoutErrorType,\n  type WebSocketRequestErrorType,\n} from '../errors/request.js'\nimport {\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  type RpcError,\n  type RpcErrorCode,\n  type RpcErrorType,\n  SwitchChainError,\n  type SwitchChainErrorType,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from '../errors/rpc.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { CreateBatchSchedulerErrorType } from './promise/createBatchScheduler.js'\nimport { type WithRetryErrorType, withRetry } from './promise/withRetry.js'\nimport type { GetSocketErrorType } from './rpc.js'\n\nexport type IsDeterministicErrorType = ErrorType\n\nexport const isDeterministicError = (error: Error) => {\n  if ('code' in error)\n    return (\n      error.code !== -1 &&\n      error.code !== -32004 &&\n      error.code !== -32005 &&\n      error.code !== -32042 &&\n      error.code !== -32603\n    )\n  if (error instanceof HttpRequestError && error.status)\n    return (\n      error.status !== 403 &&\n      error.status !== 408 &&\n      error.status !== 413 &&\n      error.status !== 429 &&\n      error.status !== 500 &&\n      error.status !== 502 &&\n      error.status !== 503 &&\n      error.status !== 504\n    )\n  return false\n}\n\nexport type RequestErrorType =\n  | ChainDisconnectedErrorType\n  | CreateBatchSchedulerErrorType\n  | HttpRequestErrorType\n  | InternalRpcErrorType\n  | InvalidInputRpcErrorType\n  | InvalidParamsRpcErrorType\n  | InvalidRequestRpcErrorType\n  | GetSocketErrorType\n  | JsonRpcVersionUnsupportedErrorType\n  | LimitExceededRpcErrorType\n  | MethodNotFoundRpcErrorType\n  | MethodNotSupportedRpcErrorType\n  | ParseRpcErrorType\n  | ProviderDisconnectedErrorType\n  | ResourceNotFoundRpcErrorType\n  | ResourceUnavailableRpcErrorType\n  | RpcErrorType\n  | RpcRequestErrorType\n  | SwitchChainErrorType\n  | TimeoutErrorType\n  | TransactionRejectedRpcErrorType\n  | UnauthorizedProviderErrorType\n  | UnknownRpcErrorType\n  | UnsupportedProviderMethodErrorType\n  | UserRejectedRequestErrorType\n  | WebSocketRequestErrorType\n  | WithRetryErrorType\n  | ErrorType\n\nexport function buildRequest<TRequest extends (args: any) => Promise<any>>(\n  request: TRequest,\n  {\n    retryDelay = 150,\n    retryCount = 3,\n  }: {\n    // The base delay (in ms) between retries.\n    retryDelay?: number\n    // The max number of times to retry.\n    retryCount?: number\n  } = {},\n) {\n  return (async (args: any) =>\n    withRetry(\n      async () => {\n        try {\n          return await request(args)\n        } catch (err_) {\n          const err = err_ as unknown as RpcError<\n            RpcErrorCode | ProviderRpcErrorCode\n          >\n          switch (err.code) {\n            // -32700\n            case ParseRpcError.code:\n              throw new ParseRpcError(err)\n            // -32600\n            case InvalidRequestRpcError.code:\n              throw new InvalidRequestRpcError(err)\n            // -32601\n            case MethodNotFoundRpcError.code:\n              throw new MethodNotFoundRpcError(err)\n            // -32602\n            case InvalidParamsRpcError.code:\n              throw new InvalidParamsRpcError(err)\n            // -32603\n            case InternalRpcError.code:\n              throw new InternalRpcError(err)\n            // -32000\n            case InvalidInputRpcError.code:\n              throw new InvalidInputRpcError(err)\n            // -32001\n            case ResourceNotFoundRpcError.code:\n              throw new ResourceNotFoundRpcError(err)\n            // -32002\n            case ResourceUnavailableRpcError.code:\n              throw new ResourceUnavailableRpcError(err)\n            // -32003\n            case TransactionRejectedRpcError.code:\n              throw new TransactionRejectedRpcError(err)\n            // -32004\n            case MethodNotSupportedRpcError.code:\n              throw new MethodNotSupportedRpcError(err)\n            // -32005\n            case LimitExceededRpcError.code:\n              throw new LimitExceededRpcError(err)\n            // -32006\n            case JsonRpcVersionUnsupportedError.code:\n              throw new JsonRpcVersionUnsupportedError(err)\n            // 4001\n            case UserRejectedRequestError.code:\n              throw new UserRejectedRequestError(err)\n            // 4100\n            case UnauthorizedProviderError.code:\n              throw new UnauthorizedProviderError(err)\n            // 4200\n            case UnsupportedProviderMethodError.code:\n              throw new UnsupportedProviderMethodError(err)\n            // 4900\n            case ProviderDisconnectedError.code:\n              throw new ProviderDisconnectedError(err)\n            // 4901\n            case ChainDisconnectedError.code:\n              throw new ChainDisconnectedError(err)\n            // 4902\n            case SwitchChainError.code:\n              throw new SwitchChainError(err)\n            // CAIP-25: User Rejected Error\n            // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n            case 5000:\n              throw new UserRejectedRequestError(err)\n            default:\n              if (err_ instanceof BaseError) throw err_\n              throw new UnknownRpcError(err as Error)\n          }\n        }\n      },\n      {\n        delay: ({ count, error }) => {\n          // If we find a Retry-After header, let's retry after the given time.\n          if (error && error instanceof HttpRequestError) {\n            const retryAfter = error?.headers?.get('Retry-After')\n            if (retryAfter?.match(/\\d/)) return parseInt(retryAfter) * 1000\n          }\n\n          // Otherwise, let's retry with an exponential backoff.\n          return ~~(1 << count) * retryDelay\n        },\n        retryCount,\n        shouldRetry: ({ error }) => !isDeterministicError(error),\n      },\n    )) as TRequest\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  TType extends string = string,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: TEIP1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number\n  /** The max number of times to retry. */\n  retryCount?: number\n  /** The timeout (in ms) for requests. */\n  timeout?: number\n  /** The type of the transport. */\n  type: TType\n}\n\nexport type Transport<\n  TType extends string = string,\n  TRpcAttributes = Record<string, any>,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <TChain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: TChain\n  pollingInterval?: ClientConfig['pollingInterval']\n  retryCount?: TransportConfig['retryCount']\n  timeout?: TransportConfig['timeout']\n}) => {\n  config: TransportConfig<TType>\n  request: TEIP1193RequestFn\n  value?: TRpcAttributes\n}\n\nexport type CreateTransportErrorType = ErrorType\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  TType extends string,\n  TRpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<TType>,\n  value?: TRpcAttributes,\n): ReturnType<Transport<TType, TRpcAttributes>> {\n  return {\n    config: { key, name, request, retryCount, retryDelay, timeout, type },\n    request: buildRequest(request, { retryCount, retryDelay }),\n    value,\n  }\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype EthereumProvider = { request(...args: any): Promise<any> }\n\nexport type CustomTransportConfig = {\n  /** The key of the transport. */\n  key?: TransportConfig['key']\n  /** The name of the transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n}\n\nexport type CustomTransport = Transport<\n  'custom',\n  {},\n  EthereumProvider['request']\n>\n\nexport type CustomTransportErrorType = CreateTransportErrorType | ErrorType\n\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom<TProvider extends EthereumProvider>(\n  provider: TProvider,\n  config: CustomTransportConfig = {},\n): CustomTransport {\n  const { key = 'custom', name = 'Custom Provider', retryDelay } = config\n  return ({ retryCount: defaultRetryCount }) =>\n    createTransport({\n      key,\n      name,\n      request: provider.request.bind(provider),\n      retryCount: config.retryCount ?? defaultRetryCount,\n      retryDelay,\n      type: 'custom',\n    })\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { isDeterministicError } from '../../utils/buildRequest.js'\nimport { wait } from '../../utils/wait.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n// TODO: Narrow `method` & `params` types.\nexport type OnResponseFn = (\n  args: {\n    method: string\n    params: unknown[]\n    transport: ReturnType<Transport>\n  } & (\n    | {\n        error?: never\n        response: unknown\n        status: 'success'\n      }\n    | {\n        error: Error\n        response?: never\n        status: 'error'\n      }\n  ),\n) => void\n\ntype RankOptions = {\n  /**\n   * The polling interval (in ms) at which the ranker should ping the RPC URL.\n   * @default client.pollingInterval\n   */\n  interval?: number\n  /**\n   * The number of previous samples to perform ranking on.\n   * @default 10\n   */\n  sampleCount?: number\n  /**\n   * Timeout when sampling transports.\n   * @default 1_000\n   */\n  timeout?: number\n  /**\n   * Weights to apply to the scores. Weight values are proportional.\n   */\n  weights?: {\n    /**\n     * The weight to apply to the latency score.\n     * @default 0.3\n     */\n    latency?: number\n    /**\n     * The weight to apply to the stability score.\n     * @default 0.7\n     */\n    stability?: number\n  }\n}\n\nexport type FallbackTransportConfig = {\n  /** The key of the Fallback transport. */\n  key?: TransportConfig['key']\n  /** The name of the Fallback transport. */\n  name?: TransportConfig['name']\n  /** Toggle to enable ranking, or rank options. */\n  rank?: boolean | RankOptions\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n}\n\nexport type FallbackTransport = Transport<\n  'fallback',\n  {\n    onResponse: (fn: OnResponseFn) => void\n    transports: ReturnType<Transport>[]\n  }\n>\n\nexport type FallbackTransportErrorType = CreateTransportErrorType | ErrorType\n\nexport function fallback(\n  transports_: Transport[],\n  config: FallbackTransportConfig = {},\n): FallbackTransport {\n  const {\n    key = 'fallback',\n    name = 'Fallback',\n    rank = false,\n    retryCount,\n    retryDelay,\n  } = config\n  return ({ chain, pollingInterval = 4_000, timeout }) => {\n    let transports = transports_\n\n    let onResponse: OnResponseFn = () => {}\n\n    const transport = createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const fetch = async (i = 0): Promise<any> => {\n            const transport = transports[i]({ chain, retryCount: 0, timeout })\n            try {\n              const response = await transport.request({\n                method,\n                params,\n              } as any)\n\n              onResponse({\n                method,\n                params: params as unknown[],\n                response,\n                transport,\n                status: 'success',\n              })\n\n              return response\n            } catch (err) {\n              onResponse({\n                error: err as Error,\n                method,\n                params: params as unknown[],\n                transport,\n                status: 'error',\n              })\n\n              // If the error is deterministic, we don't need to fall back.\n              // So throw the error.\n              if (isDeterministicError(err as Error)) throw err\n\n              // If we've reached the end of the fallbacks, throw the error.\n              if (i === transports.length - 1) throw err\n\n              // Otherwise, try the next fallback.\n              return fetch(i + 1)\n            }\n          }\n          return fetch()\n        },\n        retryCount,\n        retryDelay,\n        type: 'fallback',\n      },\n      {\n        onResponse: (fn: OnResponseFn) => (onResponse = fn),\n        transports: transports.map((fn) => fn({ chain, retryCount: 0 })),\n      },\n    )\n\n    if (rank) {\n      const rankOptions = (typeof rank === 'object' ? rank : {}) as RankOptions\n      rankTransports({\n        chain,\n        interval: rankOptions.interval ?? pollingInterval,\n        onTransports: (transports_) => (transports = transports_),\n        sampleCount: rankOptions.sampleCount,\n        timeout: rankOptions.timeout,\n        transports,\n        weights: rankOptions.weights,\n      })\n    }\n    return transport\n  }\n}\n\nexport function rankTransports({\n  chain,\n  interval = 4_000,\n  onTransports,\n  sampleCount = 10,\n  timeout = 1_000,\n  transports,\n  weights = {},\n}: {\n  chain?: Chain\n  interval: RankOptions['interval']\n  onTransports: (transports: Transport[]) => void\n  sampleCount?: RankOptions['sampleCount']\n  timeout?: RankOptions['timeout']\n  transports: Transport[]\n  weights?: RankOptions['weights']\n}) {\n  const { stability: stabilityWeight = 0.7, latency: latencyWeight = 0.3 } =\n    weights\n\n  type SampleData = { latency: number; success: number }\n  type Sample = SampleData[]\n  const samples: Sample[] = []\n\n  const rankTransports_ = async () => {\n    // 1. Take a sample from each Transport.\n    const sample: Sample = await Promise.all(\n      transports.map(async (transport) => {\n        const transport_ = transport({ chain, retryCount: 0, timeout })\n\n        const start = Date.now()\n        let end\n        let success\n        try {\n          await transport_.request({ method: 'net_listening' })\n          success = 1\n        } catch {\n          success = 0\n        } finally {\n          end = Date.now()\n        }\n        const latency = end - start\n        return { latency, success }\n      }),\n    )\n\n    // 2. Store the sample. If we have more than `sampleCount` samples, remove\n    // the oldest sample.\n    samples.push(sample)\n    if (samples.length > sampleCount) samples.shift()\n\n    // 3. Calculate the max latency from samples.\n    const maxLatency = Math.max(\n      ...samples.map((sample) =>\n        Math.max(...sample.map(({ latency }) => latency)),\n      ),\n    )\n\n    // 4. Calculate the score for each Transport.\n    const scores = transports\n      .map((_, i) => {\n        const latencies = samples.map((sample) => sample[i].latency)\n        const meanLatency =\n          latencies.reduce((acc, latency) => acc + latency, 0) /\n          latencies.length\n        const latencyScore = 1 - meanLatency / maxLatency\n\n        const successes = samples.map((sample) => sample[i].success)\n        const stabilityScore =\n          successes.reduce((acc, success) => acc + success, 0) /\n          successes.length\n\n        if (stabilityScore === 0) return [0, i]\n        return [\n          latencyWeight * latencyScore + stabilityWeight * stabilityScore,\n          i,\n        ]\n      })\n      .sort((a, b) => b[0] - a[0])\n\n    // 5. Sort the Transports by score.\n    onTransports(scores.map(([, i]) => transports[i]))\n\n    // 6. Wait, and then rank again.\n    await wait(interval)\n    rankTransports_()\n  }\n  rankTransports_()\n}\n", "import { BaseError } from './base.js'\n\nexport type UrlRequiredErrorType = UrlRequiredError & {\n  name: 'UrlRequiredError'\n}\nexport class UrlRequiredError extends BaseError {\n  constructor() {\n    super(\n      'No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.',\n      {\n        docsPath: '/docs/clients/intro',\n      },\n    )\n  }\n}\n", "'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n", "'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n", "'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n", "'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n", "'use strict';\n\nconst { isUtf8 } = require('buffer');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n", "'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n", "'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n        ? false\n        : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    if (res.headers.upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n", "'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst net = require('net');\nconst tls = require('tls');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!key || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n", "'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n", "export function getNativeWebSocket() {\n  if (typeof WebSocket !== \"undefined\") return WebSocket;\n  if (typeof global.WebSocket !== \"undefined\") return global.WebSocket;\n  if (typeof window.WebSocket !== \"undefined\") return window.WebSocket;\n  if (typeof self.WebSocket !== \"undefined\") return self.WebSocket;\n  throw new Error(\"`WebSocket` is not supported in this environment\");\n}\n", "import * as WebSocket_ from \"ws\";\nimport { getNativeWebSocket } from \"./utils.js\";\n\nexport const WebSocket = (() => {\n  try {\n    return getNativeWebSocket();\n  } catch {\n    if (WebSocket_.WebSocket) return WebSocket_.WebSocket;\n    return WebSocket_;\n  }\n})();\n", "import type { ErrorType } from '../../errors/utils.js'\n\nexport type WithTimeoutErrorType = ErrorType\n\nexport function withTimeout<TData>(\n  fn: ({ signal }: { signal?: AbortController['signal'] }) => Promise<TData>,\n  {\n    errorInstance = new Error('timed out'),\n    timeout,\n    signal,\n  }: {\n    // The error instance to throw when the timeout is reached.\n    errorInstance?: Error\n    // The timeout (in ms).\n    timeout: number\n    // Whether or not the timeout should use an abort signal.\n    signal?: boolean\n  },\n): Promise<TData> {\n  return new Promise((resolve, reject) => {\n    ;(async () => {\n      let timeoutId!: NodeJS.Timeout\n      try {\n        const controller = new AbortController()\n        if (timeout > 0) {\n          timeoutId = setTimeout(() => {\n            if (signal) {\n              controller.abort()\n            } else {\n              reject(errorInstance)\n            }\n          }, timeout)\n        }\n        resolve(await fn({ signal: controller?.signal }))\n      } catch (err) {\n        if ((err as Error).name === 'AbortError') reject(errorInstance)\n        reject(err)\n      } finally {\n        clearTimeout(timeoutId)\n      }\n    })()\n  })\n}\n", "import { WebSocket } from 'isows'\nimport type { MessageEvent } from 'isows'\n\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  TimeoutError,\n  type TimeoutErrorType,\n  WebSocketRequestError,\n} from '../errors/request.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from './promise/createBatchScheduler.js'\nimport {\n  type WithTimeoutErrorType,\n  withTimeout,\n} from './promise/withTimeout.js'\nimport { stringify } from './stringify.js'\n\nlet id = 0\n\ntype SuccessResult<T> = {\n  method?: never\n  result: T\n  error?: never\n}\ntype ErrorResult<T> = {\n  method?: never\n  result?: never\n  error: T\n}\ntype Subscription<TResult, TError> = {\n  method: 'eth_subscription'\n  error?: never\n  result?: never\n  params: {\n    subscription: string\n  } & (\n    | {\n        result: TResult\n        error?: never\n      }\n    | {\n        result?: never\n        error: TError\n      }\n  )\n}\n\nexport type RpcRequest = { method: string; params?: any; id?: number }\n\nexport type RpcResponse<TResult = any, TError = any> = {\n  jsonrpc: `${number}`\n  id: number\n} & (\n  | SuccessResult<TResult>\n  | ErrorResult<TError>\n  | Subscription<TResult, TError>\n)\n\n///////////////////////////////////////////////////\n// HTTP\n\nexport type HttpOptions<TBody extends RpcRequest | RpcRequest[] = RpcRequest> =\n  {\n    // The RPC request body.\n    body: TBody\n    // Request configuration to pass to `fetch`.\n    fetchOptions?: Omit<RequestInit, 'body'>\n    // The timeout (in ms) for the request.\n    timeout?: number\n  }\n\nexport type HttpReturnType<\n  TBody extends RpcRequest | RpcRequest[] = RpcRequest,\n> = TBody extends RpcRequest[] ? RpcResponse[] : RpcResponse\n\nexport type HttpErrorType =\n  | HttpRequestErrorType\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nasync function http<TBody extends RpcRequest | RpcRequest[]>(\n  url: string,\n  { body, fetchOptions = {}, timeout = 10_000 }: HttpOptions<TBody>,\n): Promise<HttpReturnType<TBody>> {\n  const { headers, method, signal: signal_ } = fetchOptions\n  try {\n    const response = await withTimeout(\n      async ({ signal }) => {\n        const response = await fetch(url, {\n          ...fetchOptions,\n          body: Array.isArray(body)\n            ? stringify(\n                body.map((body) => ({\n                  jsonrpc: '2.0',\n                  id: body.id ?? id++,\n                  ...body,\n                })),\n              )\n            : stringify({ jsonrpc: '2.0', id: body.id ?? id++, ...body }),\n          headers: {\n            ...headers,\n            'Content-Type': 'application/json',\n          },\n          method: method || 'POST',\n          signal: signal_ || (timeout > 0 ? signal : undefined),\n        })\n        return response\n      },\n      {\n        errorInstance: new TimeoutError({ body, url }),\n        timeout,\n        signal: true,\n      },\n    )\n\n    let data\n    if (response.headers.get('Content-Type')?.startsWith('application/json')) {\n      data = await response.json()\n    } else {\n      data = await response.text()\n    }\n\n    if (!response.ok) {\n      throw new HttpRequestError({\n        body,\n        details: stringify(data.error) || response.statusText,\n        headers: response.headers,\n        status: response.status,\n        url,\n      })\n    }\n\n    return data\n  } catch (err) {\n    if (err instanceof HttpRequestError) throw err\n    if (err instanceof TimeoutError) throw err\n    throw new HttpRequestError({\n      body,\n      details: (err as Error).message,\n      url,\n    })\n  }\n}\n\n///////////////////////////////////////////////////\n// WebSocket\n\ntype Id = string | number\ntype CallbackFn = (message: any) => void\ntype CallbackMap = Map<Id, CallbackFn>\n\nexport type Socket = WebSocket & {\n  requests: CallbackMap\n  subscriptions: CallbackMap\n}\n\nexport type GetSocketErrorType = CreateBatchSchedulerErrorType | ErrorType\n\nexport const socketsCache = /*#__PURE__*/ new Map<string, Socket>()\n\nexport async function getSocket(url: string) {\n  let socket = socketsCache.get(url)\n\n  // If the socket already exists, return it.\n  if (socket) return socket\n\n  const { schedule } = createBatchScheduler<undefined, [Socket]>({\n    id: url,\n    fn: async () => {\n      const webSocket = new WebSocket(url)\n\n      // Set up a cache for incoming \"synchronous\" requests.\n      const requests = new Map<Id, CallbackFn>()\n\n      // Set up a cache for subscriptions (eth_subscribe).\n      const subscriptions = new Map<Id, CallbackFn>()\n\n      const onMessage: (event: MessageEvent) => void = ({ data }) => {\n        const message: RpcResponse = JSON.parse(data as string)\n        const isSubscription = message.method === 'eth_subscription'\n        const id = isSubscription ? message.params.subscription : message.id\n        const cache = isSubscription ? subscriptions : requests\n        const callback = cache.get(id)\n        if (callback) callback({ data })\n        if (!isSubscription) cache.delete(id)\n      }\n      const onClose = () => {\n        socketsCache.delete(url)\n        webSocket.removeEventListener('close', onClose)\n        webSocket.removeEventListener('message', onMessage)\n      }\n\n      // Setup event listeners for RPC & subscription responses.\n      webSocket.addEventListener('close', onClose)\n      webSocket.addEventListener('message', onMessage)\n\n      // Wait for the socket to open.\n      if (webSocket.readyState === WebSocket.CONNECTING) {\n        await new Promise((resolve, reject) => {\n          if (!webSocket) return\n          webSocket.onopen = resolve\n          webSocket.onerror = reject\n        })\n      }\n\n      // Create a new socket instance.\n      socket = Object.assign(webSocket, {\n        requests,\n        subscriptions,\n      })\n      socketsCache.set(url, socket)\n\n      return [socket]\n    },\n  })\n\n  const [_, [socket_]] = await schedule()\n  return socket_\n}\n\nexport type WebSocketOptions = {\n  /** The RPC request body. */\n  body: RpcRequest\n  /** The callback to invoke on response. */\n  onResponse?: (message: RpcResponse) => void\n}\n\nexport type WebSocketReturnType = Socket\n\nexport type WebSocketErrorType = WebSocketRequestError | ErrorType\n\nfunction webSocket(\n  socket: Socket,\n  { body, onResponse }: WebSocketOptions,\n): WebSocketReturnType {\n  if (\n    socket.readyState === socket.CLOSED ||\n    socket.readyState === socket.CLOSING\n  )\n    throw new WebSocketRequestError({\n      body,\n      url: socket.url,\n      details: 'Socket is closed.',\n    })\n\n  const id_ = id++\n\n  const callback = ({ data }: { data: any }) => {\n    const message: RpcResponse = JSON.parse(data)\n\n    if (typeof message.id === 'number' && id_ !== message.id) return\n\n    onResponse?.(message)\n\n    // If we are subscribing to a topic, we want to set up a listener for incoming\n    // messages.\n    if (body.method === 'eth_subscribe' && typeof message.result === 'string') {\n      socket.subscriptions.set(message.result, callback)\n    }\n\n    // If we are unsubscribing from a topic, we want to remove the listener.\n    if (body.method === 'eth_unsubscribe') {\n      socket.subscriptions.delete(body.params?.[0])\n    }\n  }\n  socket.requests.set(id_, callback)\n\n  socket.send(JSON.stringify({ jsonrpc: '2.0', ...body, id: id_ }))\n\n  return socket\n}\n\nexport type WebSocketAsyncOptions = {\n  /** The RPC request body. */\n  body: RpcRequest\n  /** The timeout (in ms) for the request. */\n  timeout?: number\n}\n\nexport type WebSocketAsyncReturnType = RpcResponse\n\nexport type WebSocketAsyncErrorType =\n  | WebSocketErrorType\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nasync function webSocketAsync(\n  socket: Socket,\n  { body, timeout = 10_000 }: WebSocketAsyncOptions,\n): Promise<WebSocketAsyncReturnType> {\n  return withTimeout(\n    () =>\n      new Promise<RpcResponse>((onResponse) =>\n        rpc.webSocket(socket, {\n          body,\n          onResponse,\n        }),\n      ),\n    {\n      errorInstance: new TimeoutError({ body, url: socket.url }),\n      timeout,\n    },\n  )\n}\n\n///////////////////////////////////////////////////\n\nexport const rpc = {\n  http,\n  webSocket,\n  webSocketAsync,\n}\n", "import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js'\nimport { type HttpOptions, type RpcRequest, rpc } from '../../utils/rpc.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\nexport type BatchOptions = {\n  /** The maximum number of JSON-RPC requests to send in a batch. @default 1_000 */\n  batchSize?: number\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number\n}\n\nexport type HttpTransportConfig = {\n  /**\n   * Whether to enable Batch JSON-RPC.\n   * @link https://www.jsonrpc.org/specification#batch\n   */\n  batch?: boolean | BatchOptions\n  /**\n   * Request configuration to pass to `fetch`.\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/fetch\n   */\n  fetchOptions?: HttpOptions['fetchOptions']\n  /** The key of the HTTP transport. */\n  key?: TransportConfig['key']\n  /** The name of the HTTP transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n  /** The timeout (in ms) for the HTTP request. Default: 10_000 */\n  timeout?: TransportConfig['timeout']\n}\n\nexport type HttpTransport = Transport<\n  'http',\n  {\n    fetchOptions?: HttpTransportConfig['fetchOptions']\n    url?: string\n  }\n>\n\nexport type HttpTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string,\n  config: HttpTransportConfig = {},\n): HttpTransport {\n  const {\n    batch,\n    fetchOptions,\n    key = 'http',\n    name = 'HTTP JSON-RPC',\n    retryDelay,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const { batchSize = 1000, wait = 0 } =\n      typeof batch === 'object' ? batch : {}\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.http[0]\n    if (!url_) throw new UrlRequiredError()\n    return createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n\n          const { schedule } = createBatchScheduler({\n            id: `${url}`,\n            wait,\n            shouldSplitBatch(requests) {\n              return requests.length > batchSize\n            },\n            fn: (body: RpcRequest[]) =>\n              rpc.http(url_, {\n                body,\n                fetchOptions,\n                timeout,\n              }),\n            sort: (a, b) => a.id - b.id,\n          })\n\n          const fn = async (body: RpcRequest) =>\n            batch\n              ? schedule(body)\n              : [await rpc.http(url_, { body, fetchOptions, timeout })]\n\n          const [{ error, result }] = await fn(body)\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'http',\n      },\n      {\n        fetchOptions,\n        url,\n      },\n    )\n  }\n}\n", "import { panicReasons } from '../../constants/solidity.js'\nimport { BaseError } from '../../errors/base.js'\nimport { ContractFunctionRevertedError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nexport type IsNullUniversalResolverErrorErrorType = ErrorType\n\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(\n  err: unknown,\n  callType: 'resolve' | 'reverse',\n): boolean {\n  if (!(err instanceof BaseError)) return false\n  const cause = err.walk((e) => e instanceof ContractFunctionRevertedError)\n  if (!(cause instanceof ContractFunctionRevertedError)) return false\n  if (cause.data?.errorName === 'ResolverNotFound') return true\n  if (cause.data?.errorName === 'ResolverWildcardNotSupported') return true\n  // Backwards compatibility for older UniversalResolver contracts\n  if (\n    cause.reason?.includes(\n      'Wildcard on non-extended resolvers is not supported',\n    )\n  )\n    return true\n  // No primary name set for address.\n  if (callType === 'reverse' && cause.reason === panicReasons[50]) return true\n  return false\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\n\nexport type EncodedLabelToLabelhashErrorType = IsHexErrorType | ErrorType\n\nexport function encodedLabelToLabelhash(label: string): Hex | null {\n  if (label.length !== 66) return null\n  if (label.indexOf('[') !== 0) return null\n  if (label.indexOf(']') !== 65) return null\n  const hash = `0x${label.slice(1, 65)}`\n  if (!isHex(hash)) return null\n  return hash\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport {\n  type StringToBytesErrorType,\n  type ToBytesErrorType,\n  stringToBytes,\n  toBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type NamehashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | ToBytesErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ConcatErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS name\n *\n * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @example\n * namehash('wevm.eth')\n * '0xf246651c1b9a6b141d19c2604e9a58f567973833990f830d882534a747801359'\n *\n * @link https://eips.ethereum.org/EIPS/eip-137\n */\nexport function namehash(name: string) {\n  let result = new Uint8Array(32).fill(0)\n  if (!name) return bytesToHex(result)\n\n  const labels = name.split('.')\n  // Iterate in reverse order building up hash\n  for (let i = labels.length - 1; i >= 0; i -= 1) {\n    const hashFromEncodedLabel = encodedLabelToLabelhash(labels[i])\n    const hashed = hashFromEncodedLabel\n      ? toBytes(hashFromEncodedLabel)\n      : keccak256(stringToBytes(labels[i]), 'bytes')\n    result = keccak256(concat([result, hashed]), 'bytes')\n  }\n\n  return bytesToHex(result)\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type EncodeLabelhashErrorType = ErrorType\n\nexport function encodeLabelhash(hash: Hex): `[${string}]` {\n  return `[${hash.slice(2)}]`\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type LabelhashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label: string) {\n  const result = new Uint8Array(32).fill(0)\n  if (!label) return bytesToHex(result)\n  return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label))\n}\n", "// Adapted from https://github.com/mafintosh/dns-packet\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport {\n  type EncodeLabelhashErrorType,\n  encodeLabelhash,\n} from './encodeLabelhash.js'\nimport { type LabelhashErrorType, labelhash } from './labelhash.js'\n\nexport type PacketToBytesErrorType =\n  | EncodeLabelhashErrorType\n  | LabelhashErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/*\n * @description Encodes a DNS packet into a ByteArray containing a UDP payload.\n */\nexport function packetToBytes(packet: string): ByteArray {\n  // strip leading and trailing `.`\n  const value = packet.replace(/^\\.|\\.$/gm, '')\n  if (value.length === 0) return new Uint8Array(1)\n\n  const bytes = new Uint8Array(stringToBytes(value).byteLength + 2)\n\n  let offset = 0\n  const list = value.split('.')\n  for (let i = 0; i < list.length; i++) {\n    let encoded = stringToBytes(list[i])\n    // if the length is > 255, make the encoded label value a labelhash\n    // this is compatible with the universal resolver\n    if (encoded.byteLength > 255)\n      encoded = stringToBytes(encodeLabelhash(labelhash(list[i])))\n    bytes[offset] = encoded.length\n    bytes.set(encoded, offset + 1)\n    offset += encoded.length + 1\n  }\n\n  if (bytes.byteLength !== offset + 1) return bytes.slice(0, offset + 1)\n\n  return bytes\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  addressResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type TrimErrorType, trim } from '../../utils/data/trim.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsAddressParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENSIP-9 compliant coinType used to resolve addresses for other chains */\n    coinType?: number\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsAddressReturnType = Address | null\n\nexport type GetEnsAddressErrorType =\n  | GetChainContractAddressErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | DecodeFunctionResultErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Gets address for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAddressParameters}\n * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAddress, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAddress = await getEnsAddress(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n */\nexport async function getEnsAddress<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    coinType,\n    name,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsAddressParameters,\n): Promise<GetEnsAddressReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  try {\n    const functionData = encodeFunctionData({\n      abi: addressResolverAbi,\n      functionName: 'addr',\n      ...(coinType != null\n        ? { args: [namehash(name), BigInt(coinType)] }\n        : { args: [namehash(name)] }),\n    })\n\n    const res = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [toHex(packetToBytes(name)), functionData],\n      blockNumber,\n      blockTag,\n    })\n\n    if (res[0] === '0x') return null\n\n    const address = decodeFunctionResult({\n      abi: addressResolverAbi,\n      args: coinType != null ? [namehash(name), BigInt(coinType)] : undefined,\n      functionName: 'addr',\n      data: res[0],\n    })\n\n    if (address === '0x') return null\n    if (trim(address) === '0x00') return null\n    return address\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n", "import { BaseError } from './base.js'\n\nexport type EnsAvatarInvalidMetadataErrorType =\n  EnsAvatarInvalidMetadataError & {\n    name: 'EnsAvatarInvalidMetadataError'\n  }\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  override name = 'EnsAvatarInvalidMetadataError'\n  constructor({ data }: { data: any }) {\n    super(\n      'Unable to extract image from metadata. The metadata may be malformed or invalid.',\n      {\n        metaMessages: [\n          '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n          '',\n          `Provided data: ${JSON.stringify(data)}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type EnsAvatarInvalidNftUriErrorType = EnsAvatarInvalidNftUriError & {\n  name: 'EnsAvatarInvalidNftUriError'\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  override name = 'EnsAvatarInvalidNftUriError'\n  constructor({ reason }: { reason: string }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`)\n  }\n}\n\nexport type EnsAvatarUriResolutionErrorType = EnsAvatarUriResolutionError & {\n  name: 'EnsAvatarUriResolutionError'\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  override name = 'EnsAvatarUriResolutionError'\n  constructor({ uri }: { uri: string }) {\n    super(\n      `Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`,\n    )\n  }\n}\n\nexport type EnsAvatarUnsupportedNamespaceErrorType =\n  EnsAvatarUnsupportedNamespaceError & {\n    name: 'EnsAvatarUnsupportedNamespaceError'\n  }\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  override name = 'EnsAvatarUnsupportedNamespaceError'\n  constructor({ namespace }: { namespace: string }) {\n    super(\n      `ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`,\n    )\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport {\n  type ReadContractErrorType,\n  readContract,\n} from '../../../actions/public/readContract.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport {\n  EnsAvatarInvalidMetadataError,\n  type EnsAvatarInvalidMetadataErrorType,\n  EnsAvatarInvalidNftUriError,\n  type EnsAvatarInvalidNftUriErrorType,\n  EnsAvatarUnsupportedNamespaceError,\n  type EnsAvatarUnsupportedNamespaceErrorType,\n  EnsAvatarUriResolutionError,\n  type EnsAvatarUriResolutionErrorType,\n} from '../../../errors/ens.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\ntype UriItem = {\n  uri: string\n  isOnChain: boolean\n  isEncoded: boolean\n}\n\nconst networkRegex =\n  /(?<protocol>https?:\\/\\/[^\\/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/\nconst ipfsHashRegex =\n  /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$/\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/\n\nexport type IsImageUriErrorType = ErrorType\n\nexport async function isImageUri(uri: string) {\n  try {\n    const res = await fetch(uri, { method: 'HEAD' })\n    // retrieve content type header to check if content is image\n    if (res.status === 200) {\n      const contentType = res.headers.get('content-type')\n      return contentType?.startsWith('image/')\n    }\n    return false\n  } catch (error: any) {\n    // if error is not cors related then fail\n    if (typeof error === 'object' && typeof error.response !== 'undefined') {\n      return false\n    }\n    // fail in NodeJS, since the error is not cors but any other network issue\n    // biome-ignore lint/suspicious/noPrototypeBuiltins:\n    if (!globalThis.hasOwnProperty('Image')) return false\n    // in case of cors, use image api to validate if given url is an actual image\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        resolve(true)\n      }\n      img.onerror = () => {\n        resolve(false)\n      }\n      img.src = uri\n    })\n  }\n}\n\nexport type GetGatewayErrorType = ErrorType\n\nexport function getGateway(custom: string | undefined, defaultGateway: string) {\n  if (!custom) return defaultGateway\n  if (custom.endsWith('/')) return custom.slice(0, -1)\n  return custom\n}\n\nexport type ResolveAvatarUriErrorType =\n  | GetGatewayErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport function resolveAvatarUri({\n  uri,\n  gatewayUrls,\n}: {\n  uri: string\n  gatewayUrls?: AssetGatewayUrls | undefined\n}): UriItem {\n  const isEncoded = base64Regex.test(uri)\n  if (isEncoded) return { uri, isOnChain: true, isEncoded }\n\n  const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io')\n  const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net')\n\n  const networkRegexMatch = uri.match(networkRegex)\n  const {\n    protocol,\n    subpath,\n    target,\n    subtarget = '',\n  } = networkRegexMatch?.groups || {}\n\n  const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/'\n  const isIPFS =\n    protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri)\n\n  if (uri.startsWith('http') && !isIPNS && !isIPFS) {\n    let replacedUri = uri\n    if (gatewayUrls?.arweave)\n      replacedUri = uri.replace(/https:\\/\\/arweave.net/g, gatewayUrls?.arweave)\n    return { uri: replacedUri, isOnChain: false, isEncoded: false }\n  }\n\n  if ((isIPNS || isIPFS) && target) {\n    return {\n      uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  if (protocol === 'ar:/' && target) {\n    return {\n      uri: `${arweaveGateway}/${target}${subtarget || ''}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  let parsedUri = uri.replace(dataURIRegex, '')\n  if (parsedUri.startsWith('<svg')) {\n    // if svg, base64 encode\n    parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`\n  }\n\n  if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {\n    return {\n      uri: parsedUri,\n      isOnChain: true,\n      isEncoded: false,\n    }\n  }\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\nexport type GetJsonImageErrorType =\n  | EnsAvatarInvalidMetadataErrorType\n  | ErrorType\n\nexport function getJsonImage(data: any) {\n  // validation check for json data, must include one of theses properties\n  if (\n    typeof data !== 'object' ||\n    (!('image' in data) && !('image_url' in data) && !('image_data' in data))\n  ) {\n    throw new EnsAvatarInvalidMetadataError({ data })\n  }\n\n  return data.image || data.image_url || data.image_data\n}\n\nexport type GetMetadataAvatarUriErrorType =\n  | EnsAvatarUriResolutionErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | ErrorType\n\nexport async function getMetadataAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  try {\n    const res = await fetch(uri).then((res) => res.json())\n    const image = await parseAvatarUri({\n      gatewayUrls,\n      uri: getJsonImage(res),\n    })\n    return image\n  } catch {\n    throw new EnsAvatarUriResolutionError({ uri })\n  }\n}\n\nexport type ParseAvatarUriErrorType =\n  | ResolveAvatarUriErrorType\n  | IsImageUriErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport async function parseAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls })\n  if (isOnChain) return resolvedURI\n\n  // check if resolvedURI is an image, if it is return the url\n  const isImage = await isImageUri(resolvedURI)\n  if (isImage) return resolvedURI\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\ntype ParsedNft = {\n  chainID: number\n  namespace: string\n  contractAddress: Address\n  tokenID: string\n}\n\nexport type ParseNftUriErrorType = EnsAvatarInvalidNftUriErrorType | ErrorType\n\nexport function parseNftUri(uri_: string): ParsedNft {\n  let uri = uri_\n  // parse valid nft spec (CAIP-22/CAIP-29)\n  // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\n  if (uri.startsWith('did:nft:')) {\n    // convert DID to CAIP\n    uri = uri.replace('did:nft:', '').replace(/_/g, '/')\n  }\n\n  const [reference, asset_namespace, tokenID] = uri.split('/')\n  const [eip_namespace, chainID] = reference.split(':')\n  const [erc_namespace, contractAddress] = asset_namespace.split(':')\n\n  if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' })\n  if (!chainID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' })\n  if (!contractAddress)\n    throw new EnsAvatarInvalidNftUriError({\n      reason: 'Contract address not found',\n    })\n  if (!tokenID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' })\n  if (!erc_namespace)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' })\n\n  return {\n    chainID: parseInt(chainID),\n    namespace: erc_namespace.toLowerCase(),\n    contractAddress: contractAddress as Address,\n    tokenID,\n  }\n}\n\nexport type GetNftTokenUriErrorType =\n  | ReadContractErrorType\n  | EnsAvatarUnsupportedNamespaceErrorType\n  | ErrorType\n\nexport async function getNftTokenUri<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { nft }: { nft: ParsedNft },\n) {\n  if (nft.namespace === 'erc721') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'tokenURI',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: 'tokenId', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'tokenURI',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  if (nft.namespace === 'erc1155') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'uri',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: '_id', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'uri',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  throw new EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace })\n}\n", "import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\nimport {\n  type GetJsonImageErrorType,\n  type GetMetadataAvatarUriErrorType,\n  type GetNftTokenUriErrorType,\n  type ParseAvatarUriErrorType,\n  type ParseNftUriErrorType,\n  type ResolveAvatarUriErrorType,\n  getJsonImage,\n  getMetadataAvatarUri,\n  getNftTokenUri,\n  parseAvatarUri,\n  parseNftUri,\n  resolveAvatarUri,\n} from './utils.js'\n\nexport type ParseAvatarRecordErrorType =\n  | ParseNftAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | ErrorType\n\nexport async function parseAvatarRecord<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls\n    record: string\n  },\n): Promise<string> {\n  if (/eip155:/i.test(record))\n    return parseNftAvatarUri(client, { gatewayUrls, record })\n  return parseAvatarUri({ uri: record, gatewayUrls })\n}\n\nexport type ParseNftAvatarUriErrorType =\n  | ParseNftUriErrorType\n  | GetNftTokenUriErrorType\n  | ResolveAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | GetMetadataAvatarUriErrorType\n  | ErrorType\n\nasync function parseNftAvatarUri<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls\n    record: string\n  },\n): Promise<string> {\n  // parse NFT URI into properties\n  const nft = parseNftUri(record)\n  // fetch tokenURI from the NFT contract\n  const nftUri = await getNftTokenUri(client, { nft })\n  // resolve the URI from the fetched tokenURI\n  const {\n    uri: resolvedNftUri,\n    isOnChain,\n    isEncoded,\n  } = resolveAvatarUri({ uri: nftUri, gatewayUrls })\n\n  // if the resolved URI is on chain, return the data\n  if (\n    isOnChain &&\n    (resolvedNftUri.includes('data:application/json;base64,') ||\n      resolvedNftUri.startsWith('{'))\n  ) {\n    const encodedJson = isEncoded\n      ? // if it is encoded, decode it\n        atob(resolvedNftUri.replace('data:application/json;base64,', ''))\n      : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)\n        resolvedNftUri\n\n    const decoded = JSON.parse(encodedJson)\n    return parseAvatarUri({ uri: getJsonImage(decoded), gatewayUrls })\n  }\n\n  let uriTokenId = nft.tokenID\n  if (nft.namespace === 'erc1155')\n    uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0')\n\n  return getMetadataAvatarUri({\n    gatewayUrls,\n    uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  textResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsTextParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENS name to get Text for. */\n    name: string\n    /** Text record to retrieve. */\n    key: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsTextReturnType = string | null\n\nexport type GetEnsTextErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | DecodeFunctionResultErrorType\n\n/**\n * Gets a text record for specified ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsTextParameters}\n * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsText, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const twitterRecord = await getEnsText(client, {\n *   name: normalize('wevm.eth'),\n *   key: 'com.twitter',\n * })\n * // 'wagmi_sh'\n */\nexport async function getEnsText<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    name,\n    key,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsTextParameters,\n): Promise<GetEnsTextReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  try {\n    const res = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [\n        toHex(packetToBytes(name)),\n        encodeFunctionData({\n          abi: textResolverAbi,\n          functionName: 'text',\n          args: [namehash(name), key],\n        }),\n      ],\n      blockNumber,\n      blockTag,\n    })\n\n    if (res[0] === '0x') return null\n\n    const record = decodeFunctionResult({\n      abi: textResolverAbi,\n      functionName: 'text',\n      data: res[0],\n    })\n\n    return record === '' ? null : record\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../types/ens.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type ParseAvatarRecordErrorType,\n  parseAvatarRecord,\n} from '../../utils/ens/avatar/parseAvatarRecord.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetEnsTextErrorType,\n  type GetEnsTextParameters,\n  getEnsText,\n} from './getEnsText.js'\n\nexport type GetEnsAvatarParameters = Prettify<\n  Omit<GetEnsTextParameters, 'key'> & {\n    /** Gateway urls to resolve IPFS and/or Arweave assets. */\n    gatewayUrls?: AssetGatewayUrls\n  }\n>\n\nexport type GetEnsAvatarReturnType = string | null\n\nexport type GetEnsAvatarErrorType =\n  | GetEnsTextErrorType\n  | ParseAvatarRecordErrorType\n  | ErrorType\n\n/**\n * Gets the avatar of an ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText.html) with `key` set to `'avatar'`.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAvatarParameters}\n * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAvatar, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAvatar = await getEnsAvatar(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n */\nexport async function getEnsAvatar<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    gatewayUrls,\n    name,\n    universalResolverAddress,\n  }: GetEnsAvatarParameters,\n): Promise<GetEnsAvatarReturnType> {\n  const record = await getAction(\n    client,\n    getEnsText,\n    'getEnsText',\n  )({\n    blockNumber,\n    blockTag,\n    key: 'avatar',\n    name,\n    universalResolverAddress,\n  })\n  if (!record) return null\n  try {\n    return await parseAvatarRecord(client, { record, gatewayUrls })\n  } catch {\n    return null\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalResolverReverseAbi } from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsNameParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Address to get ENS name for. */\n    address: Address\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsNameReturnType = string | null\n\nexport type GetEnsNameErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets primary name for specified address.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsName.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsNameParameters}\n * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsName } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensName = await getEnsName(client, {\n *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n * })\n * // 'wevm.eth'\n */\nexport async function getEnsName<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    blockNumber,\n    blockTag,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsNameParameters,\n): Promise<GetEnsNameReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const reverseNode = `${address.toLowerCase().substring(2)}.addr.reverse`\n  try {\n    const [name, resolvedAddress] = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      address: universalResolverAddress,\n      abi: universalResolverReverseAbi,\n      functionName: 'reverse',\n      args: [toHex(packetToBytes(reverseNode))],\n      blockNumber,\n      blockTag,\n    })\n    if (address.toLowerCase() !== resolvedAddress.toLowerCase()) return null\n    return name\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'reverse')) return null\n    throw err\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsResolverParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsResolverReturnType = Address\n\nexport type GetEnsResolverErrorType =\n  | GetChainContractAddressErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets resolver for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsResolverParameters}\n * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsResolver, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const resolverAddress = await getEnsResolver(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n */\nexport async function getEnsResolver<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    name,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsResolverParameters,\n) {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const [resolverAddress] = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    address: universalResolverAddress,\n    abi: [\n      {\n        inputs: [{ type: 'bytes' }],\n        name: 'findResolver',\n        outputs: [{ type: 'address' }, { type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n    ],\n    functionName: 'findResolver',\n    args: [toHex(packetToBytes(name))],\n    blockNumber,\n    blockTag,\n  })\n  return resolverAddress\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateBlockFilterReturnType = Filter<'block'>\n\nexport type CreateBlockFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createBlockFilter.html\n * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n */\nexport async function createBlockFilter<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n): Promise<CreateBlockFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newBlockFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newBlockFilter',\n  })\n  return { id, request: getRequest(id), type: 'block' }\n}\n", "import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex, LogTopic } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateEventFilterParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n> = {\n  address?: Address | Address[]\n  fromBlock?: TFromBlock | BlockNumber | BlockTag\n  toBlock?: TToBlock | BlockNumber | BlockTag\n} & (MaybeExtractEventArgsFromAbi<\n  TAbiEvents,\n  _EventName\n> extends infer TEventFilterArgs\n  ?\n      | {\n          args:\n            | TEventFilterArgs\n            | (_Args extends TEventFilterArgs ? _Args : never)\n          event: TAbiEvent\n          events?: never\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: TAbiEvent\n          events?: never\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: never\n          events: TAbiEvents\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: never\n          events?: never\n          strict?: never\n        }\n  : {\n      args?: never\n      event?: never\n      events?: never\n      strict?: never\n    })\n\nexport type CreateEventFilterReturnType<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n> = Prettify<\n  Filter<'event', TAbiEvents, _EventName, _Args, TStrict, TFromBlock, TToBlock>\n>\n\nexport type CreateEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter.html\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    args,\n    event,\n    events: events_,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateEventFilterParameters<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  > = {} as any,\n): Promise<\n  CreateEventFilterReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  >\n> {\n  const events = events_ ?? (event ? [event] : undefined)\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  let topics: LogTopic[] = []\n  if (events) {\n    topics = [\n      (events as AbiEvent[]).flatMap((event) =>\n        encodeEventTopics({\n          abi: [event],\n          eventName: (event as AbiEvent).name,\n          args,\n        } as EncodeEventTopicsParameters),\n      ),\n    ]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        ...(topics.length ? { topics } : {}),\n      },\n    ],\n  })\n\n  return {\n    abi: events,\n    args,\n    eventName: event ? (event as AbiEvent).name : undefined,\n    fromBlock,\n    id,\n    request: getRequest(id),\n    strict,\n    toBlock,\n    type: 'event',\n  } as unknown as CreateEventFilterReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  >\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreatePendingTransactionFilterReturnType = Filter<'transaction'>\n\nexport type CreatePendingTransactionFilterErrorType =\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter.html\n * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n */\nexport async function createPendingTransactionFilter<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  client: Client<TTransport, TChain>,\n): Promise<CreatePendingTransactionFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newPendingTransactionFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newPendingTransactionFilter',\n  })\n  return { id, request: getRequest(id), type: 'transaction' }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBalanceParameters = {\n  /** The address of the account. */\n  address: Address\n} & (\n  | {\n      /** The balance of the account at a block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockNumber?: never\n      /** The balance of the account at a block tag. */\n      blockTag?: BlockTag\n    }\n)\n\nexport type GetBalanceReturnType = bigint\n\nexport type GetBalanceErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the balance of an address in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBalance.html\n * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n *\n * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther.html).\n *\n * ```ts\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   blockTag: 'safe'\n * })\n * const balanceAsEther = formatEther(balance)\n * // \"6.942\"\n * ```\n *\n * @param client - Client to use\n * @param parameters - {@link GetBalanceParameters}\n * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBalance } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n * // 10000000000000000000000n (wei)\n */\nexport async function getBalance<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest' }: GetBalanceParameters,\n): Promise<GetBalanceReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n\n  const balance = await client.request({\n    method: 'eth_getBalance',\n    params: [address, blockNumberHex || blockTag],\n  })\n  return BigInt(balance)\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBlockTransactionCountParameters =\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash\n      blockNumber?: never\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag\n    }\n\nexport type GetBlockTransactionCountReturnType = number\n\nexport type GetBlockTransactionCountErrorType =\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the number of Transactions at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount.html\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockTransactionCountParameters}\n * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const count = await getBlockTransactionCount(client)\n */\nexport async function getBlockTransactionCount<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag = 'latest',\n  }: GetBlockTransactionCountParameters = {},\n): Promise<GetBlockTransactionCountReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let count: Quantity\n  if (blockHash) {\n    count = await client.request({\n      method: 'eth_getBlockTransactionCountByHash',\n      params: [blockHash],\n    })\n  } else {\n    count = await client.request({\n      method: 'eth_getBlockTransactionCountByNumber',\n      params: [blockNumberHex || blockTag],\n    })\n  }\n\n  return hexToNumber(count)\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBytecodeParameters = {\n  address: Address\n} & (\n  | {\n      blockNumber?: never\n      blockTag?: BlockTag\n    }\n  | {\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\n\nexport type GetBytecodeReturnType = Hex | undefined\n\nexport type GetBytecodeErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Retrieves the bytecode at an address.\n *\n * - Docs: https://viem.sh/docs/contract/getBytecode.html\n * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBytecodeParameters}\n * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBytecode } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getBytecode(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n * })\n */\nexport async function getBytecode<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest' }: GetBytecodeParameters,\n): Promise<GetBytecodeReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const hex = await client.request({\n    method: 'eth_getCode',\n    params: [address, blockNumberHex || blockTag],\n  })\n  if (hex === '0x') return undefined\n  return hex\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RpcFeeHistory } from '../../types/rpc.js'\n\nexport type FormatFeeHistoryErrorType = ErrorType\n\nexport function formatFeeHistory(feeHistory: RpcFeeHistory): FeeHistory {\n  return {\n    baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),\n    gasUsedRatio: feeHistory.gasUsedRatio,\n    oldestBlock: BigInt(feeHistory.oldestBlock),\n    reward: feeHistory.reward?.map((reward) =>\n      reward.map((value) => BigInt(value)),\n    ),\n  }\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatFeeHistoryErrorType,\n  formatFeeHistory,\n} from '../../utils/formatters/feeHistory.js'\n\nexport type GetFeeHistoryParameters = {\n  /**\n   * Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n   */\n  blockCount: number\n  /**\n   * A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used.\n   */\n  rewardPercentiles: number[]\n} & (\n  | {\n      blockNumber?: never\n      /**\n       * Highest number block of the requested range.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag\n    }\n  | {\n      /** Highest number block of the requested range. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\nexport type GetFeeHistoryReturnType = FeeHistory\n\nexport type GetFeeHistoryErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | FormatFeeHistoryErrorType\n\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory.html\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockCount,\n    blockNumber,\n    blockTag = 'latest',\n    rewardPercentiles,\n  }: GetFeeHistoryParameters,\n): Promise<GetFeeHistoryReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const feeHistory = await client.request({\n    method: 'eth_feeHistory',\n    params: [\n      numberToHex(blockCount),\n      blockNumberHex || blockTag,\n      rewardPercentiles,\n    ],\n  })\n  return formatFeeHistory(feeHistory)\n}\n", "import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from '../../utils/abi/decodeEventLog.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterLogsParameters<\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<'event', TAbi, TEventName, any, TStrict, TFromBlock, TToBlock>\n}\nexport type GetFilterLogsReturnType<\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = TAbi extends Abi\n    ? TEventName extends string\n      ? ExtractAbiEvent<TAbi, TEventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, _AbiEvent, TStrict, TAbi, TEventName>[]\n\nexport type GetFilterLogsErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs since the filter was created.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterLogs.html\n * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n *\n * `getFilterLogs` is only compatible with **event filters**.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterLogsParameters}\n * @returns A list of event logs. {@link GetFilterLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterLogs(client, { filter })\n */\nexport async function getFilterLogs<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[] | undefined,\n  TEventName extends string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<Transport, TChain>,\n  {\n    filter,\n  }: GetFilterLogsParameters<TAbi, TEventName, TStrict, TFromBlock, TToBlock>,\n): Promise<\n  GetFilterLogsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n> {\n  const strict = filter.strict ?? false\n\n  const logs = await filter.request({\n    method: 'eth_getFilterLogs',\n    params: [filter.id],\n  })\n  return logs\n    .map((log) => {\n      try {\n        const { eventName, args } =\n          'abi' in filter && filter.abi\n            ? decodeEventLog({\n                abi: filter.abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n            : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if ('strict' in filter && filter.strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as unknown as GetFilterLogsReturnType<\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Chain, ChainConfig, ChainFormatters } from '../../types/chain.js'\nimport type { Assign } from '../../types/utils.js'\n\nexport function defineChain<\n  const chain extends Chain,\n  formatters extends ChainFormatters | undefined = undefined,\n>(\n  chain: chain,\n  config: ChainConfig<formatters> = {},\n): Assign<chain, ChainConfig<formatters>> {\n  const {\n    fees = chain.fees,\n    formatters = chain.formatters,\n    serializers = chain.serializers,\n  } = config\n  return {\n    ...chain,\n    fees,\n    formatters,\n    serializers,\n  } as unknown as Assign<chain, ChainConfig<formatters>>\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain, ExtractChain } from '../../types/chain.js'\n\nexport type ExtractChainParameters<\n  chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n> = {\n  chains: chains\n  id: chainId | chains[number]['id']\n}\n\nexport type ExtractChainReturnType<\n  chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n> = ExtractChain<chains, chainId>\n\nexport type ExtractChainErrorType = ErrorType\n\nexport function extractChain<\n  const chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n>({\n  chains,\n  id,\n}: ExtractChainParameters<chains, chainId>): ExtractChainReturnType<\n  chains,\n  chainId\n> {\n  return chains.find((chain) => chain.id === id) as ExtractChainReturnType<\n    chains,\n    chainId\n  >\n}\n", "export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n", "// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\nimport type { AbiParameter, TypedData, TypedDataDomain } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from '../abi/encodeAbiParameters.js'\nimport { concat } from '../data/concat.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../typedData.js'\n\ntype MessageTypeProperty = {\n  name: string\n  type: string\n}\n\nexport type HashTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType>\n\nexport type HashTypedDataReturnType = Hex\n\nexport type HashTypedDataErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | HashStructErrorType\n  | ValidateTypedDataErrorType\n  | ErrorType\n\nexport function hashTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain: domain_,\n  message,\n  primaryType,\n  types: types_,\n}: HashTypedDataParameters<TTypedData, TPrimaryType>): HashTypedDataReturnType {\n  const domain: TypedDataDomain = typeof domain_ === 'undefined' ? {} : domain_\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...(types_ as TTypedData),\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  } as TypedDataDefinition)\n\n  const parts: Hex[] = ['0x1901']\n  if (domain)\n    parts.push(\n      hashDomain({\n        domain,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  if (primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct({\n        data: message,\n        primaryType: primaryType as string,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n  }\n\n  return keccak256(concat(parts))\n}\n\nexport type HashDomainErrorType = HashStructErrorType | ErrorType\n\nexport function hashDomain({\n  domain,\n  types,\n}: {\n  domain: TypedDataDomain\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  return hashStruct({\n    data: domain,\n    primaryType: 'EIP712Domain',\n    types,\n  })\n}\n\ntype HashStructErrorType = EncodeDataErrorType | Keccak256ErrorType | ErrorType\n\nfunction hashStruct({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encoded = encodeData({\n    data,\n    primaryType,\n    types,\n  })\n  return keccak256(encoded)\n}\n\ntype EncodeDataErrorType =\n  | EncodeAbiParametersErrorType\n  | EncodeFieldErrorType\n  | HashTypeErrorType\n  | ErrorType\n\nfunction encodeData({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encodedTypes: AbiParameter[] = [{ type: 'bytes32' }]\n  const encodedValues: unknown[] = [hashType({ primaryType, types })]\n\n  for (const field of types[primaryType]) {\n    const [type, value] = encodeField({\n      types,\n      name: field.name,\n      type: field.type,\n      value: data[field.name],\n    })\n    encodedTypes.push(type)\n    encodedValues.push(value)\n  }\n\n  return encodeAbiParameters(encodedTypes, encodedValues)\n}\n\ntype HashTypeErrorType =\n  | ToHexErrorType\n  | EncodeTypeErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nfunction hashType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encodedHashType = toHex(encodeType({ primaryType, types }))\n  return keccak256(encodedHashType)\n}\n\ntype EncodeTypeErrorType = FindTypeDependenciesErrorType\n\nfunction encodeType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  let result = ''\n  const unsortedDeps = findTypeDependencies({ primaryType, types })\n  unsortedDeps.delete(primaryType)\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()]\n  for (const type of deps) {\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`\n  }\n\n  return result\n}\n\ntype FindTypeDependenciesErrorType = ErrorType\n\nfunction findTypeDependencies(\n  {\n    primaryType: primaryType_,\n    types,\n  }: {\n    primaryType: string\n    types: Record<string, MessageTypeProperty[]>\n  },\n  results: Set<string> = new Set(),\n): Set<string> {\n  const match = primaryType_.match(/^\\w*/u)\n  const primaryType = match?.[0]!\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results\n  }\n\n  results.add(primaryType)\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies({ primaryType: field.type, types }, results)\n  }\n  return results\n}\n\ntype EncodeFieldErrorType =\n  | Keccak256ErrorType\n  | EncodeAbiParametersErrorType\n  | ToHexErrorType\n  | ErrorType\n\nfunction encodeField({\n  types,\n  name,\n  type,\n  value,\n}: {\n  types: Record<string, MessageTypeProperty[]>\n  name: string\n  type: string\n  value: any\n}): [type: AbiParameter, value: any] {\n  if (types[type] !== undefined) {\n    return [\n      { type: 'bytes32' },\n      keccak256(encodeData({ data: value, primaryType: type, types })),\n    ]\n  }\n\n  if (type === 'bytes') {\n    const prepend = value.length % 2 ? '0' : ''\n    value = `0x${prepend + value.slice(2)}`\n    return [{ type: 'bytes32' }, keccak256(value)]\n  }\n\n  if (type === 'string') return [{ type: 'bytes32' }, keccak256(toHex(value))]\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    const parsedType = type.slice(0, type.lastIndexOf('['))\n    const typeValuePairs = (value as [AbiParameter, any][]).map((item) =>\n      encodeField({\n        name,\n        type: parsedType,\n        types,\n        value: item,\n      }),\n    )\n    return [\n      { type: 'bytes32' },\n      keccak256(\n        encodeAbiParameters(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ]\n  }\n\n  return [{ type }, value]\n}\n", "import type {\n  TypedData,\n  TypedDataDomain,\n  TypedDataParameter,\n  TypedDataType,\n} from 'abitype'\n\nimport { BytesSizeMismatchError } from '../errors/abi.js'\nimport { InvalidAddressError } from '../errors/address.js'\nimport type { Hex } from '../types/misc.js'\nimport type { TypedDataDefinition } from '../types/typedData.js'\n\nimport type { ErrorType } from '../errors/utils.js'\nimport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nimport { type SizeErrorType, size } from './data/size.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\nimport { bytesRegex, integerRegex } from './regex.js'\nimport {\n  type HashDomainErrorType,\n  hashDomain,\n} from './signature/hashTypedData.js'\n\nexport type ValidateTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function validateTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain,\n  message,\n  primaryType,\n  types: types_,\n}: TypedDataDefinition<TTypedData, TPrimaryType>) {\n  const types = types_ as TypedData\n\n  const validateData = (\n    struct: readonly TypedDataParameter[],\n    value_: Record<string, unknown>,\n  ) => {\n    for (const param of struct) {\n      const { name, type: type_ } = param\n      const type = type_ as TypedDataType\n      const value = value_[name]\n\n      const integerMatch = type.match(integerRegex)\n      if (\n        integerMatch &&\n        (typeof value === 'number' || typeof value === 'bigint')\n      ) {\n        const [_type, base, size_] = integerMatch\n        // If number cannot be cast to a sized hex value, it is out of range\n        // and will throw.\n        numberToHex(value, {\n          signed: base === 'int',\n          size: parseInt(size_) / 8,\n        })\n      }\n\n      if (type === 'address' && typeof value === 'string' && !isAddress(value))\n        throw new InvalidAddressError({ address: value })\n\n      const bytesMatch = type.match(bytesRegex)\n      if (bytesMatch) {\n        const [_type, size_] = bytesMatch\n        if (size_ && size(value as Hex) !== parseInt(size_))\n          throw new BytesSizeMismatchError({\n            expectedSize: parseInt(size_),\n            givenSize: size(value as Hex),\n          })\n      }\n\n      const struct = types[type]\n      if (struct) validateData(struct, value as Record<string, unknown>)\n    }\n  }\n\n  // Validate domain types.\n  if (types.EIP712Domain && domain) validateData(types.EIP712Domain, domain)\n\n  if (primaryType !== 'EIP712Domain') {\n    // Validate message types.\n    const type = types[primaryType]\n    validateData(type, message as Record<string, unknown>)\n  }\n}\n\nexport type GetTypesForEIP712DomainErrorType = ErrorType\n\nexport function getTypesForEIP712Domain({\n  domain,\n}: { domain?: TypedDataDomain }): TypedDataParameter[] {\n  return [\n    typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n    domain?.version && { name: 'version', type: 'string' },\n    typeof domain?.chainId === 'number' && {\n      name: 'chainId',\n      type: 'uint256',\n    },\n    domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address',\n    },\n    domain?.salt && { name: 'salt', type: 'bytes32' },\n  ].filter(Boolean) as TypedDataParameter[]\n}\n\nexport type DomainSeparatorErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | ErrorType\n\nexport function domainSeparator({ domain }: { domain: TypedDataDomain }): Hex {\n  return hashDomain({\n    domain,\n    types: {\n      EIP712Domain: getTypesForEIP712Domain({ domain }),\n    },\n  })\n}\n", "import type { Abi, ExtractAbiFunctionNames } from 'abitype'\n\nimport { AbiFunctionSignatureNotFoundError } from '../../errors/abi.js'\nimport type { GetFunctionArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../hash/getFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeFunctionDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  data: Hex\n}\n\nexport type DecodeFunctionDataReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  _FunctionNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi>\n    : string,\n> = {\n  [TName in _FunctionNames]: {\n    args: GetFunctionArgs<TAbi, TName>['args']\n    functionName: TName\n  }\n}[_FunctionNames]\n\nexport type DecodeFunctionDataErrorType =\n  | AbiFunctionSignatureNotFoundError\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetFunctionSelectorErrorType\n  | SliceErrorType\n  | ErrorType\n\nexport function decodeFunctionData<TAbi extends Abi | readonly unknown[]>({\n  abi,\n  data,\n}: DecodeFunctionDataParameters<TAbi>) {\n  const signature = slice(data, 0, 4)\n  const description = (abi as Abi).find(\n    (x) =>\n      x.type === 'function' &&\n      signature === getFunctionSelector(formatAbiItem(x)),\n  )\n  if (!description)\n    throw new AbiFunctionSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeFunctionData',\n    })\n  return {\n    functionName: (description as { name: string }).name,\n    args: ('inputs' in description &&\n    description.inputs &&\n    description.inputs.length > 0\n      ? decodeAbiParameters(description.inputs, slice(data, 4))\n      : undefined) as readonly unknown[] | undefined,\n  } as DecodeFunctionDataReturnType<TAbi>\n}\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\nexport type EncodeDeployDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  bytecode: Hex\n} & GetConstructorArgs<TAbi>\n\nexport type EncodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | ErrorType\n\nexport function encodeDeployData<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  args,\n  bytecode,\n}: EncodeDeployDataParameters<TAbi>) {\n  if (!args || args.length === 0) return bytecode\n\n  const description = (abi as Abi).find(\n    (x) => 'type' in x && x.type === 'constructor',\n  )\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(\n    description.inputs,\n    args as readonly unknown[],\n  )\n  return concatHex([bytecode, data!])\n}\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiErrorInputsNotFoundError,\n  AbiErrorNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  GetErrorArgs,\n  InferErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../hash/getFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeErrorResult'\n\nexport type EncodeErrorResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TErrorName extends string | undefined = string,\n  _ErrorName = InferErrorName<TAbi, TErrorName>,\n> = {\n  errorName?: _ErrorName\n} & (TErrorName extends string\n  ? { abi: TAbi } & GetErrorArgs<TAbi, TErrorName>\n  : _ErrorName extends string\n    ? { abi: [TAbi[number]] } & GetErrorArgs<TAbi, _ErrorName>\n    : never)\n\nexport type EncodeErrorResultErrorType =\n  | GetAbiItemErrorType\n  | FormatAbiItemErrorType\n  | GetFunctionSelectorErrorType\n  | EncodeAbiParametersErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function encodeErrorResult<\n  const TAbi extends Abi | readonly unknown[],\n  TErrorName extends string | undefined = undefined,\n>({ abi, errorName, args }: EncodeErrorResultParameters<TAbi, TErrorName>) {\n  let abiItem = abi[0] as AbiItem\n  if (errorName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: errorName,\n    } as GetAbiItemParameters)\n    if (!abiItem) throw new AbiErrorNotFoundError(errorName, { docsPath })\n  }\n\n  if (abiItem.type !== 'error')\n    throw new AbiErrorNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getFunctionSelector(definition)\n\n  let data: Hex = '0x'\n  if (args && (args as readonly unknown[]).length > 0) {\n    if (!abiItem.inputs)\n      throw new AbiErrorInputsNotFoundError(abiItem.name, { docsPath })\n    data = encodeAbiParameters(abiItem.inputs, args as readonly unknown[])\n  }\n  return concatHex([signature, data])\n}\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  AbiFunctionOutputsNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  ContractFunctionResult,\n  InferFunctionName,\n} from '../../types/contract.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionResult'\n\nexport type EncodeFunctionResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n} & (TFunctionName extends string\n  ? { abi: TAbi; result?: ContractFunctionResult<TAbi, TFunctionName> }\n  : _FunctionName extends string\n    ? {\n        abi: [TAbi[number]]\n        result?: ContractFunctionResult<TAbi, _FunctionName>\n      }\n    : never)\n\nexport type EncodeFunctionResultErrorType =\n  | AbiFunctionOutputsNotFoundError\n  | AbiFunctionNotFoundError\n  | EncodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function encodeFunctionResult<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  functionName,\n  result,\n}: EncodeFunctionResultParameters<TAbi, TFunctionName>) {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiFunctionNotFoundError(functionName, {\n        docsPath: '/docs/contract/encodeFunctionResult',\n      })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeFunctionResult',\n    })\n\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  let values = Array.isArray(result) ? result : [result]\n  if (abiItem.outputs.length === 0 && !values[0]) values = []\n\n  return encodeAbiParameters(abiItem.outputs, values)\n}\n", "import type {\n  AbiParameterToPrimitiveType,\n  AbiType,\n  Address,\n  SolidityAddress,\n  SolidityArrayWithoutTuple,\n  SolidityBool,\n  SolidityBytes,\n  SolidityInt,\n  SolidityString,\n} from 'abitype'\n\nimport {\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  BytesSizeMismatchError,\n  type BytesSizeMismatchErrorType,\n  UnsupportedPackedAbiType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\nimport {\n  type BoolToHexErrorType,\n  type NumberToHexErrorType,\n  type StringToHexErrorType,\n  boolToHex,\n  numberToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\nimport { arrayRegex, bytesRegex, integerRegex } from '../regex.js'\n\ntype PackedAbiType =\n  | SolidityAddress\n  | SolidityBool\n  | SolidityBytes\n  | SolidityInt\n  | SolidityString\n  | SolidityArrayWithoutTuple\n\ntype EncodePackedValues<\n  TPackedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n> = {\n  [K in keyof TPackedAbiTypes]: TPackedAbiTypes[K] extends AbiType\n    ? AbiParameterToPrimitiveType<{ type: TPackedAbiTypes[K] }>\n    : unknown\n}\n\nexport type EncodePackedErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | ConcatHexErrorType\n  | EncodeErrorType\n  | ErrorType\n\nexport function encodePacked<\n  const TPackedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n>(types: TPackedAbiTypes, values: EncodePackedValues<TPackedAbiTypes>): Hex {\n  if (types.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: types.length as number,\n      givenLength: values.length as number,\n    })\n\n  const data: Hex[] = []\n  for (let i = 0; i < (types as unknown[]).length; i++) {\n    const type = types[i]\n    const value = values[i]\n    data.push(encode(type, value))\n  }\n  return concatHex(data)\n}\n\ntype EncodeErrorType =\n  | BoolToHexErrorType\n  | BytesSizeMismatchErrorType\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | PadErrorType\n  | StringToHexErrorType\n  | UnsupportedPackedAbiType\n  | ErrorType\n\nfunction encode<const TPackedAbiType extends PackedAbiType | unknown>(\n  type: TPackedAbiType,\n  value: EncodePackedValues<[TPackedAbiType]>[0],\n  isArray = false,\n): Hex {\n  if (type === 'address') {\n    const address = value as Address\n    if (!isAddress(address)) throw new InvalidAddressError({ address })\n    return pad(address.toLowerCase() as Hex, {\n      size: isArray ? 32 : null,\n    }) as Address\n  }\n  if (type === 'string') return stringToHex(value as string)\n  if (type === 'bytes') return value as Hex\n  if (type === 'bool')\n    return pad(boolToHex(value as boolean), { size: isArray ? 32 : 1 })\n\n  const intMatch = (type as string).match(integerRegex)\n  if (intMatch) {\n    const [_type, baseType, bits = '256'] = intMatch\n    const size = parseInt(bits) / 8\n    return numberToHex(value as number, {\n      size: isArray ? 32 : size,\n      signed: baseType === 'int',\n    })\n  }\n\n  const bytesMatch = (type as string).match(bytesRegex)\n  if (bytesMatch) {\n    const [_type, size] = bytesMatch\n    if (parseInt(size) !== ((value as Hex).length - 2) / 2)\n      throw new BytesSizeMismatchError({\n        expectedSize: parseInt(size),\n        givenSize: ((value as Hex).length - 2) / 2,\n      })\n    return pad(value as Hex, { dir: 'right', size: isArray ? 32 : null }) as Hex\n  }\n\n  const arrayMatch = (type as string).match(arrayRegex)\n  if (arrayMatch && Array.isArray(value)) {\n    const [_type, childType] = arrayMatch\n    const data: Hex[] = []\n    for (let i = 0; i < value.length; i++) {\n      data.push(encode(childType, value[i], true))\n    }\n    if (data.length === 0) return '0x'\n    return concatHex(data)\n  }\n\n  throw new UnsupportedPackedAbiType(type)\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\n\nexport type IsBytesErrorType = ErrorType\n\nexport function isBytes(value: unknown): value is ByteArray {\n  if (!value) return false\n  if (typeof value !== 'object') return false\n  if (!('BYTES_PER_ELEMENT' in value)) return false\n  return (\n    value.BYTES_PER_ELEMENT === 1 && value.constructor.name === 'Uint8Array'\n  )\n}\n", "import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  override name = 'NegativeOffsetError'\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`)\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  override name = 'PositionOutOfBoundsError'\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n    )\n  }\n}\n", "import {\n  NegativeOffsetError,\n  PositionOutOfBoundsError,\n} from '../errors/cursor.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ByteArray } from '../types/misc.js'\n\nexport type Cursor = {\n  bytes: ByteArray\n  dataView: DataView\n  position: number\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): ByteArray[number]\n  inspectBytes(length: number, position?: number): ByteArray\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: ByteArray[number]): void\n  pushBytes(bytes: ByteArray): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): ByteArray[number]\n  readBytes(length: number): ByteArray\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): void\n}\n\nexport type CreateCursorErrorType = ErrorType\n\nexport type CursorErrorType =\n  | CursorAssertPositionErrorType\n  | CursorDecrementPositionErrorType\n  | CursorIncrementPositionErrorType\n  | ErrorType\n\nexport type CursorAssertPositionErrorType = PositionOutOfBoundsError | ErrorType\n\nexport type CursorDecrementPositionErrorType = NegativeOffsetError | ErrorType\n\nexport type CursorIncrementPositionErrorType = NegativeOffsetError | ErrorType\n\nconst staticCursor: Cursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: ByteArray[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: ByteArray) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length) {\n    const value = this.inspectBytes(length)\n    this.position += length\n    return value\n  },\n  readUint8() {\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  setPosition(position) {\n    this.assertPosition(position)\n    this.position = position\n  },\n}\n\nexport function createCursor(bytes: ByteArray): Cursor {\n  const cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  return cursor\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport { BaseError } from '../../index.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\ntype Encodable = {\n  length: number\n  encode(cursor: Cursor): void\n}\n\nexport type ToRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type ToRlpErrorType =\n  | CreateCursorErrorType\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\nexport function toRlp<to extends To = 'hex'>(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  const encodable = getEncodable(bytes)\n  const cursor = createCursor(new Uint8Array(encodable.length))\n  encodable.encode(cursor)\n\n  if (to === 'hex') return bytesToHex(cursor.bytes) as ToRlpReturnType<to>\n  return cursor.bytes as ToRlpReturnType<to>\n}\n\nexport type BytesToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function bytesToRlp<to extends To = 'bytes'>(\n  bytes: RecursiveArray<ByteArray>,\n  to: to | To | undefined = 'bytes',\n): ToRlpReturnType<to> {\n  return toRlp(bytes, to)\n}\n\nexport type HexToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function hexToRlp<to extends To = 'hex'>(\n  hex: RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  return toRlp(hex, to)\n}\n\nfunction getEncodable(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n): Encodable {\n  if (Array.isArray(bytes))\n    return getEncodableList(bytes.map((x) => getEncodable(x)))\n  return getEncodableBytes(bytes)\n}\n\nfunction getEncodableList(list: Encodable[]): Encodable {\n  const bodyLength = list.reduce((acc, x) => acc + x.length, 0)\n\n  const sizeOfBodyLength = getSizeOfLength(bodyLength)\n  const length = (() => {\n    if (bodyLength <= 55) return 1 + bodyLength\n    return 1 + sizeOfBodyLength + bodyLength\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bodyLength <= 55) {\n        cursor.pushByte(0xc0 + bodyLength)\n      } else {\n        cursor.pushByte(0xc0 + 55 + sizeOfBodyLength)\n        if (sizeOfBodyLength === 1) cursor.pushUint8(bodyLength)\n        else if (sizeOfBodyLength === 2) cursor.pushUint16(bodyLength)\n        else if (sizeOfBodyLength === 3) cursor.pushUint24(bodyLength)\n        else cursor.pushUint32(bodyLength)\n      }\n      for (const { encode } of list) {\n        encode(cursor)\n      }\n    },\n  }\n}\n\nfunction getEncodableBytes(bytesOrHex: ByteArray | Hex): Encodable {\n  const bytes =\n    typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex\n\n  const sizeOfBytesLength = getSizeOfLength(bytes.length)\n  const length = (() => {\n    if (bytes.length === 1 && bytes[0] < 0x80) return 1\n    if (bytes.length <= 55) return 1 + bytes.length\n    return 1 + sizeOfBytesLength + bytes.length\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bytes.length === 1 && bytes[0] < 0x80) {\n        cursor.pushBytes(bytes)\n      } else if (bytes.length <= 55) {\n        cursor.pushByte(0x80 + bytes.length)\n        cursor.pushBytes(bytes)\n      } else {\n        cursor.pushByte(0x80 + 55 + sizeOfBytesLength)\n        if (sizeOfBytesLength === 1) cursor.pushUint8(bytes.length)\n        else if (sizeOfBytesLength === 2) cursor.pushUint16(bytes.length)\n        else if (sizeOfBytesLength === 3) cursor.pushUint24(bytes.length)\n        else cursor.pushUint32(bytes.length)\n        cursor.pushBytes(bytes)\n      }\n    },\n  }\n}\n\nfunction getSizeOfLength(length: number) {\n  if (length < 2 ** 8) return 1\n  if (length < 2 ** 16) return 2\n  if (length < 2 ** 24) return 3\n  if (length < 2 ** 32) return 4\n  throw new BaseError('Length is too large.')\n}\n", "import type { Address } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { type IsBytesErrorType, isBytes } from '../data/isBytes.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type GetAddressErrorType, getAddress } from './getAddress.js'\n\nexport type GetCreateAddressOptions = {\n  from: Address\n  nonce: bigint\n}\n\nexport type GetCreate2AddressOptions =\n  | {\n      bytecode: ByteArray | Hex\n      from: Address\n      salt: ByteArray | Hex\n    }\n  | {\n      bytecodeHash: ByteArray | Hex\n      from: Address\n      salt: ByteArray | Hex\n    }\n\nexport type GetContractAddressOptions =\n  | ({\n      opcode?: 'CREATE'\n    } & GetCreateAddressOptions)\n  | ({ opcode: 'CREATE2' } & GetCreate2AddressOptions)\n\nexport function getContractAddress(opts: GetContractAddressOptions) {\n  if (opts.opcode === 'CREATE2') return getCreate2Address(opts)\n  return getCreateAddress(opts)\n}\n\nexport type GetCreateAddressErrorType =\n  | Keccak256ErrorType\n  | GetAddressErrorType\n  | ToBytesErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nexport function getCreateAddress(opts: GetCreateAddressOptions) {\n  const from = toBytes(getAddress(opts.from))\n\n  let nonce = toBytes(opts.nonce)\n  if (nonce[0] === 0) nonce = new Uint8Array([])\n\n  return getAddress(\n    `0x${keccak256(toRlp([from, nonce], 'bytes')).slice(26)}` as Address,\n  )\n}\n\nexport type GetCreate2AddressErrorType =\n  | ConcatErrorType\n  | Keccak256ErrorType\n  | GetAddressErrorType\n  | IsBytesErrorType\n  | PadErrorType\n  | SliceErrorType\n  | ToBytesErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nexport function getCreate2Address(opts: GetCreate2AddressOptions) {\n  const from = toBytes(getAddress(opts.from))\n  const salt = pad(isBytes(opts.salt) ? opts.salt : toBytes(opts.salt), {\n    size: 32,\n  })\n\n  const bytecodeHash = (() => {\n    if ('bytecodeHash' in opts) {\n      if (isBytes(opts.bytecodeHash)) return opts.bytecodeHash\n      return toBytes(opts.bytecodeHash)\n    }\n    return keccak256(opts.bytecode, 'bytes')\n  })()\n\n  return getAddress(\n    slice(keccak256(concat([toBytes('0xff'), from, salt, bytecodeHash])), 12),\n  )\n}\n", "import type { ErrorType } from '../../errors/utils.js'\n\nconst paramsRegex = /((function|event)\\s)?(.*)(\\((.*)\\))/\n\nexport type ExtractFunctionPartsErrorType = ErrorType\n\n/** @deprecated \u2013 use `parseAbiItem` from `abitype`. */\nexport function extractFunctionParts(def: string) {\n  const parts = def.match(paramsRegex)\n  const type = parts?.[2] || undefined\n  const name = parts?.[3]\n  const params = parts?.[5] || undefined\n  return { type, name, params }\n}\n\nexport type ExtractFunctionNameErrorType = ErrorType\n\n/** @deprecated \u2013 use `parseAbiItem` from `abitype`. */\nexport function extractFunctionName(def: string) {\n  return extractFunctionParts(def).name\n}\n\nexport type ExtractFunctionParamsErrorType = ErrorType\n\n/** @deprecated \u2013 use `parseAbiItem` from `abitype`. */\nexport function extractFunctionParams(def: string) {\n  const params = extractFunctionParts(def).params\n  const splitParams = params?.split(',').map((x) => x.trim().split(' '))\n  return splitParams?.map((param) => ({\n    type: param[0],\n    name: param[1] === 'indexed' ? param[2] : param[1],\n    ...(param[1] === 'indexed' ? { indexed: true } : {}),\n  }))\n}\n\nexport type ExtractFunctionTypeErrorType = ErrorType\n\n/** @deprecated \u2013 use `parseAbiItem` from `abitype`. */\nexport function extractFunctionType(def: string) {\n  return extractFunctionParts(def).type\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterReturnType<\n  TChain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nconst statuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: Partial<RpcTransactionReceipt>,\n) {\n  return {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? statuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n", "import { InvalidBytesBooleanError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport {\n  type AssertSizeErrorType,\n  type HexToBigIntErrorType,\n  type HexToNumberErrorType,\n  assertSize,\n  hexToBigInt,\n  hexToNumber,\n} from './fromHex.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type FromBytesParameters<\n  TTo extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n> =\n  | TTo\n  | {\n      /** Size of the bytes. */\n      size?: number\n      /** Type to convert to. */\n      to: TTo\n    }\n\nexport type FromBytesReturnType<TTo> = TTo extends 'string'\n  ? string\n  : TTo extends 'hex'\n    ? Hex\n    : TTo extends 'bigint'\n      ? bigint\n      : TTo extends 'number'\n        ? number\n        : TTo extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromBytesErrorType =\n  | BytesToHexErrorType\n  | BytesToBigIntErrorType\n  | BytesToBoolErrorType\n  | BytesToNumberErrorType\n  | BytesToStringErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html\n * - Example: https://viem.sh/docs/utilities/fromBytes.html#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes<\n  TTo extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n>(\n  bytes: ByteArray,\n  toOrOpts: FromBytesParameters<TTo>,\n): FromBytesReturnType<TTo> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number')\n    return bytesToNumber(bytes, opts) as FromBytesReturnType<TTo>\n  if (to === 'bigint')\n    return bytesToBigInt(bytes, opts) as FromBytesReturnType<TTo>\n  if (to === 'boolean')\n    return bytesToBool(bytes, opts) as FromBytesReturnType<TTo>\n  if (to === 'string')\n    return bytesToString(bytes, opts) as FromBytesReturnType<TTo>\n  return bytesToHex(bytes, opts) as FromBytesReturnType<TTo>\n}\n\nexport type BytesToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean\n  /** Size of the bytes. */\n  size?: number\n}\n\nexport type BytesToBigIntErrorType =\n  | BytesToHexErrorType\n  | HexToBigIntErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigInt } from 'viem'\n * const data = bytesToBigInt(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigInt(\n  bytes: ByteArray,\n  opts: BytesToBigIntOpts = {},\n): bigint {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToBigInt(hex)\n}\n\nexport type BytesToBoolOpts = {\n  /** Size of the bytes. */\n  size?: number\n}\n\nexport type BytesToBoolErrorType =\n  | AssertSizeErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(\n  bytes_: ByteArray,\n  opts: BytesToBoolOpts = {},\n): boolean {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes)\n  }\n  if (bytes.length > 1 || bytes[0] > 1)\n    throw new InvalidBytesBooleanError(bytes)\n  return Boolean(bytes[0])\n}\n\nexport type BytesToNumberOpts = BytesToBigIntOpts\n\nexport type BytesToNumberErrorType =\n  | BytesToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(\n  bytes: ByteArray,\n  opts: BytesToNumberOpts = {},\n): number {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToNumber(hex)\n}\n\nexport type BytesToStringOpts = {\n  /** Size of the bytes. */\n  size?: number\n}\n\nexport type BytesToStringErrorType =\n  | AssertSizeErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(\n  bytes_: ByteArray,\n  opts: BytesToStringOpts = {},\n): string {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n", "import { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  InvalidHexValueError,\n  type InvalidHexValueErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nimport type { RecursiveArray } from './toRlp.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type FromRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? RecursiveArray<ByteArray> : never)\n  | (to extends 'hex' ? RecursiveArray<Hex> : never)\n\nexport type FromRlpErrorType =\n  | CreateCursorErrorType\n  | FromRlpCursorErrorType\n  | HexToBytesErrorType\n  | InvalidHexValueErrorType\n  | ErrorType\n\nexport function fromRlp<to extends To = 'hex'>(\n  value: ByteArray | Hex,\n  to: to | To | undefined = 'hex',\n): FromRlpReturnType<to> {\n  const bytes = (() => {\n    if (typeof value === 'string') {\n      if (value.length > 3 && value.length % 2 !== 0)\n        throw new InvalidHexValueError(value)\n      return hexToBytes(value)\n    }\n    return value\n  })()\n\n  const cursor = createCursor(bytes)\n  const result = fromRlpCursor(cursor, to)\n\n  return result as FromRlpReturnType<to>\n}\n\nexport type RlpToBytesErrorType = FromRlpErrorType | ErrorType\n\nexport function rlpToBytes<to extends To = 'bytes'>(\n  bytes: ByteArray,\n  to: to | To | undefined = 'bytes',\n): FromRlpReturnType<to> {\n  return fromRlp(bytes, to)\n}\n\nexport type RlpToHexErrorType = FromRlpErrorType | ErrorType\n\nexport function rlpToHex<to extends To = 'hex'>(\n  hex: Hex,\n  to: to | To | undefined = 'hex',\n): FromRlpReturnType<to> {\n  return fromRlp(hex, to)\n}\n\nexport type FromRlpCursorErrorType =\n  | BytesToHexErrorType\n  | ReadLengthErrorType\n  | ReadListErrorType\n  | ErrorType\n\nfunction fromRlpCursor<to extends To = 'hex'>(\n  cursor: Cursor,\n  to: to | To | undefined = 'hex',\n): FromRlpReturnType<to> {\n  if (cursor.bytes.length === 0)\n    return (\n      to === 'hex' ? bytesToHex(cursor.bytes) : cursor.bytes\n    ) as FromRlpReturnType<to>\n\n  const prefix = cursor.readByte()\n  if (prefix < 0x80) cursor.decrementPosition(1)\n\n  // bytes\n  if (prefix < 0xc0) {\n    const length = readLength(cursor, prefix, 0x80)\n    const bytes = cursor.readBytes(length)\n    return (to === 'hex' ? bytesToHex(bytes) : bytes) as FromRlpReturnType<to>\n  }\n\n  // list\n  const length = readLength(cursor, prefix, 0xc0)\n  return readList(cursor, length, to) as {} as FromRlpReturnType<to>\n}\n\nexport type ReadLengthErrorType = BaseErrorType | ErrorType\n\nfunction readLength(cursor: Cursor, prefix: number, offset: number) {\n  if (offset === 0x80 && prefix < 0x80) return 1\n  if (prefix <= offset + 55) return prefix - offset\n  if (prefix === offset + 55 + 1) return cursor.readUint8()\n  if (prefix === offset + 55 + 2) return cursor.readUint16()\n  if (prefix === offset + 55 + 3) return cursor.readUint24()\n  if (prefix === offset + 55 + 4) return cursor.readUint32()\n  throw new BaseError('Invalid RLP prefix')\n}\n\nexport type ReadListErrorType = ErrorType\n\nfunction readList<to extends To>(cursor: Cursor, length: number, to: to | To) {\n  const position = cursor.position\n  const value: FromRlpReturnType<to>[] = []\n  while (cursor.position - position < length)\n    value.push(fromRlpCursor(cursor, to))\n  return value\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type SizeErrorType, size } from '../data/size.js'\n\nexport type IsHashErrorType = IsHexErrorType | SizeErrorType | ErrorType\n\nexport function isHash(hash: string): hash is Hex {\n  return isHex(hash) && size(hash) === 32\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "import { sha256 as noble_sha256 } from '@noble/hashes/sha256'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Sha256Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type Sha256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function sha256<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo,\n): Sha256Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = noble_sha256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Sha256Hash<TTo>\n  return toHex(bytes) as Sha256Hash<TTo>\n}\n", "import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n", "import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Ripemd160Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type Ripemd160ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function ripemd160<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo,\n): Ripemd160Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = noble_ripemd160(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Ripemd160Hash<TTo>\n  return toHex(bytes) as Ripemd160Hash<TTo>\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type HexToNumberErrorType, hexToNumber } from '../encoding/fromHex.js'\nimport { toHex } from '../encoding/toHex.js'\n\nexport type RecoverPublicKeyParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray\n}\n\nexport type RecoverPublicKeyReturnType = Hex\n\nexport type RecoverPublicKeyErrorType =\n  | HexToNumberErrorType\n  | IsHexErrorType\n  | ErrorType\n\nexport async function recoverPublicKey({\n  hash,\n  signature,\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\n  const signatureHex = isHex(signature) ? signature : toHex(signature)\n  const hashHex = isHex(hash) ? hash : toHex(hash)\n\n  // Derive v = recoveryId + 27 from end of the signature (27 is added when signing the message)\n  // The recoveryId represents the y-coordinate on the secp256k1 elliptic curve and can have a value [0, 1].\n  let v = hexToNumber(`0x${signatureHex.slice(130)}`)\n  if (v === 0 || v === 1) v += 27\n\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\n  const publicKey = secp256k1.Signature.fromCompact(\n    signatureHex.substring(2, 130),\n  )\n    .addRecoveryBit(v - 27)\n    .recoverPublicKey(hashHex.substring(2))\n    .toHex(false)\n  return `0x${publicKey}`\n}\n", "import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray\n}\n\nexport type RecoverAddressReturnType = Address\n\nexport type RecoverAddressErrorType = ErrorType\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash: hash, signature }))\n}\n", "export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n'\n", "import { presignMessagePrefix } from '../../constants/strings.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport {\n  type StringToBytesErrorType,\n  type ToBytesErrorType,\n  stringToBytes,\n  toBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessage<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType =\n  | ConcatErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function hashMessage<TTo extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: TTo,\n): HashMessage<TTo> {\n  const messageBytes = (() => {\n    if (typeof message === 'string') return stringToBytes(message)\n    if (message.raw instanceof Uint8Array) return message.raw\n    return toBytes(message.raw)\n  })()\n  const prefixBytes = stringToBytes(\n    `${presignMessagePrefix}${messageBytes.length}`,\n  )\n  return keccak256(concat([prefixBytes, messageBytes]), to_)\n}\n", "import type { Address } from 'abitype'\n\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashMessageErrorType, hashMessage } from './hashMessage.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverMessageAddressParameters = {\n  message: SignableMessage\n  signature: Hex | ByteArray\n}\n\nexport type RecoverMessageAddressReturnType = Address\n\nexport type RecoverMessageAddressErrorType =\n  | HashMessageErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\nexport async function recoverMessageAddress({\n  message,\n  signature,\n}: RecoverMessageAddressParameters): Promise<RecoverMessageAddressReturnType> {\n  return recoverAddress({ hash: hashMessage(message), signature })\n}\n", "import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashTypedDataErrorType, hashTypedData } from './hashTypedData.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverTypedDataAddressParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType> & {\n  signature: Hex | ByteArray\n}\n\nexport type RecoverTypedDataAddressReturnType = Address\n\nexport type RecoverTypedDataAddressErrorType =\n  | RecoverAddressErrorType\n  | HashTypedDataErrorType\n  | ErrorType\n\nexport async function recoverTypedDataAddress<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain,\n  message,\n  primaryType,\n  signature,\n  types,\n}: RecoverTypedDataAddressParameters<\n  TTypedData,\n  TPrimaryType\n>): Promise<RecoverTypedDataAddressReturnType> {\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types,\n    } as unknown as RecoverTypedDataAddressParameters),\n    signature,\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type GetAddressErrorType, getAddress } from '../address/getAddress.js'\nimport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from '../address/isAddressEqual.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type RecoverMessageAddressErrorType,\n  recoverMessageAddress,\n} from './recoverMessageAddress.js'\n\nexport type VerifyMessageParameters = {\n  /** The address that signed the original message. */\n  address: Address\n  /** The message to be verified. */\n  message: SignableMessage\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyMessageReturnType = boolean\n\nexport type VerifyMessageErrorType =\n  | IsAddressEqualErrorType\n  | GetAddressErrorType\n  | RecoverMessageAddressErrorType\n  | ErrorType\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyMessage` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyMessage.html}\n *\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage({\n  address,\n  message,\n  signature,\n}: VerifyMessageParameters): Promise<VerifyMessageReturnType> {\n  return isAddressEqual(\n    getAddress(address),\n    await recoverMessageAddress({ message, signature }),\n  )\n}\n", "import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport { type GetAddressErrorType, getAddress } from '../address/getAddress.js'\nimport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from '../address/isAddressEqual.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type RecoverTypedDataAddressParameters,\n  recoverTypedDataAddress,\n} from './recoverTypedDataAddress.js'\n\nexport type VerifyTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType> & {\n  /** The address to verify the typed data for. */\n  address: Address\n  /** The signature to verify */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyTypedDataReturnType = boolean\n\nexport type VerifyTypedDataErrorType =\n  | IsAddressEqualErrorType\n  | GetAddressErrorType\n  | RecoverTypedDataAddressParameters\n  | ErrorType\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyTypedData` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyTypedData.html}\n *\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  address,\n  domain,\n  message,\n  primaryType,\n  signature,\n  types,\n}: VerifyTypedDataParameters<\n  TTypedData,\n  TPrimaryType\n>): Promise<VerifyTypedDataReturnType> {\n  return isAddressEqual(\n    getAddress(address),\n    await recoverTypedDataAddress({\n      domain,\n      message,\n      primaryType,\n      signature,\n      types,\n    } as RecoverTypedDataAddressParameters),\n  )\n}\n", "import {\n  InvalidSerializedTransactionTypeError,\n  type InvalidSerializedTransactionTypeErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n} from '../../types/transaction.js'\nimport { type SliceHexErrorType, sliceHex } from '../data/slice.js'\nimport { type HexToNumberErrorType, hexToNumber } from '../encoding/fromHex.js'\n\nexport type GetSerializedTransactionType<\n  TTransactionSerialized extends TransactionSerialized = TransactionSerialized,\n> = TTransactionSerialized extends TransactionSerializedEIP1559\n  ? 'eip1559'\n  : TTransactionSerialized extends TransactionSerializedEIP2930\n    ? 'eip2930'\n    : 'legacy'\n\nexport type GetSerializedTransactionTypeErrorType =\n  | HexToNumberErrorType\n  | InvalidSerializedTransactionTypeErrorType\n  | SliceHexErrorType\n  | ErrorType\n\nexport function getSerializedTransactionType<\n  TSerialized extends TransactionSerialized,\n>(\n  serializedTransaction: TSerialized,\n): GetSerializedTransactionType<TSerialized> {\n  const serializedType = sliceHex(serializedTransaction, 0, 1)\n\n  if (serializedType === '0x02')\n    return 'eip1559' as GetSerializedTransactionType<TSerialized>\n\n  if (serializedType === '0x01')\n    return 'eip2930' as GetSerializedTransactionType<TSerialized>\n\n  if (serializedType !== '0x' && hexToNumber(serializedType) >= 0xc0)\n    return 'legacy' as GetSerializedTransactionType<TSerialized>\n\n  throw new InvalidSerializedTransactionTypeError({ serializedType })\n}\n", "import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from '../../errors/chain.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\n\nexport type AssertTransactionEIP1559ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid EIP-1559 Transaction attribute.',\n    )\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n\nexport type AssertTransactionEIP2930ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n\nexport type AssertTransactionLegacyErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    accessList,\n  } = transaction\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (typeof chainId !== 'undefined' && chainId <= 0)\n    throw new InvalidChainIdError({ chainId })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n  if (accessList)\n    throw new BaseError(\n      '`accessList` is not a valid Legacy Transaction attribute.',\n    )\n}\n", "import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n  InvalidSerializedTransactionError,\n  type InvalidSerializedTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, Signature } from '../../types/misc.js'\nimport type {\n  AccessList,\n  TransactionRequestEIP2930,\n  TransactionRequestLegacy,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionType,\n} from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type PadHexErrorType, padHex } from '../data/pad.js'\nimport { trim } from '../data/trim.js'\nimport {\n  type HexToBigIntErrorType,\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from '../encoding/fromHex.js'\nimport { type FromRlpErrorType, fromRlp } from '../encoding/fromRlp.js'\nimport type { RecursiveArray } from '../encoding/toRlp.js'\nimport { isHash } from '../hash/isHash.js'\n\nimport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetSerializedTransactionType,\n  type GetSerializedTransactionTypeErrorType,\n  getSerializedTransactionType,\n} from './getSerializedTransactionType.js'\n\nexport type ParseTransactionReturnType<\n  TSerialized extends TransactionSerialized = TransactionSerialized,\n  TType extends TransactionType = GetSerializedTransactionType<TSerialized>,\n> =\n  | (TType extends 'eip1559' ? TransactionSerializableEIP1559 : never)\n  | (TType extends 'eip2930' ? TransactionSerializableEIP2930 : never)\n  | (TType extends 'legacy' ? TransactionSerializableLegacy : never)\n\nexport type ParseTransactionErrorType =\n  | GetSerializedTransactionTypeErrorType\n  | ParseTransactionEIP1559ErrorType\n  | ParseTransactionEIP2930ErrorType\n  | ParseTransactionLegacyErrorType\n\nexport function parseTransaction<TSerialized extends TransactionSerialized>(\n  serializedTransaction: TSerialized,\n): ParseTransactionReturnType<TSerialized> {\n  const type = getSerializedTransactionType(serializedTransaction)\n\n  if (type === 'eip1559')\n    return parseTransactionEIP1559(\n      serializedTransaction as TransactionSerializedEIP1559,\n    ) as ParseTransactionReturnType<TSerialized>\n\n  if (type === 'eip2930')\n    return parseTransactionEIP2930(\n      serializedTransaction as TransactionSerializedEIP2930,\n    ) as ParseTransactionReturnType<TSerialized>\n\n  return parseTransactionLegacy(\n    serializedTransaction,\n  ) as ParseTransactionReturnType<TSerialized>\n}\n\ntype ParseTransactionEIP1559ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | ToTransactionArrayErrorType\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | InvalidLegacyVErrorType\n  | InvalidSerializedTransactionErrorType\n  | IsHexErrorType\n  | ParseEIP155SignatureErrorType\n  | ErrorType\n\nfunction parseTransactionEIP1559(\n  serializedTransaction: TransactionSerializedEIP1559,\n): TransactionSerializableEIP1559 {\n  const transactionArray = toTransactionArray(serializedTransaction)\n\n  const [\n    chainId,\n    nonce,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    gas,\n    to,\n    value,\n    data,\n    accessList,\n    v,\n    r,\n    s,\n  ] = transactionArray\n\n  if (!(transactionArray.length === 9 || transactionArray.length === 12))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        chainId,\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gas,\n        to,\n        value,\n        data,\n        accessList,\n        ...(transactionArray.length > 9\n          ? {\n              v,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'eip1559',\n    })\n\n  const transaction: TransactionSerializableEIP1559 = {\n    chainId: hexToNumber(chainId as Hex),\n    type: 'eip1559',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(maxFeePerGas) && maxFeePerGas !== '0x')\n    transaction.maxFeePerGas = hexToBigInt(maxFeePerGas)\n  if (isHex(maxPriorityFeePerGas) && maxPriorityFeePerGas !== '0x')\n    transaction.maxPriorityFeePerGas = hexToBigInt(maxPriorityFeePerGas)\n  if (accessList.length !== 0 && accessList !== '0x')\n    transaction.accessList = parseAccessList(accessList as RecursiveArray<Hex>)\n\n  assertTransactionEIP1559(transaction)\n\n  const signature =\n    transactionArray.length === 12\n      ? parseEIP155Signature(transactionArray)\n      : undefined\n\n  return { ...signature, ...transaction }\n}\n\ntype ParseTransactionEIP2930ErrorType =\n  | AssertTransactionEIP2930ErrorType\n  | ToTransactionArrayErrorType\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | InvalidLegacyVErrorType\n  | InvalidSerializedTransactionErrorType\n  | IsHexErrorType\n  | ParseEIP155SignatureErrorType\n  | ErrorType\n\nfunction parseTransactionEIP2930(\n  serializedTransaction: TransactionSerializedEIP2930,\n): Omit<TransactionRequestEIP2930, 'from'> &\n  ({ chainId: number } | ({ chainId: number } & Signature)) {\n  const transactionArray = toTransactionArray(serializedTransaction)\n\n  const [chainId, nonce, gasPrice, gas, to, value, data, accessList, v, r, s] =\n    transactionArray\n\n  if (!(transactionArray.length === 8 || transactionArray.length === 11))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        chainId,\n        nonce,\n        gasPrice,\n        gas,\n        to,\n        value,\n        data,\n        accessList,\n        ...(transactionArray.length > 8\n          ? {\n              v,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'eip2930',\n    })\n\n  const transaction: TransactionSerializableEIP2930 = {\n    chainId: hexToNumber(chainId as Hex),\n    type: 'eip2930',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(gasPrice) && gasPrice !== '0x')\n    transaction.gasPrice = hexToBigInt(gasPrice)\n  if (accessList.length !== 0 && accessList !== '0x')\n    transaction.accessList = parseAccessList(accessList as RecursiveArray<Hex>)\n\n  assertTransactionEIP2930(transaction)\n\n  const signature =\n    transactionArray.length === 11\n      ? parseEIP155Signature(transactionArray)\n      : undefined\n\n  return { ...signature, ...transaction }\n}\n\ntype ParseTransactionLegacyErrorType =\n  | AssertTransactionLegacyErrorType\n  | FromRlpErrorType\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | InvalidLegacyVErrorType\n  | InvalidSerializedTransactionErrorType\n  | IsHexErrorType\n  | ErrorType\n\nfunction parseTransactionLegacy(\n  serializedTransaction: Hex,\n): Omit<TransactionRequestLegacy, 'from'> &\n  ({ chainId?: number } | ({ chainId: number } & Signature)) {\n  const transactionArray = fromRlp(serializedTransaction, 'hex')\n\n  const [nonce, gasPrice, gas, to, value, data, chainIdOrV_, r, s] =\n    transactionArray\n\n  if (!(transactionArray.length === 6 || transactionArray.length === 9))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        nonce,\n        gasPrice,\n        gas,\n        to,\n        value,\n        data,\n        ...(transactionArray.length > 6\n          ? {\n              v: chainIdOrV_,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'legacy',\n    })\n\n  const transaction: TransactionSerializableLegacy = {\n    type: 'legacy',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(gasPrice) && gasPrice !== '0x')\n    transaction.gasPrice = hexToBigInt(gasPrice)\n\n  assertTransactionLegacy(transaction)\n\n  if (transactionArray.length === 6) return transaction\n\n  const chainIdOrV =\n    isHex(chainIdOrV_) && chainIdOrV_ !== '0x'\n      ? hexToBigInt(chainIdOrV_ as Hex)\n      : 0n\n\n  if (s === '0x' && r === '0x') {\n    if (chainIdOrV > 0) transaction.chainId = Number(chainIdOrV)\n    return transaction\n  }\n\n  const v = chainIdOrV\n\n  const chainId: number | undefined = Number((v - 35n) / 2n)\n  if (chainId > 0) transaction.chainId = chainId\n  else if (v !== 27n && v !== 28n) throw new InvalidLegacyVError({ v })\n\n  transaction.v = v\n  transaction.s = s as Hex\n  transaction.r = r as Hex\n\n  return transaction\n}\n\nexport type ToTransactionArrayErrorType = FromRlpErrorType | ErrorType\n\nexport function toTransactionArray(serializedTransaction: string) {\n  return fromRlp(`0x${serializedTransaction.slice(4)}` as Hex, 'hex')\n}\n\nexport type ParseAccessListErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function parseAccessList(accessList_: RecursiveArray<Hex>): AccessList {\n  const accessList: AccessList = []\n  for (let i = 0; i < accessList_.length; i++) {\n    const [address, storageKeys] = accessList_[i] as [Hex, Hex[]]\n\n    if (!isAddress(address)) throw new InvalidAddressError({ address })\n\n    accessList.push({\n      address: address,\n      storageKeys: storageKeys.map((key) => (isHash(key) ? key : trim(key))),\n    })\n  }\n  return accessList\n}\n\ntype ParseEIP155SignatureErrorType =\n  | HexToBigIntErrorType\n  | PadHexErrorType\n  | ErrorType\n\nfunction parseEIP155Signature(\n  transactionArray: RecursiveArray<Hex>,\n): Signature & { yParity: number } {\n  const signature = transactionArray.slice(-3)\n  const v =\n    signature[0] === '0x' || hexToBigInt(signature[0] as Hex) === 0n ? 27n : 28n\n  return {\n    r: padHex(signature[1] as Hex, { size: 32 }),\n    s: padHex(signature[2] as Hex, { size: 32 }),\n    v,\n    yParity: v === 27n ? 0 : 1,\n  }\n}\n", "import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  InvalidStorageKeySizeError,\n  type InvalidStorageKeySizeErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { AccessList } from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type RecursiveArray } from '../encoding/toRlp.js'\n\nexport type SerializeAccessListErrorType =\n  | InvalidStorageKeySizeErrorType\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(\n  accessList?: AccessList,\n): RecursiveArray<Hex> {\n  if (!accessList || accessList.length === 0) return []\n\n  const serializedAccessList: RecursiveArray<Hex> = []\n  for (let i = 0; i < accessList.length; i++) {\n    const { address, storageKeys } = accessList[i]\n\n    for (let j = 0; j < storageKeys.length; j++) {\n      if (storageKeys[j].length - 2 !== 64) {\n        throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] })\n      }\n    }\n\n    if (!isAddress(address)) {\n      throw new InvalidAddressError({ address })\n    }\n\n    serializedAccessList.push([address, storageKeys])\n  }\n  return serializedAccessList\n}\n", "import {\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Signature } from '../../types/misc.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { trim } from '../data/trim.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\n\nimport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetTransactionType,\n  type GetTransationTypeErrorType,\n  getTransactionType,\n} from './getTransactionType.js'\nimport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './serializeAccessList.js'\n\nexport type SerializedTransactionReturnType<\n  TTransactionSerializable extends\n    TransactionSerializable = TransactionSerializable,\n  TTransactionType extends\n    TransactionType = GetTransactionType<TTransactionSerializable>,\n> = TransactionSerialized<TTransactionType>\n\nexport type SerializeTransactionFn<\n  TTransactionSerializable extends\n    TransactionSerializable = TransactionSerializable,\n> = typeof serializeTransaction<TTransactionSerializable>\n\nexport type SerializeTransactionErrorType =\n  | GetTransationTypeErrorType\n  | SerializeTransactionEIP1559ErrorType\n  | SerializeTransactionEIP2930ErrorType\n  | SerializeTransactionLegacyErrorType\n  | ErrorType\n\nexport function serializeTransaction<\n  TTransactionSerializable extends TransactionSerializable,\n>(\n  transaction: TTransactionSerializable,\n  signature?: Signature,\n): SerializedTransactionReturnType<TTransactionSerializable> {\n  const type = getTransactionType(transaction) as GetTransactionType\n\n  if (type === 'eip1559')\n    return serializeTransactionEIP1559(\n      transaction as TransactionSerializableEIP1559,\n      signature,\n    ) as SerializedTransactionReturnType<TTransactionSerializable>\n\n  if (type === 'eip2930')\n    return serializeTransactionEIP2930(\n      transaction as TransactionSerializableEIP2930,\n      signature,\n    ) as SerializedTransactionReturnType<TTransactionSerializable>\n\n  return serializeTransactionLegacy(\n    transaction as TransactionSerializableLegacy,\n    signature,\n  ) as SerializedTransactionReturnType<TTransactionSerializable>\n}\n\ntype SerializeTransactionEIP1559ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n  signature?: Signature,\n): TransactionSerializedEIP1559 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP1559(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n  ]\n\n  if (signature) {\n    const yParity = (() => {\n      if (signature.v === 0n) return '0x'\n      if (signature.v === 1n) return toHex(1)\n\n      return signature.v === 27n ? '0x' : toHex(1)\n    })()\n    serializedTransaction.push(yParity, trim(signature.r), trim(signature.s))\n  }\n\n  return concatHex([\n    '0x02',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP1559\n}\n\ntype SerializeTransactionEIP2930ErrorType =\n  | AssertTransactionEIP2930ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n  signature?: Signature,\n): TransactionSerializedEIP2930 {\n  const { chainId, gas, data, nonce, to, value, accessList, gasPrice } =\n    transaction\n\n  assertTransactionEIP2930(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n  ]\n\n  if (signature) {\n    const yParity = (() => {\n      if (signature.v === 0n) return '0x'\n      if (signature.v === 1n) return toHex(1)\n\n      return signature.v === 27n ? '0x' : toHex(1)\n    })()\n    serializedTransaction.push(yParity, trim(signature.r), trim(signature.s))\n  }\n\n  return concatHex([\n    '0x01',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP2930\n}\n\ntype SerializeTransactionLegacyErrorType =\n  | AssertTransactionLegacyErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nfunction serializeTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n  signature?: Signature,\n): TransactionSerializedLegacy {\n  const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction\n\n  assertTransactionLegacy(transaction)\n\n  let serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n  ]\n\n  if (signature) {\n    const v = (() => {\n      // EIP-155 (explicit chainId)\n      if (chainId > 0)\n        return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n)\n\n      // EIP-155 (inferred chainId)\n      if (signature.v >= 35n) {\n        const inferredChainId = (signature.v - 35n) / 2n\n        if (inferredChainId > 0) return signature.v\n        return 27n + (signature.v === 35n ? 0n : 1n)\n      }\n\n      // Pre-EIP-155 (no chainId)\n      const v = 27n + (signature.v === 27n ? 0n : 1n)\n      if (signature.v !== v) throw new InvalidLegacyVError({ v: signature.v })\n      return v\n    })()\n\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(v),\n      signature.r,\n      signature.s,\n    ]\n  } else if (chainId > 0) {\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(chainId),\n      '0x',\n      '0x',\n    ]\n  }\n\n  return toRlp(serializedTransaction)\n}\n", "import type { ErrorType } from '../../errors/utils.js'\n\nexport type ParseUnitsErrorType = ErrorType\n\n/**\n * Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\n *\n * - Docs: https://viem.sh/docs/utilities/parseUnits.html\n *\n * @example\n * import { parseUnits } from 'viem'\n *\n * parseUnits('420', 9)\n * // 420000000000n\n */\nexport function parseUnits(value: string, decimals: number) {\n  let [integer, fraction = '0'] = value.split('.')\n\n  const negative = integer.startsWith('-')\n  if (negative) integer = integer.slice(1)\n\n  // trim leading zeros.\n  fraction = fraction.replace(/(0+)$/, '')\n\n  // round off if the fraction is larger than the number of decimals.\n  if (decimals === 0) {\n    if (Math.round(Number(`.${fraction}`)) === 1)\n      integer = `${BigInt(integer) + 1n}`\n    fraction = ''\n  } else if (fraction.length > decimals) {\n    const [left, unit, right] = [\n      fraction.slice(0, decimals - 1),\n      fraction.slice(decimals - 1, decimals),\n      fraction.slice(decimals),\n    ]\n\n    const rounded = Math.round(Number(`${unit}.${right}`))\n    if (rounded > 9)\n      fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, '0')\n    else fraction = `${left}${rounded}`\n\n    if (fraction.length > decimals) {\n      fraction = fraction.slice(1)\n      integer = `${BigInt(integer) + 1n}`\n    }\n\n    fraction = fraction.slice(0, decimals)\n  } else {\n    fraction = fraction.padEnd(decimals, '0')\n  }\n\n  return BigInt(`${negative ? '-' : ''}${integer}${fraction}`)\n}\n", "import { etherUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseEtherErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of ether to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseEther.html\n *\n * @example\n * import { parseEther } from 'viem'\n *\n * parseEther('420')\n * // 420000000000000000000n\n */\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n", "import { gweiUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseGweiErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of gwei to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseGwei.html\n *\n * @example\n * import { parseGwei } from 'viem'\n *\n * parseGwei('420')\n * // 420000000000n\n */\nexport function parseGwei(ether: string, unit: 'wei' = 'wei') {\n  return parseUnits(ether, gweiUnits[unit])\n}\n", "export {\n  type IsDeterministicErrorType,\n  type RequestErrorType,\n  isDeterministicError,\n  buildRequest,\n} from './buildRequest.js'\n\nexport {\n  type CcipFetchErrorType,\n  type OffchainLookupErrorType,\n  ccipFetch,\n  offchainLookup,\n  offchainLookupAbiItem,\n  offchainLookupSignature,\n} from './ccip.js'\n\nexport {\n  type AssertCurrentChainErrorType,\n  type AssertCurrentChainParameters,\n  assertCurrentChain,\n} from './chain/assertCurrentChain.js'\nexport { defineChain } from './chain/defineChain.js'\nexport {\n  type ExtractChainErrorType,\n  type ExtractChainParameters,\n  type ExtractChainReturnType,\n  extractChain,\n} from './chain/extractChain.js'\nexport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from './chain/getChainContractAddress.js'\n\nexport { arrayRegex, bytesRegex, integerRegex } from './regex.js'\n\nexport {\n  type GetSocketErrorType,\n  type HttpErrorType,\n  type HttpOptions,\n  type HttpReturnType,\n  type RpcRequest,\n  type RpcResponse,\n  type Socket,\n  type WebSocketAsyncErrorType,\n  type WebSocketAsyncOptions,\n  type WebSocketAsyncReturnType,\n  type WebSocketErrorType,\n  type WebSocketOptions,\n  type WebSocketReturnType,\n  getSocket,\n  rpc,\n} from './rpc.js'\nexport { type StringifyErrorType, stringify } from './stringify.js'\nexport {\n  type DomainSeparatorErrorType,\n  validateTypedData,\n} from './typedData.js'\nexport {\n  type DecodeAbiParametersErrorType,\n  type DecodeAbiParametersReturnType,\n  decodeAbiParameters,\n} from './abi/decodeAbiParameters.js'\nexport {\n  type DecodeErrorResultErrorType,\n  type DecodeErrorResultParameters,\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from './abi/decodeErrorResult.js'\nexport {\n  type DecodeEventLogErrorType,\n  type DecodeEventLogParameters,\n  type DecodeEventLogReturnType,\n  decodeEventLog,\n} from './abi/decodeEventLog.js'\nexport {\n  type DecodeFunctionDataErrorType,\n  type DecodeFunctionDataParameters,\n  decodeFunctionData,\n} from './abi/decodeFunctionData.js'\nexport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  type DecodeFunctionResultReturnType,\n  decodeFunctionResult,\n} from './abi/decodeFunctionResult.js'\nexport {\n  type EncodeAbiParametersErrorType,\n  type EncodeAbiParametersReturnType,\n  encodeAbiParameters,\n} from './abi/encodeAbiParameters.js'\nexport {\n  type EncodeDeployDataErrorType,\n  type EncodeDeployDataParameters,\n  encodeDeployData,\n} from './abi/encodeDeployData.js'\nexport {\n  type EncodeErrorResultErrorType,\n  type EncodeErrorResultParameters,\n  encodeErrorResult,\n} from './abi/encodeErrorResult.js'\nexport {\n  type EncodeArgErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from './abi/encodeEventTopics.js'\nexport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from './abi/encodeFunctionData.js'\nexport {\n  type EncodeFunctionResultErrorType,\n  type EncodeFunctionResultParameters,\n  encodeFunctionResult,\n} from './abi/encodeFunctionResult.js'\nexport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './abi/getAbiItem.js'\nexport {\n  type ParseAbi,\n  type ParseAbiItem,\n  type ParseAbiParameter,\n  type ParseAbiParameters,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter,\n  parseAbiParameters,\n} from 'abitype'\nexport { type EncodePackedErrorType, encodePacked } from './abi/encodePacked.js'\nexport {\n  type FormatAbiItemWithArgsErrorType,\n  formatAbiItemWithArgs,\n} from './abi/formatAbiItemWithArgs.js'\nexport {\n  type FormatAbiItemErrorType,\n  type FormatAbiParamErrorType,\n  type FormatAbiParamsErrorType,\n  formatAbiItem,\n  formatAbiParams,\n} from './abi/formatAbiItem.js'\nexport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../accounts/utils/parseAccount.js'\nexport {\n  type PublicKeyToAddressErrorType,\n  publicKeyToAddress,\n} from '../accounts/utils/publicKeyToAddress.js'\nexport {\n  type GetContractAddressOptions,\n  type GetCreate2AddressErrorType,\n  type GetCreate2AddressOptions,\n  type GetCreateAddressErrorType,\n  type GetCreateAddressOptions,\n  getContractAddress,\n  getCreateAddress,\n  getCreate2Address,\n} from './address/getContractAddress.js'\nexport {\n  type ChecksumAddressErrorType,\n  getAddress,\n} from './address/getAddress.js'\nexport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nexport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from './address/isAddressEqual.js'\nexport {\n  type ExtractFunctionNameErrorType,\n  type ExtractFunctionParamsErrorType,\n  type ExtractFunctionPartsErrorType,\n  type ExtractFunctionTypeErrorType,\n  extractFunctionName,\n  extractFunctionParams,\n  extractFunctionType,\n  extractFunctionParts,\n} from './contract/extractFunctionParts.js'\nexport {\n  type ConcatBytesErrorType,\n  type ConcatErrorType,\n  type ConcatHexErrorType,\n  concat,\n  concatBytes,\n  concatHex,\n} from './data/concat.js'\nexport { type IsBytesErrorType, isBytes } from './data/isBytes.js'\nexport { type IsHexErrorType, isHex } from './data/isHex.js'\nexport {\n  type PadBytesErrorType,\n  type PadErrorType,\n  type PadHexErrorType,\n  pad,\n  padBytes,\n  padHex,\n} from './data/pad.js'\nexport { type SizeErrorType, size } from './data/size.js'\nexport {\n  type AssertEndOffsetErrorType,\n  type AssertStartOffsetErrorType,\n  type SliceBytesErrorType,\n  type SliceErrorType,\n  type SliceHexErrorType,\n  type SliceReturnType,\n  slice,\n  sliceBytes,\n  sliceHex,\n} from './data/slice.js'\nexport { type TrimErrorType, type TrimReturnType, trim } from './data/trim.js'\nexport {\n  type DefineBlockErrorType,\n  type FormattedBlock,\n  type FormatBlockErrorType,\n  defineBlock,\n  formatBlock,\n} from './formatters/block.js'\nexport {\n  type DefineTransactionErrorType,\n  type FormattedTransaction,\n  type FormatTransactionErrorType,\n  defineTransaction,\n  formatTransaction,\n  transactionType,\n} from './formatters/transaction.js'\nexport { type FormatLogErrorType, formatLog } from './formatters/log.js'\nexport {\n  type DefineTransactionReceiptErrorType,\n  type FormatTransactionReceiptErrorType,\n  type FormattedTransactionReceipt,\n  defineTransactionReceipt,\n} from './formatters/transactionReceipt.js'\nexport {\n  type DefineTransactionRequestErrorType,\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  defineTransactionRequest,\n  formatTransactionRequest,\n} from './formatters/transactionRequest.js'\nexport { type ExtractErrorType, extract } from './formatters/extract.js'\nexport {\n  type BytesToRlpErrorType,\n  type HexToRlpErrorType,\n  type ToRlpErrorType,\n  type ToRlpReturnType,\n  toRlp,\n} from './encoding/toRlp.js'\nexport {\n  type BoolToBytesErrorType,\n  type BoolToBytesOpts,\n  type HexToBytesErrorType,\n  type HexToBytesOpts,\n  type NumberToBytesErrorType,\n  type StringToBytesErrorType,\n  type StringToBytesOpts,\n  type ToBytesErrorType,\n  type ToBytesParameters,\n  boolToBytes,\n  toBytes,\n  hexToBytes,\n  numberToBytes,\n  stringToBytes,\n} from './encoding/toBytes.js'\nexport {\n  type BoolToHexErrorType,\n  type BoolToHexOpts,\n  type BytesToHexErrorType,\n  type BytesToHexOpts,\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  type StringToHexErrorType,\n  type StringToHexOpts,\n  type ToHexErrorType,\n  type ToHexParameters,\n  boolToHex,\n  bytesToHex,\n  toHex,\n  numberToHex,\n  stringToHex,\n} from './encoding/toHex.js'\nexport {\n  type BytesToBigIntErrorType,\n  type BytesToBigIntOpts,\n  type BytesToBoolErrorType,\n  type BytesToBoolOpts,\n  type BytesToNumberErrorType,\n  type BytesToNumberOpts,\n  type BytesToStringErrorType,\n  type BytesToStringOpts,\n  type FromBytesErrorType,\n  type FromBytesParameters,\n  type FromBytesReturnType,\n  bytesToBigInt,\n  /** @deprecated \u2013 use `bytesToBigInt` */\n  bytesToBigInt as bytesToBigint,\n  bytesToBool,\n  bytesToNumber,\n  bytesToString,\n  fromBytes,\n} from './encoding/fromBytes.js'\nexport {\n  type AssertSizeErrorType,\n  type FromHexErrorType,\n  type FromHexParameters,\n  type FromHexReturnType,\n  type HexToBigIntErrorType,\n  type HexToBigIntOpts,\n  type HexToBoolErrorType,\n  type HexToBoolOpts,\n  type HexToNumberErrorType,\n  type HexToNumberOpts,\n  type HexToStringErrorType,\n  type HexToStringOpts,\n  fromHex,\n  hexToBool,\n  hexToBigInt,\n  hexToNumber,\n  hexToString,\n} from './encoding/fromHex.js'\nexport {\n  type FromRlpErrorType,\n  fromRlp,\n} from './encoding/fromRlp.js'\nexport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  containsNodeError,\n  getNodeError,\n} from './errors/getNodeError.js'\nexport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from './errors/getCallError.js'\nexport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from './errors/getContractError.js'\nexport {\n  type GetEstimateGasErrorReturnType,\n  getEstimateGasError,\n} from './errors/getEstimateGasError.js'\nexport {\n  type GetTransactionErrorParameters,\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from './errors/getTransactionError.js'\nexport {\n  type DefineFormatterErrorType,\n  defineFormatter,\n} from './formatters/formatter.js'\nexport {\n  type GetEventSelectorErrorType,\n  getEventSelector,\n} from './hash/getEventSelector.js'\nexport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from './hash/getFunctionSelector.js'\nexport { type IsHashErrorType, isHash } from './hash/isHash.js'\nexport { type Keccak256ErrorType, keccak256 } from './hash/keccak256.js'\nexport { type Sha256ErrorType, sha256 } from './hash/sha256.js'\nexport { type Ripemd160ErrorType, ripemd160 } from './hash/ripemd160.js'\nexport {\n  type HashDomainErrorType,\n  type HashTypedDataParameters,\n  type HashTypedDataReturnType,\n  hashTypedData,\n} from './signature/hashTypedData.js'\nexport {\n  type RecoverAddressErrorType,\n  type RecoverAddressParameters,\n  type RecoverAddressReturnType,\n  recoverAddress,\n} from './signature/recoverAddress.js'\nexport {\n  type RecoverMessageAddressErrorType,\n  type RecoverMessageAddressParameters,\n  type RecoverMessageAddressReturnType,\n  recoverMessageAddress,\n} from './signature/recoverMessageAddress.js'\nexport {\n  type RecoverPublicKeyErrorType,\n  type RecoverPublicKeyParameters,\n  type RecoverPublicKeyReturnType,\n  recoverPublicKey,\n} from './signature/recoverPublicKey.js'\nexport {\n  type RecoverTypedDataAddressErrorType,\n  type RecoverTypedDataAddressParameters,\n  type RecoverTypedDataAddressReturnType,\n  recoverTypedDataAddress,\n} from './signature/recoverTypedDataAddress.js'\nexport {\n  type VerifyMessageErrorType,\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from './signature/verifyMessage.js'\nexport {\n  type VerifyTypedDataErrorType,\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from './signature/verifyTypedData.js'\nexport {\n  type HashMessage,\n  type HashMessageErrorType,\n  hashMessage,\n} from './signature/hashMessage.js'\nexport {\n  type GetSerializedTransactionTypeErrorType,\n  type GetSerializedTransactionType,\n  getSerializedTransactionType,\n} from './transaction/getSerializedTransactionType.js'\nexport {\n  type GetTransationTypeErrorType,\n  type GetTransactionType,\n  getTransactionType,\n} from './transaction/getTransactionType.js'\nexport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from './transaction/assertRequest.js'\nexport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './transaction/assertTransaction.js'\nexport {\n  type ParseTransactionErrorType,\n  parseTransaction,\n} from './transaction/parseTransaction.js'\nexport {\n  /** @deprecated import `prepareTransactionRequest` from `viem/actions` instead. */\n  prepareTransactionRequest,\n} from '../actions/wallet/prepareTransactionRequest.js'\nexport {\n  serializeTransaction,\n  type SerializeTransactionErrorType,\n  type SerializeTransactionFn,\n} from './transaction/serializeTransaction.js'\nexport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './transaction/serializeAccessList.js'\nexport { type FormatEtherErrorType, formatEther } from './unit/formatEther.js'\nexport { type FormatGweiErrorType, formatGwei } from './unit/formatGwei.js'\nexport { type FormatUnitsErrorType, formatUnits } from './unit/formatUnits.js'\nexport { type ParseUnitsErrorType, parseUnits } from './unit/parseUnits.js'\nexport { type ParseEtherErrorType, parseEther } from './unit/parseEther.js'\nexport { type ParseGweiErrorType, parseGwei } from './unit/parseGwei.js'\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RpcProof } from '../../types/rpc.js'\nimport { hexToNumber } from '../index.js'\n\nexport type FormatProofErrorType = ErrorType\n\nfunction formatStorageProof(storageProof: RpcProof['storageProof']) {\n  return storageProof.map((proof) => ({\n    ...proof,\n    value: BigInt(proof.value),\n  }))\n}\n\nexport function formatProof(proof: Partial<RpcProof>) {\n  return {\n    ...proof,\n    balance: proof.balance ? BigInt(proof.balance) : undefined,\n    nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n    storageProof: proof.storageProof\n      ? formatStorageProof(proof.storageProof)\n      : undefined,\n  } as Proof\n}\n", "import type { Address } from 'abitype'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatProofErrorType,\n  formatProof,\n} from '../../utils/formatters/proof.js'\n\nexport type GetProofParameters = {\n  /** Account address. */\n  address: Address\n  /** Array of storage-keys that should be proofed and included. */\n  storageKeys: Hash[]\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockNumber?: never\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag\n    }\n)\n\nexport type GetProofReturnType = Proof\n\nexport type GetProofErrorType =\n  | NumberToHexErrorType\n  | FormatProofErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the account and storage values of the specified account including the Merkle-proof.\n *\n * - Docs: https://viem.sh/docs/actions/public/getProof.html\n * - JSON-RPC Methods:\n *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n *\n * @param client - Client to use\n * @param parameters - {@link GetProofParameters}\n * @returns Proof data. {@link GetProofReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getProof } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getProof(client, {\n *  address: '0x...',\n *  storageKeys: ['0x...'],\n * })\n */\nexport async function getProof<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    blockNumber,\n    blockTag: blockTag_,\n    storageKeys,\n  }: GetProofParameters,\n): Promise<GetProofReturnType> {\n  const blockTag = blockTag_ ?? 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  const proof = await client.request({\n    method: 'eth_getProof',\n    params: [address, storageKeys, blockNumberHex || blockTag],\n  })\n\n  return formatProof(proof)\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetStorageAtParameters = {\n  address: Address\n  slot: Hex\n} & (\n  | {\n      blockNumber?: never\n      blockTag?: BlockTag\n    }\n  | {\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\n\nexport type GetStorageAtReturnType = Hex | undefined\n\nexport type GetStorageAtErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the value from a storage slot at a given address.\n *\n * - Docs: https://viem.sh/docs/contract/getStorageAt.html\n * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n *\n * @param client - Client to use\n * @param parameters - {@link GetStorageAtParameters}\n * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getStorageAt } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getStorageAt(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   slot: toHex(0),\n * })\n */\nexport async function getStorageAt<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest', slot }: GetStorageAtParameters,\n): Promise<GetStorageAtReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const data = await client.request({\n    method: 'eth_getStorageAt',\n    params: [address, slot, blockNumberHex || blockTag],\n  })\n  return data\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { TransactionNotFoundError } from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\n\nexport type GetTransactionParameters<TBlockTag extends BlockTag = 'latest'> =\n  | {\n      /** The block hash */\n      blockHash: Hash\n      blockNumber?: never\n      blockTag?: never\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      /** The block number */\n      blockNumber: bigint\n      blockTag?: never\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /** The block tag. */\n      blockTag: TBlockTag | BlockTag\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      blockTag?: never\n      /** The hash of the transaction. */\n      hash: Hash\n      index?: number\n    }\n\nexport type GetTransactionReturnType<\n  TChain extends Chain | undefined = Chain,\n  TBlockTag extends BlockTag = 'latest',\n> = FormattedTransaction<TChain, TBlockTag>\n\nexport type GetTransactionErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) given a hash or block identifier.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransaction.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionParameters}\n * @returns The transaction information. {@link GetTransactionReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransaction } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transaction = await getTransaction(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransaction<\n  TChain extends Chain | undefined,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, TChain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    hash,\n    index,\n  }: GetTransactionParameters<TBlockTag>,\n): Promise<GetTransactionReturnType<TChain, TBlockTag>> {\n  const blockTag = blockTag_ || 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let transaction: RpcTransaction | null = null\n  if (hash) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByHash',\n      params: [hash],\n    })\n  } else if (blockHash) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByBlockHashAndIndex',\n      params: [blockHash, numberToHex(index)],\n    })\n  } else if (blockNumberHex || blockTag) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByBlockNumberAndIndex',\n      params: [blockNumberHex || blockTag, numberToHex(index)],\n    })\n  }\n\n  if (!transaction)\n    throw new TransactionNotFoundError({\n      blockHash,\n      blockNumber,\n      blockTag,\n      hash,\n      index,\n    })\n\n  const format =\n    client.chain?.formatters?.transaction?.format || formatTransaction\n  return format(transaction)\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { FormattedTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetBlockNumberErrorType,\n  getBlockNumber,\n} from './getBlockNumber.js'\nimport {\n  type GetTransactionErrorType,\n  getTransaction,\n} from './getTransaction.js'\n\nexport type GetTransactionConfirmationsParameters<\n  TChain extends Chain | undefined = Chain,\n> =\n  | {\n      /** The transaction hash. */\n      hash: Hash\n      transactionReceipt?: never\n    }\n  | {\n      hash?: never\n      /** The transaction receipt. */\n      transactionReceipt: FormattedTransactionReceipt<TChain>\n    }\n\nexport type GetTransactionConfirmationsReturnType = bigint\n\nexport type GetTransactionConfirmationsErrorType =\n  | GetBlockNumberErrorType\n  | GetTransactionErrorType\n  | ErrorType\n\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  { hash, transactionReceipt }: GetTransactionConfirmationsParameters<TChain>,\n): Promise<GetTransactionConfirmationsReturnType> {\n  const [blockNumber, transaction] = await Promise.all([\n    getAction(client, getBlockNumber, 'getBlockNumber')({}),\n    hash\n      ? getAction(client, getTransaction, 'getBlockNumber')({ hash })\n      : undefined,\n  ])\n  const transactionBlockNumber =\n    transactionReceipt?.blockNumber || transaction?.blockNumber\n  if (!transactionBlockNumber) return 0n\n  return blockNumber - transactionBlockNumber! + 1n\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormattedTransactionReceipt,\n  formatTransactionReceipt,\n} from '../../utils/formatters/transactionReceipt.js'\n\nexport type GetTransactionReceiptParameters = {\n  /** The hash of the transaction. */\n  hash: Hash\n}\n\nexport type GetTransactionReceiptReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionReceipt<TChain>\n\nexport type GetTransactionReceiptErrorType =\n  | RequestErrorType\n  | TransactionReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { hash }: GetTransactionReceiptParameters,\n) {\n  const receipt = await client.request({\n    method: 'eth_getTransactionReceipt',\n    params: [hash],\n  })\n\n  if (!receipt) throw new TransactionReceiptNotFoundError({ hash })\n\n  const format =\n    client.chain?.formatters?.transactionReceipt?.format ||\n    formatTransactionReceipt\n  return format(receipt) as GetTransactionReceiptReturnType<TChain>\n}\n", "import type { Address, Narrow } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionConfig } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  MulticallContracts,\n  MulticallResults,\n} from '../../types/multicall.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { CallParameters } from './call.js'\nimport { type ReadContractErrorType, readContract } from './readContract.js'\n\nexport type MulticallParameters<\n  TContracts extends ContractFunctionConfig[] = ContractFunctionConfig[],\n  TAllowFailure extends boolean = true,\n> = Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n  allowFailure?: TAllowFailure\n  /** The maximum size (in bytes) for each calldata chunk. Set to `0` to disable the size limit. @default 1_024 */\n  batchSize?: number\n  contracts: Narrow<readonly [...MulticallContracts<TContracts>]>\n  multicallAddress?: Address\n}\n\nexport type MulticallReturnType<\n  TContracts extends ContractFunctionConfig[] = ContractFunctionConfig[],\n  TAllowFailure extends boolean = true,\n> = MulticallResults<TContracts, TAllowFailure>\n\nexport type MulticallErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | GetContractErrorReturnType<\n      EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n    >\n  | ErrorType\n\n/**\n * Similar to [`readContract`](https://viem.sh/docs/contract/readContract.html), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n *\n * - Docs: https://viem.sh/docs/contract/multicall.html\n *\n * @param client - Client to use\n * @param parameters - {@link MulticallParameters}\n * @returns An array of results with accompanying status. {@link MulticallReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { multicall } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const abi = parseAbi([\n *   'function balanceOf(address) view returns (uint256)',\n *   'function totalSupply() view returns (uint256)',\n * ])\n * const results = await multicall(client, {\n *   contracts: [\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'balanceOf',\n *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n *     },\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'totalSupply',\n *     },\n *   ],\n * })\n * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n */\nexport async function multicall<\n  TContracts extends ContractFunctionConfig[],\n  TChain extends Chain | undefined,\n  TAllowFailure extends boolean = true,\n>(\n  client: Client<Transport, TChain>,\n  args: MulticallParameters<TContracts, TAllowFailure>,\n): Promise<MulticallReturnType<TContracts, TAllowFailure>> {\n  const {\n    allowFailure = true,\n    batchSize: batchSize_,\n    blockNumber,\n    blockTag,\n    contracts,\n    multicallAddress: multicallAddress_,\n  } = args\n\n  const batchSize =\n    batchSize_ ??\n    ((typeof client.batch?.multicall === 'object' &&\n      client.batch.multicall.batchSize) ||\n      1_024)\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. multicallAddress is required.',\n      )\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  type Aggregate3Calls = {\n    allowFailure: boolean\n    callData: Hex\n    target: Address\n  }[]\n\n  const chunkedCalls: Aggregate3Calls[] = [[]]\n  let currentChunk = 0\n  let currentChunkSize = 0\n  for (let i = 0; i < contracts.length; i++) {\n    const { abi, address, args, functionName } = contracts[\n      i\n    ] as ContractFunctionConfig\n    try {\n      const callData = encodeFunctionData({\n        abi,\n        args,\n        functionName,\n      } as unknown as EncodeFunctionDataParameters)\n\n      currentChunkSize += (callData.length - 2) / 2\n      // Check to see if we need to create a new chunk.\n      if (\n        // Check if batching is enabled.\n        batchSize > 0 &&\n        // Check if the current size of the batch exceeds the size limit.\n        currentChunkSize > batchSize &&\n        // Check if the current chunk is not already empty.\n        chunkedCalls[currentChunk].length > 0\n      ) {\n        currentChunk++\n        currentChunkSize = (callData.length - 2) / 2\n        chunkedCalls[currentChunk] = []\n      }\n\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData,\n          target: address,\n        },\n      ]\n    } catch (err) {\n      const error = getContractError(err as BaseError, {\n        abi,\n        address,\n        args,\n        docsPath: '/docs/contract/multicall',\n        functionName,\n      })\n      if (!allowFailure) throw error\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData: '0x' as Hex,\n          target: address,\n        },\n      ]\n    }\n  }\n\n  const aggregate3Results = await Promise.allSettled(\n    chunkedCalls.map((calls) =>\n      getAction(\n        client,\n        readContract,\n        'readContract',\n      )({\n        abi: multicall3Abi,\n        address: multicallAddress!,\n        args: [calls],\n        blockNumber,\n        blockTag,\n        functionName: 'aggregate3',\n      }),\n    ),\n  )\n\n  const results = []\n  for (let i = 0; i < aggregate3Results.length; i++) {\n    const result = aggregate3Results[i]\n\n    // If an error occurred in a `readContract` invocation (ie. network error),\n    // then append the failure reason to each contract result.\n    if (result.status === 'rejected') {\n      if (!allowFailure) throw result.reason\n      for (let j = 0; j < chunkedCalls[i].length; j++) {\n        results.push({\n          status: 'failure',\n          error: result.reason,\n          result: undefined,\n        })\n      }\n      continue\n    }\n\n    // If the `readContract` call was successful, then decode the results.\n    const aggregate3Result = result.value\n    for (let j = 0; j < aggregate3Result.length; j++) {\n      // Extract the response from `readContract`\n      const { returnData, success } = aggregate3Result[j]\n\n      // Extract the request call data from the original call.\n      const { callData } = chunkedCalls[i][j]\n\n      // Extract the contract config for this call from the `contracts` argument\n      // for decoding.\n      const { abi, address, functionName, args } = contracts[\n        results.length\n      ] as ContractFunctionConfig\n\n      try {\n        if (callData === '0x') throw new AbiDecodingZeroDataError()\n        if (!success) throw new RawContractError({ data: returnData })\n        const result = decodeFunctionResult({\n          abi,\n          args,\n          data: returnData,\n          functionName,\n        })\n        results.push(allowFailure ? { result, status: 'success' } : result)\n      } catch (err) {\n        const error = getContractError(err as BaseError, {\n          abi,\n          address,\n          args,\n          docsPath: '/docs/contract/multicall',\n          functionName,\n        })\n        if (!allowFailure) throw error\n        results.push({ error, result: undefined, status: 'failure' })\n      }\n    }\n  }\n\n  if (results.length !== contracts.length)\n    throw new BaseError('multicall results mismatch')\n  return results as MulticallResults<TContracts, TAllowFailure>\n}\n", "export const universalSignatureValidatorByteCode =\n  '0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572'\n", "import { equalBytes } from '@noble/curves/abstract/utils'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type IsBytesEqualErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function isBytesEqual(a_: ByteArray | Hex, b_: ByteArray | Hex) {\n  const a = isHex(a_) ? toBytes(a_) : a_\n  const b = isHex(b_) ? toBytes(b_) : b_\n  return equalBytes(a, b)\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalSignatureValidatorAbi } from '../../constants/abis.js'\nimport { universalSignatureValidatorByteCode } from '../../constants/contracts.js'\nimport { CallExecutionError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { EncodeDeployDataErrorType } from '../../utils/abi/encodeDeployData.js'\nimport {\n  type IsBytesEqualErrorType,\n  isBytesEqual,\n} from '../../utils/data/isBytesEqual.js'\nimport type { IsHexErrorType } from '../../utils/data/isHex.js'\nimport type { ToHexErrorType } from '../../utils/encoding/toHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { encodeDeployData, isHex, toHex } from '../../utils/index.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type VerifyHashParameters = Pick<\n  CallParameters,\n  'blockNumber' | 'blockTag'\n> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The hash to be verified. */\n  hash: Hex\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyHashReturnType = boolean\n\nexport type VerifyHashErrorType =\n  | CallErrorType\n  | IsHexErrorType\n  | ToHexErrorType\n  | IsBytesEqualErrorType\n  | EncodeDeployDataErrorType\n  | ErrorType\n\n/**\n * Verifies a message hash on chain using ERC-6492.\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, hash, signature, ...callRequest }: VerifyHashParameters,\n): Promise<VerifyHashReturnType> {\n  const signatureHex = isHex(signature) ? signature : toHex(signature)\n\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      data: encodeDeployData({\n        abi: universalSignatureValidatorAbi,\n        args: [address, hash, signatureHex],\n        bytecode: universalSignatureValidatorByteCode,\n      }),\n      ...callRequest,\n    } as unknown as CallParameters)\n\n    return isBytesEqual(data ?? '0x0', '0x1')\n  } catch (error) {\n    if (error instanceof CallExecutionError) {\n      // if the execution fails, the signature was not valid and an internal method inside of the validator reverted\n      // this can happen for many reasons, for example if signer can not be recovered from the signature\n      // or if the signature has no valid format\n      return false\n    }\n\n    throw error\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { hashMessage } from '../../utils/index.js'\nimport type { HashMessageErrorType } from '../../utils/signature/hashMessage.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyMessageParameters = Omit<VerifyHashParameters, 'hash'> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The message to be verified. */\n  message: SignableMessage\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyMessageReturnType = boolean\n\nexport type VerifyMessageErrorType =\n  | HashMessageErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage.html}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, message, signature, ...callRequest }: VerifyMessageParameters,\n): Promise<VerifyMessageReturnType> {\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n", "import type { Address, TypedData } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type HashTypedDataErrorType,\n  hashTypedData,\n} from '../../utils/signature/hashTypedData.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = Omit<VerifyHashParameters, 'hash'> &\n  TypedDataDefinition<TTypedData, TPrimaryType> & {\n    /** The address to verify the typed data for. */\n    address: Address\n    /** The signature to verify */\n    signature: Hex | ByteArray\n  }\n\nexport type VerifyTypedDataReturnType = boolean\n\nexport type VerifyTypedDataErrorType =\n  | HashTypedDataErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData.html}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    signature,\n    message,\n    primaryType,\n    types,\n    domain,\n    ...callRequest\n  }: VerifyTypedDataParameters,\n): Promise<VerifyTypedDataReturnType> {\n  const hash = hashTypedData({ message, primaryType, types, domain })\n  return verifyHash(client, {\n    address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport {\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from './getBlockNumber.js'\n\nexport type OnBlockNumberParameter = GetBlockNumberReturnType\nexport type OnBlockNumberFn = (\n  blockNumber: OnBlockNumberParameter,\n  prevBlockNumber: OnBlockNumberParameter | undefined,\n) => void\n\nexport type PollOptions = {\n  /** Whether or not to emit the missed block numbers to the callback. */\n  emitMissed?: boolean\n  /** Whether or not to emit the latest block number to the callback when the subscription opens. */\n  emitOnBegin?: boolean\n  /** Polling frequency (in ms). Defaults to Client's pollingInterval config. */\n  pollingInterval?: number\n}\n\nexport type WatchBlockNumberParameters<\n  TTransport extends Transport = Transport,\n> = {\n  /** The callback to call when a new block number is received. */\n  onBlockNumber: OnBlockNumberFn\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          emitMissed?: never\n          emitOnBegin?: never\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & { poll: true })\n  : PollOptions & { poll?: true })\n\nexport type WatchBlockNumberReturnType = () => void\n\nexport type WatchBlockNumberErrorType = PollErrorType | ErrorType\n\n/**\n * Watches and returns incoming block numbers.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlockNumberParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, watchBlockNumber, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlockNumber(client, {\n *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n * })\n */\nexport function watchBlockNumber<\n  TChain extends Chain | undefined,\n  TTransport extends Transport,\n>(\n  client: Client<TTransport, TChain>,\n  {\n    emitOnBegin = false,\n    emitMissed = false,\n    onBlockNumber,\n    onError,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlockNumberParameters<TTransport>,\n): WatchBlockNumberReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  let prevBlockNumber: GetBlockNumberReturnType | undefined\n\n  const pollBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const blockNumber = await getAction(\n              client,\n              getBlockNumber,\n              'getBlockNumber',\n            )({ cacheTime: 0 })\n\n            if (prevBlockNumber) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (blockNumber === prevBlockNumber) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                  emit.onBlockNumber(i, prevBlockNumber)\n                  prevBlockNumber = i\n                }\n              }\n            }\n\n            // If the next block number is greater than the previous,\n            // it is not in the past, and we can emit the new block number.\n            if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlockNumber = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newHeads'],\n          onData(data: any) {\n            if (!active) return\n            const blockNumber = hexToBigInt(data.result?.number)\n            onBlockNumber(blockNumber, prevBlockNumber)\n            prevBlockNumber = blockNumber\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollBlockNumber() : subscribeBlockNumber()\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BlockNotFoundError } from '../../errors/block.js'\nimport {\n  TransactionNotFoundError,\n  TransactionReceiptNotFoundError,\n  WaitForTransactionReceiptTimeoutError,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { withRetry } from '../../utils/promise/withRetry.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport {\n  type GetTransactionErrorType,\n  type GetTransactionReturnType,\n  getTransaction,\n} from './getTransaction.js'\nimport {\n  type GetTransactionReceiptErrorType,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from './getTransactionReceipt.js'\nimport {\n  type WatchBlockNumberErrorType,\n  watchBlockNumber,\n} from './watchBlockNumber.js'\n\nexport type ReplacementReason = 'cancelled' | 'replaced' | 'repriced'\nexport type ReplacementReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = {\n  reason: ReplacementReason\n  replacedTransaction: Transaction\n  transaction: Transaction\n  transactionReceipt: GetTransactionReceiptReturnType<TChain>\n}\n\nexport type WaitForTransactionReceiptReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = GetTransactionReceiptReturnType<TChain>\n\nexport type WaitForTransactionReceiptParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n> = {\n  /**\n   * The number of confirmations (blocks that have passed) to wait before resolving.\n   * @default 1\n   */\n  confirmations?: number\n  /** The hash of the transaction. */\n  hash: Hash\n  /** Optional callback to emit if the transaction has been replaced. */\n  onReplaced?: (response: ReplacementReturnType<TChain>) => void\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n  /** Optional timeout (in milliseconds) to wait before stopping polling. */\n  timeout?: number\n}\n\nexport type WaitForTransactionReceiptErrorType =\n  | ObserveErrorType\n  | GetBlockErrorType\n  | GetTransactionErrorType\n  | GetTransactionReceiptErrorType\n  | WatchBlockNumberErrorType\n  | ErrorType\n\n/**\n * Waits for the [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms.html#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n *\n * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n *   - If a Transaction has been replaced:\n *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n *     - Checks if one of the Transactions is a replacement\n *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n *\n * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n *\n * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n *\n * There are 3 types of Transaction Replacement reasons:\n *\n * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForTransactionReceiptParameters}\n * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await waitForTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function waitForTransactionReceipt<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    confirmations = 1,\n    hash,\n    onReplaced,\n    pollingInterval = client.pollingInterval,\n    timeout,\n  }: WaitForTransactionReceiptParameters<TChain>,\n): Promise<WaitForTransactionReceiptReturnType<TChain>> {\n  const observerId = stringify(['waitForTransactionReceipt', client.uid, hash])\n\n  let transaction: GetTransactionReturnType<TChain> | undefined\n  let replacedTransaction: GetTransactionReturnType<TChain> | undefined\n  let receipt: GetTransactionReceiptReturnType<TChain>\n  let retrying = false\n\n  return new Promise((resolve, reject) => {\n    if (timeout)\n      setTimeout(\n        () => reject(new WaitForTransactionReceiptTimeoutError({ hash })),\n        timeout,\n      )\n\n    const _unobserve = observe(\n      observerId,\n      { onReplaced, resolve, reject },\n      (emit) => {\n        const _unwatch = getAction(\n          client,\n          watchBlockNumber,\n          'watchBlockNumber',\n        )({\n          emitMissed: true,\n          emitOnBegin: true,\n          poll: true,\n          pollingInterval,\n          async onBlockNumber(blockNumber_) {\n            if (retrying) return\n\n            let blockNumber = blockNumber_\n\n            const done = (fn: () => void) => {\n              _unwatch()\n              fn()\n              _unobserve()\n            }\n\n            try {\n              // If we already have a valid receipt, let's check if we have enough\n              // confirmations. If we do, then we can resolve.\n              if (receipt) {\n                if (\n                  confirmations > 1 &&\n                  (!receipt.blockNumber ||\n                    blockNumber - receipt.blockNumber + 1n < confirmations)\n                )\n                  return\n\n                done(() => emit.resolve(receipt))\n                return\n              }\n\n              // Get the transaction to check if it's been replaced.\n              // We need to retry as some RPC Providers may be slow to sync\n              // up mined transactions.\n              if (!transaction) {\n                retrying = true\n                await withRetry(\n                  async () => {\n                    transaction = (await getAction(\n                      client,\n                      getTransaction,\n                      'getTransaction',\n                    )({ hash })) as GetTransactionReturnType<TChain>\n                    if (transaction.blockNumber)\n                      blockNumber = transaction.blockNumber\n                  },\n                  {\n                    // exponential backoff\n                    delay: ({ count }) => ~~(1 << count) * 200,\n                    retryCount: 6,\n                  },\n                )\n                retrying = false\n              }\n\n              // Get the receipt to check if it's been processed.\n              receipt = await getAction(\n                client,\n                getTransactionReceipt,\n                'getTransactionReceipt',\n              )({ hash })\n\n              // Check if we have enough confirmations. If not, continue polling.\n              if (\n                confirmations > 1 &&\n                (!receipt.blockNumber ||\n                  blockNumber - receipt.blockNumber + 1n < confirmations)\n              )\n                return\n\n              done(() => emit.resolve(receipt))\n            } catch (err) {\n              // If the receipt is not found, the transaction will be pending.\n              // We need to check if it has potentially been replaced.\n              if (\n                transaction &&\n                (err instanceof TransactionNotFoundError ||\n                  err instanceof TransactionReceiptNotFoundError)\n              ) {\n                try {\n                  replacedTransaction = transaction\n\n                  // Let's retrieve the transactions from the current block.\n                  // We need to retry as some RPC Providers may be slow to sync\n                  // up mined blocks.\n                  retrying = true\n                  const block = await withRetry(\n                    () =>\n                      getAction(\n                        client,\n                        getBlock,\n                        'getBlock',\n                      )({\n                        blockNumber,\n                        includeTransactions: true,\n                      }),\n                    {\n                      // exponential backoff\n                      delay: ({ count }) => ~~(1 << count) * 200,\n                      retryCount: 6,\n                      shouldRetry: ({ error }) =>\n                        error instanceof BlockNotFoundError,\n                    },\n                  )\n                  retrying = false\n\n                  const replacementTransaction = (\n                    block.transactions as {} as Transaction[]\n                  ).find(\n                    ({ from, nonce }) =>\n                      from === replacedTransaction!.from &&\n                      nonce === replacedTransaction!.nonce,\n                  )\n\n                  // If we couldn't find a replacement transaction, continue polling.\n                  if (!replacementTransaction) return\n\n                  // If we found a replacement transaction, return it's receipt.\n                  receipt = await getAction(\n                    client,\n                    getTransactionReceipt,\n                    'getTransactionReceipt',\n                  )({\n                    hash: replacementTransaction.hash,\n                  })\n\n                  // Check if we have enough confirmations. If not, continue polling.\n                  if (\n                    confirmations > 1 &&\n                    (!receipt.blockNumber ||\n                      blockNumber - receipt.blockNumber + 1n < confirmations)\n                  )\n                    return\n\n                  let reason: ReplacementReason = 'replaced'\n                  if (\n                    replacementTransaction.to === replacedTransaction.to &&\n                    replacementTransaction.value === replacedTransaction.value\n                  ) {\n                    reason = 'repriced'\n                  } else if (\n                    replacementTransaction.from === replacementTransaction.to &&\n                    replacementTransaction.value === 0n\n                  ) {\n                    reason = 'cancelled'\n                  }\n\n                  done(() => {\n                    emit.onReplaced?.({\n                      reason,\n                      replacedTransaction: replacedTransaction!,\n                      transaction: replacementTransaction,\n                      transactionReceipt: receipt,\n                    })\n                    emit.resolve(receipt)\n                  })\n                } catch (err_) {\n                  done(() => emit.reject(err_))\n                }\n              } else {\n                done(() => emit.reject(err))\n              }\n            }\n          },\n        })\n      },\n    )\n  })\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { formatBlock } from '../../utils/formatters/block.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockReturnType, getBlock } from './getBlock.js'\n\nexport type OnBlockParameter<\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>\n\nexport type OnBlock<\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = (\n  block: OnBlockParameter<TChain, TIncludeTransactions, TBlockTag>,\n  prevBlock:\n    | OnBlockParameter<TChain, TIncludeTransactions, TBlockTag>\n    | undefined,\n) => void\n\ntype PollOptions<\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** The block tag. Defaults to \"latest\". */\n  blockTag?: TBlockTag | BlockTag\n  /** Whether or not to emit the missed blocks to the callback. */\n  emitMissed?: boolean\n  /** Whether or not to emit the block to the callback when the subscription opens. */\n  emitOnBegin?: boolean\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: TIncludeTransactions\n  /** Polling frequency (in ms). Defaults to the client's pollingInterval config. */\n  pollingInterval?: number\n}\n\nexport type WatchBlocksParameters<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** The callback to call when a new block is received. */\n  onBlock: OnBlock<TChain, TIncludeTransactions, TBlockTag>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          blockTag?: never\n          emitMissed?: never\n          emitOnBegin?: never\n          includeTransactions?: never\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions<TIncludeTransactions, TBlockTag> & { poll?: true })\n  : PollOptions<TIncludeTransactions, TBlockTag> & { poll?: true })\n\nexport type WatchBlocksReturnType = () => void\n\nexport type WatchBlocksErrorType =\n  | StringifyErrorType\n  | PollErrorType\n  | ErrorType\n\n/**\n * Watches and returns information for incoming blocks.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlocks.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlocksParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n *\n * @example\n * import { createPublicClient, watchBlocks, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlocks(client, {\n *   onBlock: (block) => console.log(block),\n * })\n */\nexport function watchBlocks<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<TTransport, TChain>,\n  {\n    blockTag = 'latest',\n    emitMissed = false,\n    emitOnBegin = false,\n    onBlock,\n    onError,\n    includeTransactions: includeTransactions_,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlocksParameters<TTransport, TChain, TIncludeTransactions, TBlockTag>,\n): WatchBlocksReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n  const includeTransactions = includeTransactions_ ?? false\n\n  let prevBlock:\n    | GetBlockReturnType<TChain, false | TIncludeTransactions, 'latest'>\n    | undefined\n\n  const pollBlocks = () => {\n    const observerId = stringify([\n      'watchBlocks',\n      client.uid,\n      emitMissed,\n      emitOnBegin,\n      includeTransactions,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlock, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const block = await getAction(\n              client,\n              getBlock,\n              'getBlock',\n            )({\n              blockTag,\n              includeTransactions,\n            })\n            if (block.number && prevBlock?.number) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (block.number === prevBlock.number) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (block.number - prevBlock.number > 1 && emitMissed) {\n                for (let i = prevBlock?.number + 1n; i < block.number; i++) {\n                  const block = (await getAction(\n                    client,\n                    getBlock,\n                    'getBlock',\n                  )({\n                    blockNumber: i,\n                    includeTransactions,\n                  })) as GetBlockReturnType<TChain>\n                  emit.onBlock(block as any, prevBlock as any)\n                  prevBlock = block\n                }\n              }\n            }\n\n            if (\n              // If no previous block exists, emit.\n              !prevBlock?.number ||\n              // If the block tag is \"pending\" with no block number, emit.\n              (blockTag === 'pending' && !block?.number) ||\n              // If the next block number is greater than the previous block number, emit.\n              // We don't want to emit blocks in the past.\n              (block.number && block.number > prevBlock.number)\n            ) {\n              emit.onBlock(block as any, prevBlock as any)\n              prevBlock = block as any\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlocks = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newHeads'],\n          onData(data: any) {\n            if (!active) return\n            const format =\n              client.chain?.formatters?.block?.format || formatBlock\n            const block = format(data.result)\n            onBlock(block, prevBlock as any)\n            prevBlock = block\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollBlocks() : subscribeBlocks()\n}\n", "import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport type { EncodeEventTopicsParameters } from '../../utils/index.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  decodeEventLog,\n  encodeEventTopics,\n  formatLog,\n} from '../../utils/index.js'\nimport {\n  type CreateEventFilterParameters,\n  createEventFilter,\n} from './createEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { type GetLogsParameters, getLogs } from './getLogs.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchEventOnLogsParameter<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TEventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = Log<bigint, number, false, TAbiEvent, TStrict, TAbiEvents, TEventName>[]\nexport type WatchEventOnLogsFn<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = (\n  logs: WatchEventOnLogsParameter<TAbiEvent, TAbiEvents, TStrict, _EventName>,\n) => void\n\nexport type WatchEventParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[]\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchEventOnLogsFn<TAbiEvent, TAbiEvents, TStrict, _EventName>\n} & (GetTransportConfig<Transport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    }) &\n  (\n    | {\n        event: TAbiEvent\n        events?: never\n        args?: MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: TStrict\n      }\n    | {\n        event?: never\n        events?: TAbiEvents\n        args?: never\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: TStrict\n      }\n    | {\n        event?: never\n        events?: never\n        args?: never\n        strict?: never\n      }\n  )\n\nexport type WatchEventReturnType = () => void\n\nexport type WatchEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms.html#event-log).\n *\n * - Docs: https://viem.sh/docs/actions/public/watchEvent.html\n * - JSON-RPC Methods:\n *   - **RPC Provider supports `eth_newFilter`:**\n *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n *   - **RPC Provider does not support `eth_newFilter`:**\n *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n *\n * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent.html#onLogs).\n *\n * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchEventParameters}\n * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchEvent } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchEvent(client, {\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchEvent<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    args,\n    batch = true,\n    event,\n    events,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchEventParameters<TAbiEvent, TAbiEvents, TStrict>,\n): WatchEventReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n  const strict = strict_ ?? false\n\n  const pollEvent = () => {\n    const observerId = stringify([\n      'watchEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      event,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      let filter: Filter<'event', TAbiEvents, _EventName, any>\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createEventFilter as any,\n                'createEventFilter',\n              )({\n                address,\n                args,\n                event: event!,\n                events,\n                strict,\n              } as unknown as CreateEventFilterParameters)) as unknown as Filter<\n                'event',\n                TAbiEvents,\n                _EventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getAction(\n                  client,\n                  getLogs,\n                  'getLogs',\n                )({\n                  address,\n                  args,\n                  event: event!,\n                  events,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                } as unknown as GetLogsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitalize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const events_ = events ?? (event ? [event] : undefined)\n        let topics: LogTopic[] = []\n        if (events_) {\n          topics = [\n            (events_ as AbiEvent[]).flatMap((event) =>\n              encodeEventTopics({\n                abi: [event],\n                eventName: (event as AbiEvent).name,\n                args,\n              } as EncodeEventTopicsParameters),\n            ),\n          ]\n          if (event) topics = topics[0] as LogTopic[]\n        }\n\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: events_ as Abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n              const formatted = formatLog(log, {\n                args,\n                eventName: eventName as string,\n              })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName\n              let isUnnamed\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollEvent() : subscribeEvent()\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { createPendingTransactionFilter } from './createPendingTransactionFilter.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type OnTransactionsParameter = Hash[]\nexport type OnTransactionsFn = (transactions: OnTransactionsParameter) => void\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchPendingTransactionsParameters<\n  TTransport extends Transport = Transport,\n> = {\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new transactions are received. */\n  onTransactions: OnTransactionsFn\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    })\n\nexport type WatchPendingTransactionsReturnType = () => void\n\nexport type WatchPendingTransactionsErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns pending transaction hashes.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions.html\n * - JSON-RPC Methods:\n *   - When `poll: true`\n *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n *\n * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#ontransactions).\n *\n * @param client - Client to use\n * @param parameters - {@link WatchPendingTransactionsParameters}\n * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchPendingTransactions } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = await watchPendingTransactions(client, {\n *   onTransactions: (hashes) => console.log(hashes),\n * })\n */\nexport function watchPendingTransactions<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  client: Client<TTransport, TChain>,\n  {\n    batch = true,\n    onError,\n    onTransactions,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchPendingTransactionsParameters<TTransport>,\n) {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  const pollPendingTransactions = () => {\n    const observerId = stringify([\n      'watchPendingTransactions',\n      client.uid,\n      batch,\n      pollingInterval,\n    ])\n    return observe(observerId, { onTransactions, onError }, (emit) => {\n      let filter: Filter<'transaction'>\n\n      const unwatch = poll(\n        async () => {\n          try {\n            if (!filter) {\n              try {\n                filter = await getAction(\n                  client,\n                  createPendingTransactionFilter,\n                  'createPendingTransactionFilter',\n                )({})\n                return\n              } catch (err) {\n                unwatch()\n                throw err\n              }\n            }\n\n            const hashes = await getAction(\n              client,\n              getFilterChanges,\n              'getFilterChanges',\n            )({ filter })\n            if (hashes.length === 0) return\n            if (batch) emit.onTransactions(hashes)\n            else for (const hash of hashes) emit.onTransactions([hash])\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribePendingTransactions = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newPendingTransactions'],\n          onData(data: any) {\n            if (!active) return\n            const transaction = data.result\n            onTransactions([transaction])\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling\n    ? pollPendingTransactions()\n    : subscribePendingTransactions()\n}\n", "import type { Abi, AbiEvent } from 'abitype'\n\nimport {\n  type GetEnsAddressParameters,\n  type GetEnsAddressReturnType,\n  getEnsAddress,\n} from '../../actions/ens/getEnsAddress.js'\nimport {\n  type GetEnsAvatarParameters,\n  type GetEnsAvatarReturnType,\n  getEnsAvatar,\n} from '../../actions/ens/getEnsAvatar.js'\nimport {\n  type GetEnsNameParameters,\n  type GetEnsNameReturnType,\n  getEnsName,\n} from '../../actions/ens/getEnsName.js'\nimport {\n  type GetEnsResolverParameters,\n  type GetEnsResolverReturnType,\n  getEnsResolver,\n} from '../../actions/ens/getEnsResolver.js'\nimport {\n  type GetEnsTextParameters,\n  type GetEnsTextReturnType,\n  getEnsText,\n} from '../../actions/ens/getEnsText.js'\nimport {\n  type CallParameters,\n  type CallReturnType,\n  call,\n} from '../../actions/public/call.js'\nimport {\n  type CreateBlockFilterReturnType,\n  createBlockFilter,\n} from '../../actions/public/createBlockFilter.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from '../../actions/public/createContractEventFilter.js'\nimport {\n  type CreateEventFilterParameters,\n  type CreateEventFilterReturnType,\n  createEventFilter,\n} from '../../actions/public/createEventFilter.js'\nimport {\n  type CreatePendingTransactionFilterReturnType,\n  createPendingTransactionFilter,\n} from '../../actions/public/createPendingTransactionFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from '../../actions/public/estimateContractGas.js'\nimport {\n  type EstimateFeesPerGasParameters,\n  type EstimateFeesPerGasReturnType,\n  estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasParameters,\n  type EstimateGasReturnType,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type EstimateMaxPriorityFeePerGasParameters,\n  type EstimateMaxPriorityFeePerGasReturnType,\n  estimateMaxPriorityFeePerGas,\n} from '../../actions/public/estimateMaxPriorityFeePerGas.js'\nimport {\n  type GetBalanceParameters,\n  type GetBalanceReturnType,\n  getBalance,\n} from '../../actions/public/getBalance.js'\nimport {\n  type GetBlockParameters,\n  type GetBlockReturnType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetBlockNumberParameters,\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from '../../actions/public/getBlockNumber.js'\nimport {\n  type GetBlockTransactionCountParameters,\n  type GetBlockTransactionCountReturnType,\n  getBlockTransactionCount,\n} from '../../actions/public/getBlockTransactionCount.js'\nimport {\n  type GetBytecodeParameters,\n  type GetBytecodeReturnType,\n  getBytecode,\n} from '../../actions/public/getBytecode.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from '../../actions/public/getContractEvents.js'\nimport {\n  type GetFeeHistoryParameters,\n  type GetFeeHistoryReturnType,\n  getFeeHistory,\n} from '../../actions/public/getFeeHistory.js'\nimport {\n  type GetFilterChangesParameters,\n  type GetFilterChangesReturnType,\n  getFilterChanges,\n} from '../../actions/public/getFilterChanges.js'\nimport {\n  type GetFilterLogsParameters,\n  type GetFilterLogsReturnType,\n  getFilterLogs,\n} from '../../actions/public/getFilterLogs.js'\nimport {\n  type GetGasPriceReturnType,\n  getGasPrice,\n} from '../../actions/public/getGasPrice.js'\nimport {\n  type GetLogsParameters,\n  type GetLogsReturnType,\n  getLogs,\n} from '../../actions/public/getLogs.js'\nimport {\n  type GetProofParameters,\n  type GetProofReturnType,\n  getProof,\n} from '../../actions/public/getProof.js'\nimport {\n  type GetStorageAtParameters,\n  type GetStorageAtReturnType,\n  getStorageAt,\n} from '../../actions/public/getStorageAt.js'\nimport {\n  type GetTransactionParameters,\n  type GetTransactionReturnType,\n  getTransaction,\n} from '../../actions/public/getTransaction.js'\nimport {\n  type GetTransactionConfirmationsParameters,\n  type GetTransactionConfirmationsReturnType,\n  getTransactionConfirmations,\n} from '../../actions/public/getTransactionConfirmations.js'\nimport {\n  type GetTransactionCountParameters,\n  type GetTransactionCountReturnType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport {\n  type GetTransactionReceiptParameters,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from '../../actions/public/getTransactionReceipt.js'\nimport {\n  type MulticallParameters,\n  type MulticallReturnType,\n  multicall,\n} from '../../actions/public/multicall.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from '../../actions/public/readContract.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from '../../actions/public/simulateContract.js'\nimport {\n  type UninstallFilterParameters,\n  type UninstallFilterReturnType,\n  uninstallFilter,\n} from '../../actions/public/uninstallFilter.js'\nimport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from '../../actions/public/verifyMessage.js'\nimport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from '../../actions/public/verifyTypedData.js'\nimport {\n  type WaitForTransactionReceiptParameters,\n  type WaitForTransactionReceiptReturnType,\n  waitForTransactionReceipt,\n} from '../../actions/public/waitForTransactionReceipt.js'\nimport {\n  type WatchBlockNumberParameters,\n  type WatchBlockNumberReturnType,\n  watchBlockNumber,\n} from '../../actions/public/watchBlockNumber.js'\nimport {\n  type WatchBlocksParameters,\n  type WatchBlocksReturnType,\n  watchBlocks,\n} from '../../actions/public/watchBlocks.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from '../../actions/public/watchContractEvent.js'\nimport {\n  type WatchEventParameters,\n  type WatchEventReturnType,\n  watchEvent,\n} from '../../actions/public/watchEvent.js'\nimport {\n  type WatchPendingTransactionsParameters,\n  type WatchPendingTransactionsReturnType,\n  watchPendingTransactions,\n} from '../../actions/public/watchPendingTransactions.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport type { Account } from '../../types/account.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { FeeValuesType } from '../../types/fee.js'\nimport type { FilterType } from '../../types/filter.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type PublicActions<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Executes a new message call immediately without submitting a transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/call.html\n   * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n   *\n   * @param args - {@link CallParameters}\n   * @returns The call data. {@link CallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const data = await client.call({\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  call: (parameters: CallParameters<TChain>) => Promise<CallReturnType>\n  /**\n   * Creates a Filter to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createBlockFilter.html\n   * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n   *\n   * @returns Filter. {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, createBlockFilter, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await createBlockFilter(client)\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n   */\n  createBlockFilter: () => Promise<CreateBlockFilterReturnType>\n  /**\n   * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n   *\n   * - Docs: https://viem.sh/docs/contract/createContractEventFilter.html\n   *\n   * @param args - {@link CreateContractEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateContractEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   * })\n   */\n  createContractEventFilter: <\n    const TAbi extends Abi | readonly unknown[],\n    TEventName extends string | undefined,\n    TArgs extends MaybeExtractEventArgsFromAbi<TAbi, TEventName> | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: CreateContractEventFilterParameters<\n      TAbi,\n      TEventName,\n      TArgs,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    CreateContractEventFilterReturnType<\n      TAbi,\n      TEventName,\n      TArgs,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >\n  >\n  /**\n   * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createEventFilter.html\n   * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n   *\n   * @param args - {@link CreateEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n   * })\n   */\n  createEventFilter: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n    _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n    _Args extends\n      | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n      | undefined = undefined,\n  >(\n    args?: CreateEventFilterParameters<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock,\n      _EventName,\n      _Args\n    >,\n  ) => Promise<\n    CreateEventFilterReturnType<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock,\n      _EventName,\n      _Args\n    >\n  >\n  /**\n   * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter.html\n   * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n   *\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n   */\n  createPendingTransactionFilter: () => Promise<CreatePendingTransactionFilterReturnType>\n  /**\n   * Estimates the gas required to successfully execute a contract write function call.\n   *\n   * - Docs: https://viem.sh/docs/contract/estimateContractGas.html\n   *\n   * @remarks\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link EstimateContractGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gas = await client.estimateContractGas({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint() public']),\n   *   functionName: 'mint',\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   * })\n   */\n  estimateContractGas: <\n    TChain extends Chain | undefined,\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n  >(\n    args: EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n  ) => Promise<EstimateContractGasReturnType>\n  /**\n   * Estimates the gas necessary to complete a transaction without submitting it to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateGas.html\n   * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n   *\n   * @param args - {@link EstimateGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasEstimate = await client.estimateGas({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: parseEther('1'),\n   * })\n   */\n  estimateGas: (\n    args: EstimateGasParameters<TChain, TAccount>,\n  ) => Promise<EstimateGasReturnType>\n  /**\n   * Returns the balance of an address in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBalance.html\n   * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n   *\n   * @remarks\n   * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther.html).\n   *\n   * ```ts\n   * const balance = await getBalance(client, {\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   blockTag: 'safe'\n   * })\n   * const balanceAsEther = formatEther(balance)\n   * // \"6.942\"\n   * ```\n   *\n   * @param args - {@link GetBalanceParameters}\n   * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const balance = await client.getBalance({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   * // 10000000000000000000000n (wei)\n   */\n  getBalance: (args: GetBalanceParameters) => Promise<GetBalanceReturnType>\n  /**\n   * Returns information about a block at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlock.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockParameters}\n   * @returns Information about the block. {@link GetBlockReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getBlock()\n   */\n  getBlock: <\n    TIncludeTransactions extends boolean = false,\n    TBlockTag extends BlockTag = 'latest',\n  >(\n    args?: GetBlockParameters<TIncludeTransactions, TBlockTag>,\n  ) => Promise<GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>>\n  /**\n   * Returns the number of the most recent block seen.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockNumber.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n   * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n   *\n   * @param args - {@link GetBlockNumberParameters}\n   * @returns The number of the block. {@link GetBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blockNumber = await client.getBlockNumber()\n   * // 69420n\n   */\n  getBlockNumber: (\n    args?: GetBlockNumberParameters,\n  ) => Promise<GetBlockNumberReturnType>\n  /**\n   * Returns the number of Transactions at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount.html\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockTransactionCountParameters}\n   * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const count = await client.getBlockTransactionCount()\n   */\n  getBlockTransactionCount: (\n    args?: GetBlockTransactionCountParameters,\n  ) => Promise<GetBlockTransactionCountReturnType>\n  /**\n   * Retrieves the bytecode at an address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getBytecode.html\n   * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n   *\n   * @param args - {@link GetBytecodeParameters}\n   * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getBytecode({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   * })\n   */\n  getBytecode: (args: GetBytecodeParameters) => Promise<GetBytecodeReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Returns a list of event logs emitted by a contract.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getContractEvents.html\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetContractEventsParameters}\n   * @returns A list of event logs. {@link GetContractEventsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { wagmiAbi } from './abi'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getContractEvents(client, {\n   *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *  abi: wagmiAbi,\n   *  eventName: 'Transfer'\n   * })\n   */\n  getContractEvents: <\n    const TAbi extends Abi | readonly unknown[],\n    TEventName extends string | undefined = undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetContractEventsParameters<\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetContractEventsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n  >\n  /**\n   * Gets address for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsAddressParameters}\n   * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAddress = await client.getEnsAddress({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n   */\n  getEnsAddress: (\n    args: GetEnsAddressParameters,\n  ) => Promise<GetEnsAddressReturnType>\n  /**\n   * Gets the avatar of an ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText.html) with `key` set to `'avatar'`.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsAvatarParameters}\n   * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAvatar = await client.getEnsAvatar({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n   */\n  getEnsAvatar: (\n    args: GetEnsAvatarParameters,\n  ) => Promise<GetEnsAvatarReturnType>\n  /**\n   * Gets primary name for specified address.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsName.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n   *\n   * @param args - {@link GetEnsNameParameters}\n   * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensName = await client.getEnsName({\n   *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n   * })\n   * // 'wevm.eth'\n   */\n  getEnsName: (args: GetEnsNameParameters) => Promise<GetEnsNameReturnType>\n  /**\n   * Gets resolver for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsResolverParameters}\n   * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const resolverAddress = await client.getEnsResolver({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n   */\n  getEnsResolver: (\n    args: GetEnsResolverParameters,\n  ) => Promise<GetEnsResolverReturnType>\n  /**\n   * Gets a text record for specified ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsTextParameters}\n   * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const twitterRecord = await client.getEnsText({\n   *   name: normalize('wevm.eth'),\n   *   key: 'com.twitter',\n   * })\n   * // 'wagmi_sh'\n   */\n  getEnsText: (args: GetEnsTextParameters) => Promise<GetEnsTextReturnType>\n  /**\n   * Returns a collection of historical gas information.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFeeHistory.html\n   * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n   *\n   * @param args - {@link GetFeeHistoryParameters}\n   * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const feeHistory = await client.getFeeHistory({\n   *   blockCount: 4,\n   *   rewardPercentiles: [25, 75],\n   * })\n   */\n  getFeeHistory: (\n    args: GetFeeHistoryParameters,\n  ) => Promise<GetFeeHistoryReturnType>\n  /**\n   * Returns an estimate for the fees per gas for a transaction to be included\n   * in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas.html\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateFeesPerGasParameters}\n   * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateFeesPerGas()\n   * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n   */\n  estimateFeesPerGas: <\n    TChainOverride extends Chain | undefined = undefined,\n    TType extends FeeValuesType = 'eip1559',\n  >(\n    args?: EstimateFeesPerGasParameters<TChain, TChainOverride, TType>,\n  ) => Promise<EstimateFeesPerGasReturnType>\n  /**\n   * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterChanges.html\n   * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n   *\n   * @remarks\n   * A Filter can be created from the following actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n   * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n   *\n   * Depending on the type of filter, the return value will be different:\n   *\n   * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n   * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n   * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n   *\n   * @param args - {@link GetFilterChangesParameters}\n   * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n   *\n   * @example\n   * // Blocks\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createBlockFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Contract Events\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   *   eventName: 'Transfer',\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Raw Events\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Transactions\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   */\n  getFilterChanges: <\n    TFilterType extends FilterType,\n    const TAbi extends Abi | readonly unknown[] | undefined,\n    TEventName extends string | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterChangesParameters<\n      TFilterType,\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetFilterChangesReturnType<\n      TFilterType,\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >\n  >\n  /**\n   * Returns a list of event logs since the filter was created.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterLogs.html\n   * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n   *\n   * @remarks\n   * `getFilterLogs` is only compatible with **event filters**.\n   *\n   * @param args - {@link GetFilterLogsParameters}\n   * @returns A list of event logs. {@link GetFilterLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterLogs({ filter })\n   */\n  getFilterLogs: <\n    const TAbi extends Abi | readonly unknown[] | undefined,\n    TEventName extends string | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterLogsParameters<\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetFilterLogsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n  >\n  /**\n   * Returns the current price of gas (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getGasPrice.html\n   * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n   *\n   * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasPrice = await client.getGasPrice()\n   */\n  getGasPrice: () => Promise<GetGasPriceReturnType>\n  /**\n   * Returns a list of event logs matching the provided parameters.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getLogs.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/filters-and-logs/event-logs\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param args - {@link GetLogsParameters}\n   * @returns A list of event logs. {@link GetLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getLogs()\n   */\n  getLogs: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args?: GetLogsParameters<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetLogsReturnType<TAbiEvent, TAbiEvents, TStrict, TFromBlock, TToBlock>\n  >\n  /**\n   * Returns the account and storage values of the specified account including the Merkle-proof.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getProof.html\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetProofParameters}\n   * @returns Proof data. {@link GetProofReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getProof({\n   *  address: '0x...',\n   *  storageKeys: ['0x...'],\n   * })\n   */\n  getProof: (args: GetProofParameters) => Promise<GetProofReturnType>\n  /**\n   * Returns an estimate for the max priority fee per gas (in wei) for a transaction\n   * to be included in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas.html\n   *\n   * @param client - Client to use\n   * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateMaxPriorityFeePerGas()\n   * // 10000000n\n   */\n  estimateMaxPriorityFeePerGas: <\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args?: EstimateMaxPriorityFeePerGasParameters<TChain, TChainOverride>,\n  ) => Promise<EstimateMaxPriorityFeePerGasReturnType>\n  /**\n   * Returns the value from a storage slot at a given address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getStorageAt.html\n   * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n   *\n   * @param args - {@link GetStorageAtParameters}\n   * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getStorageAt } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getStorageAt({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   slot: toHex(0),\n   * })\n   */\n  getStorageAt: (\n    args: GetStorageAtParameters,\n  ) => Promise<GetStorageAtReturnType>\n  /**\n   * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) given a hash or block identifier.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransaction.html\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n   *\n   * @param args - {@link GetTransactionParameters}\n   * @returns The transaction information. {@link GetTransactionReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transaction = await client.getTransaction({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransaction: <TBlockTag extends BlockTag = 'latest'>(\n    args: GetTransactionParameters<TBlockTag>,\n  ) => Promise<GetTransactionReturnType<TChain, TBlockTag>>\n  /**\n   * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations.html\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n   *\n   * @param args - {@link GetTransactionConfirmationsParameters}\n   * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const confirmations = await client.getTransactionConfirmations({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionConfirmations: (\n    args: GetTransactionConfirmationsParameters<TChain>,\n  ) => Promise<GetTransactionConfirmationsReturnType>\n  /**\n   * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms.html#transaction) an Account has broadcast / sent.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionCount.html\n   * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n   *\n   * @param args - {@link GetTransactionCountParameters}\n   * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionCount = await client.getTransactionCount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getTransactionCount: (\n    args: GetTransactionCountParameters,\n  ) => Promise<GetTransactionCountReturnType>\n  /**\n   * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt.html\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt)\n   *\n   * @param args - {@link GetTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.getTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionReceipt: (\n    args: GetTransactionReceiptParameters,\n  ) => Promise<GetTransactionReceiptReturnType<TChain>>\n  /**\n   * Similar to [`readContract`](https://viem.sh/docs/contract/readContract.html), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n   *\n   * - Docs: https://viem.sh/docs/contract/multicall.html\n   *\n   * @param args - {@link MulticallParameters}\n   * @returns An array of results with accompanying status. {@link MulticallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const abi = parseAbi([\n   *   'function balanceOf(address) view returns (uint256)',\n   *   'function totalSupply() view returns (uint256)',\n   * ])\n   * const result = await client.multicall({\n   *   contracts: [\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'balanceOf',\n   *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   *     },\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'totalSupply',\n   *     },\n   *   ],\n   * })\n   * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n   */\n  multicall: <\n    TContracts extends ContractFunctionConfig[],\n    TAllowFailure extends boolean = true,\n  >(\n    args: MulticallParameters<TContracts, TAllowFailure>,\n  ) => Promise<MulticallReturnType<TContracts, TAllowFailure>>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<PrepareTransactionRequestReturnType>\n  /**\n   * Calls a read-only function on a contract, and returns the response.\n   *\n   * - Docs: https://viem.sh/docs/contract/readContract.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/reading-contracts\n   *\n   * @remarks\n   * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link ReadContractParameters}\n   * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { readContract } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.readContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n   *   functionName: 'balanceOf',\n   *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   * })\n   * // 424122n\n   */\n  readContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n  >(\n    args: ReadContractParameters<TAbi, TFunctionName>,\n  ) => Promise<ReadContractReturnType<TAbi, TFunctionName>>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n   *\n   * - Docs: https://viem.sh/docs/contract/simulateContract.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n   *\n   * @remarks\n   * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link SimulateContractParameters}\n   * @returns The simulation result and write request. {@link SimulateContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n   *   functionName: 'mint',\n   *   args: ['69420'],\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  simulateContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: SimulateContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TChainOverride\n    >,\n  ) => Promise<\n    SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n  >\n  verifyMessage: (\n    args: VerifyMessageParameters,\n  ) => Promise<VerifyMessageReturnType>\n  verifyTypedData: (\n    args: VerifyTypedDataParameters,\n  ) => Promise<VerifyTypedDataReturnType>\n  /**\n   * Destroys a Filter that was created from one of the following Actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n   *\n   * - Docs: https://viem.sh/docs/actions/public/uninstallFilter.html\n   * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n   *\n   * @param args - {@link UninstallFilterParameters}\n   * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n   *\n   * const filter = await client.createPendingTransactionFilter()\n   * const uninstalled = await client.uninstallFilter({ filter })\n   * // true\n   */\n  uninstallFilter: (\n    args: UninstallFilterParameters,\n  ) => Promise<UninstallFilterReturnType>\n  /**\n   * Waits for the [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms.html#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt.html\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n   * - JSON-RPC Methods:\n   *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n   *   - If a Transaction has been replaced:\n   *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n   *     - Checks if one of the Transactions is a replacement\n   *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n   *\n   * @remarks\n   * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n   *\n   * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n   *\n   * There are 3 types of Transaction Replacement reasons:\n   *\n   * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n   * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n   * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n   *\n   * @param args - {@link WaitForTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.waitForTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForTransactionReceipt: (\n    args: WaitForTransactionReceiptParameters<TChain>,\n  ) => Promise<WaitForTransactionReceiptReturnType<TChain>>\n  /**\n   * Watches and returns incoming block numbers.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlockNumberParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlockNumber({\n   *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n   * })\n   */\n  watchBlockNumber: (\n    args: WatchBlockNumberParameters,\n  ) => WatchBlockNumberReturnType\n  /**\n   * Watches and returns information for incoming blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlocks.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlocksParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlocks({\n   *   onBlock: (block) => console.log(block),\n   * })\n   */\n  watchBlocks: <\n    TIncludeTransactions extends boolean = false,\n    TBlockTag extends BlockTag = 'latest',\n  >(\n    args: WatchBlocksParameters<\n      TTransport,\n      TChain,\n      TIncludeTransactions,\n      TBlockTag\n    >,\n  ) => WatchBlocksReturnType\n  /**\n   * Watches and returns emitted contract event logs.\n   *\n   * - Docs: https://viem.sh/docs/contract/watchContractEvent.html\n   *\n   * @remarks\n   * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n   *\n   * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n   *\n   * @param args - {@link WatchContractEventParameters}\n   * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchContractEvent({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n   *   eventName: 'Transfer',\n   *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchContractEvent: <\n    const TAbi extends Abi | readonly unknown[],\n    TEventName extends string,\n    TStrict extends boolean | undefined = undefined,\n  >(\n    args: WatchContractEventParameters<TAbi, TEventName, TStrict>,\n  ) => WatchContractEventReturnType\n  /**\n   * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms.html#event-log).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchEvent.html\n   * - JSON-RPC Methods:\n   *   - **RPC Provider supports `eth_newFilter`:**\n   *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n   *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n   *   - **RPC Provider does not support `eth_newFilter`:**\n   *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n   *\n   * @remarks\n   * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent.html#onLogs).\n   *\n   * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n   *\n   * @param args - {@link WatchEventParameters}\n   * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchEvent({\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchEvent: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n  >(\n    args: WatchEventParameters<TAbiEvent, TAbiEvents, TStrict>,\n  ) => WatchEventReturnType\n  /**\n   * Watches and returns pending transaction hashes.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions.html\n   * - JSON-RPC Methods:\n   *   - When `poll: true`\n   *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n   *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n   *\n   * @remarks\n   * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#ontransactions).\n   *\n   * @param args - {@link WatchPendingTransactionsParameters}\n   * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchPendingTransactions({\n   *   onTransactions: (hashes) => console.log(hashes),\n   * })\n   */\n  watchPendingTransactions: (\n    args: WatchPendingTransactionsParameters<TTransport>,\n  ) => WatchPendingTransactionsReturnType\n}\n\nexport function publicActions<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n>(\n  client: Client<TTransport, TChain, TAccount>,\n): PublicActions<TTransport, TChain, TAccount> {\n  return {\n    call: (args) => call(client, args),\n    createBlockFilter: () => createBlockFilter(client),\n    createContractEventFilter: (args) =>\n      createContractEventFilter(client, args),\n    createEventFilter: (args) => createEventFilter(client, args),\n    createPendingTransactionFilter: () =>\n      createPendingTransactionFilter(client),\n    estimateContractGas: (args) => estimateContractGas(client, args as any),\n    estimateGas: (args) => estimateGas(client, args),\n    getBalance: (args) => getBalance(client, args),\n    getBlock: (args) => getBlock(client, args),\n    getBlockNumber: (args) => getBlockNumber(client, args),\n    getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n    getBytecode: (args) => getBytecode(client, args),\n    getChainId: () => getChainId(client),\n    getContractEvents: (args) => getContractEvents(client, args),\n    getEnsAddress: (args) => getEnsAddress(client, args),\n    getEnsAvatar: (args) => getEnsAvatar(client, args),\n    getEnsName: (args) => getEnsName(client, args),\n    getEnsResolver: (args) => getEnsResolver(client, args),\n    getEnsText: (args) => getEnsText(client, args),\n    getFeeHistory: (args) => getFeeHistory(client, args),\n    estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n    getFilterChanges: (args) => getFilterChanges(client, args),\n    getFilterLogs: (args) => getFilterLogs(client, args),\n    getGasPrice: () => getGasPrice(client),\n    getLogs: (args) => getLogs(client, args as any),\n    getProof: (args) => getProof(client, args),\n    estimateMaxPriorityFeePerGas: (args) =>\n      estimateMaxPriorityFeePerGas(client, args),\n    getStorageAt: (args) => getStorageAt(client, args),\n    getTransaction: (args) => getTransaction(client, args),\n    getTransactionConfirmations: (args) =>\n      getTransactionConfirmations(client, args),\n    getTransactionCount: (args) => getTransactionCount(client, args),\n    getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n    multicall: (args) => multicall(client, args as any) as any,\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any),\n    readContract: (args) => readContract(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    simulateContract: (args) => simulateContract(client, args),\n    verifyMessage: (args) => verifyMessage(client, args),\n    verifyTypedData: (args) => verifyTypedData(client, args),\n    uninstallFilter: (args) => uninstallFilter(client, args),\n    waitForTransactionReceipt: (args) =>\n      waitForTransactionReceipt(client, args),\n    watchBlocks: (args) => watchBlocks(client, args),\n    watchBlockNumber: (args) => watchBlockNumber(client, args),\n    watchContractEvent: (args) => watchContractEvent(client, args),\n    watchEvent: (args) => watchEvent(client, args),\n    watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n  }\n}\n", "import type { ErrorType } from '../errors/utils.js'\nimport type { Chain } from '../types/chain.js'\nimport type { PublicRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type PublicActions, publicActions } from './decorators/public.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type PublicClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain>,\n    | 'batch'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  >\n>\n\nexport type PublicClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    undefined,\n    PublicRpcSchema,\n    PublicActions<transport, chain>\n  >\n>\n\nexport type CreatePublicClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/public.html\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n>(\n  parameters: PublicClientConfig<transport, chain>,\n): PublicClient<transport, chain>\n\nexport function createPublicClient(\n  parameters: PublicClientConfig,\n): PublicClient {\n  const { key = 'public', name = 'Public Client' } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'publicClient',\n  })\n  return client.extend(publicActions)\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type DropTransactionParameters = {\n  /** The hash of the transaction to drop. */\n  hash: Hash\n}\n\nexport type DropTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Removes a transaction from the mempool.\n *\n * - Docs: https://viem.sh/docs/actions/test/dropTransaction.html\n *\n * @param client - Client to use\n * @param parameters - {@link DropTransactionParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { dropTransaction } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await dropTransaction(client, {\n *   hash: '0xe58dceb6b20b03965bb678e27d141e151d7d4efc2334c2d6a49b9fac523f7364'\n * })\n */\nexport async function dropTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { hash }: DropTransactionParameters,\n) {\n  await client.request({\n    method: `${client.mode}_dropTransaction`,\n    params: [hash],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type DumpStateReturnType = Hex\nexport type DumpStateErrorType = RequestErrorType | ErrorType\n\n/**\n * Serializes the current state (including contracts code, contract's storage,\n * accounts properties, etc.) into a savable data blob.\n *\n * - Docs: https://viem.sh/docs/actions/test/dumpState.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { dumpState } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await dumpState(client)\n */\nexport async function dumpState<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<DumpStateReturnType> {\n  return client.request({\n    method: `${client.mode}_dumpState`,\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetAutomineReturnType = boolean\n\nexport type GetAutomineErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the automatic mining status of the node.\n *\n * - Docs: https://viem.sh/docs/actions/test/getAutomine.html\n *\n * @param client - Client to use\n * @returns Whether or not the node is auto mining. {@link GetAutomineReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getAutomine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const isAutomining = await getAutomine(client)\n */\nexport async function getAutomine<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<GetAutomineReturnType> {\n  if (client.mode === 'ganache')\n    return await client.request({\n      method: 'eth_mining',\n    })\n  return await client.request({\n    method: `${client.mode}_getAutomine`,\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetTxpoolContentReturnType = {\n  /** Pending transactions in the pool */\n  pending: Record<Address, Record<string, RpcTransaction>>\n  /** Queued transactions in the pool */\n  queued: Record<Address, Record<string, RpcTransaction>>\n}\n\nexport type GetTxpoolContentErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent.html\n *\n * @param client - Client to use\n * @returns Transaction pool content. {@link GetTxpoolContentReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getTxpoolContent } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const content = await getTxpoolContent(client)\n */\nexport async function getTxpoolContent<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<GetTxpoolContentReturnType> {\n  return await client.request({\n    method: 'txpool_content',\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { hexToNumber } from '../../utils/encoding/fromHex.js'\n\nexport type GetTxpoolStatusReturnType = {\n  pending: number\n  queued: number\n}\n\nexport type GetTxpoolStatusErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus.html\n *\n * @param client - Client to use\n * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getTxpoolStatus } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const status = await getTxpoolStatus(client)\n */\nexport async function getTxpoolStatus<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<GetTxpoolStatusReturnType> {\n  const { pending, queued } = await client.request({\n    method: 'txpool_status',\n  })\n  return {\n    pending: hexToNumber(pending),\n    queued: hexToNumber(queued),\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type ImpersonateAccountParameters = {\n  /** The account to impersonate. */\n  address: Address\n}\n\nexport type ImpersonateAccountErrorType = RequestErrorType | ErrorType\n\n/**\n * Impersonate an account or contract address. This lets you send transactions from that account even if you don't have access to its private key.\n *\n * - Docs: https://viem.sh/docs/actions/test/impersonateAccount.html\n *\n * @param client - Client to use\n * @param parameters - {@link ImpersonateAccountParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { impersonateAccount } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const content = await impersonateAccount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function impersonateAccount<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address }: ImpersonateAccountParameters,\n) {\n  await client.request({\n    method: `${client.mode}_impersonateAccount`,\n    params: [address],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type IncreaseTimeParameters = {\n  /** The amount of seconds to jump forward in time. */\n  seconds: number\n}\n\nexport type IncreaseTimeErrorType = RequestErrorType | ErrorType\n\n/**\n * Jump forward in time by the given amount of time, in seconds.\n *\n * - Docs: https://viem.sh/docs/actions/test/increaseTime.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link IncreaseTimeParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { increaseTime } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await increaseTime(client, {\n *   seconds: 420,\n * })\n */\nexport async function increaseTime<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { seconds }: IncreaseTimeParameters,\n) {\n  return await client.request({\n    method: 'evm_increaseTime',\n    params: [numberToHex(seconds)],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type InspectTxpoolReturnType = {\n  pending: Record<Address, Record<string, string>>\n  queued: Record<Address, Record<string, string>>\n}\n\nexport type InspectTxpoolErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/inspectTxpool.html\n *\n * @param client - Client to use\n * @returns Transaction pool inspection data. {@link InspectTxpoolReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { inspectTxpool } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const data = await inspectTxpool(client)\n */\nexport async function inspectTxpool<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<InspectTxpoolReturnType> {\n  return await client.request({\n    method: 'txpool_inspect',\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type LoadStateParameters = { state: Hex }\nexport type LoadStateReturnType = void\nexport type LoadStateErrorType = RequestErrorType | ErrorType\n\n/**\n * Adds state previously dumped with `dumpState` to the current chain.\n *\n * - Docs: https://viem.sh/docs/actions/test/loadState.html\n *\n * @param client - Client to use\n * @param parameters - {@link LoadStateParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { loadState } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await loadState(client, { state: '0x...' })\n */\nexport async function loadState<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { state }: LoadStateParameters,\n): Promise<LoadStateReturnType> {\n  await client.request({\n    method: `${client.mode}_loadState`,\n    params: [state],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type MineParameters = {\n  /** Number of blocks to mine. */\n  blocks: number\n  /** Interval between each block in seconds. */\n  interval?: number\n}\n\nexport type MineErrorType = RequestErrorType | ErrorType\n\n/**\n * Mine a specified number of blocks.\n *\n * - Docs: https://viem.sh/docs/actions/test/mine.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link MineParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { mine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await mine(client, { blocks: 1 })\n */\nexport async function mine<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { blocks, interval }: MineParameters,\n) {\n  if (client.mode === 'ganache')\n    await client.request({\n      method: 'evm_mine',\n      params: [{ blocks: numberToHex(blocks) }],\n    })\n  else\n    await client.request({\n      method: `${client.mode}_mine`,\n      params: [numberToHex(blocks), numberToHex(interval || 0)],\n    })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RemoveBlockTimestampIntervalErrorType = RequestErrorType | ErrorType\n\n/**\n * Removes [`setBlockTimestampInterval`](https://viem.sh/docs/actions/test/setBlockTimestampInterval.html) if it exists.\n *\n * - Docs: https://viem.sh/docs/actions/test/removeBlockTimestampInterval.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { removeBlockTimestampInterval } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await removeBlockTimestampInterval(client)\n */\nexport async function removeBlockTimestampInterval<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: TestClient<TestClientMode, Transport, TChain, TAccount, false>) {\n  await client.request({\n    method: `${client.mode}_removeBlockTimestampInterval`,\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type ResetParameters = {\n  /** The block number to reset from. */\n  blockNumber?: bigint\n  /** The JSON RPC URL. */\n  jsonRpcUrl?: string\n}\n\nexport type ResetErrorType = RequestErrorType | ErrorType\n\n/**\n * Resets fork back to its original state.\n *\n * - Docs: https://viem.sh/docs/actions/test/reset.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link ResetParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { reset } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await reset(client, { blockNumber: 69420n })\n */\nexport async function reset<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { blockNumber, jsonRpcUrl }: ResetParameters = {},\n) {\n  await client.request({\n    method: `${client.mode}_reset`,\n    params: [{ forking: { blockNumber: Number(blockNumber), jsonRpcUrl } }],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RevertParameters = {\n  /** The snapshot ID to revert to. */\n  id: Quantity\n}\n\nexport type RevertErrorType = RequestErrorType | ErrorType\n\n/**\n * Revert the state of the blockchain at the current block.\n *\n * - Docs: https://viem.sh/docs/actions/test/revert.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link RevertParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { revert } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await revert(client, { id: '0x\u2026' })\n */\nexport async function revert<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { id }: RevertParameters,\n) {\n  await client.request({\n    method: 'evm_revert',\n    params: [id],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\n\nexport type SendUnsignedTransactionParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<TChain>\n\nexport type SendUnsignedTransactionReturnType = Hash\n\nexport type SendUnsignedTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SendUnsignedTransactionParameters}\n * @returns The transaction hash. {@link SendUnsignedTransactionReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { sendUnsignedTransaction } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const hash = await sendUnsignedTransaction(client, {\n *   from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendUnsignedTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  args: SendUnsignedTransactionParameters<TChain>,\n): Promise<SendUnsignedTransactionReturnType> {\n  const {\n    accessList,\n    data,\n    from,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n\n  const chainFormat = client.chain?.formatters?.transactionRequest?.format\n  const format = chainFormat || formatTransactionRequest\n\n  const request = format({\n    // Pick out extra data that might exist on the chain's transaction request type.\n    ...extract(rest, { format: chainFormat }),\n    accessList,\n    data,\n    from,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n  } as TransactionRequest)\n  const hash = await client.request({\n    method: 'eth_sendUnsignedTransaction',\n    params: [request],\n  })\n  return hash\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetAutomineErrorType = RequestErrorType | ErrorType\n\n/**\n * Enables or disables the automatic mining of new blocks with each new transaction submitted to the network.\n *\n * - Docs: https://viem.sh/docs/actions/test/setAutomine.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setAutomine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setAutomine(client)\n */\nexport async function setAutomine<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  enabled: boolean,\n) {\n  if (client.mode === 'ganache') {\n    if (enabled) await client.request({ method: 'miner_start' })\n    else await client.request({ method: 'miner_stop' })\n  } else\n    await client.request({\n      method: 'evm_setAutomine',\n      params: [enabled],\n    })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetBalanceParameters = {\n  /** The account address. */\n  address: Address\n  /** Amount (in wei) to set */\n  value: bigint\n}\n\nexport type SetBalanceErrorType = RequestErrorType | ErrorType\n\n/**\n * Modifies the balance of an account.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBalance.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetBalanceParameters}\n *\n * @example\n * import { createTestClient, http, parseEther } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBalance } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBalance(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n *   value: parseEther('1'),\n * })\n */\nexport async function setBalance<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, value }: SetBalanceParameters,\n) {\n  if (client.mode === 'ganache')\n    await client.request({\n      method: 'evm_setAccountBalance',\n      params: [address, numberToHex(value)],\n    })\n  else\n    await client.request({\n      method: `${client.mode}_setBalance`,\n      params: [address, numberToHex(value)],\n    })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetBlockGasLimitParameters = {\n  /** Gas limit (in wei). */\n  gasLimit: bigint\n}\n\nexport type SetBlockGasLimitErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the block's gas limit.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBlockGasLimit } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBlockGasLimit(client, { gasLimit: 420_000n })\n */\nexport async function setBlockGasLimit<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { gasLimit }: SetBlockGasLimitParameters,\n) {\n  await client.request({\n    method: 'evm_setBlockGasLimit',\n    params: [numberToHex(gasLimit)],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetBlockTimestampIntervalParameters = {\n  /** The interval (in seconds). */\n  interval: number\n}\n\nexport type SetBlockTimestampIntervalErrorType = RequestErrorType | ErrorType\n\n/**\n * Similar to [`increaseTime`](https://viem.sh/docs/actions/test/increaseTime.html), but sets a block timestamp `interval`. The timestamp of future blocks will be computed as `lastBlock_timestamp` + `interval`.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBlockTimestampInterval.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetBlockTimestampIntervalParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBlockTimestampInterval } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBlockTimestampInterval(client, { interval: 5 })\n */\nexport async function setBlockTimestampInterval<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { interval }: SetBlockTimestampIntervalParameters,\n) {\n  const interval_ = (() => {\n    if (client.mode === 'hardhat') return interval * 1000\n    return interval\n  })()\n\n  await client.request({\n    method: `${client.mode}_setBlockTimestampInterval`,\n    params: [interval_],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetCodeParameters = {\n  /** The account address. */\n  address: Address\n  /** The bytecode to set */\n  bytecode: Hex\n}\n\nexport type SetCodeErrorType = RequestErrorType | ErrorType\n\n/**\n * Modifies the bytecode stored at an account's address.\n *\n * - Docs: https://viem.sh/docs/actions/test/setCode.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetCodeParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setCode } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setCode(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df\u2026',\n * })\n */\nexport async function setCode<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, bytecode }: SetCodeParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setCode`,\n    params: [address, bytecode],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetCoinbaseParameters = {\n  /** The coinbase address. */\n  address: Address\n}\n\nexport type SetCoinbaseErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the coinbase address to be used in new blocks.\n *\n * - Docs: https://viem.sh/docs/actions/test/setCoinbase.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetCoinbaseParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setCoinbase } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setCoinbase(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n * })\n */\nexport async function setCoinbase<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address }: SetCoinbaseParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setCoinbase`,\n    params: [address],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetIntervalMiningParameters = {\n  /** The mining interval. */\n  interval: number\n}\n\nexport type SetIntervalMiningErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n *\n * - Docs: https://viem.sh/docs/actions/test/setIntervalMining.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetIntervalMiningParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setIntervalMining } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setIntervalMining(client, { interval: 5 })\n */\nexport async function setIntervalMining<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { interval }: SetIntervalMiningParameters,\n) {\n  const interval_ = (() => {\n    if (client.mode === 'hardhat') return interval * 1000\n    return interval\n  })()\n\n  await client.request({\n    method: 'evm_setIntervalMining',\n    params: [interval_],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetLoggingEnabledErrorType = RequestErrorType | ErrorType\n\n/**\n * Enable or disable logging on the test node network.\n *\n * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setLoggingEnabled } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setLoggingEnabled(client)\n */\nexport async function setLoggingEnabled<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  enabled: boolean,\n) {\n  await client.request({\n    method: `${client.mode}_setLoggingEnabled`,\n    params: [enabled],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetMinGasPriceParameters = {\n  /** The gas price. */\n  gasPrice: bigint\n}\n\nexport type SetMinGasPriceErrorType = RequestErrorType | ErrorType\n\n/**\n * Change the minimum gas price accepted by the network (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice.html\n *\n * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http, parseGwei } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setMinGasPrice } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setMinGasPrice(client, {\n *   gasPrice: parseGwei('20'),\n * })\n */\nexport async function setMinGasPrice<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { gasPrice }: SetMinGasPriceParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setMinGasPrice`,\n    params: [numberToHex(gasPrice)],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNextBlockBaseFeePerGasParameters = {\n  /** Base fee per gas (in wei). */\n  baseFeePerGas: bigint\n}\n\nexport type SetNextBlockBaseFeePerGasErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the next block's base fee per gas.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNextBlockBaseFeePerGas.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetNextBlockBaseFeePerGasParameters}\n *\n * @example\n * import { createTestClient, http, parseGwei } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNextBlockBaseFeePerGas } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNextBlockBaseFeePerGas(client, {\n *   baseFeePerGas: parseGwei('20'),\n * })\n */\nexport async function setNextBlockBaseFeePerGas<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { baseFeePerGas }: SetNextBlockBaseFeePerGasParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setNextBlockBaseFeePerGas`,\n    params: [numberToHex(baseFeePerGas)],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNextBlockTimestampParameters = {\n  /** The timestamp (in seconds). */\n  timestamp: bigint\n}\n\nexport type SetNextBlockTimestampErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the next block's timestamp.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNextBlockTimestamp.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetNextBlockTimestampParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNextBlockTimestamp } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNextBlockTimestamp(client, { timestamp: 1671744314n })\n */\nexport async function setNextBlockTimestamp<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { timestamp }: SetNextBlockTimestampParameters,\n) {\n  await client.request({\n    method: 'evm_setNextBlockTimestamp',\n    params: [numberToHex(timestamp)],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNonceParameters = {\n  /** The account address. */\n  address: Address\n  /** The nonce to set. */\n  nonce: number\n}\n\nexport type SetNonceErrorType = RequestErrorType | ErrorType\n\n/**\n * Modifies (overrides) the nonce of an account.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNonce.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetNonceParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNonce } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNonce(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n *   nonce: 420,\n * })\n */\nexport async function setNonce<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, nonce }: SetNonceParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setNonce`,\n    params: [address, numberToHex(nonce)],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetRpcUrlErrorType = RequestErrorType | ErrorType\n\n/**\n * Sets the backend RPC URL.\n *\n * - Docs: https://viem.sh/docs/actions/test/setRpcUrl.html\n *\n * @param client - Client to use\n * @param jsonRpcUrl \u2013 RPC URL\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setRpcUrl } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setRpcUrl(client, 'https://eth-mainnet.g.alchemy.com/v2')\n */\nexport async function setRpcUrl<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  jsonRpcUrl: string,\n) {\n  await client.request({\n    method: `${client.mode}_setRpcUrl`,\n    params: [jsonRpcUrl],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash, Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetStorageAtParameters = {\n  /** The account address. */\n  address: Address\n  /** The storage slot (index). Can either be a number or hash value. */\n  index: number | Hash\n  /** The value to store as a 32 byte hex string. */\n  value: Hex\n}\n\nexport type SetStorageAtErrorType = RequestErrorType | ErrorType\n\n/**\n * Writes to a slot of an account's storage.\n *\n * - Docs: https://viem.sh/docs/actions/test/setStorageAt.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetStorageAtParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setStorageAt } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setStorageAt(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n *   index: 2,\n *   value: '0x0000000000000000000000000000000000000000000000000000000000000069',\n * })\n */\nexport async function setStorageAt<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, index, value }: SetStorageAtParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setStorageAt`,\n    params: [\n      address,\n      typeof index === 'number' ? numberToHex(index) : index,\n      value,\n    ],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SnapshotErrorType = RequestErrorType | ErrorType\n\n/**\n * Snapshot the state of the blockchain at the current block.\n *\n * - Docs: https://viem.sh/docs/actions/test/snapshot.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { snapshot } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await snapshot(client)\n */\nexport async function snapshot<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: TestClient<TestClientMode, Transport, TChain, TAccount, false>) {\n  return await client.request({\n    method: 'evm_snapshot',\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type StopImpersonatingAccountParameters = {\n  /** The account to impersonate. */\n  address: Address\n}\n\nexport type StopImpersonatingAccountErrorType = RequestErrorType | ErrorType\n\n/**\n * Stop impersonating an account after having previously used [`impersonateAccount`](https://viem.sh/docs/actions/test/impersonateAccount.html).\n *\n * - Docs: https://viem.sh/docs/actions/test/stopImpersonatingAccount.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link StopImpersonatingAccountParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { stopImpersonatingAccount } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await stopImpersonatingAccount(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n * })\n */\nexport async function stopImpersonatingAccount<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address }: StopImpersonatingAccountParameters,\n) {\n  await client.request({\n    method: `${client.mode}_stopImpersonatingAccount`,\n    params: [address],\n  })\n}\n", "import {\n  type DropTransactionParameters,\n  dropTransaction,\n} from '../../actions/test/dropTransaction.js'\nimport {\n  type DumpStateReturnType,\n  dumpState,\n} from '../../actions/test/dumpState.js'\nimport {\n  type GetAutomineReturnType,\n  getAutomine,\n} from '../../actions/test/getAutomine.js'\nimport {\n  type GetTxpoolContentReturnType,\n  getTxpoolContent,\n} from '../../actions/test/getTxpoolContent.js'\nimport {\n  type GetTxpoolStatusReturnType,\n  getTxpoolStatus,\n} from '../../actions/test/getTxpoolStatus.js'\nimport {\n  type ImpersonateAccountParameters,\n  impersonateAccount,\n} from '../../actions/test/impersonateAccount.js'\nimport {\n  type IncreaseTimeParameters,\n  increaseTime,\n} from '../../actions/test/increaseTime.js'\nimport {\n  type InspectTxpoolReturnType,\n  inspectTxpool,\n} from '../../actions/test/inspectTxpool.js'\nimport {\n  type LoadStateParameters,\n  type LoadStateReturnType,\n  loadState,\n} from '../../actions/test/loadState.js'\nimport { type MineParameters, mine } from '../../actions/test/mine.js'\nimport { removeBlockTimestampInterval } from '../../actions/test/removeBlockTimestampInterval.js'\nimport { type ResetParameters, reset } from '../../actions/test/reset.js'\nimport { type RevertParameters, revert } from '../../actions/test/revert.js'\nimport {\n  type SendUnsignedTransactionParameters,\n  type SendUnsignedTransactionReturnType,\n  sendUnsignedTransaction,\n} from '../../actions/test/sendUnsignedTransaction.js'\nimport { setAutomine } from '../../actions/test/setAutomine.js'\nimport {\n  type SetBalanceParameters,\n  setBalance,\n} from '../../actions/test/setBalance.js'\nimport {\n  type SetBlockGasLimitParameters,\n  setBlockGasLimit,\n} from '../../actions/test/setBlockGasLimit.js'\nimport {\n  type SetBlockTimestampIntervalParameters,\n  setBlockTimestampInterval,\n} from '../../actions/test/setBlockTimestampInterval.js'\nimport { type SetCodeParameters, setCode } from '../../actions/test/setCode.js'\nimport {\n  type SetCoinbaseParameters,\n  setCoinbase,\n} from '../../actions/test/setCoinbase.js'\nimport {\n  type SetIntervalMiningParameters,\n  setIntervalMining,\n} from '../../actions/test/setIntervalMining.js'\nimport { setLoggingEnabled } from '../../actions/test/setLoggingEnabled.js'\nimport {\n  type SetMinGasPriceParameters,\n  setMinGasPrice,\n} from '../../actions/test/setMinGasPrice.js'\nimport {\n  type SetNextBlockBaseFeePerGasParameters,\n  setNextBlockBaseFeePerGas,\n} from '../../actions/test/setNextBlockBaseFeePerGas.js'\nimport {\n  type SetNextBlockTimestampParameters,\n  setNextBlockTimestamp,\n} from '../../actions/test/setNextBlockTimestamp.js'\nimport {\n  type SetNonceParameters,\n  setNonce,\n} from '../../actions/test/setNonce.js'\nimport { setRpcUrl } from '../../actions/test/setRpcUrl.js'\nimport {\n  type SetStorageAtParameters,\n  setStorageAt,\n} from '../../actions/test/setStorageAt.js'\nimport { snapshot } from '../../actions/test/snapshot.js'\nimport {\n  type StopImpersonatingAccountParameters,\n  stopImpersonatingAccount,\n} from '../../actions/test/stopImpersonatingAccount.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { Client } from '../createClient.js'\nimport type { TestClientMode } from '../createTestClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type TestActions = {\n  /**\n   * Removes a transaction from the mempool.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/dropTransaction.html\n   *\n   * @param args - {@link DropTransactionParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.dropTransaction({\n   *   hash: '0xe58dceb6b20b03965bb678e27d141e151d7d4efc2334c2d6a49b9fac523f7364'\n   * })\n   */\n  dropTransaction: (args: DropTransactionParameters) => Promise<void>\n  /**\n   * Serializes the current state (including contracts code, contract's storage,\n   * accounts properties, etc.) into a savable data blob.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/dumpState.html\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.dumpState()\n   */\n  dumpState: () => Promise<DumpStateReturnType>\n  /**\n   * Returns the automatic mining status of the node.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getAutomine.html\n   *\n   * @returns Whether or not the node is auto mining. {@link GetAutomineReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const isAutomining = await client.getAutomine()\n   */\n  getAutomine: () => Promise<GetAutomineReturnType>\n  /**\n   * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent.html\n   *\n   * @returns Transaction pool content. {@link GetTxpoolContentReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const content = await client.getTxpoolContent()\n   */\n  getTxpoolContent: () => Promise<GetTxpoolContentReturnType>\n  /**\n   * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus.html\n   *\n   * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const status = await client.getTxpoolStatus()\n   */\n  getTxpoolStatus: () => Promise<GetTxpoolStatusReturnType>\n  /**\n   * Impersonate an account or contract address. This lets you send transactions from that account even if you don't have access to its private key.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/impersonateAccount.html\n   *\n   * @param args - {@link ImpersonateAccountParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.impersonateAccount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  impersonateAccount: (args: ImpersonateAccountParameters) => Promise<void>\n  /**\n   * Jump forward in time by the given amount of time, in seconds.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/increaseTime.html\n   *\n   * @param args \u2013 {@link IncreaseTimeParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.increaseTime({\n   *   seconds: 420,\n   * })\n   */\n  increaseTime: (args: IncreaseTimeParameters) => Promise<Quantity>\n  /**\n   * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/inspectTxpool.html\n   *\n   * @returns Transaction pool inspection data. {@link InspectTxpoolReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const data = await client.inspectTxpool()\n   */\n  inspectTxpool: () => Promise<InspectTxpoolReturnType>\n  /**\n   * Adds state previously dumped with `dumpState` to the current chain.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/loadState.html\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.loadState({ state: '0x...' })\n   */\n  loadState: (args: LoadStateParameters) => Promise<LoadStateReturnType>\n  /**\n   * Mine a specified number of blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/mine.html\n   *\n   * @param client - Client to use\n   * @param args \u2013 {@link MineParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.mine({ blocks: 1 })\n   */\n  mine: (args: MineParameters) => Promise<void>\n  /**\n   * Removes [`setBlockTimestampInterval`](https://viem.sh/docs/actions/test/setBlockTimestampInterval.html) if it exists.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/removeBlockTimestampInterval.html\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { removeBlockTimestampInterval } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.removeBlockTimestampInterval()\n   */\n  removeBlockTimestampInterval: () => Promise<void>\n  /**\n   * Resets fork back to its original state.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/reset.html\n   *\n   * @param args \u2013 {@link ResetParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.reset({ blockNumber: 69420n })\n   */\n  reset: (args?: ResetParameters) => Promise<void>\n  /**\n   * Revert the state of the blockchain at the current block.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/revert.html\n   *\n   * @param args \u2013 {@link RevertParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.revert({ id: '0x\u2026' })\n   */\n  revert: (args: RevertParameters) => Promise<void>\n  /**\n   * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent.html\n   *\n   * @param args \u2013 {@link SendUnsignedTransactionParameters}\n   * @returns The transaction hash. {@link SendUnsignedTransactionReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const hash = await client.sendUnsignedTransaction({\n   *   from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendUnsignedTransaction: <TChain extends Chain | undefined>(\n    args: SendUnsignedTransactionParameters<TChain>,\n  ) => Promise<SendUnsignedTransactionReturnType>\n  /**\n   * Enables or disables the automatic mining of new blocks with each new transaction submitted to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setAutomine.html\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setAutomine()\n   */\n  setAutomine: (args: boolean) => Promise<void>\n  /**\n   * Modifies the balance of an account.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBalance.html\n   *\n   * @param args \u2013 {@link SetBalanceParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseEther } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBalance({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   *   value: parseEther('1'),\n   * })\n   */\n  setBalance: (args: SetBalanceParameters) => Promise<void>\n  /**\n   * Sets the block's gas limit.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit.html\n   *\n   * @param args \u2013 {@link SetBlockGasLimitParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBlockGasLimit({ gasLimit: 420_000n })\n   */\n  setBlockGasLimit: (args: SetBlockGasLimitParameters) => Promise<void>\n  /**\n   * Similar to [`increaseTime`](https://viem.sh/docs/actions/test/increaseTime.html), but sets a block timestamp `interval`. The timestamp of future blocks will be computed as `lastBlock_timestamp` + `interval`.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBlockTimestampInterval.html\n   *\n   * @param args \u2013 {@link SetBlockTimestampIntervalParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBlockTimestampInterval({ interval: 5 })\n   */\n  setBlockTimestampInterval: (\n    args: SetBlockTimestampIntervalParameters,\n  ) => Promise<void>\n  /**\n   * Modifies the bytecode stored at an account's address.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setCode.html\n   *\n   * @param args \u2013 {@link SetCodeParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setCode({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df\u2026',\n   * })\n   */\n  setCode: (args: SetCodeParameters) => Promise<void>\n  /**\n   * Sets the coinbase address to be used in new blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setCoinbase.html\n   *\n   * @param args \u2013 {@link SetCoinbaseParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setCoinbase({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   * })\n   */\n  setCoinbase: (args: SetCoinbaseParameters) => Promise<void>\n  /**\n   * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setIntervalMining.html\n   *\n   * @param args \u2013 {@link SetIntervalMiningParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setIntervalMining({ interval: 5 })\n   */\n  setIntervalMining: (args: SetIntervalMiningParameters) => Promise<void>\n  /**\n   * Enable or disable logging on the test node network.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled.html\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setLoggingEnabled()\n   */\n  setLoggingEnabled: (args: boolean) => Promise<void>\n  /**\n   * Change the minimum gas price accepted by the network (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice.html\n   *\n   * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.\n   *\n   * @param args \u2013 {@link SetBlockGasLimitParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseGwei } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setMinGasPrice({\n   *   gasPrice: parseGwei('20'),\n   * })\n   */\n  setMinGasPrice: (args: SetMinGasPriceParameters) => Promise<void>\n  /**\n   * Sets the next block's base fee per gas.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNextBlockBaseFeePerGas.html\n   *\n   * @param args \u2013 {@link SetNextBlockBaseFeePerGasParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseGwei } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNextBlockBaseFeePerGas({\n   *   baseFeePerGas: parseGwei('20'),\n   * })\n   */\n  setNextBlockBaseFeePerGas: (\n    args: SetNextBlockBaseFeePerGasParameters,\n  ) => Promise<void>\n  /**\n   * Sets the next block's timestamp.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNextBlockTimestamp.html\n   *\n   * @param args \u2013 {@link SetNextBlockTimestampParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNextBlockTimestamp({ timestamp: 1671744314n })\n   */\n  setNextBlockTimestamp: (\n    args: SetNextBlockTimestampParameters,\n  ) => Promise<void>\n  /**\n   * Modifies (overrides) the nonce of an account.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNonce.html\n   *\n   * @param args \u2013 {@link SetNonceParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNonce({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   *   nonce: 420,\n   * })\n   */\n  setNonce: (args: SetNonceParameters) => Promise<void>\n  /**\n   * Sets the backend RPC URL.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setRpcUrl.html\n   *\n   * @param jsonRpcUrl \u2013 RPC URL\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setRpcUrl('https://eth-mainnet.g.alchemy.com/v2')\n   */\n  setRpcUrl: (args: string) => Promise<void>\n  /**\n   * Writes to a slot of an account's storage.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setStorageAt.html\n   *\n   * @param args \u2013 {@link SetStorageAtParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setStorageAt({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   *   index: 2,\n   *   value: '0x0000000000000000000000000000000000000000000000000000000000000069',\n   * })\n   */\n  setStorageAt: (args: SetStorageAtParameters) => Promise<void>\n  /**\n   * Snapshot the state of the blockchain at the current block.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/snapshot.html\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { snapshot } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.snapshot()\n   */\n  snapshot: () => Promise<Quantity>\n  /**\n   * Stop impersonating an account after having previously used [`impersonateAccount`](https://viem.sh/docs/actions/test/impersonateAccount.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/test/stopImpersonatingAccount.html\n   *\n   * @param args \u2013 {@link StopImpersonatingAccountParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { stopImpersonatingAccount } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.stopImpersonatingAccount({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   * })\n   */\n  stopImpersonatingAccount: (\n    args: StopImpersonatingAccountParameters,\n  ) => Promise<void>\n}\n\nexport function testActions<TMode extends TestClientMode>({\n  mode,\n}: { mode: TMode }): <\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n>(\n  client: Client<TTransport, TChain, TAccount>,\n) => TestActions {\n  return <\n    TTransport extends Transport = Transport,\n    TChain extends Chain | undefined = Chain | undefined,\n    TAccount extends Account | undefined = Account | undefined,\n  >(\n    client_: Client<TTransport, TChain, TAccount>,\n  ): TestActions => {\n    const client = client_.extend(() => ({\n      mode,\n    }))\n    return {\n      dropTransaction: (args) => dropTransaction(client, args),\n      dumpState: () => dumpState(client),\n      getAutomine: () => getAutomine(client),\n      getTxpoolContent: () => getTxpoolContent(client),\n      getTxpoolStatus: () => getTxpoolStatus(client),\n      impersonateAccount: (args) => impersonateAccount(client, args),\n      increaseTime: (args) => increaseTime(client, args),\n      inspectTxpool: () => inspectTxpool(client),\n      loadState: (args) => loadState(client, args),\n      mine: (args) => mine(client, args),\n      removeBlockTimestampInterval: () => removeBlockTimestampInterval(client),\n      reset: (args) => reset(client, args),\n      revert: (args) => revert(client, args),\n      sendUnsignedTransaction: (args) =>\n        sendUnsignedTransaction(client, args as any),\n      setAutomine: (args) => setAutomine(client, args),\n      setBalance: (args) => setBalance(client, args),\n      setBlockGasLimit: (args) => setBlockGasLimit(client, args),\n      setBlockTimestampInterval: (args) =>\n        setBlockTimestampInterval(client, args),\n      setCode: (args) => setCode(client, args),\n      setCoinbase: (args) => setCoinbase(client, args),\n      setIntervalMining: (args) => setIntervalMining(client, args),\n      setLoggingEnabled: (args) => setLoggingEnabled(client, args),\n      setMinGasPrice: (args) => setMinGasPrice(client, args),\n      setNextBlockBaseFeePerGas: (args) =>\n        setNextBlockBaseFeePerGas(client, args),\n      setNextBlockTimestamp: (args) => setNextBlockTimestamp(client, args),\n      setNonce: (args) => setNonce(client, args),\n      setRpcUrl: (args) => setRpcUrl(client, args),\n      setStorageAt: (args) => setStorageAt(client, args),\n      snapshot: () => snapshot(client),\n      stopImpersonatingAccount: (args) =>\n        stopImpersonatingAccount(client, args),\n    }\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { TestRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type TestActions, testActions } from './decorators/test.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type TestClientMode = 'anvil' | 'hardhat' | 'ganache'\n\nexport type TestClientConfig<\n  mode extends TestClientMode = TestClientMode,\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  > & {\n    /** Mode of the test client. */\n    mode: mode | ('anvil' | 'hardhat' | 'ganache') // TODO: Type utility that expands `TestClientMode`\n  }\n>\n\nexport type TestClient<\n  TMode extends TestClientMode = TestClientMode,\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TIncludeActions extends boolean = true,\n> = Prettify<\n  { mode: TMode } & Client<\n    transport,\n    chain,\n    TAccount,\n    TestRpcSchema<TMode>,\n    TIncludeActions extends true ? TestActions : Record<string, unknown>\n  >\n>\n\nexport type CreateTestClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * @description Creates a test client with a given transport.\n */\n/**\n * Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/test.html\n *\n * A Test Client is an interface to \"test\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction.html).\n *\n * @param config - {@link TestClientConfig}\n * @returns A Test Client. {@link TestClient}\n *\n * @example\n * import { createTestClient, custom } from 'viem'\n * import { foundry } from 'viem/chains'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: foundry,\n *   transport: http(),\n * })\n */\nexport function createTestClient<\n  mode extends 'anvil' | 'hardhat' | 'ganache', // TODO: Type utility that expands `TestClientMode`\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n>(\n  parameters: TestClientConfig<mode, transport, chain, accountOrAddress>,\n): TestClient<mode, transport, chain, ParseAccount<accountOrAddress>>\n\nexport function createTestClient(parameters: TestClientConfig): TestClient {\n  const { key = 'test', name = 'Test Client', mode } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'testClient',\n  })\n  return client.extend((config) => ({\n    mode,\n    ...testActions({ mode })(config),\n  }))\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type AddChainParameters = {\n  /** The chain to add to the wallet. */\n  chain: Chain\n}\n\nexport type AddChainErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/addChain.html\n * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n *\n * @param client - Client to use\n * @param parameters - {@link AddChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { optimism } from 'viem/chains'\n * import { addChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   transport: custom(window.ethereum),\n * })\n * await addChain(client, { chain: optimism })\n */\nexport async function addChain<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>, { chain }: AddChainParameters) {\n  const { id, name, nativeCurrency, rpcUrls, blockExplorers } = chain\n  await client.request({\n    method: 'wallet_addEthereumChain',\n    params: [\n      {\n        chainId: numberToHex(id),\n        chainName: name,\n        nativeCurrency,\n        rpcUrls: rpcUrls.default.http,\n        blockExplorerUrls: blockExplorers\n          ? Object.values(blockExplorers).map(({ url }) => url)\n          : undefined,\n      },\n    ],\n  })\n}\n", "import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { encodeDeployData } from '../../utils/abi/encodeDeployData.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type DeployContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  SendTransactionParameters<TChain, TAccount, TChainOverride>,\n  'accessList' | 'chain' | 'to' | 'data'\n> & {\n  abi: TAbi\n  bytecode: Hex\n} & GetChain<TChain, TChainOverride> &\n  GetConstructorArgs<TAbi>\n\nexport type DeployContractReturnType = SendTransactionReturnType\n\nexport type DeployContractErrorType = SendTransactionErrorType | ErrorType\n\n/**\n * Deploys a contract to the network, given bytecode and constructor arguments.\n *\n * - Docs: https://viem.sh/docs/contract/deployContract.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/deploying-contracts\n *\n * @param client - Client to use\n * @param parameters - {@link DeployContractParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link DeployContractReturnType}\n *\n * @example\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { deployContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await deployContract(client, {\n *   abi: [],\n *   account: '0x\u2026,\n *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n * })\n */\nexport function deployContract<\n  const TAbi extends Abi | readonly unknown[],\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  walletClient: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    args,\n    bytecode,\n    ...request\n  }: DeployContractParameters<TAbi, TChain, TAccount, TChainOverride>,\n): Promise<DeployContractReturnType> {\n  const calldata = encodeDeployData({\n    abi,\n    args,\n    bytecode,\n  } as unknown as DeployContractParameters<\n    TAbi,\n    TChain,\n    TAccount,\n    TChainOverride\n  >)\n  return sendTransaction(walletClient, {\n    ...request,\n    data: calldata,\n  } as unknown as SendTransactionParameters<TChain, TAccount, TChainOverride>)\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetAddressesReturnType = Address[]\n\nexport type GetAddressesErrorType =\n  | RequestErrorType\n  | ChecksumAddressErrorType\n  | ErrorType\n\n/**\n * Returns a list of account addresses owned by the wallet or client.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getAddresses.html\n * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n *\n * @param client - Client to use\n * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await getAddresses(client)\n */\nexport async function getAddresses<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n): Promise<GetAddressesReturnType> {\n  if (client.account?.type === 'local') return [client.account.address]\n  const addresses = await client.request({ method: 'eth_accounts' })\n  return addresses.map((address) => checksumAddress(address))\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetPermissionsReturnType = WalletPermission[]\n\nexport type GetPermissionsErrorType = RequestErrorType | ErrorType\n\n/**\n * Gets the wallets current permissions.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getPermissions.html\n * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @returns The wallet permissions. {@link GetPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await getPermissions(client)\n */\nexport async function getPermissions<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(client: Client<Transport, TChain, TAccount>) {\n  const permissions = await client.request({ method: 'wallet_getPermissions' })\n  return permissions\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { getAddress } from '../../utils/address/getAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RequestAddressesReturnType = Address[]\n\nexport type RequestAddressesErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests a list of accounts managed by a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses.html\n * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n *\n * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n *\n * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n *\n * @param client - Client to use\n * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await requestAddresses(client)\n */\nexport async function requestAddresses<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n): Promise<RequestAddressesReturnType> {\n  const addresses = await client.request({ method: 'eth_requestAccounts' })\n  return addresses.map((address) => getAddress(address))\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RequestPermissionsParameters = Prettify<\n  {\n    eth_accounts: Record<string, any>\n  } & {\n    [key: string]: Record<string, any>\n  }\n>\nexport type RequestPermissionsReturnType = WalletPermission[]\n\nexport type RequestPermissionsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests permissions for a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions.html\n * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @param parameters - {@link RequestPermissionsParameters}\n * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await requestPermissions(client, {\n *   eth_accounts: {}\n * })\n */\nexport async function requestPermissions<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  permissions: RequestPermissionsParameters,\n) {\n  return client.request({\n    method: 'wallet_requestPermissions',\n    params: [permissions],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignMessageErrorType as SignMessageErrorType_account } from '../../accounts/utils/signMessage.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type ToHexErrorType,\n  stringToHex,\n  toHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SignMessageParameters<\n  TAccount extends Account | undefined = Account | undefined,\n> = GetAccountParameter<TAccount> & {\n  message: SignableMessage\n}\n\nexport type SignMessageReturnType = Hex\n\nexport type SignMessageErrorType =\n  | ParseAccountErrorType\n  | RequestErrorType\n  | SignMessageErrorType_account\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signMessage.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data.html#personal-sign)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * With the calculated signature, you can:\n * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage.html) to verify the signature,\n * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress.html) to recover the signing address from a signature.\n *\n * @param client - Client to use\n * @param parameters - {@link SignMessageParameters}\n * @returns The signed message. {@link SignMessageReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   message: 'hello world',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   message: 'hello world',\n * })\n */\nexport async function signMessage<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    account: account_ = client.account,\n    message,\n  }: SignMessageParameters<TAccount>,\n): Promise<SignMessageReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signMessage',\n    })\n  const account = parseAccount(account_)\n  if (account.type === 'local') return account.signMessage({ message })\n\n  const message_ = (() => {\n    if (typeof message === 'string') return stringToHex(message)\n    if (message.raw instanceof Uint8Array) return toHex(message.raw)\n    return message.raw\n  })()\n\n  return client.request({\n    method: 'personal_sign',\n    params: [message_, account.address],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType as SignTransactionErrorType_account } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain, GetChain } from '../../types/chain.js'\nimport { type RpcTransactionRequest } from '../../types/rpc.js'\nimport type {\n  TransactionRequest,\n  TransactionSerializable,\n  TransactionSerialized,\n} from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport type { NumberToHexErrorType } from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { numberToHex } from '../../utils/index.js'\nimport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\n\nexport type SignTransactionParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type SignTransactionReturnType = TransactionSerialized\n\nexport type SignTransactionErrorType =\n  | ParseAccountErrorType\n  | AssertRequestErrorType\n  | GetChainIdErrorType\n  | AssertCurrentChainErrorType\n  | SignTransactionErrorType_account\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Signs a transaction.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTransaction.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param args - {@link SignTransactionParameters}\n * @returns The signed serialized tranasction. {@link SignTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function signTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: SignTransactionParameters<TChain, TAccount, TChainOverride>,\n): Promise<SignTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    ...transaction\n  } = args\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTransaction',\n    })\n  const account = parseAccount(account_)\n\n  assertRequest({\n    account,\n    ...args,\n  })\n\n  const chainId = await getAction(client, getChainId, 'getChainId')({})\n  if (chain !== null)\n    assertCurrentChain({\n      currentChainId: chainId,\n      chain,\n    })\n\n  const formatters = chain?.formatters || client.chain?.formatters\n  const format =\n    formatters?.transactionRequest?.format || formatTransactionRequest\n\n  if (account.type === 'local')\n    return account.signTransaction(\n      {\n        ...transaction,\n        chainId,\n      } as unknown as TransactionSerializable,\n      { serializer: client.chain?.serializers?.transaction },\n    ) as Promise<SignTransactionReturnType>\n\n  return await client.request({\n    method: 'eth_signTransaction',\n    params: [\n      {\n        ...format(transaction as unknown as TransactionRequest),\n        chainId: numberToHex(chainId),\n        from: account.address,\n      } as unknown as RpcTransactionRequest,\n    ],\n  })\n}\n", "import type { TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTypedDataErrorType as SignTypedDataErrorType_account } from '../../accounts/utils/signTypedData.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../../utils/typedData.js'\n\nexport type SignTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n  TAccount extends Account | undefined = undefined,\n> = GetAccountParameter<TAccount> &\n  TypedDataDefinition<TTypedData, TPrimaryType>\n\nexport type SignTypedDataReturnType = Hex\n\nexport type SignTypedDataErrorType =\n  | AccountNotFoundErrorType\n  | ParseAccountErrorType\n  | GetTypesForEIP712DomainErrorType\n  | ValidateTypedDataErrorType\n  | StringifyErrorType\n  | SignTypedDataErrorType_account\n  | IsHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Signs typed data and calculates an Ethereum-specific signature in [https://eips.ethereum.org/EIPS/eip-712](https://eips.ethereum.org/EIPS/eip-712): `sign(keccak256(\"\\x19\\x01\" \u2016 domainSeparator \u2016 hashStruct(message)))`\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTypedData.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data.html#signtypeddata-v4)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param client - Client to use\n * @param parameters - {@link SignTypedDataParameters}\n * @returns The signed data. {@link SignTypedDataReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTypedData(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signTypedData(client, {\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n */\nexport async function signTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    account: account_ = client.account,\n    domain,\n    message,\n    primaryType,\n    types: types_,\n  }: SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>,\n): Promise<SignTypedDataReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTypedData',\n    })\n  const account = parseAccount(account_)\n\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...(types_ as TTypedData),\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  } as TypedDataDefinition)\n\n  if (account.type === 'local')\n    return account.signTypedData({\n      domain,\n      primaryType,\n      types,\n      message,\n    } as TypedDataDefinition)\n\n  const typedData = stringify(\n    { domain: domain ?? {}, primaryType, types, message },\n    (_, value) => (isHex(value) ? value.toLowerCase() : value),\n  )\n  return client.request({\n    method: 'eth_signTypedData_v4',\n    params: [account.address, typedData],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SwitchChainParameters = {\n  /** ID of Chain to switch to */\n  id: Chain['id']\n}\n\nexport type SwitchChainErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Switch the target chain in a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/switchChain.html\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n *\n * @param client - Client to use\n * @param parameters - {@link SwitchChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet, optimism } from 'viem/chains'\n * import { switchChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await switchChain(client, { id: optimism.id })\n */\nexport async function switchChain<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(client: Client<Transport, TChain, TAccount>, { id }: SwitchChainParameters) {\n  await client.request({\n    method: 'wallet_switchEthereumChain',\n    params: [\n      {\n        chainId: numberToHex(id),\n      },\n    ],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WatchAssetParams } from '../../types/eip1193.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type WatchAssetParameters = WatchAssetParams\nexport type WatchAssetReturnType = boolean\nexport type WatchAssetErrorType = RequestErrorType | ErrorType\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/watchAsset.html\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n *\n * @param client - Client to use\n * @param parameters - {@link WatchAssetParameters}\n * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchAsset } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const success = await watchAsset(client, {\n *   type: 'ERC20',\n *   options: {\n *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *     decimals: 18,\n *     symbol: 'WETH',\n *   },\n * })\n */\nexport async function watchAsset<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  params: WatchAssetParameters,\n): Promise<WatchAssetReturnType> {\n  const added = await client.request({\n    method: 'wallet_watchAsset',\n    params,\n  })\n  return added\n}\n", "import type { Abi, TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type AddChainParameters,\n  addChain,\n} from '../../actions/wallet/addChain.js'\nimport {\n  type DeployContractParameters,\n  type DeployContractReturnType,\n  deployContract,\n} from '../../actions/wallet/deployContract.js'\nimport {\n  type GetAddressesReturnType,\n  getAddresses,\n} from '../../actions/wallet/getAddresses.js'\nimport {\n  type GetPermissionsReturnType,\n  getPermissions,\n} from '../../actions/wallet/getPermissions.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type RequestAddressesReturnType,\n  requestAddresses,\n} from '../../actions/wallet/requestAddresses.js'\nimport {\n  type RequestPermissionsParameters,\n  type RequestPermissionsReturnType,\n  requestPermissions,\n} from '../../actions/wallet/requestPermissions.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport {\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from '../../actions/wallet/sendTransaction.js'\nimport {\n  type SignMessageParameters,\n  type SignMessageReturnType,\n  signMessage,\n} from '../../actions/wallet/signMessage.js'\nimport {\n  type SignTransactionParameters,\n  type SignTransactionReturnType,\n  signTransaction,\n} from '../../actions/wallet/signTransaction.js'\nimport {\n  type SignTypedDataParameters,\n  type SignTypedDataReturnType,\n  signTypedData,\n} from '../../actions/wallet/signTypedData.js'\nimport {\n  type SwitchChainParameters,\n  switchChain,\n} from '../../actions/wallet/switchChain.js'\nimport {\n  type WatchAssetParameters,\n  type WatchAssetReturnType,\n  watchAsset,\n} from '../../actions/wallet/watchAsset.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from '../../actions/wallet/writeContract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type WalletActions<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/addChain.html\n   * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n   *\n   * @param args - {@link AddChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.addChain({ chain: optimism })\n   */\n  addChain: (args: AddChainParameters) => Promise<void>\n  /**\n   * Deploys a contract to the network, given bytecode and constructor arguments.\n   *\n   * - Docs: https://viem.sh/docs/contract/deployContract.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/deploying-contracts\n   *\n   * @param args - {@link DeployContractParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link DeployContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.deployContract({\n   *   abi: [],\n   *   account: '0x\u2026,\n   *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n   * })\n   */\n  deployContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: DeployContractParameters<TAbi, TChain, TAccount, TChainOverride>,\n  ) => Promise<DeployContractReturnType>\n  /**\n   * Returns a list of account addresses owned by the wallet or client.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getAddresses.html\n   * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n   *\n   * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.getAddresses()\n   */\n  getAddresses: () => Promise<GetAddressesReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Gets the wallets current permissions.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getPermissions.html\n   * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @returns The wallet permissions. {@link GetPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.getPermissions()\n   */\n  getPermissions: () => Promise<GetPermissionsReturnType>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<PrepareTransactionRequestReturnType>\n  /**\n   * Requests a list of accounts managed by a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses.html\n   * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n   *\n   * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n   *\n   * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n   *\n   * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.requestAddresses()\n   */\n  requestAddresses: () => Promise<RequestAddressesReturnType>\n  /**\n   * Requests permissions for a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions.html\n   * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @param args - {@link RequestPermissionsParameters}\n   * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.requestPermissions({\n   *   eth_accounts: {}\n   * })\n   */\n  requestPermissions: (\n    args: RequestPermissionsParameters,\n  ) => Promise<RequestPermissionsReturnType>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Creates, signs, and sends a new transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n   *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n   *\n   * @param args - {@link SendTransactionParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link SendTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.sendTransaction({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.sendTransaction({\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendTransaction: <TChainOverride extends Chain | undefined = undefined>(\n    args: SendTransactionParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<SendTransactionReturnType>\n  /**\n   * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signMessage.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data.html#personal-sign)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * With the calculated signature, you can:\n   * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage.html) to verify the signature,\n   * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress.html) to recover the signing address from a signature.\n   *\n   * @param args - {@link SignMessageParameters}\n   * @returns The signed message. {@link SignMessageReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signMessage({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   message: 'hello world',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signMessage({\n   *   message: 'hello world',\n   * })\n   */\n  signMessage: (\n    args: SignMessageParameters<TAccount>,\n  ) => Promise<SignMessageReturnType>\n  /**\n   * Signs a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTransaction.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param args - {@link SignTransactionParameters}\n   * @returns The signed message. {@link SignTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   */\n  signTransaction: <TChainOverride extends Chain | undefined = undefined>(\n    args: SignTransactionParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<SignTransactionReturnType>\n  /**\n   * Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTypedData.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data.html#signtypeddata-v4)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param client - Client to use\n   * @param args - {@link SignTypedDataParameters}\n   * @returns The signed data. {@link SignTypedDataReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signTypedData({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signTypedData({\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   */\n  signTypedData: <\n    const TTypedData extends TypedData | { [key: string]: unknown },\n    TPrimaryType extends string,\n  >(\n    args: SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>,\n  ) => Promise<SignTypedDataReturnType>\n  /**\n   * Switch the target chain in a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/switchChain.html\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n   *\n   * @param args - {@link SwitchChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet, optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.switchChain({ id: optimism.id })\n   */\n  switchChain: (args: SwitchChainParameters) => Promise<void>\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/watchAsset.html\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n   *\n   * @param args - {@link WatchAssetParameters}\n   * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const success = await client.watchAsset({\n   *   type: 'ERC20',\n   *   options: {\n   *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *     decimals: 18,\n   *     symbol: 'WETH',\n   *   },\n   * })\n   */\n  watchAsset: (args: WatchAssetParameters) => Promise<WatchAssetReturnType>\n  /**\n   * Executes a write function on a contract.\n   *\n   * - Docs: https://viem.sh/docs/contract/writeContract.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n   *\n   * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n   *\n   * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * __Warning: The `write` internally sends a transaction \u2013 it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n   *\n   * @param args - {@link WriteContractParameters}\n   * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms.html#hash). {@link WriteContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.writeContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * })\n   *\n   * @example\n   * // With Validation\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const { request } = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * }\n   * const hash = await client.writeContract(request)\n   */\n  writeContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: WriteContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TAccount,\n      TChainOverride\n    >,\n  ) => Promise<WriteContractReturnType>\n}\n\nexport function walletActions<\n  TTransport extends Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n>(\n  client: Client<TTransport, TChain, TAccount>,\n): WalletActions<TChain, TAccount> {\n  return {\n    addChain: (args) => addChain(client, args),\n    deployContract: (args) => deployContract(client, args),\n    getAddresses: () => getAddresses(client),\n    getChainId: () => getChainId(client),\n    getPermissions: () => getPermissions(client),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any),\n    requestAddresses: () => requestAddresses(client),\n    requestPermissions: (args) => requestPermissions(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    sendTransaction: (args) => sendTransaction(client, args),\n    signMessage: (args) => signMessage(client, args),\n    signTransaction: (args) => signTransaction(client, args),\n    signTypedData: (args) => signTypedData(client, args),\n    switchChain: (args) => switchChain(client, args),\n    watchAsset: (args) => watchAsset(client, args),\n    writeContract: (args) => writeContract(client, args),\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { WalletRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type WalletActions, walletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type WalletClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  >\n>\n\nexport type WalletClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    WalletRpcSchema,\n    WalletActions<chain, account>\n  >\n>\n\nexport type CreateWalletClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/wallet.html\n *\n * A Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction.html).\n *\n * The Wallet Client supports signing over:\n * - [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet.html#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\n * - [Local Accounts](https://viem.sh/docs/clients/wallet.html#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\n *\n * @param config - {@link WalletClientConfig}\n * @returns A Wallet Client. {@link WalletClient}\n *\n * @example\n * // JSON-RPC Account\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * @example\n * // Local Account\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026')\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createWalletClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n>(\n  parameters: WalletClientConfig<transport, chain, accountOrAddress>,\n): WalletClient<transport, chain, ParseAccount<accountOrAddress>>\n\nexport function createWalletClient(\n  parameters: WalletClientConfig,\n): WalletClient {\n  const { key = 'wallet', name = 'Wallet Client', transport } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    transport: (opts) => transport({ ...opts, retryCount: 0 }),\n    type: 'walletClient',\n  })\n  return client.extend(walletActions)\n}\n", "import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hash } from '../../types/misc.js'\nimport { type RpcResponse, getSocket, rpc } from '../../utils/rpc.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype WebSocketTransportSubscribeParameters = {\n  onData: (data: RpcResponse) => void\n  onError?: (error: any) => void\n}\n\ntype WebSocketTransportSubscribeReturnType = {\n  subscriptionId: Hash\n  unsubscribe: () => Promise<RpcResponse<boolean>>\n}\n\ntype WebSocketTransportSubscribe = {\n  subscribe(\n    args: WebSocketTransportSubscribeParameters & {\n      /**\n       * @description Add information about compiled contracts\n       * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_addcompilationresult\n       */\n      params: ['newHeads']\n    },\n  ): Promise<WebSocketTransportSubscribeReturnType>\n}\n\nexport type WebSocketTransportConfig = {\n  /** The key of the WebSocket transport. */\n  key?: TransportConfig['key']\n  /** The name of the WebSocket transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n  /** The timeout (in ms) for async WebSocket requests. Default: 10_000 */\n  timeout?: TransportConfig['timeout']\n}\n\nexport type WebSocketTransport = Transport<\n  'webSocket',\n  {\n    getSocket(): Promise<WebSocket>\n    subscribe: WebSocketTransportSubscribe['subscribe']\n  }\n>\n\nexport type WebSocketTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a WebSocket transport that connects to a JSON-RPC API.\n */\nexport function webSocket(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string,\n  config: WebSocketTransportConfig = {},\n): WebSocketTransport {\n  const { key = 'webSocket', name = 'WebSocket JSON-RPC', retryDelay } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.webSocket?.[0]\n    if (!url_) throw new UrlRequiredError()\n    return createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n          const socket = await getSocket(url_)\n          const { error, result } = await rpc.webSocketAsync(socket, {\n            body,\n            timeout,\n          })\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'webSocket',\n      },\n      {\n        getSocket() {\n          return getSocket(url_)\n        },\n        async subscribe({ params, onData, onError }: any) {\n          const socket = await getSocket(url_)\n          const { result: subscriptionId } = await new Promise<any>(\n            (resolve, reject) =>\n              rpc.webSocket(socket, {\n                body: {\n                  method: 'eth_subscribe',\n                  params,\n                },\n                onResponse(response) {\n                  if (response.error) {\n                    reject(response.error)\n                    onError?.(response.error)\n                    return\n                  }\n\n                  if (typeof response.id === 'number') {\n                    resolve(response)\n                    return\n                  }\n                  if (response.method !== 'eth_subscription') return\n                  onData(response.params)\n                },\n              }),\n          )\n          return {\n            subscriptionId,\n            async unsubscribe() {\n              return new Promise<any>((resolve) =>\n                rpc.webSocket(socket, {\n                  body: {\n                    method: 'eth_unsubscribe',\n                    params: [subscriptionId],\n                  },\n                  onResponse: resolve,\n                }),\n              )\n            },\n          }\n        },\n      },\n    )\n  }\n}\n", "export const zeroAddress = '0x0000000000000000000000000000000000000000' as const\n", "export const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n", "export const zeroHash =\n  '0x0000000000000000000000000000000000000000000000000000000000000000' as const\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n  type AbiConstructorParamsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/decodeDeployData'\n\nexport type DecodeDeployDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  bytecode: Hex\n  data: Hex\n}\n\nexport type DecodeDeployDataReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  bytecode: Hex\n} & GetConstructorArgs<TAbi>\n\nexport type DecodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | AbiConstructorParamsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | ErrorType\n\nexport function decodeDeployData<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  bytecode,\n  data,\n}: DecodeDeployDataParameters<TAbi>): DecodeDeployDataReturnType<TAbi> {\n  if (data === bytecode) return { bytecode } as DecodeDeployDataReturnType<TAbi>\n\n  const description = (abi as Abi).find(\n    (x) => 'type' in x && x.type === 'constructor',\n  )\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const args = decodeAbiParameters(\n    description.inputs,\n    `0x${data.replace(bytecode, '')}`,\n  )\n  return { args, bytecode } as unknown as DecodeDeployDataReturnType<TAbi>\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Signature } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\nexport type CompactSignatureToSignatureErrorType =\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * @description Converts an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098) into signature format.\n *\n * @param signature The compact signature to convert.\n * @returns The compact signature in signature format.\n *\n * @example\n * compactSignatureToHex({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * })\n * // {\n * //   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n * //   s: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * //   v: 27n\n * // }\n */\nexport function compactSignatureToSignature({\n  r,\n  yParityAndS,\n}: CompactSignature): Signature {\n  const yParityAndS_bytes = hexToBytes(yParityAndS)\n  const v = yParityAndS_bytes[0] & 0x80 ? 28n : 27n\n  const s = yParityAndS_bytes\n  if (v === 28n) s[0] &= 0x7f\n  return { r, s: bytesToHex(s), v }\n}\n", "import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Hex } from '../../types/misc.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type HexToCompactSignatureErrorType = NumberToHexErrorType | ErrorType\n\n/**\n * @description Parses a hex formatted compact signature into a structured compact signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * hexToCompactSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', yParityAndS: '0x...' }\n */\nexport function hexToCompactSignature(signatureHex: Hex): CompactSignature {\n  const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130))\n  return {\n    r: numberToHex(r, { size: 32 }),\n    yParityAndS: numberToHex(s, { size: 32 }),\n  }\n}\n", "import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, Signature } from '../../types/misc.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type HexToSignatureErrorType = NumberToHexErrorType | ErrorType\n\n/**\n * @description Parses a hex formatted signature into a structured signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * hexToSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', s: '0x...', v: 28n }\n */\nexport function hexToSignature(signatureHex: Hex): Signature {\n  const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130))\n  const v = BigInt(`0x${signatureHex.slice(130)}`)\n  return { r: numberToHex(r, { size: 32 }), s: numberToHex(s, { size: 32 }), v }\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Signature } from '../../types/misc.js'\nimport {\n  type BytesToHexErrorType,\n  type HexToBytesErrorType,\n  bytesToHex,\n  hexToBytes,\n} from '../index.js'\n\nexport type SignatureToCompactSignatureErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * @description Converts a signature into an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098).\n *\n * @param signature The signature to convert.\n * @returns The signature in compact format.\n *\n * @example\n * signatureToCompactSignature({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   s: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n *   v: 27n\n * })\n * // {\n * //   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n * //   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'\n * // }\n */\nexport function signatureToCompactSignature(\n  signature: Signature,\n): CompactSignature {\n  const { r, s, v } = signature\n  const yParity = v - 27n\n  let yParityAndS = s\n  if (yParity === 1n) {\n    const bytes = hexToBytes(s)\n    bytes[0] |= 0x80\n    yParityAndS = bytesToHex(bytes)\n  }\n  return { r, yParityAndS }\n}\n", "import { secp256k1 } from '@noble/curves/secp256k1'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Hex } from '../../types/misc.js'\nimport { type HexToBigIntErrorType, hexToBigInt } from '../encoding/fromHex.js'\n\nexport type CompactSignatureToHexErrorType = HexToBigIntErrorType | ErrorType\n\n/**\n * @description Converts an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098) into hex format.\n *\n * @param signature The compact signature to convert.\n * @returns The compact signature in hex format.\n *\n * @example\n * compactSignatureToHex({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function compactSignatureToHex({\n  r,\n  yParityAndS,\n}: CompactSignature): Hex {\n  return `0x${new secp256k1.Signature(\n    hexToBigInt(r),\n    hexToBigInt(yParityAndS),\n  ).toCompactHex()}`\n}\n", "import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, Signature } from '../../types/misc.js'\nimport {\n  type HexToBigIntErrorType,\n  hexToBigInt,\n} from '../../utils/encoding/fromHex.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\n\nexport type SignatureToHexErrorType =\n  | HexToBigIntErrorType\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * @description Converts a signature into hex format.\n *\n * @param signature The signature to convert.\n * @returns The signature in hex format.\n *\n * @example\n * signatureToHex({\n *   r: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf',\n *   s: '0x4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8',\n *   v: 28n\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function signatureToHex({ r, s, v }: Signature): Hex {\n  return `0x${new secp256k1.Signature(\n    hexToBigInt(r),\n    hexToBigInt(s),\n  ).toCompactHex()}${toHex(v).slice(2)}`\n}\n", "export {\n  type Abi,\n  type Address,\n  type Narrow,\n  type ParseAbi,\n  type ParseAbiItem,\n  type ParseAbiParameter,\n  type ParseAbiParameters,\n  type ResolvedConfig,\n  type TypedData,\n  type TypedDataDomain,\n  type TypedDataParameter,\n  CircularReferenceError,\n  InvalidAbiParameterError,\n  InvalidAbiParametersError,\n  InvalidAbiItemError,\n  InvalidAbiTypeParameterError,\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  InvalidParameterError,\n  InvalidParenthesisError,\n  InvalidSignatureError,\n  InvalidStructSignatureError,\n  SolidityProtectedKeywordError,\n  UnknownTypeError,\n  UnknownSignatureError,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter,\n  parseAbiParameters,\n} from 'abitype'\n\nexport {\n  getContract,\n  type GetContractErrorType,\n  type GetContractParameters,\n  type GetContractReturnType,\n} from './actions/getContract.js'\nexport {\n  type AddChainErrorType,\n  type AddChainParameters,\n} from './actions/wallet/addChain.js'\nexport {\n  type CallErrorType,\n  type CallParameters,\n  type CallReturnType,\n} from './actions/public/call.js'\nexport type {\n  CreateBlockFilterErrorType,\n  CreateBlockFilterReturnType,\n} from './actions/public/createBlockFilter.js'\nexport type {\n  CreateContractEventFilterErrorType,\n  CreateContractEventFilterParameters,\n  CreateContractEventFilterReturnType,\n} from './actions/public/createContractEventFilter.js'\nexport type {\n  CreateEventFilterErrorType,\n  CreateEventFilterParameters,\n  CreateEventFilterReturnType,\n} from './actions/public/createEventFilter.js'\nexport type {\n  CreatePendingTransactionFilterErrorType,\n  CreatePendingTransactionFilterReturnType,\n} from './actions/public/createPendingTransactionFilter.js'\nexport type {\n  DeployContractErrorType,\n  DeployContractParameters,\n  DeployContractReturnType,\n} from './actions/wallet/deployContract.js'\nexport type {\n  DropTransactionErrorType,\n  DropTransactionParameters,\n} from './actions/test/dropTransaction.js'\nexport type {\n  GetAutomineErrorType,\n  GetAutomineReturnType,\n} from './actions/test/getAutomine.js'\nexport type {\n  EstimateContractGasErrorType,\n  EstimateContractGasParameters,\n  EstimateContractGasReturnType,\n} from './actions/public/estimateContractGas.js'\nexport type {\n  EstimateGasErrorType,\n  EstimateGasParameters,\n  EstimateGasReturnType,\n} from './actions/public/estimateGas.js'\nexport type {\n  EstimateFeesPerGasErrorType,\n  EstimateFeesPerGasParameters,\n  EstimateFeesPerGasReturnType,\n} from './actions/public/estimateFeesPerGas.js'\nexport type {\n  EstimateMaxPriorityFeePerGasErrorType,\n  EstimateMaxPriorityFeePerGasParameters,\n  EstimateMaxPriorityFeePerGasReturnType,\n} from './actions/public/estimateMaxPriorityFeePerGas.js'\nexport type {\n  GetAddressesErrorType,\n  GetAddressesReturnType,\n} from './actions/wallet/getAddresses.js'\nexport type {\n  GetBalanceErrorType,\n  GetBalanceParameters,\n  GetBalanceReturnType,\n} from './actions/public/getBalance.js'\nexport type {\n  GetBlockNumberErrorType,\n  GetBlockNumberParameters,\n  GetBlockNumberReturnType,\n} from './actions/public/getBlockNumber.js'\nexport type {\n  GetBlockErrorType,\n  GetBlockParameters,\n  GetBlockReturnType,\n} from './actions/public/getBlock.js'\nexport type {\n  GetBlockTransactionCountErrorType,\n  GetBlockTransactionCountParameters,\n  GetBlockTransactionCountReturnType,\n} from './actions/public/getBlockTransactionCount.js'\nexport type {\n  GetBytecodeErrorType,\n  GetBytecodeParameters,\n  GetBytecodeReturnType,\n} from './actions/public/getBytecode.js'\nexport type {\n  GetChainIdErrorType,\n  GetChainIdReturnType,\n} from './actions/public/getChainId.js'\nexport type {\n  GetEnsAddressErrorType,\n  GetEnsAddressParameters,\n  GetEnsAddressReturnType,\n} from './actions/ens/getEnsAddress.js'\nexport type {\n  GetEnsNameErrorType,\n  GetEnsNameParameters,\n  GetEnsNameReturnType,\n} from './actions/ens/getEnsName.js'\nexport type {\n  GetEnsResolverErrorType,\n  GetEnsResolverParameters,\n  GetEnsResolverReturnType,\n} from './actions/ens/getEnsResolver.js'\nexport type {\n  GetFeeHistoryErrorType,\n  GetFeeHistoryParameters,\n  GetFeeHistoryReturnType,\n} from './actions/public/getFeeHistory.js'\nexport type {\n  GetFilterChangesErrorType,\n  GetFilterChangesParameters,\n  GetFilterChangesReturnType,\n} from './actions/public/getFilterChanges.js'\nexport type {\n  GetFilterLogsErrorType,\n  GetFilterLogsParameters,\n  GetFilterLogsReturnType,\n} from './actions/public/getFilterLogs.js'\nexport type {\n  GetGasPriceErrorType,\n  GetGasPriceReturnType,\n} from './actions/public/getGasPrice.js'\nexport type {\n  GetLogsErrorType,\n  GetLogsParameters,\n  GetLogsReturnType,\n} from './actions/public/getLogs.js'\nexport type {\n  GetPermissionsErrorType,\n  GetPermissionsReturnType,\n} from './actions/wallet/getPermissions.js'\nexport type {\n  GetStorageAtErrorType,\n  GetStorageAtParameters,\n  GetStorageAtReturnType,\n} from './actions/public/getStorageAt.js'\nexport type {\n  GetTransactionConfirmationsErrorType,\n  GetTransactionConfirmationsParameters,\n  GetTransactionConfirmationsReturnType,\n} from './actions/public/getTransactionConfirmations.js'\nexport type {\n  GetTransactionCountErrorType,\n  GetTransactionCountParameters,\n  GetTransactionCountReturnType,\n} from './actions/public/getTransactionCount.js'\nexport type {\n  GetTransactionErrorType,\n  GetTransactionParameters,\n  GetTransactionReturnType,\n} from './actions/public/getTransaction.js'\nexport type {\n  GetTransactionReceiptErrorType,\n  GetTransactionReceiptParameters,\n  GetTransactionReceiptReturnType,\n} from './actions/public/getTransactionReceipt.js'\nexport type {\n  ImpersonateAccountErrorType,\n  ImpersonateAccountParameters,\n} from './actions/test/impersonateAccount.js'\nexport type {\n  IncreaseTimeErrorType,\n  IncreaseTimeParameters,\n} from './actions/test/increaseTime.js'\nexport type { MineErrorType, MineParameters } from './actions/test/mine.js'\nexport type {\n  MulticallErrorType,\n  MulticallParameters,\n  MulticallReturnType,\n} from './actions/public/multicall.js'\nexport type {\n  OnBlock,\n  OnBlockParameter,\n  WatchBlocksErrorType,\n  WatchBlocksParameters,\n  WatchBlocksReturnType,\n} from './actions/public/watchBlocks.js'\nexport type {\n  OnBlockNumberFn,\n  OnBlockNumberParameter,\n  WatchBlockNumberErrorType,\n  WatchBlockNumberParameters,\n  WatchBlockNumberReturnType,\n} from './actions/public/watchBlockNumber.js'\nexport type {\n  WatchEventOnLogsFn,\n  /** @deprecated - use `WatchEventOnLogsFn` instead. */\n  WatchEventOnLogsFn as OnLogFn,\n  WatchEventOnLogsParameter,\n  /** @deprecated - use `WatchEventOnLogsParameter` instead. */\n  WatchEventOnLogsParameter as OnLogParameter,\n  WatchEventErrorType,\n  WatchEventParameters,\n  WatchEventReturnType,\n} from './actions/public/watchEvent.js'\nexport type {\n  OnTransactionsFn,\n  OnTransactionsParameter,\n  WatchPendingTransactionsErrorType,\n  WatchPendingTransactionsParameters,\n  WatchPendingTransactionsReturnType,\n} from './actions/public/watchPendingTransactions.js'\nexport type {\n  ReadContractErrorType,\n  ReadContractParameters,\n  ReadContractReturnType,\n} from './actions/public/readContract.js'\nexport type {\n  ReplacementReason,\n  ReplacementReturnType,\n  WaitForTransactionReceiptErrorType,\n  WaitForTransactionReceiptParameters,\n  WaitForTransactionReceiptReturnType,\n} from './actions/public/waitForTransactionReceipt.js'\nexport type {\n  RequestAddressesErrorType,\n  RequestAddressesReturnType,\n} from './actions/wallet/requestAddresses.js'\nexport type {\n  RequestPermissionsErrorType,\n  RequestPermissionsReturnType,\n  RequestPermissionsParameters,\n} from './actions/wallet/requestPermissions.js'\nexport type {\n  GetTxpoolContentErrorType,\n  GetTxpoolContentReturnType,\n} from './actions/test/getTxpoolContent.js'\nexport type {\n  GetTxpoolStatusErrorType,\n  GetTxpoolStatusReturnType,\n} from './actions/test/getTxpoolStatus.js'\nexport type {\n  InspectTxpoolErrorType,\n  InspectTxpoolReturnType,\n} from './actions/test/inspectTxpool.js'\nexport type { ResetErrorType, ResetParameters } from './actions/test/reset.js'\nexport type {\n  RevertErrorType,\n  RevertParameters,\n} from './actions/test/revert.js'\nexport type {\n  SendTransactionErrorType,\n  SendTransactionParameters,\n  SendTransactionReturnType,\n} from './actions/wallet/sendTransaction.js'\nexport type {\n  PrepareTransactionRequestErrorType,\n  PrepareTransactionRequestParameters,\n  PrepareTransactionRequestReturnType,\n  /** @deprecated import `prepareTransactionRequest` from `viem/actions` instead. */\n  prepareTransactionRequest as prepareRequest,\n} from './actions/wallet/prepareTransactionRequest.js'\nexport type {\n  SendUnsignedTransactionErrorType,\n  SendUnsignedTransactionParameters,\n  SendUnsignedTransactionReturnType,\n} from './actions/test/sendUnsignedTransaction.js'\nexport type {\n  SetBalanceErrorType,\n  SetBalanceParameters,\n} from './actions/test/setBalance.js'\nexport type {\n  SetBlockGasLimitErrorType,\n  SetBlockGasLimitParameters,\n} from './actions/test/setBlockGasLimit.js'\nexport type {\n  SetBlockTimestampIntervalErrorType,\n  SetBlockTimestampIntervalParameters,\n} from './actions/test/setBlockTimestampInterval.js'\nexport type {\n  SetCodeErrorType,\n  SetCodeParameters,\n} from './actions/test/setCode.js'\nexport type {\n  SetCoinbaseErrorType,\n  SetCoinbaseParameters,\n} from './actions/test/setCoinbase.js'\nexport type {\n  SetIntervalMiningErrorType,\n  SetIntervalMiningParameters,\n} from './actions/test/setIntervalMining.js'\nexport type {\n  SetMinGasPriceErrorType,\n  SetMinGasPriceParameters,\n} from './actions/test/setMinGasPrice.js'\nexport type {\n  SetNextBlockBaseFeePerGasErrorType,\n  SetNextBlockBaseFeePerGasParameters,\n} from './actions/test/setNextBlockBaseFeePerGas.js'\nexport type {\n  SetNextBlockTimestampErrorType,\n  SetNextBlockTimestampParameters,\n} from './actions/test/setNextBlockTimestamp.js'\nexport type {\n  SetNonceErrorType,\n  SetNonceParameters,\n} from './actions/test/setNonce.js'\nexport type {\n  SetStorageAtErrorType,\n  SetStorageAtParameters,\n} from './actions/test/setStorageAt.js'\nexport type {\n  SignMessageErrorType,\n  SignMessageParameters,\n  SignMessageReturnType,\n} from './actions/wallet/signMessage.js'\nexport type {\n  SignTypedDataErrorType,\n  SignTypedDataParameters,\n  SignTypedDataReturnType,\n} from './actions/wallet/signTypedData.js'\nexport type {\n  SimulateContractErrorType,\n  SimulateContractParameters,\n  SimulateContractReturnType,\n} from './actions/public/simulateContract.js'\nexport type {\n  StopImpersonatingAccountErrorType,\n  StopImpersonatingAccountParameters,\n} from './actions/test/stopImpersonatingAccount.js'\nexport type {\n  SwitchChainErrorType,\n  SwitchChainParameters,\n} from './actions/wallet/switchChain.js'\nexport type {\n  UninstallFilterErrorType,\n  UninstallFilterParameters,\n  UninstallFilterReturnType,\n} from './actions/public/uninstallFilter.js'\nexport type {\n  WatchAssetErrorType,\n  WatchAssetParameters,\n  WatchAssetReturnType,\n} from './actions/wallet/watchAsset.js'\nexport type {\n  VerifyHashErrorType,\n  VerifyHashParameters,\n  VerifyHashReturnType,\n} from './actions/public/verifyHash.js'\nexport type {\n  WatchContractEventOnLogsParameter,\n  WatchContractEventErrorType,\n  WatchContractEventParameters,\n  WatchContractEventReturnType,\n} from './actions/public/watchContractEvent.js'\nexport type {\n  WriteContractErrorType,\n  WriteContractParameters,\n  WriteContractReturnType,\n} from './actions/wallet/writeContract.js'\nexport type {\n  Chain,\n  ChainContract,\n  ChainFees,\n  ChainFormatter,\n  /** @deprecated use `ChainFormatter` instead. */\n  ChainFormatter as Formatter,\n  ChainFormatters,\n  /** @deprecated use `ChainFormatters` instead. */\n  ChainFormatters as Formatters,\n  ChainSerializers,\n  /** @deprecated use `ChainSerializers` instead. */\n  ChainSerializers as Serializers,\n  ExtractChainFormatterExclude,\n  /** @deprecated use `ExtractChainFormatterExclude` instead. */\n  ExtractChainFormatterExclude as ExtractFormatterExclude,\n  ExtractChainFormatterParameters,\n  /** @deprecated use `ExtractChainFormatterParameters` instead. */\n  ExtractChainFormatterParameters as ExtractFormatterParameters,\n  ExtractChainFormatterReturnType,\n  /** @deprecated use `ExtractChainFormatterReturnType` instead. */\n  ExtractChainFormatterReturnType as ExtractFormatterReturnType,\n} from './types/chain.js'\nexport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  type MulticallBatchOptions,\n  createClient,\n} from './clients/createClient.js'\nexport {\n  type CustomTransport,\n  type CustomTransportConfig,\n  type CustomTransportErrorType,\n  custom,\n} from './clients/transports/custom.js'\nexport {\n  type FallbackTransport,\n  type FallbackTransportConfig,\n  type FallbackTransportErrorType,\n  fallback,\n} from './clients/transports/fallback.js'\nexport {\n  type HttpTransport,\n  type HttpTransportConfig,\n  type HttpTransportErrorType,\n  http,\n} from './clients/transports/http.js'\nexport {\n  type PublicClient,\n  type PublicClientConfig,\n  type CreatePublicClientErrorType,\n  createPublicClient,\n} from './clients/createPublicClient.js'\nexport {\n  type TestClient,\n  type TestClientConfig,\n  type CreateTestClientErrorType,\n  createTestClient,\n} from './clients/createTestClient.js'\nexport {\n  type PublicActions,\n  publicActions,\n} from './clients/decorators/public.js'\nexport {\n  type TestActions,\n  testActions,\n} from './clients/decorators/test.js'\nexport {\n  type WalletActions,\n  walletActions,\n} from './clients/decorators/wallet.js'\nexport {\n  type Transport,\n  type TransportConfig,\n  type CreateTransportErrorType,\n  createTransport,\n} from './clients/transports/createTransport.js'\nexport {\n  type WalletClient,\n  type WalletClientConfig,\n  type CreateWalletClientErrorType,\n  createWalletClient,\n} from './clients/createWalletClient.js'\nexport {\n  type WebSocketTransport,\n  type WebSocketTransportConfig,\n  type WebSocketTransportErrorType,\n  webSocket,\n} from './clients/transports/webSocket.js'\nexport { multicall3Abi } from './constants/abis.js'\nexport { zeroAddress } from './constants/address.js'\nexport { etherUnits, gweiUnits, weiUnits } from './constants/unit.js'\nexport {\n  maxInt8,\n  maxInt16,\n  maxInt24,\n  maxInt32,\n  maxInt40,\n  maxInt48,\n  maxInt56,\n  maxInt64,\n  maxInt72,\n  maxInt80,\n  maxInt88,\n  maxInt96,\n  maxInt104,\n  maxInt112,\n  maxInt120,\n  maxInt128,\n  maxInt136,\n  maxInt144,\n  maxInt152,\n  maxInt160,\n  maxInt168,\n  maxInt176,\n  maxInt184,\n  maxInt192,\n  maxInt200,\n  maxInt208,\n  maxInt216,\n  maxInt224,\n  maxInt232,\n  maxInt240,\n  maxInt248,\n  maxInt256,\n  maxUint8,\n  maxUint16,\n  maxUint24,\n  maxUint32,\n  maxUint40,\n  maxUint48,\n  maxUint56,\n  maxUint64,\n  maxUint72,\n  maxUint80,\n  maxUint88,\n  maxUint96,\n  maxUint104,\n  maxUint112,\n  maxUint120,\n  maxUint128,\n  maxUint136,\n  maxUint144,\n  maxUint152,\n  maxUint160,\n  maxUint168,\n  maxUint176,\n  maxUint184,\n  maxUint192,\n  maxUint200,\n  maxUint208,\n  maxUint216,\n  maxUint224,\n  maxUint232,\n  maxUint240,\n  maxUint248,\n  maxUint256,\n  minInt8,\n  minInt16,\n  minInt24,\n  minInt32,\n  minInt40,\n  minInt48,\n  minInt56,\n  minInt64,\n  minInt72,\n  minInt80,\n  minInt88,\n  minInt96,\n  minInt104,\n  minInt112,\n  minInt120,\n  minInt128,\n  minInt136,\n  minInt144,\n  minInt152,\n  minInt160,\n  minInt168,\n  minInt176,\n  minInt184,\n  minInt192,\n  minInt200,\n  minInt208,\n  minInt216,\n  minInt224,\n  minInt232,\n  minInt240,\n  minInt248,\n  minInt256,\n} from './constants/number.js'\nexport { zeroHash } from './constants/bytes.js'\nexport { presignMessagePrefix } from './constants/strings.js'\nexport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n  type AbiConstructorParamsNotFoundErrorType,\n  AbiDecodingDataSizeInvalidError,\n  type AbiDecodingDataSizeInvalidErrorType,\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiErrorInputsNotFoundError,\n  type AbiErrorInputsNotFoundErrorType,\n  AbiErrorNotFoundError,\n  type AbiErrorNotFoundErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n  AbiFunctionOutputsNotFoundError,\n  type AbiFunctionOutputsNotFoundErrorType,\n  AbiFunctionSignatureNotFoundError,\n  type AbiFunctionSignatureNotFoundErrorType,\n  BytesSizeMismatchError,\n  type BytesSizeMismatchErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n  InvalidAbiDecodingTypeError,\n  type InvalidAbiDecodingTypeErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n  UnsupportedPackedAbiType,\n  type UnsupportedPackedAbiTypeErrorType,\n} from './errors/abi.js'\nexport { BaseError, type BaseErrorType } from './errors/base.js'\nexport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from './errors/block.js'\nexport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n  type RawContractErrorType,\n} from './errors/contract.js'\nexport {\n  BaseFeeScalarError,\n  type BaseFeeScalarErrorType,\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n  MaxFeePerGasTooLowError,\n  type MaxFeePerGasTooLowErrorType,\n} from './errors/fee.js'\nexport {\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  ProviderRpcError,\n  type ProviderRpcErrorCode,\n  type ProviderRpcErrorType,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  RpcError,\n  type RpcErrorType,\n  type RpcErrorCode,\n  SwitchChainError,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from './errors/rpc.js'\nexport {\n  ChainDoesNotSupportContract,\n  type ChainDoesNotSupportContractErrorType,\n  ChainMismatchError,\n  type ChainMismatchErrorType,\n  ChainNotFoundError,\n  type ChainNotFoundErrorType,\n  ClientChainNotConfiguredError,\n  type ClientChainNotConfiguredErrorType,\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from './errors/chain.js'\nexport {\n  DataLengthTooLongError,\n  type DataLengthTooLongErrorType,\n  DataLengthTooShortError,\n  type DataLengthTooShortErrorType,\n  InvalidBytesBooleanError,\n  type InvalidBytesBooleanErrorType,\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  InvalidHexValueError,\n  type InvalidHexValueErrorType,\n  OffsetOutOfBoundsError,\n  type OffsetOutOfBoundsErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from './errors/encoding.js'\nexport {\n  type EnsAvatarInvalidMetadataError,\n  EnsAvatarUriResolutionError,\n  type EnsAvatarInvalidMetadataErrorType,\n  EnsAvatarInvalidNftUriError,\n  type EnsAvatarInvalidNftUriErrorType,\n  EnsAvatarUnsupportedNamespaceError,\n  type EnsAvatarUnsupportedNamespaceErrorType,\n  type EnsAvatarUriResolutionErrorType,\n} from './errors/ens.js'\nexport {\n  EstimateGasExecutionError,\n  type EstimateGasExecutionErrorType,\n} from './errors/estimateGas.js'\nexport {\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  FeeCapTooLowError,\n  type FeeCapTooLowErrorType,\n  InsufficientFundsError,\n  type InsufficientFundsErrorType,\n  IntrinsicGasTooHighError,\n  type IntrinsicGasTooHighErrorType,\n  IntrinsicGasTooLowError,\n  type IntrinsicGasTooLowErrorType,\n  NonceMaxValueError,\n  type NonceMaxValueErrorType,\n  NonceTooHighError,\n  type NonceTooHighErrorType,\n  NonceTooLowError,\n  type NonceTooLowErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n  TransactionTypeNotSupportedError,\n  type TransactionTypeNotSupportedErrorType,\n  UnknownNodeError,\n  type UnknownNodeErrorType,\n} from './errors/node.js'\nexport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from './errors/log.js'\nexport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  RpcRequestError,\n  type RpcRequestErrorType,\n  TimeoutError,\n  type TimeoutErrorType,\n  WebSocketRequestError,\n  type WebSocketRequestErrorType,\n} from './errors/request.js'\nexport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from './errors/address.js'\nexport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n  InvalidSerializedTransactionError,\n  type InvalidSerializedTransactionErrorType,\n  InvalidSerializedTransactionTypeError,\n  type InvalidSerializedTransactionTypeErrorType,\n  InvalidStorageKeySizeError,\n  type InvalidStorageKeySizeErrorType,\n  TransactionExecutionError,\n  type TransactionExecutionErrorType,\n  TransactionNotFoundError,\n  type TransactionNotFoundErrorType,\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n  WaitForTransactionReceiptTimeoutError,\n  type WaitForTransactionReceiptTimeoutErrorType,\n} from './errors/transaction.js'\nexport {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from './errors/data.js'\nexport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from './errors/transport.js'\nexport type {\n  AbiItem,\n  ContractFunctionConfig,\n  ContractFunctionResult,\n  GetConstructorArgs,\n  GetErrorArgs,\n  GetEventArgs,\n  GetEventArgsFromTopics,\n  GetFunctionArgs,\n  GetValue,\n  InferErrorName,\n  InferEventName,\n  InferFunctionName,\n  InferItemName,\n} from './types/contract.js'\nexport type {\n  AccessList,\n  Transaction,\n  TransactionBase,\n  TransactionEIP1559,\n  TransactionEIP2930,\n  TransactionLegacy,\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionRequestBase,\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestLegacy,\n  TransactionSerializable,\n  TransactionSerializableBase,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from './types/transaction.js'\nexport type {\n  Account,\n  AccountSource,\n  CustomSource,\n  HDAccount,\n  HDOptions,\n  JsonRpcAccount,\n  LocalAccount,\n  PrivateKeyAccount,\n} from './accounts/types.js'\nexport type { AssetGateway, AssetGatewayUrls } from './types/ens.js'\nexport type {\n  Block,\n  BlockIdentifier,\n  BlockNumber,\n  BlockTag,\n  Uncle,\n} from './types/block.js'\nexport type {\n  ByteArray,\n  Hash,\n  Hex,\n  LogTopic,\n  Signature,\n  CompactSignature,\n  SignableMessage,\n} from './types/misc.js'\nexport type { GetChain } from './types/chain.js'\nexport type {\n  AddEthereumChainParameter,\n  EIP1193EventMap,\n  EIP1193Events,\n  EIP1193Parameters,\n  EIP1193Provider,\n  EIP1193RequestFn,\n  EIP1474Methods,\n  ProviderRpcError as EIP1193ProviderRpcError,\n  ProviderConnectInfo,\n  ProviderMessage,\n  PublicRpcSchema,\n  NetworkSync,\n  RpcSchema,\n  RpcSchemaOverride,\n  TestRpcSchema,\n  WatchAssetParams,\n  WalletPermissionCaveat,\n  WalletPermission,\n  WalletRpcSchema,\n} from './types/eip1193.js'\nexport type {\n  FeeHistory,\n  FeeValues,\n  FeeValuesEIP1559,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from './types/fee.js'\nexport type { Filter } from './types/filter.js'\nexport type {\n  GetTypedDataDomain,\n  GetTypedDataMessage,\n  GetTypedDataPrimaryType,\n  GetTypedDataTypes,\n  TypedDataDefinition,\n} from './types/typedData.js'\nexport type { GetTransportConfig } from './types/transport.js'\nexport type { HDKey } from '@scure/bip32'\nexport type { Log } from './types/log.js'\nexport type {\n  MulticallContract,\n  MulticallContracts,\n  MulticallResult,\n  MulticallResults,\n} from './types/multicall.js'\nexport type { ParseAccount } from './types/account.js'\nexport type {\n  RpcBlock,\n  RpcBlockIdentifier,\n  RpcBlockNumber,\n  RpcFeeHistory,\n  RpcFeeValues,\n  RpcLog,\n  RpcTransaction,\n  RpcTransactionReceipt,\n  RpcTransactionRequest,\n  RpcUncle,\n} from './types/rpc.js'\nexport type { Withdrawal } from './types/withdrawal.js'\nexport { labelhash, type LabelhashErrorType } from './utils/ens/labelhash.js'\nexport { namehash, type NamehashErrorType } from './utils/ens/namehash.js'\nexport {\n  type FormattedBlock,\n  defineBlock,\n  type DefineBlockErrorType,\n  formatBlock,\n  type FormatBlockErrorType,\n} from './utils/formatters/block.js'\nexport { formatLog, type FormatLogErrorType } from './utils/formatters/log.js'\nexport {\n  type DecodeAbiParametersErrorType,\n  type DecodeAbiParametersReturnType,\n  decodeAbiParameters,\n} from './utils/abi/decodeAbiParameters.js'\nexport {\n  type DecodeDeployDataErrorType,\n  type DecodeDeployDataParameters,\n  type DecodeDeployDataReturnType,\n  decodeDeployData,\n} from './utils/abi/decodeDeployData.js'\nexport {\n  type DecodeErrorResultErrorType,\n  type DecodeErrorResultParameters,\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from './utils/abi/decodeErrorResult.js'\nexport {\n  type DecodeEventLogErrorType,\n  type DecodeEventLogParameters,\n  type DecodeEventLogReturnType,\n  decodeEventLog,\n} from './utils/abi/decodeEventLog.js'\nexport {\n  type DecodeFunctionDataErrorType,\n  type DecodeFunctionDataParameters,\n  decodeFunctionData,\n} from './utils/abi/decodeFunctionData.js'\nexport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  type DecodeFunctionResultReturnType,\n  decodeFunctionResult,\n} from './utils/abi/decodeFunctionResult.js'\nexport {\n  type EncodeAbiParametersErrorType,\n  type EncodeAbiParametersReturnType,\n  encodeAbiParameters,\n} from './utils/abi/encodeAbiParameters.js'\nexport {\n  type EncodeDeployDataErrorType,\n  type EncodeDeployDataParameters,\n  encodeDeployData,\n} from './utils/abi/encodeDeployData.js'\nexport {\n  type EncodeErrorResultErrorType,\n  type EncodeErrorResultParameters,\n  encodeErrorResult,\n} from './utils/abi/encodeErrorResult.js'\nexport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from './utils/abi/encodeEventTopics.js'\nexport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from './utils/abi/encodeFunctionData.js'\nexport {\n  type EncodeFunctionResultErrorType,\n  type EncodeFunctionResultParameters,\n  encodeFunctionResult,\n} from './utils/abi/encodeFunctionResult.js'\nexport {\n  type FormattedTransaction,\n  defineTransaction,\n  type DefineTransactionErrorType,\n  formatTransaction,\n  type FormatTransactionErrorType,\n  transactionType,\n} from './utils/formatters/transaction.js'\nexport {\n  type FormattedTransactionReceipt,\n  defineTransactionReceipt,\n  type DefineTransactionReceiptErrorType,\n  formatTransactionReceipt,\n  type FormatTransactionReceiptErrorType,\n} from './utils/formatters/transactionReceipt.js'\nexport {\n  type FormattedTransactionRequest,\n  defineTransactionRequest,\n  type DefineTransactionRequestErrorType,\n  formatTransactionRequest,\n  type FormatTransactionRequestErrorType,\n  rpcTransactionType,\n} from './utils/formatters/transactionRequest.js'\nexport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './utils/abi/getAbiItem.js'\nexport {\n  type GetContractAddressOptions,\n  type GetCreate2AddressOptions,\n  type GetCreate2AddressErrorType,\n  type GetCreateAddressOptions,\n  type GetCreateAddressErrorType,\n  getContractAddress,\n  getCreate2Address,\n  getCreateAddress,\n} from './utils/address/getContractAddress.js'\nexport {\n  type GetSerializedTransactionType,\n  type GetSerializedTransactionTypeErrorType,\n  getSerializedTransactionType,\n} from './utils/transaction/getSerializedTransactionType.js'\nexport {\n  type GetTransactionType,\n  type GetTransationTypeErrorType,\n  getTransactionType,\n} from './utils/transaction/getTransactionType.js'\nexport {\n  type HashDomainErrorType,\n  type HashTypedDataErrorType,\n  type HashTypedDataParameters,\n  type HashTypedDataReturnType,\n  hashDomain,\n  hashTypedData,\n} from './utils/signature/hashTypedData.js'\nexport {\n  type CompactSignatureToSignatureErrorType,\n  compactSignatureToSignature,\n} from './utils/signature/compactSignatureToSignature.js'\nexport {\n  type HexToCompactSignatureErrorType,\n  hexToCompactSignature,\n} from './utils/signature/hexToCompactSignature.js'\nexport {\n  type HexToSignatureErrorType,\n  hexToSignature,\n} from './utils/signature/hexToSignature.js'\nexport {\n  type RecoverAddressErrorType,\n  type RecoverAddressParameters,\n  type RecoverAddressReturnType,\n  recoverAddress,\n} from './utils/signature/recoverAddress.js'\nexport {\n  type RecoverMessageAddressErrorType,\n  type RecoverMessageAddressParameters,\n  type RecoverMessageAddressReturnType,\n  recoverMessageAddress,\n} from './utils/signature/recoverMessageAddress.js'\nexport {\n  type RecoverPublicKeyErrorType,\n  type RecoverPublicKeyParameters,\n  type RecoverPublicKeyReturnType,\n  recoverPublicKey,\n} from './utils/signature/recoverPublicKey.js'\nexport {\n  type RecoverTypedDataAddressErrorType,\n  type RecoverTypedDataAddressParameters,\n  type RecoverTypedDataAddressReturnType,\n  recoverTypedDataAddress,\n} from './utils/signature/recoverTypedDataAddress.js'\nexport {\n  type SignatureToCompactSignatureErrorType,\n  signatureToCompactSignature,\n} from './utils/signature/signatureToCompactSignature.js'\nexport {\n  type CompactSignatureToHexErrorType,\n  compactSignatureToHex,\n} from './utils/signature/compactSignatureToHex.js'\nexport {\n  type SignatureToHexErrorType,\n  signatureToHex,\n} from './utils/signature/signatureToHex.js'\nexport {\n  bytesToRlp,\n  type BytesToRlpErrorType,\n  hexToRlp,\n  type HexToRlpErrorType,\n  toRlp,\n  type ToRlpErrorType,\n  type ToRlpReturnType,\n} from './utils/encoding/toRlp.js'\nexport {\n  type VerifyMessageErrorType,\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from './utils/signature/verifyMessage.js'\nexport {\n  type VerifyTypedDataErrorType,\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from './utils/signature/verifyTypedData.js'\nexport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from './utils/transaction/assertRequest.js'\nexport {\n  type AssertTransactionEIP1559ErrorType,\n  assertTransactionEIP1559,\n  type AssertTransactionEIP2930ErrorType,\n  assertTransactionEIP2930,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionLegacy,\n} from './utils/transaction/assertTransaction.js'\nexport {\n  type BoolToBytesErrorType,\n  type BoolToBytesOpts,\n  boolToBytes,\n  type HexToBytesErrorType,\n  type HexToBytesOpts,\n  hexToBytes,\n  type NumberToBytesErrorType,\n  numberToBytes,\n  type StringToBytesErrorType,\n  type StringToBytesOpts,\n  stringToBytes,\n  type ToBytesErrorType,\n  type ToBytesParameters,\n  toBytes,\n} from './utils/encoding/toBytes.js'\nexport {\n  type BoolToHexErrorType,\n  type BoolToHexOpts,\n  boolToHex,\n  type BytesToHexErrorType,\n  type BytesToHexOpts,\n  bytesToHex,\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n  type StringToHexErrorType,\n  type StringToHexOpts,\n  stringToHex,\n  type ToHexErrorType,\n  type ToHexParameters,\n  toHex,\n} from './utils/encoding/toHex.js'\nexport {\n  type BytesToBigIntErrorType,\n  type BytesToBigIntOpts,\n  bytesToBigInt,\n  /** @deprecated - use `bytesToBigInt` */\n  bytesToBigInt as bytesToBigint,\n  type BytesToBoolErrorType,\n  type BytesToBoolOpts,\n  bytesToBool,\n  type BytesToNumberErrorType,\n  type BytesToNumberOpts,\n  bytesToNumber,\n  type BytesToStringErrorType,\n  type BytesToStringOpts,\n  bytesToString,\n  type FromBytesErrorType,\n  type FromBytesParameters,\n  fromBytes,\n} from './utils/encoding/fromBytes.js'\nexport {\n  type CcipFetchErrorType,\n  ccipFetch,\n  type OffchainLookupErrorType,\n  offchainLookup,\n  offchainLookupAbiItem,\n  offchainLookupSignature,\n} from './utils/ccip.js'\nexport {\n  type ConcatBytesErrorType,\n  type ConcatErrorType,\n  type ConcatHexErrorType,\n  type ConcatReturnType,\n  concat,\n  concatBytes,\n  concatHex,\n} from './utils/data/concat.js'\nexport {\n  type AssertCurrentChainErrorType,\n  type AssertCurrentChainParameters,\n  assertCurrentChain,\n} from './utils/chain/assertCurrentChain.js'\nexport { defineChain } from './utils/chain/defineChain.js'\nexport {\n  type ExtractChainErrorType,\n  type ExtractChainParameters,\n  type ExtractChainReturnType,\n  extractChain,\n} from './utils/chain/extractChain.js'\nexport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from './utils/chain/getChainContractAddress.js'\nexport {\n  type EncodePackedErrorType,\n  encodePacked,\n} from './utils/abi/encodePacked.js'\nexport {\n  type FormatEtherErrorType,\n  formatEther,\n} from './utils/unit/formatEther.js'\nexport {\n  type FormatGweiErrorType,\n  formatGwei,\n} from './utils/unit/formatGwei.js'\nexport {\n  type FormatUnitsErrorType,\n  formatUnits,\n} from './utils/unit/formatUnits.js'\nexport {\n  type FromHexErrorType,\n  fromHex,\n  type HexToBigIntErrorType,\n  hexToBigInt,\n  type HexToBoolErrorType,\n  hexToBool,\n  type HexToNumberErrorType,\n  hexToNumber,\n  type HexToStringErrorType,\n  hexToString,\n} from './utils/encoding/fromHex.js'\nexport {\n  type FromRlpErrorType,\n  type FromRlpReturnType,\n  fromRlp,\n} from './utils/encoding/fromRlp.js'\nexport {\n  type ChecksumAddressErrorType,\n  type GetAddressErrorType,\n  checksumAddress,\n  getAddress,\n} from './utils/address/getAddress.js'\nexport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from './utils/errors/getContractError.js'\nexport {\n  type GetEventSelectorErrorType,\n  getEventSelector,\n} from './utils/hash/getEventSelector.js'\nexport {\n  type GetEventSignatureErrorType,\n  getEventSignature,\n} from './utils/hash/getEventSignature.js'\nexport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from './utils/hash/getFunctionSelector.js'\nexport {\n  type GetFunctionSignatureErrorType,\n  getFunctionSignature,\n} from './utils/hash/getFunctionSignature.js'\nexport {\n  type HashMessageErrorType,\n  hashMessage,\n} from './utils/signature/hashMessage.js'\nexport {\n  type IsAddressErrorType,\n  isAddress,\n} from './utils/address/isAddress.js'\nexport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from './utils/address/isAddressEqual.js'\nexport { type IsBytesErrorType, isBytes } from './utils/data/isBytes.js'\nexport { type IsHashErrorType, isHash } from './utils/hash/isHash.js'\nexport { type IsHexErrorType, isHex } from './utils/data/isHex.js'\nexport { type Keccak256ErrorType, keccak256 } from './utils/hash/keccak256.js'\nexport { type Sha256ErrorType, sha256 } from './utils/hash/sha256.js'\nexport { type Ripemd160ErrorType, ripemd160 } from './utils/hash/ripemd160.js'\nexport {\n  type PadBytesErrorType,\n  type PadErrorType,\n  type PadHexErrorType,\n  type PadReturnType,\n  pad,\n  padBytes,\n  padHex,\n} from './utils/data/pad.js'\nexport {\n  type ParseEtherErrorType,\n  parseEther,\n} from './utils/unit/parseEther.js'\nexport { type ParseGweiErrorType, parseGwei } from './utils/unit/parseGwei.js'\nexport {\n  type ParseTransactionErrorType,\n  type ParseTransactionReturnType,\n  parseTransaction,\n} from './utils/transaction/parseTransaction.js'\nexport {\n  type ParseUnitsErrorType,\n  parseUnits,\n} from './utils/unit/parseUnits.js'\nexport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './utils/transaction/serializeAccessList.js'\nexport {\n  serializeTransaction,\n  type SerializeTransactionErrorType,\n  type SerializedTransactionReturnType,\n  type SerializeTransactionFn,\n} from './utils/transaction/serializeTransaction.js'\nexport { type SizeErrorType, size } from './utils/data/size.js'\nexport {\n  type SliceBytesErrorType,\n  type SliceErrorType,\n  type SliceHexErrorType,\n  slice,\n  sliceBytes,\n  sliceHex,\n} from './utils/data/slice.js'\nexport { type StringifyErrorType, stringify } from './utils/stringify.js'\nexport {\n  type TrimErrorType,\n  type TrimReturnType,\n  trim,\n} from './utils/data/trim.js'\nexport {\n  type DomainSeparatorErrorType,\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  validateTypedData,\n  domainSeparator,\n  getTypesForEIP712Domain,\n} from './utils/typedData.js'\n", "import { isAddress } from 'viem';\nimport * as zod from 'zod';\n\nconst ETH_ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\nconst NAME_REGEX = /^(?=[a-zA-Z0-9._\\-~ ]*$)([^_.\\-~ ].*[^_.\\-~ ]|[^_.\\-~ ])$/;\nconst IDENTIFIER_REGEX = /^[a-zA-Z0-9-]+$/;\nconst SLUG_REGEX = /^[a-z0-9]+(?:-[a-z0-9]+)*$/;\nconst ENV_VAR_NAME_REGEX = /^[A-Za-z][A-Za-z0-9_]*$/;\nconst HOSTNAME_REGEX = /^(?!-)[a-z0-9-]{1,63}(?<!-)(\\.(?!-)[a-z0-9-]{1,63}(?<!-))+$/i;\nconst IP_ADDRESS_REGEX = /^(localhost|((\\d{1,3}\\.){3}\\d{1,3}))(:\\d+)?$/;\nconst ENS_REGEX = /^[a-z0-9.-]*\\.eth$/i;\nconst PIN_REGEX = /^[A-Za-z0-9._\\- ]+$/;\nconst UNIX_PATH_REGEX = /^(\\/?(\\.\\/)?[\\w.-]+\\/?)*$/;\nconst EMAIL_REGEX =\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const any = zod.any(); // Not recommended\nexport const anyArray = zod.array(any); // Not recommended\nexport const anyRecord = zod.record(any); // Not recommended\nexport const enumeration = zod.enum; // Not recommended\nexport const boolean = zod.boolean();\nexport const string = zod.string();\nexport const number = zod.number();\nexport const positiveNumber = number.positive();\nexport const id = string;\nexport const ens = string.refine(\n  (val) => {\n    return ENS_REGEX.test(val);\n  },\n  (ens) => {\n    return { message: `${ens} is an invalid ENS name` };\n  }\n);\nexport const walletAddress = string.refine(\n  (address) => {\n    return isAddress(address);\n  },\n  (address) => {\n    return { message: `${address} is an invalid wallet address` };\n  }\n);\nexport const ethAddress = string.regex(ETH_ADDRESS_REGEX, { message: `Invalid Ethereum address` });\nexport const patName = string.min(3, { message: 'Minimum of 3 characters' }).max(50, { message: 'Maximum of 50 characters' });\nexport const pinName = string\n  .min(1, { message: 'Minimum of 1 characters' })\n  .max(30, { message: 'Maximum of 30 characters' })\n  .regex(PIN_REGEX, { message: `Pin name only accept A-Z a-z 0-9 . _ -. ` })\n  .refine((pinName) => !!pinName, { message: 'Pin name must not be blank' });\nexport const name = string\n  .min(3, { message: 'Minimum of 3 characters' })\n  .max(30, { message: 'Maximum of 30 characters' })\n  .regex(NAME_REGEX, { message: `Name allows only letters, digits and not starting/ending spaces, '.', '-', and '~'` });\nexport const projectName = string\n  .min(1, { message: 'Minimum of 1 characters' })\n  .max(30, { message: 'Maximum of 30 characters' })\n  .refine(\n    (projectName) => {\n      if (projectName) {\n        return NAME_REGEX.test(projectName);\n      }\n    },\n    { message: `Name allows only letters, digits and not starting/ending spaces, '.', '-', and '~'` }\n  )\n  .refine((porjectName) => !!porjectName, { message: 'Project name must not be blank' });\nexport const siteName = string\n  .min(1, { message: 'Minimum of 1 characters' })\n  .max(30, { message: 'Maximum of 30 characters' })\n  .regex(IDENTIFIER_REGEX, { message: `Site Name allows only letters, digits and '-'` })\n  .refine(\n    (siteName) => {\n      return !!siteName;\n    },\n    { message: 'Site name must not be blank' }\n  );\nexport const functionName = string\n  .min(3, { message: 'Minimum of 3 characters' })\n  .max(30, { message: 'Maximum of 30 characters' })\n  .regex(IDENTIFIER_REGEX, { message: `Function name allows only letters, digits and '-'` })\n  .refine(\n    (functionName) => {\n      return !!functionName;\n    },\n    { message: 'Function name must not be blank' }\n  );\nexport const privateGatewayName = string\n  .min(3, { message: 'Minimum of 3 characters' })\n  .max(30, { message: 'Maximum of 30 characters' })\n  .regex(NAME_REGEX, { message: `Private Gateway Name allows only letters, digits and not starting/ending spaces, '.', '-', and '~'` });\nexport const email = string.regex(EMAIL_REGEX, { message: 'Invalid email' });\nexport const hostname = string\n  .min(2, { message: 'Minimum of 2 characters' })\n  .max(80, { message: 'Maximum of 80 characters' })\n  .refine((hostName) => !!hostName, { message: 'domain name must not be blank' })\n  .refine(\n    (hostname) => HOSTNAME_REGEX.test(hostname),\n    (hostname) => ({ message: `${hostname} is an invalid domain` })\n  );\n\nexport const ipAddress = string.refine(\n  (ipAddress) => IP_ADDRESS_REGEX.test(ipAddress),\n  (ipAddress) => ({ message: `${ipAddress} isn't a valid IP address or a localhost with port number` })\n);\n\nexport const description = string.max(500, { message: 'Maximum of 500 characters' });\nexport const slug = string\n  .max(63, { message: 'Maximum of 63 characters' })\n  .regex(SLUG_REGEX, { message: `Slug allows only lowercase letters, digits and '-'` });\nexport const envVarName = string\n  .min(3, { message: 'Minimum of 3 characters' })\n  .max(150, { message: 'Maximum of 150 characters' })\n  .regex(ENV_VAR_NAME_REGEX, { message: 'Only letters and numbers allowed' });\nexport const envVarValue = string\n  .min(1, { message: 'Minimum of 1 character' })\n  .max(250, { message: 'Maximum of 250 characters' })\n  .refine((value) => !!value, { message: `Value can't be null` });\nexport const framework = string.max(15, { message: 'Maximum of 15 characters' });\nexport const settingsInput = string.max(30, { message: 'Maximum of 30 characters ' });\nexport const dockerImage = string\n  .min(3, { message: 'Minimum of 3 characters' })\n  .max(50, { message: 'Maximum of 50 characters' })\n  .refine(\n    (dockerImage) => {\n      return !!dockerImage;\n    },\n    { message: 'Docker image must not be blank' }\n  );\nexport const url = string.url({ message: 'Invalid url' });\nexport const file = zod.any();\nexport const unixPath = string.regex(UNIX_PATH_REGEX, { message: `This is not a valid file path` });\nexport const functionStatus = zod.enum(['ACTIVE', 'INACTIVE']);\n", "import * as zod from 'zod';\n\nimport { boolean, email, file, hostname, id, ipAddress, name, projectName, string, walletAddress } from '../validationHelpers';\n\nexport const usernameAvailabilitySchema = zod.object({\n  where: zod.object({\n    username: name,\n  }),\n});\n\nexport const emailAvailabilitySchema = zod.object({\n  where: zod.object({\n    email: email,\n  }),\n});\n\nexport const updateUserSchema = zod.object({\n  data: zod.object({\n    avatar: file.optional().nullable(),\n    email: email.optional().nullable(),\n    firstName: string.optional().nullable(),\n    lastName: string.optional().nullable(),\n    username: name.optional().nullable(),\n    walletAddress: walletAddress.optional().nullable(),\n    walletChain: string.optional().nullable(),\n  }),\n});\n\nexport const addUserToProjectSchema = zod.object({\n  where: zod.object({\n    projectId: id,\n  }),\n  data: zod.object({\n    email,\n    role: zod.enum(['OWNER', 'MEMBER']),\n  }),\n});\n\nexport const updateMembershipSchema = zod.object({\n  where: zod.union([\n    zod.object({\n      id,\n    }),\n    zod.object({ userId: id }),\n  ]),\n  data: zod.object({\n    permissionGroupId: id,\n  }),\n});\n\nexport const createProjectSchema = zod.object({\n  data: zod.object({\n    name: projectName,\n    planId: id.optional(),\n  }),\n});\n\nexport const updateProjectSchema = zod.object({\n  where: zod.object({\n    id,\n  }),\n  data: zod.object({\n    name: projectName.optional(),\n    avatar: file.optional(),\n    backupStorageOnArweave: boolean.optional(),\n    backupStorageOnFilecoin: boolean.optional(),\n    allowAccessFromOfacCountries: boolean.optional(),\n    billingPlanId: id.optional(),\n  }),\n});\n\nexport const applicationNameAvailablitySchema = zod.object({\n  where: zod.object({\n    name,\n  }),\n});\n\n// Warning: The following includes deprecated fields\n// it's useful for retroactive support, which can \"maybe\" interop\n// with whiteLabelDomains or whitelistDomains\nexport const createApplicationSchema = zod.object({\n  data: zod.object({\n    name, //\n    // Note: validation can be messing retroactive support\n    // for the whiteLabelDomains support, so set as optional temporarily\n    whitelistDomains: zod.array(hostname.or(ipAddress)).optional(),\n    // Warning: deprecated, used only for providing support for older clients\n    whiteLabelDomains: zod.array(hostname.or(ipAddress)).optional(),\n  }),\n});\n\nexport const createApplicationSchemaNext = zod.object({\n  data: zod.object({\n    name, //\n    whitelistDomains: zod.array(hostname.or(ipAddress)),\n  }),\n});\n\nexport const deleteApplicationSchema = zod.object({\n  where: zod.object({\n    id, //\n  }),\n});\n\n// Warning: The following includes deprecated fields\n// it's useful for retroactive support, which can \"maybe\" interop\n// with whiteLabelDomains or whitelistDomains\nexport const updateApplicationSchema = zod.object({\n  where: zod.object({\n    id,\n  }),\n  data: zod.object({\n    name: name.optional(),\n    // Note: validation can be messing retroactive support\n    // for the whiteLabelDomains support, so set as optional temporarily\n    whitelistDomains: zod.array(hostname.or(ipAddress)).optional(),\n    // Warning: deprecated, used only for providing support for older clients\n    whiteLabelDomains: zod.array(hostname.or(ipAddress)).optional(),\n  }),\n});\n\nexport const updateApplicationSchemaNext = zod.object({\n  where: zod.object({\n    id,\n  }),\n  data: zod.object({\n    name: name.optional(),\n    whitelistDomains: zod.array(hostname.or(ipAddress)),\n  }),\n});\n\nexport const verifyTwoFactorSecretKey = zod.object({\n  where: zod.object({\n    secretKeyId: id,\n  }),\n  data: zod.object({\n    token: string.length(6),\n  }),\n});\n\nexport const updateTwoFactorSecretKeySchema = zod.object({\n  where: zod.object({\n    id: id,\n  }),\n  data: zod.object({\n    key: boolean.optional(),\n    isActive: boolean.optional(),\n  }),\n});\n", "import * as zod from 'zod';\n\nimport { hostname, id } from '../validationHelpers';\n\nexport const createDomainSchema = zod.object({\n  where: zod.object({ zoneId: id }),\n  data: zod.object({ hostname }),\n});\n\nexport const createDnsConfigSchema = zod.object({\n  where: zod.object({\n    domainId: id,\n    siteId: id,\n  }),\n  data: zod.object({\n    name: zod.enum(['_dnslink']),\n  }),\n});\n\nexport const createZoneForSiteSchema = zod.object({\n  where: zod.object({ siteId: id }),\n});\n\nexport const deleteZone = zod.object({\n  where: zod.object({ id }),\n});\n\nexport const domainAvailabilitySchema = zod.object({\n  where: zod.object({\n    hostname,\n  }),\n});\n", "import * as zod from 'zod';\n\nimport { id, string } from '../validationHelpers';\n\nexport const publishSignedIpnsNameSchema = zod.object({\n  data: zod.object({ input: string, key: string }),\n});\n\nexport const resolveIpnsNameSchema = zod.object({\n  where: zod.object({ name: string }),\n});\n\nexport const publishIpnsRecordSchema = zod.object({\n  where: zod.object({ id }),\n  data: zod.object({ hash: string }),\n});\n\nexport const deleteIpnsRecordSchema = zod.object({\n  where: zod.object({ id }),\n});\n\nexport const ipnsRecordSchema = zod.object({\n  where: zod.object({ name: string }),\n});\n", "import * as zod from 'zod';\n\nimport { id, name, string } from '../validationHelpers';\n\nexport const updatePinSchema = zod.object({\n  where: zod.object({\n    id: string,\n  }),\n  data: zod.object({\n    filename: name.optional(),\n    parentFolderId: id.optional(),\n    moveToRoot: zod.literal(true).optional(),\n  }),\n});\n\nexport const deletePinSchema = zod.object({\n  where: zod.object({\n    id: string,\n  }),\n});\n\nexport const presignPinUrlSchema = zod.object({\n  data: zod.object({\n    basename: string,\n    format: zod.enum(['car', 'raw']),\n    cid: string.optional(),\n  }),\n});\n\nexport const completePinUploadSchema = zod.object({\n  where: zod.object({\n    key: string,\n  }),\n});\n\nexport const createFolderSchema = zod.object({\n  where: zod.object({ parentFolderId: id.optional() }),\n  data: zod.object({ name }),\n});\n\nexport const updateFolderSchema = zod.object({\n  where: zod.object({ id }),\n  data: zod.object({ name }),\n});\n\nexport const deleteFolderSchema = zod.object({\n  where: zod.object({ id }),\n});\n", "import * as zod from 'zod';\n\nimport { dockerImage, envVarName, file, id, siteName, slug, string, unixPath } from '../validationHelpers';\n\nexport const createSiteSchema = zod.object({\n  data: zod.object({\n    name: siteName,\n    sourceProvider: zod.enum(['GITHUB', 'GITLAB', 'BITBUCKET']).optional(),\n    sourceRepositoryId: zod.string().optional(),\n    sourceRepositoryOwner: zod.string().optional(),\n    sourceRepositoryName: zod.string().optional(),\n    sourceBranch: zod.string().optional(),\n    enablePreviews: zod.boolean().optional(),\n    baseDirectory: unixPath.optional(),\n    buildCommand: zod.string().optional(),\n    distDirectory: unixPath.optional(),\n    dockerImage: dockerImage.optional(),\n    cpuLimit: zod.string().optional(),\n    memoryLimit: zod.string().optional(),\n    githubInstallationId: zod.number().positive().optional(),\n    gitIntegrationId: id.optional(),\n    buildDurationLimitSeconds: zod.number().positive().optional(),\n    templateId: id.optional(),\n    frameworkId: id.optional(),\n  }),\n});\n\n// TODO: more strict validation for fields like sourceBranch\nexport const updateSiteSchema = zod.object({\n  where: zod.object({\n    id,\n  }),\n  data: zod.object({\n    name: siteName.optional(),\n    slug: slug.optional(),\n    sourceProvider: zod.enum(['GITHUB', 'GITLAB', 'BITBUCKET']).optional(),\n    sourceRepositoryId: zod.string().optional(),\n    sourceRepositoryOwner: zod.string().optional(),\n    sourceRepositoryName: zod.string().optional(),\n    sourceBranch: zod.string().optional(),\n    enablePreviews: zod.boolean().optional(),\n    baseDirectory: unixPath.optional(),\n    buildCommand: zod.string().optional(),\n    distDirectory: unixPath.optional(),\n    dockerImage: dockerImage.optional(),\n    cpuLimit: zod.string().optional(),\n    memoryLimit: zod.string().optional(),\n    githubInstallationId: zod.number().positive().optional(),\n    buildDurationLimitSeconds: zod.number().positive().optional(),\n    avatar: file.optional(),\n    frameworkId: id.nullish(),\n  }),\n});\n\nexport const createCustomIpfsDeploymentSchema = zod.object({\n  data: zod.object({\n    siteId: id,\n    cid: string,\n  }),\n});\n\nexport const createSecretSchema = zod.object({\n  data: zod.object({ groupId: id, key: string, value: string, visibility: zod.enum(['PUBLIC', 'ENCRYPTED']) }),\n});\n\nexport const updateSecretSchema = zod.object({\n  where: zod.object({ id }),\n  data: zod.object({ value: string, visibility: zod.enum(['PUBLIC', 'ENCRYPTED']) }),\n});\n\nexport const deleteSecretSchema = zod.object({\n  where: zod.object({ id }),\n});\n\nexport const slugAvailabilitySchema = zod.object({\n  where: zod.object({ slug }),\n});\n\nexport const siteNameAvailabilitySchema = zod.object({\n  where: zod.object({\n    name: siteName,\n  }),\n});\n\nexport const secretAvailabilitySchema = zod.object({\n  where: zod.object({\n    siteId: id,\n    key: envVarName,\n  }),\n});\n", "import * as zod from 'zod';\n\nimport { boolean, id, name } from '../validationHelpers';\n\nexport const updatePrivateGatewaySchema = zod.object({\n  where: zod.object({ id }),\n  data: zod.object({ name: name.optional(), blockOfacCountries: boolean.optional() }),\n});\n\nexport const createPrivateGatewaySchema = zod.object({\n  where: zod.object({ zoneId: id }),\n  data: zod.object({ name }),\n});\n\nexport const deletePrivateGatewaySchema = zod.object({\n  where: zod.object({ id }),\n});\n\nexport const privateGatewaySchema = zod.object({\n  where: zod.object({ id }),\n});\n\nexport const privateGatewayNameAvailabilitySchema = zod.object({\n  where: zod.object({\n    name: name,\n  }),\n});\n", "import * as zod from 'zod';\n\nimport { ens as name, id, string } from '../validationHelpers';\n\nexport const createEnsRecordSchema = zod.object({\n  where: zod.object({ siteId: id, ipnsRecordId: id }),\n  data: zod.object({ name }),\n});\n\nexport const deleteEnsRecordSchema = zod.object({\n  where: zod.object({ id }),\n});\n\nexport const verifyEnsRecordSchema = zod.object({\n  where: zod.object({ id }),\n});\n\nexport const ensNameAvailabilitySchema = zod.object({\n  where: zod.object({\n    name,\n    siteId: string.optional(),\n  }),\n});\n", "import * as zod from 'zod';\n\nimport { description, file, id, name } from '../validationHelpers';\n\nexport const createTemplateSchema = zod.object({\n  data: zod.object({\n    name,\n    description,\n    siteId: id,\n    templateCategoryId: id,\n    banner: file,\n  }),\n});\n\nexport const updateTemplateSchema = zod.object({\n  where: zod.object({\n    id,\n  }),\n  data: zod.object({\n    name: name.nullish().or(zod.literal('')),\n    description: description.nullish(),\n    templateCategoryId: id.nullish(),\n    banner: file.optional(),\n  }),\n});\n\nexport const deleteTemplateSchema = zod.object({\n  where: zod.object({\n    id,\n  }),\n});\n\nexport const templateNameAvailabilitySchema = zod.object({\n  where: zod.object({\n    name,\n  }),\n});\n", "export { ValidationError, type ErrorOptions } from './ValidationError.ts';\nexport { isValidationError } from './isValidationError.ts';\nexport { isValidationErrorLike } from './isValidationErrorLike.ts';\nexport { isZodErrorLike } from './isZodErrorLike.ts';\nexport { errorMap } from './errorMap.ts';\nexport { fromError } from './fromError.ts';\nexport { fromZodIssue, type FromZodIssueOptions } from './fromZodIssue.ts';\nexport {\n  fromZodError,\n  type FromZodErrorOptions,\n  type ZodError,\n} from './fromZodError.ts';\nexport { toValidationError } from './toValidationError.ts';\nexport {\n  type MessageBuilder,\n  type ZodIssue,\n  createMessageBuilder,\n} from './MessageBuilder.ts';\nexport { type NonEmptyArray } from './utils/NonEmptyArray.ts';\n", "import type * as zod from 'zod';\n\nexport function isZodErrorLike(err: unknown): err is zod.ZodError {\n  return (\n    err instanceof Error &&\n    err.name === 'ZodError' &&\n    'issues' in err &&\n    Array.isArray(err.issues)\n  );\n}\n", "import { isZodErrorLike } from './isZodErrorLike.ts';\nimport type * as zod from 'zod';\n\n// make zod-validation-error compatible with\n// earlier to es2022 typescript configurations\n// @see https://github.com/causaly/zod-validation-error/issues/226\nexport interface ErrorOptions {\n  cause?: unknown;\n}\n\nexport class ValidationError extends Error {\n  name: 'ZodValidationError';\n  details: Array<zod.ZodIssue>;\n\n  constructor(message?: string, options?: ErrorOptions) {\n    super(message, options);\n    this.name = 'ZodValidationError';\n    this.details = getIssuesFromErrorOptions(options);\n  }\n\n  toString(): string {\n    return this.message;\n  }\n}\n\nfunction getIssuesFromErrorOptions(\n  options?: ErrorOptions\n): Array<zod.ZodIssue> {\n  if (options) {\n    const cause = options.cause;\n\n    if (isZodErrorLike(cause)) {\n      return cause.issues;\n    }\n  }\n\n  return [];\n}\n", "import { ValidationError } from './ValidationError.ts';\n\nexport function isValidationError(err: unknown): err is ValidationError {\n  return err instanceof ValidationError;\n}\n", "import type { ValidationError } from './ValidationError.ts';\n\nexport function isValidationErrorLike(err: unknown): err is ValidationError {\n  return err instanceof Error && err.name === 'ZodValidationError';\n}\n", "import * as zod from 'zod';\n\nimport {\n  type MessageBuilder,\n  type CreateMessageBuilderProps,\n  type ZodIssue,\n  createMessageBuilder,\n} from './MessageBuilder.ts';\nimport { ValidationError } from './ValidationError.ts';\n\nexport type FromZodIssueOptions =\n  | {\n      messageBuilder: MessageBuilder;\n    }\n  // maintain backwards compatibility\n  | Omit<CreateMessageBuilderProps, 'maxIssuesInMessage'>;\n\nexport function fromZodIssue(\n  issue: ZodIssue,\n  options: FromZodIssueOptions = {}\n): ValidationError {\n  const messageBuilder = createMessageBuilderFromOptions(options);\n  const message = messageBuilder([issue]);\n\n  return new ValidationError(message, { cause: new zod.ZodError([issue]) });\n}\n\nfunction createMessageBuilderFromOptions(\n  options: FromZodIssueOptions\n): MessageBuilder {\n  if ('messageBuilder' in options) {\n    return options.messageBuilder;\n  }\n\n  return createMessageBuilder(options);\n}\n", "import * as zod from 'zod';\nimport { type NonEmptyArray, isNonEmptyArray } from './utils/NonEmptyArray.ts';\nimport { joinPath } from './utils/joinPath.ts';\nimport {\n  ISSUE_SEPARATOR,\n  MAX_ISSUES_IN_MESSAGE,\n  PREFIX,\n  PREFIX_SEPARATOR,\n  UNION_SEPARATOR,\n} from './config.ts';\n\nexport type ZodIssue = zod.ZodIssue;\n\nexport type MessageBuilder = (issues: NonEmptyArray<ZodIssue>) => string;\n\nexport type CreateMessageBuilderProps = {\n  issueSeparator?: string;\n  unionSeparator?: string;\n  prefix?: string | null;\n  prefixSeparator?: string;\n  includePath?: boolean;\n  maxIssuesInMessage?: number;\n};\n\nexport function createMessageBuilder(\n  props: CreateMessageBuilderProps = {}\n): MessageBuilder {\n  const {\n    issueSeparator = ISSUE_SEPARATOR,\n    unionSeparator = UNION_SEPARATOR,\n    prefixSeparator = PREFIX_SEPARATOR,\n    prefix = PREFIX,\n    includePath = true,\n    maxIssuesInMessage = MAX_ISSUES_IN_MESSAGE,\n  } = props;\n  return (issues) => {\n    const message = issues\n      // limit max number of issues printed in the reason section\n      .slice(0, maxIssuesInMessage)\n      // format error message\n      .map((issue) =>\n        getMessageFromZodIssue({\n          issue,\n          issueSeparator,\n          unionSeparator,\n          includePath,\n        })\n      )\n      // concat as string\n      .join(issueSeparator);\n\n    return prefixMessage(message, prefix, prefixSeparator);\n  };\n}\n\nfunction getMessageFromZodIssue(props: {\n  issue: ZodIssue;\n  issueSeparator: string;\n  unionSeparator: string;\n  includePath: boolean;\n}): string {\n  const { issue, issueSeparator, unionSeparator, includePath } = props;\n\n  if (issue.code === zod.ZodIssueCode.invalid_union) {\n    return issue.unionErrors\n      .reduce<string[]>((acc, zodError) => {\n        const newIssues = zodError.issues\n          .map((issue) =>\n            getMessageFromZodIssue({\n              issue,\n              issueSeparator,\n              unionSeparator,\n              includePath,\n            })\n          )\n          .join(issueSeparator);\n\n        if (!acc.includes(newIssues)) {\n          acc.push(newIssues);\n        }\n\n        return acc;\n      }, [])\n      .join(unionSeparator);\n  }\n\n  if (issue.code === zod.ZodIssueCode.invalid_arguments) {\n    return [\n      issue.message,\n      ...issue.argumentsError.issues.map((issue) =>\n        getMessageFromZodIssue({\n          issue,\n          issueSeparator,\n          unionSeparator,\n          includePath,\n        })\n      ),\n    ].join(issueSeparator);\n  }\n\n  if (issue.code === zod.ZodIssueCode.invalid_return_type) {\n    return [\n      issue.message,\n      ...issue.returnTypeError.issues.map((issue) =>\n        getMessageFromZodIssue({\n          issue,\n          issueSeparator,\n          unionSeparator,\n          includePath,\n        })\n      ),\n    ].join(issueSeparator);\n  }\n\n  if (includePath && isNonEmptyArray(issue.path)) {\n    // handle array indices\n    if (issue.path.length === 1) {\n      const identifier = issue.path[0];\n\n      if (typeof identifier === 'number') {\n        return `${issue.message} at index ${identifier}`;\n      }\n    }\n\n    return `${issue.message} at \"${joinPath(issue.path)}\"`;\n  }\n\n  return issue.message;\n}\n\nfunction prefixMessage(\n  message: string,\n  prefix: string | null,\n  prefixSeparator: string\n): string {\n  if (prefix !== null) {\n    if (message.length > 0) {\n      return [prefix, message].join(prefixSeparator);\n    }\n\n    return prefix;\n  }\n\n  if (message.length > 0) {\n    return message;\n  }\n\n  // if both reason and prefix are empty, return default prefix\n  // to avoid having an empty error message\n  return PREFIX;\n}\n", "export type NonEmptyArray<T> = [T, ...T[]];\n\nexport function isNonEmptyArray<T>(value: T[]): value is NonEmptyArray<T> {\n  return value.length !== 0;\n}\n", "import type { NonEmptyArray } from './NonEmptyArray.ts';\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#identifiers\n */\nconst identifierRegex = /[$_\\p{ID_Start}][$\\u200c\\u200d\\p{ID_Continue}]*/u;\n\nexport function joinPath(path: NonEmptyArray<string | number>): string {\n  if (path.length === 1) {\n    return path[0].toString();\n  }\n\n  return path.reduce<string>((acc, item) => {\n    // handle numeric indices\n    if (typeof item === 'number') {\n      return acc + '[' + item.toString() + ']';\n    }\n\n    // handle quoted values\n    if (item.includes('\"')) {\n      return acc + '[\"' + escapeQuotes(item) + '\"]';\n    }\n\n    // handle special characters\n    if (!identifierRegex.test(item)) {\n      return acc + '[\"' + item + '\"]';\n    }\n\n    // handle normal values\n    const separator = acc.length === 0 ? '' : '.';\n    return acc + separator + item;\n  }, '');\n}\n\nfunction escapeQuotes(str: string): string {\n  return str.replace(/\"/g, '\\\\\"');\n}\n", "export const ISSUE_SEPARATOR = '; ';\nexport const MAX_ISSUES_IN_MESSAGE = 99; // I've got 99 problems but the b$tch ain't one\nexport const PREFIX = 'Validation error';\nexport const PREFIX_SEPARATOR = ': ';\nexport const UNION_SEPARATOR = ', or ';\n", "import { fromZodIssue } from './fromZodIssue.ts';\nimport type * as zod from 'zod';\n\nexport const errorMap: zod.ZodErrorMap = (issue, ctx) => {\n  const error = fromZodIssue({\n    ...issue,\n    // fallback to the default error message\n    // when issue does not have a message\n    message: issue.message ?? ctx.defaultError,\n  });\n\n  return {\n    message: error.message,\n  };\n};\n", "import { fromError } from './fromError.ts';\nimport { isZodErrorLike } from './isZodErrorLike.ts';\nimport {\n  createMessageBuilder,\n  type CreateMessageBuilderProps,\n  type MessageBuilder,\n} from './MessageBuilder.ts';\nimport { isNonEmptyArray } from './utils/NonEmptyArray.ts';\nimport { ValidationError } from './ValidationError.ts';\nimport type * as zod from 'zod';\n\nexport type ZodError = zod.ZodError;\n\nexport type FromZodErrorOptions =\n  | {\n      messageBuilder: MessageBuilder;\n    }\n  // maintain backwards compatibility\n  | CreateMessageBuilderProps;\n\nexport function fromZodError(\n  zodError: ZodError,\n  options: FromZodErrorOptions = {}\n): ValidationError {\n  // perform runtime check to ensure the input is a ZodError\n  // why? because people have been historically using this function incorrectly\n  if (!isZodErrorLike(zodError)) {\n    throw new TypeError(\n      `Invalid zodError param; expected instance of ZodError. Did you mean to use the \"${fromError.name}\" method instead?`\n    );\n  }\n\n  return fromZodErrorWithoutRuntimeCheck(zodError, options);\n}\n\nexport function fromZodErrorWithoutRuntimeCheck(\n  zodError: ZodError,\n  options: FromZodErrorOptions = {}\n): ValidationError {\n  const zodIssues = zodError.errors;\n\n  let message: string;\n  if (isNonEmptyArray(zodIssues)) {\n    const messageBuilder = createMessageBuilderFromOptions(options);\n    message = messageBuilder(zodIssues);\n  } else {\n    message = zodError.message;\n  }\n\n  return new ValidationError(message, { cause: zodError });\n}\n\nfunction createMessageBuilderFromOptions(\n  options: FromZodErrorOptions\n): MessageBuilder {\n  if ('messageBuilder' in options) {\n    return options.messageBuilder;\n  }\n\n  return createMessageBuilder(options);\n}\n", "import { ValidationError } from './ValidationError.ts';\nimport { isZodErrorLike } from './isZodErrorLike.ts';\nimport {\n  fromZodErrorWithoutRuntimeCheck,\n  type FromZodErrorOptions,\n} from './fromZodError.ts';\n\nexport const toValidationError =\n  (options: FromZodErrorOptions = {}) =>\n  (err: unknown): ValidationError => {\n    if (isZodErrorLike(err)) {\n      return fromZodErrorWithoutRuntimeCheck(err, options);\n    }\n\n    if (err instanceof Error) {\n      return new ValidationError(err.message, { cause: err });\n    }\n\n    return new ValidationError('Unknown error');\n  };\n", "import { toValidationError } from './toValidationError.ts';\nimport type { FromZodErrorOptions } from './fromZodError.ts';\nimport type { ValidationError } from './ValidationError.ts';\n\n/**\n * This function is a non-curried version of `toValidationError`\n */\nexport function fromError(\n  err: unknown,\n  options: FromZodErrorOptions = {}\n): ValidationError {\n  return toValidationError(options)(err);\n}\n", "import { z, ZodError } from 'zod';\nimport { fromZodError } from 'zod-validation-error';\n\nimport { slug, string } from '../validationHelpers';\n\ntype ValidateConfigurationWithResultArgs = {\n  configuration: object;\n};\n\nexport const validateConfigurationWithResult = async ({ configuration }: ValidateConfigurationWithResultArgs) => {\n  return fleekRootConfigSchema\n    .parseAsync(configuration)\n    .catch((error: ZodError) => Promise.reject(new Error(fromZodError(error).toString())));\n};\n\nexport const fleekSiteConfigSchema = z\n  .object({\n    slug,\n    distDir: string,\n    buildCommand: string.optional(),\n  })\n  .strict();\n\nexport const fleekRootConfigSchema = z\n  .object({\n    sites: z.array(fleekSiteConfigSchema).length(1),\n  })\n  .strict();\n", "import { hostname as hostnameSchema,url } from '../validationHelpers';\n\ntype IsHostnameValidArgs = {\n  hostname: string;\n};\n\nexport const isHostnameValid = ({ hostname }: IsHostnameValidArgs) =>\n  hostnameSchema.safeParse(hostname).success && url.safeParse(`https://${hostname}`).success;\n", "import { privateGatewayName } from '../validationHelpers';\n\ntype IsPrivateGatewayNameValidArgs = {\n  name?: string;\n};\n\nexport const isPrivateGatewayNameValid = ({ name }: IsPrivateGatewayNameValidArgs) => privateGatewayName.safeParse(name).success;\n", "import { name as projectName } from '../validationHelpers';\n\ntype IsProjectNameValidArgs = {\n  name: string;\n};\n\nexport const isProjectNameValid = ({ name }: IsProjectNameValidArgs) => projectName.safeParse(name).success;\n", "import { functionName } from '../validationHelpers';\n\ntype IsFunctionNameValidArgs = {\n  name: string;\n};\n\nexport const isFunctionNameValid = ({ name }: IsFunctionNameValidArgs) => functionName.safeParse(name).success;\n", "import { slug as functionSlug } from '../validationHelpers';\n\ntype IsFunctionSlugValidArgs = {\n  slug: string;\n};\n\nexport const isFunctionSlugValid = ({ slug }: IsFunctionSlugValidArgs) => functionSlug.safeParse(slug).success;\n", "import { functionStatus } from '../validationHelpers';\n\ntype IsFunctionStatusValidArgs = {\n  status: string;\n};\n\nexport const isFunctionStatusValid = ({ status }: IsFunctionStatusValidArgs) => functionStatus.safeParse(status).success;\n", "import { siteName } from '../validationHelpers';\n\ntype IsSiteNameValidArgs = {\n  name: string;\n};\n\nexport const isSiteNameValid = ({ name }: IsSiteNameValidArgs) => siteName.safeParse(name).success;\n", "'use strict';\n\n// created 2024-09-13T06:42:45.675Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 0ca3917bee1eee342d64c631cb1dbaac37b167d848887d59f6d68328dc99ac09\nvar COMPRESSED$1 = '';\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\r\n\r\nfunction array_replace(v, a, b) {\r\n\tlet prev = 0;\r\n\twhile (true) {\r\n\t\tlet next = v.indexOf(a, prev);\r\n\t\tif (next < 0) break;\r\n\t\tv[next] = b; \r\n\t\tprev = next + 1;\r\n\t}\r\n}\n\n// created 2024-09-13T06:42:45.675Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a79d5f9b1879a7b416aa659f4a3d788f80a8cf5f0ab955a456592c02f556a28c\nvar COMPRESSED = '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';\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nlet SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;\r\n\r\n// export function nf_deinit() {\r\n// \tif (!SHIFTED_RANK) return;\r\n// \tSHIFTED_RANK = EXCLUSIONS = DECOMP = RECOMP = undefined;\r\n// }\r\n\r\nfunction init$1() {\r\n\t//console.time('nf');\r\n\tlet r = read_compressed_payload(COMPRESSED);\r\n\tSHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\n\tEXCLUSIONS = new Set(read_sorted(r));\r\n\tDECOMP = new Map();\r\n\tRECOMP = new Map();\r\n\tfor (let [cp, cps] of read_mapped(r)) {\r\n\t\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\t\tlet [a, b] = cps;\r\n\t\t\tlet bucket = RECOMP.get(a);\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tbucket = new Map();\r\n\t\t\t\tRECOMP.set(a, bucket);\r\n\t\t\t}\r\n\t\t\tbucket.set(b, cp);\r\n\t\t}\r\n\t\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n\t}\r\n\t//console.timeEnd('nf');\r\n\t// 20230905: 11ms\r\n}\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tif (!SHIFTED_RANK) init$1();\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\nconst HYPHEN = 0x2D;\r\nconst STOP = 0x2E;\r\nconst STOP_CH = '.';\r\nconst FE0F = 0xFE0F;\r\nconst UNIQUE_PH = 1;\r\n\r\n// 20230913: replace [...v] with Array_from(v) to avoid large spreads\r\nconst Array_from = x => Array.from(x); // Array.from.bind(Array);\r\n\r\nfunction group_has_cp(g, cp) {\r\n\t// 20230913: keep primary and secondary distinct instead of creating valid union\r\n\treturn g.P.has(cp) || g.Q.has(cp);\r\n}\r\n\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n\r\nlet MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\r\n\r\n// export function ens_deinit() {\r\n// \tnf_deinit();\r\n// \tif (!MAPPED) return;\r\n// \tMAPPED = IGNORED = CM = NSM = ESCAPE = NFC_CHECK = GROUPS = WHOLE_VALID = WHOLE_MAP = VALID = EMOJI_LIST = EMOJI_ROOT = undefined;\r\n// }\r\n\r\nfunction init() {\r\n\tif (MAPPED) return;\r\n\t\r\n\tlet r = read_compressed_payload(COMPRESSED$1);\r\n\tconst read_sorted_array = () => read_sorted(r);\r\n\tconst read_sorted_set = () => new Set(read_sorted_array());\r\n\tconst set_add_many = (set, v) => v.forEach(x => set.add(x));\r\n\r\n\tMAPPED = new Map(read_mapped(r)); \r\n\tIGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints\r\n\r\n\t/*\r\n\t// direct include from payload is smaller than the decompression code\r\n\tconst FENCED = new Map(read_array_while(() => {\r\n\t\tlet cp = r();\r\n\t\tif (cp) return [cp, read_str(r())];\r\n\t}));\r\n\t*/\r\n\t// 20230217: we still need all CM for proper error formatting\r\n\t// but norm only needs NSM subset that are potentially-valid\r\n\tCM = read_sorted_array();\r\n\tNSM = new Set(read_sorted_array().map(i => CM[i]));\r\n\tCM = new Set(CM);\r\n\t\r\n\tESCAPE = read_sorted_set(); // characters that should not be printed\r\n\tNFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations\r\n\r\n\tlet chunks = read_sorted_arrays(r);\r\n\tlet unrestricted = r();\r\n\t//const read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));\r\n\tconst read_chunked = () => {\r\n\t\t// 20230921: build set in parts, 2x faster\r\n\t\tlet set = new Set();\r\n\t\tread_sorted_array().forEach(i => set_add_many(set, chunks[i]));\r\n\t\tset_add_many(set, read_sorted_array());\r\n\t\treturn set; \r\n\t};\r\n\tGROUPS = read_array_while(i => {\r\n\t\t// minifier property mangling seems unsafe\r\n\t\t// so these are manually renamed to single chars\r\n\t\tlet N = read_array_while(r).map(x => x+0x60);\r\n\t\tif (N.length) {\r\n\t\t\tlet R = i >= unrestricted; // unrestricted then restricted\r\n\t\t\tN[0] -= 32; // capitalize\r\n\t\t\tN = str_from_cps(N);\r\n\t\t\tif (R) N=`Restricted[${N}]`;\r\n\t\t\tlet P = read_chunked(); // primary\r\n\t\t\tlet Q = read_chunked(); // secondary\r\n\t\t\tlet M = !r(); // not-whitelisted, check for NSM\r\n\t\t\t// *** this code currently isn't needed ***\r\n\t\t\t/*\r\n\t\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t\tlet M = r()-1; // number of combining mark\r\n\t\t\tif (M < 0) { // whitelisted\r\n\t\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\t\tlet i = r();\r\n\t\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t\t})];\r\n\t\t\t\t}));\r\n\t\t\t}*/\r\n\t\t\treturn {N, P, Q, M, R};\r\n\t\t}\r\n\t});\r\n\r\n\t// decode compressed wholes\r\n\tWHOLE_VALID = read_sorted_set();\r\n\tWHOLE_MAP = new Map();\r\n\tlet wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted\r\n\twholes.forEach((cp, i) => {\r\n\t\tlet d = r(); \r\n\t\tlet w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};\r\n\t\tw.V.push(cp); // add to member set\r\n\t\tif (!WHOLE_VALID.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t\t}\r\n\t});\r\n\r\n\t// compute confusable-extent complements\r\n\t// usage: WHOLE_MAP.get(cp).M.get(cp) = complement set\r\n\tfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t\t// connect all groups that have each whole character\r\n\t\tlet recs = [];\r\n\t\tfor (let cp of V) {\r\n\t\t\tlet gs = GROUPS.filter(g => group_has_cp(g, cp));\r\n\t\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\t\tif (!rec) {\r\n\t\t\t\trec = {G: new Set(), V: []};\r\n\t\t\t\trecs.push(rec);\r\n\t\t\t}\r\n\t\t\trec.V.push(cp);\r\n\t\t\tset_add_many(rec.G, gs);\r\n\t\t}\r\n\t\t// per character cache groups which are not a member of the extent\r\n\t\tlet union = recs.flatMap(x => Array_from(x.G)); // all of the groups used by this whole\r\n\t\tfor (let {G, V} of recs) {\r\n\t\t\tlet complement = new Set(union.filter(g => !G.has(g))); // groups not covered by the extent\r\n\t\t\tfor (let cp of V) {\r\n\t\t\t\tM.set(cp, complement); // this is the same reference\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// compute valid set\r\n\t// 20230924: VALID was union but can be re-used\r\n\tVALID = new Set(); // exists in 1+ groups\r\n\tlet multi = new Set(); // exists in 2+ groups\r\n\tconst add_to_union = cp => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);\r\n\tfor (let g of GROUPS) {\r\n\t\tfor (let cp of g.P) add_to_union(cp);\r\n\t\tfor (let cp of g.Q) add_to_union(cp);\r\n\t}\r\n\t// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\n\tfor (let cp of VALID) {\r\n\t\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t\t}\r\n\t}\r\n\t// add all decomposed parts\r\n\t// see derive: \"Valid is Closed (via Brute-force)\"\r\n\tset_add_many(VALID, nfd(VALID));\r\n\t\r\n\t// decode emoji\r\n\t// 20230719: emoji are now fully-expanded to avoid quirk logic \r\n\tEMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);\r\n\tEMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\n\tfor (let cps of EMOJI_LIST) {\r\n\t\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t\t// example: beautified [A B] (eg. flag emoji) \r\n\t\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t\t//   after: error: both\r\n\t\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\t\tlet prev = [EMOJI_ROOT];\r\n\t\tfor (let cp of cps) {\r\n\t\t\tlet next = prev.map(node => {\r\n\t\t\t\tlet child = node.get(cp);\r\n\t\t\t\tif (!child) {\r\n\t\t\t\t\t// should this be object? \r\n\t\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\t\tchild = new Map();\r\n\t\t\t\t\tnode.set(cp, child);\r\n\t\t\t\t}\r\n\t\t\t\treturn child;\r\n\t\t\t});\r\n\t\t\tif (cp === FE0F) {\r\n\t\t\t\tprev.push(...next); // less than 20 elements\r\n\t\t\t} else {\r\n\t\t\t\tprev = next;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let x of prev) {\r\n\t\t\tx.V = cps;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`); // this can only be ascii so cant be bidi\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// if cps exceed max, middle truncate with ellipsis\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('\u25CC');\r\n\tif (cps.length > max) {\r\n\t\tmax >>= 1;\r\n\t\tcps = [...cps.slice(0, max), 0x2026, ...cps.slice(-max)];\r\n\t}\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\n// note: Object.freeze() doesn't work\r\nfunction is_combining_mark(cp, only_nsm) { // 20240127: add extra argument\r\n\tinit();\r\n\treturn only_nsm ? NSM.has(cp) : CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\tinit();\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\tinit();\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tinit();\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"\u2010\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// \u03BE => \u039E if not greek\r\n\t\tif (type !== 'Greek') array_replace(output, 0x3BE, 0x39E);\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tinit();\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = tokens_from_str(input, nf, ef);\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} \r\n\t\t\tlet norm = info.output = tokens.flat();\r\n\t\t\tcheck_leading_underscore(norm);\r\n\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);\r\n\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\tcheck_label_extension(norm); // only needed for ascii\r\n\t\t\t\t// cant have fenced\r\n\t\t\t\t// cant have cm\r\n\t\t\t\t// cant have wholes\r\n\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\ttype = 'ASCII';\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 5.) \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\tlet unique = Array_from(new Set(chars));\r\n\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : Array_from(set);\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaining groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => group_has_cp(g, cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => group_has_cp(g, cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => group_has_cp(g, cp))) { \r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp)); // only check primary\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tfor (let cp of cps) {\r\n\t\tif (!group_has_cp(g, cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (g.M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc\uD83D\uDCA9d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\n// 20230818: rename for 'process' name collision h/t Javarome\r\n// https://github.com/adraffy/ens-normalize.js/issues/23\r\nfunction tokens_from_str(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps); // less than 10 elements\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\t// 20230912: unicode 15.1 changed the order of processing such that\r\n\t\t\t\t\t// disallowed parts are only rejected after NFC\r\n\t\t\t\t\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t\t\t\t\t// this doesn't impact normalization as of today\r\n\t\t\t\t\t// technically, this error can be removed as the group logic will apply similar logic\r\n\t\t\t\t\t// however the error type might be less clear\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tinit();\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI,\r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten,\r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexports.ens_beautify = ens_beautify;\nexports.ens_emoji = ens_emoji;\nexports.ens_normalize = ens_normalize;\nexports.ens_normalize_fragment = ens_normalize_fragment;\nexports.ens_split = ens_split;\nexports.ens_tokenize = ens_tokenize;\nexports.is_combining_mark = is_combining_mark;\nexports.nfc = nfc;\nexports.nfd = nfd;\nexports.safe_str_from_cps = safe_str_from_cps;\nexports.should_escape = should_escape;\n", "import { ens_normalize } from '@adraffy/ens-normalize';\nimport * as zod from 'zod';\n\ntype IsEnsValidArgs = {\n  name: string;\n};\n\nexport const isEnsValid = ({ name }: IsEnsValidArgs) =>\n  zod\n    .string()\n    .refine((val) => {\n      try {\n        return Boolean(ens_normalize(val));\n      } catch (e) {\n        return false;\n      }\n    })\n    .safeParse(name).success;\n", "import * as zod from 'zod';\ntype IsEmailValidArgs = {\n  email: string;\n};\n\nexport const isEmailValid = ({ email }: IsEmailValidArgs) => zod.string().email().safeParse(email).success;\n", "import * as zod from 'zod';\ntype IsPhoneNumberValidArgs = {\n  number: string;\n};\n\nexport const isPhoneNumberValid = ({ number }: IsPhoneNumberValidArgs) =>\n  zod\n    .string()\n    .regex(/^\\+\\d{10,15}$/)\n    .safeParse(number).success;\n", "import * as zod from 'zod';\n\nexport const createBillingPlanSchema = zod.object({\n  data: zod.object({\n    name: zod.string(),\n    version: zod.number().positive(),\n    isActive: zod.boolean(),\n    price: zod.number().positive(),\n    billingPartnerId: zod.string().optional(),\n    isPublicPlan: zod.boolean(),\n    planLevel: zod.enum(['FREE', 'BASIC', 'PRO', 'ENTERPRISE']),\n    description: zod.string(),\n  }),\n});\n\nexport const updateBillingPlanSchema = zod.object({\n  where: zod.object({\n    id: zod.string(),\n  }),\n  data: zod.object({\n    isActive: zod.boolean().optional(),\n    price: zod.number().positive().optional(),\n  }),\n});\n\nexport const createBillingCycleUsageSchema = zod.object({\n  data: zod.object({\n    billingCycleId: zod.string(),\n    billingPlanOverageRuleId: zod.string(),\n    amount: zod.number().positive(),\n  }),\n});\n", "import * as zod from 'zod';\n\nimport { email } from '../validationHelpers';\n\nexport const createSalesContactRequestSchema = zod.object({\n  data: zod.object({\n    email,\n    description: zod.string().min(10, { message: 'Minimum of 10 characters' }).max(1000, { message: 'Maximum of 1000 characters' }),\n  }),\n});\n", "import * as fs from 'fs';\nimport path from 'path';\n\ntype IsFunctionPathValidArgs = {\n  fileOrFolderPath: string;\n};\n\nexport const validExtension = new Set(['.js', '.mjs', '.cjs', '.ts', '.jsx', '.tsx', '.wasm']);\n\nexport const isValidFolder = async (path: string) => {\n  try {\n    if (fs.lstatSync(path).isDirectory()) {\n      return true;\n    }\n\n    return false;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const isFunctionPathValid = async ({ fileOrFolderPath }: IsFunctionPathValidArgs) => {\n  return fs.existsSync(fileOrFolderPath) && (validExtension.has(path.extname(fileOrFolderPath)) || (await isValidFolder(fileOrFolderPath)));\n};\n", "export * from './services/auth';\nexport * from './services/domains';\nexport * from './services/ipns';\nexport * from './services/ipfs';\nexport * from './services/site';\nexport * from './services/domains';\nexport * from './services/privateGateway';\nexport * from './services/ens';\nexport * from './services/template';\nexport * from './configuration/validateConfigurationWithResult';\nexport * from './inputs/isHostnameValid';\nexport * from './inputs/isPrivateGatewayNameValid';\nexport * from './inputs/isProjectNameValid';\nexport { isFunctionNameValid } from './inputs/isFunctionNameValid';\nexport { isFunctionSlugValid } from './inputs/isFunctionSlugValid';\nexport { isFunctionStatusValid } from './inputs/isFunctionStatusValid';\nexport * from './inputs/isSiteNameValid';\nexport * from './inputs/isEnsValid';\nexport * from './validationHelpers';\nexport * from './inputs/isEmailValid';\nexport * from './inputs/isPhoneNumberValid';\nexport { createBillingPlanSchema, updateBillingPlanSchema, createBillingCycleUsageSchema } from './services/billing';\nexport * from './services/salesContactRequest';\nexport { isFunctionPathValid, isValidFolder } from './inputs/isFunctionPathValid';\n", "export abstract class FleekError<T> extends Error {\n  public abstract name: string;\n  public data: T;\n\n  // eslint-disable-next-line fleek-custom/valid-argument-types\n  constructor(data: T) {\n    super();\n\n    this.data = data;\n  }\n\n  get message() {\n    return this.toString();\n  }\n\n  abstract toString(): string;\n}\n", "import { FleekError } from './FleekError';\n\ntype BunnyPullZoneNotFoundErrorOptions = {\n  name: string;\n};\n\nexport class BunnyPullZoneNotFoundError extends FleekError<BunnyPullZoneNotFoundErrorOptions> {\n  public name = 'BunnyPullZoneNotFoundError';\n\n  toString = () => `PullZone with name ${this.data.name} was not found on BunnyCDN.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Domain = {\n  id?: string;\n  hostname?: string;\n}\n\ntype DomainNotFoundErrorOptions = {\n  domain: Domain;\n};\n\nexport class DomainNotFoundError extends FleekError<DomainNotFoundErrorOptions> {\n  public name = 'DomainNotFoundError';\n\n  toString = () => {\n    if (this.data.domain.hostname) {\n      return `Domain ${this.data.domain.hostname} was not found.`;\n    }\n\n    return 'Domain was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype DomainsNotFoundErrorOptions = object;\n\nexport class DomainsNotFoundError extends FleekError<DomainsNotFoundErrorOptions> {\n  public name = 'DomainsNotFoundError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'No domains found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype Domain = ObjectId & {\n  hostname?: string;\n};\n\ntype DomainAlreadyExistsInProjectErrorOptions = {\n  domain: Domain;\n  project: ObjectId;\n};\n\nexport class DomainAlreadyExistsInProjectError extends FleekError<DomainAlreadyExistsInProjectErrorOptions> {\n  public name = 'DomainAlreadyExistsInProjectError';\n\n  toString = () => {\n    return `Domain ${this.data.domain.hostname} already exists under the project.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Domain = {\n  id?: string;\n  status?: string;\n}\n\ntype DomainInPendingStateErrorOptions = {\n  domain: Domain;\n};\n\nexport class DomainInPendingStateError extends FleekError<DomainInPendingStateErrorOptions> {\n  public name = 'DomainInPendingStateError';\n\n  toString = () => {\n    return 'Domain is in pending state. Please wait and try action again later.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype DomainHostnameInvalidErrorOptions = {\n  hostname: string;\n};\n\nexport class DomainHostnameInvalidError extends FleekError<DomainHostnameInvalidErrorOptions> {\n  public name = 'DomainHostnameInvalidError';\n\n  toString = () => {\n    return `The domain ${this.data.hostname} is invalid`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype UnknownErrorOptions = Record<string, never>;\n\nexport class UnknownError extends FleekError<UnknownErrorOptions> {\n  public name = 'UnknownError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Unexpected error. Repeat the action or contact support.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Site = {\n  id?: string;\n  slug?: string;\n  name?: string;  \n};\n\ntype SiteNotFoundErrorOptions = {\n  site: Site;\n};\n\nexport class SiteNotFoundError extends FleekError<SiteNotFoundErrorOptions> {\n  public name = 'SiteNotFoundError';\n\n  toString = () => {\n    if (this.data.site.slug) {\n      return `Site ${this.data.site.slug} not found.`;\n    }\n\n    return `Site not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype SitesNotFoundErrorOptions = Record<string, never>;\n\nexport class SitesNotFoundError extends FleekError<SitesNotFoundErrorOptions> {\n  public name = 'SitesNotFoundError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'No sites found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype Site = ObjectId & {\n  name?: string;\n  slug?: string;\n}\n\ntype SiteAlreadyExistsErrorOptions = {\n  site: Site;\n  project: ObjectId;\n};\n\nexport class SiteAlreadyExistsError extends FleekError<SiteAlreadyExistsErrorOptions> {\n  public name = 'SiteAlreadyExistsError';\n\n  toString = () => {\n    if ('name' in this.data.site) {\n      return `Site ${this.data.site.name} already exists in the project.`;\n    }\n\n    return `Site slug must be unique within Fleek but ${this.data.site.slug} already exists.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype SiteDeploymentNotFoundErrorOptions = {\n  deployment: ObjectId;\n};\n\nexport class SiteDeploymentNotFoundError extends FleekError<SiteDeploymentNotFoundErrorOptions> {\n  public name = 'SiteDeploymentNotFoundError';\n\n  toString = () => `Deployment not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype SiteHasDependentsErrorOptions = {\n  site: ObjectId;\n  domains: ObjectId[];\n  ipnsRecords: ObjectId[];\n};\n\nexport class SiteHasDependentsError extends FleekError<SiteHasDependentsErrorOptions> {\n  public name = 'SiteHasDependentsError';\n\n  toString = () => {\n    const dependentsInfo: string[] = [];\n\n    if (this.data.domains.length > 0) {\n      dependentsInfo.push(`${this.data.domains.length} domains`);\n    }\n\n    if (this.data.ipnsRecords.length > 0) {\n      dependentsInfo.push(`${this.data.ipnsRecords.length} IPNS records`);\n    }\n\n    return `Site has assigned ${dependentsInfo}. You have to delete them first.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Site = {\n  id?: string;\n  slug?: string;\n}\n\ntype SiteHasNoSourceProviderErrorOptions = {\n  site: Site;\n};\n\nexport class SiteHasNoSourceProviderError extends FleekError<SiteHasNoSourceProviderErrorOptions> {\n  public name = 'SiteHasNoSourceProviderError';\n\n  toString = () => {\n    if (this.data.site.slug) {\n      return `Site ${this.data.site.slug} does not have a source provider.`;\n    }\n\n    return `Site does not have a source provider.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Site = {\n  id?: string;\n  slug?: string;\n}\n\ntype SiteNotDeployedErrorOptions = {\n  site: Site;\n};\n\nexport class SiteNotDeployedError extends FleekError<SiteNotDeployedErrorOptions> {\n  public name = 'SiteNotDeployedError';\n\n  toString = () => {\n    if (this.data.site.slug) {\n      return `Site ${this.data.site.slug} does not have released deployments.`;\n    }\n\n    return `Site does not have released deployments.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Record = {\n  id?: string;\n  name?: string;\n}\n\ntype IpnsRecordNotFoundErrorOptions = {\n  record: Record;\n};\n\nexport class IpnsRecordNotFoundError extends FleekError<IpnsRecordNotFoundErrorOptions> {\n  public name = 'IpnsRecordNotFoundError';\n\n  toString = () => `IPNS record not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype IpnsRecordsNotFoundErrorOptions = Record<string, never>;\n\nexport class IpnsRecordsNotFoundError extends FleekError<IpnsRecordsNotFoundErrorOptions> {\n  public name = 'IpnsRecordsNotFoundError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'No IPNS records found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype IpnsFailToDecryptKeyErrorOptions = {\n  record?: ObjectId;\n};\n\nexport class IpnsFailToDecryptKeyError extends FleekError<IpnsFailToDecryptKeyErrorOptions> {\n  public name = 'IpnsFailToDecryptKeyError';\n\n  toString = () => `Failed to decrypt IPNS key.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Site = {\n  id?: string;\n  name?: string;\n}\ntype IpnsRecordsForSiteLimitErrorOptions = {\n  site: Site;\n};\n\nexport class IpnsRecordsForSiteLimitError extends FleekError<IpnsRecordsForSiteLimitErrorOptions> {\n  public name = 'IpnsRecordsForSiteLimitError';\n\n  toString = () => {\n    if (this.data.site.name) {\n      return `Maximum amount of IPNS records that may be assigned to the ${this.data.site.name} site was exceeded.`;\n    }\n\n    return `Maximum amount of IPNS records that may be assigned to the site was exceeded.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype StorageIpfsUploadFailedErrorOptions = Record<string, never>;\n\nexport class StorageIpfsUploadFailedError extends FleekError<StorageIpfsUploadFailedErrorOptions> {\n  public name = 'StorageIpfsUploadFailedError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Upload failed.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype SdkRequiredNodeRuntimeErrorOptions = Record<string, never>;\n\nexport class SdkRequiredNodeRuntimeError extends FleekError<SdkRequiredNodeRuntimeErrorOptions> {\n  public name = 'SdkRequiredNodeRuntimeError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `The functionality of this SDK feature is dependent on the Node.js runtime.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype AuthorizationErrorOptions = object;\n\nexport class AuthorizationError extends FleekError<AuthorizationErrorOptions> {\n  public name = 'AuthorizationError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Authorization with provided credentials is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype ProjectMembershipNotFoundErrorOptions =\n  | { user: ObjectId; project: ObjectId }\n  | {\n      membership: ObjectId;\n      project: ObjectId;\n    };\n\nexport class ProjectMembershipNotFoundError extends FleekError<ProjectMembershipNotFoundErrorOptions> {\n  public name = 'ProjectMembershipNotFoundError';\n\n  toString = () => `Membership not found for project.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype GithubAppInstallationNotFoundErrorOptions = {\n  project?: ObjectId;\n};\n\nexport class GithubAppInstallationNotFoundError extends FleekError<GithubAppInstallationNotFoundErrorOptions> {\n  public name = 'GithubAppInstallationNotFoundError';\n\n  toString = () => {\n    return 'No GitHub App installation found for given project.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype UserNotFoundErrorOptions = {\n  id?: string;\n  email?: string;\n}\n\nexport class UserNotFoundError extends FleekError<UserNotFoundErrorOptions> {\n  public name = 'UserNotFoundError';\n\n  toString = () => {\n    if (this.data.email) {\n      return `User with email ${this.data.email} not found.`;\n    }\n\n    return `User not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\nexport class UserAlreadyExistsError extends FleekError<Record<string, never>> {\n  public name = 'UserAlreadyExistsError';\n\n  toString = () => 'The username is already in use, please select another one';\n}\n", "import { FleekError } from './FleekError';\n\ntype Project = {\n  id?: string;\n  name?: string;\n}\n\ntype ProjectNotFoundErrorOptions = {\n  project: Project;\n};\n\nexport class ProjectNotFoundError extends FleekError<ProjectNotFoundErrorOptions> {\n  public name = 'ProjectNotFoundError';\n\n  toString = () => 'Project not found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectsNotFoundErrorOptions = Record<string, never>;\n\nexport class ProjectsNotFoundError extends FleekError<ProjectsNotFoundErrorOptions> {\n  public name = 'ProjectsNotFoundError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'No projects found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype ProjectHasDependentsErrorOptions = {\n  project: ObjectId;\n  sites: ObjectId[];\n  privateGateways: ObjectId[];\n  ipnsRecords: ObjectId[];\n};\n\nexport class ProjectHasDependentsError extends FleekError<ProjectHasDependentsErrorOptions> {\n  public name = 'ProjectHasDependentsError';\n\n  toString = () => {\n    const dependentsInfo: string[] = [];\n\n    if (this.data.sites.length > 0) {\n      dependentsInfo.push(`${this.data.sites.length} sites`);\n    }\n\n    if (this.data.privateGateways.length > 0) {\n      dependentsInfo.push(`${this.data.privateGateways.length} private gateways`);\n    }\n\n    if (this.data.ipnsRecords.length > 0) {\n      dependentsInfo.push(`${this.data.ipnsRecords.length} IPNS records`);\n    }\n\n    return `Project has assigned ${dependentsInfo.join(', ')}. You have to delete them first.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectInvalidNameErrorOptions = {\n  name: string;\n};\n\nexport class ProjectInvalidNameError extends FleekError<ProjectInvalidNameErrorOptions> {\n  public name = 'ProjectInvalidNameError';\n\n  toString = () => `The project name ${this.data.name} is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PublicKeyAlreadyExistsErrorOptions = {\n  publicKey: Record<'publicKey', string>;\n};\n\nexport class PublicKeyAlreadyExistsError extends FleekError<PublicKeyAlreadyExistsErrorOptions> {\n  public name = 'PublicKeyAlreadyExistsError';\n\n  toString = () => `Public key already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype VerificationSessionAlreadyExistsErrorOptions = Record<string, never>;\n\nexport class VerificationSessionAlreadyExistsError extends FleekError<VerificationSessionAlreadyExistsErrorOptions> {\n  public name = 'VerificationSessionAlreadyExistsError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Verification session already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UnauthenticatedErrorOptions = Record<string, never>;\n\nexport class UnauthenticatedError extends FleekError<UnauthenticatedErrorOptions> {\n  public name = 'UnauthenticatedError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `The request is not authenticated.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id: string;  \n};\n\ntype DomainZoneNotFoundErrorOptions = {\n  zone: ObjectId;\n  project?: ObjectId;\n};\n\nexport class DomainZoneNotFoundError extends FleekError<DomainZoneNotFoundErrorOptions> {\n  public name = 'DomainZoneNotFoundError';\n\n  toString = () => {\n    return 'Domain zone not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype DomainZoneHasDependentsErrorOptions = {\n  zone: ObjectId;\n};\n\nexport class DomainZoneHasDependentsError extends FleekError<DomainZoneHasDependentsErrorOptions> {\n  public name = 'DomainZoneHasDependentsError';\n\n  toString = () => 'Domain zone has assigned domains or private gateways. You have to delete them first.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype DomainZoneInPendingStateErrorOptions = {\n  zone: ObjectId;\n};\n\nexport class DomainZoneInPendingStateError extends FleekError<DomainZoneInPendingStateErrorOptions> {\n  public name = 'ZoneInPendingStateError';\n\n  toString = () => {\n    return 'Domain zone is in pending state. Please wait and try action again later.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype DomainNotFoundUnderPullzoneErrorOptions = {\n  bunnyZoneProvider: ObjectId;\n};\n\nexport class DomainNotFoundUnderPullzoneError extends FleekError<DomainNotFoundUnderPullzoneErrorOptions> {\n  public name = 'DomainNotFoundUnderPullzoneError';\n\n  toString = () => {\n    return 'Domain zone not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype DomainZoneInvalidTypeErrorOptions = {\n  zone: ObjectId;\n};\n\nexport class DomainZoneInvalidTypeError extends FleekError<DomainZoneInvalidTypeErrorOptions> {\n  public name = 'DomainZoneInvalidTypeError';\n\n  toString = () => 'Domain zone has different purpose of use.';\n}\n", "import { FleekError } from './FleekError';\n\ntype UnauthorizedErrorOptions = {\n  scopes?: string[];\n};\n\nexport class UnauthorizedError extends FleekError<UnauthorizedErrorOptions> {\n  public name = 'UnauthorizedError';\n\n  toString = () => {\n    if (this.data.scopes) {\n      return `You are not authorized to access this resource because of missing permissions: ${this.data.scopes.join(', ')}.`;\n    }\n\n    return `You are not authorized to access this resource.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekConfigInvalidContentErrorOptions = {\n  configPath: string;\n  validationResult?: string;\n};\n\nexport class FleekConfigInvalidContentError extends FleekError<FleekConfigInvalidContentErrorOptions> {\n  public name = 'FleekConfigInvalidContentError';\n\n  toString = () => {\n    if (this.data.validationResult) {\n      return `Validation of loaded ${this.data.configPath} failed. ${this.data.validationResult}`;\n    }\n\n    return `Loaded ${this.data.configPath} file is corrupted.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekConfigMissingFileErrorOptions = {\n  configPath?: string;\n};\n\nexport class FleekConfigMissingFileError extends FleekError<FleekConfigMissingFileErrorOptions> {\n  public name = 'FleekConfigMissingFileError';\n\n  toString = () => {\n    return `Unable to access or find the configuration file${(this.data.configPath && ' ' + this.data.configPath + '.') || '.'}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Application = {\n  id?: string;\n  name?: string;\n}\n\ntype ApplicationWhitelistDomainDuplicityErrorOptions = {\n  application: Application;\n  whitelistDomains: string[];\n};\n\nexport class ApplicationWhitelistDomainDuplicityError extends FleekError<ApplicationWhitelistDomainDuplicityErrorOptions> {\n  public name = 'ApplicationWhitelistDomainDuplicityError';\n\n  toString = () => `Application ${this.data.application.name} doesn't have unique white label domains.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Application = {\n  id?: string;\n  name?: string;  \n};\n\ntype ApplicationAlreadyExistsErrorOptions = {\n  application: Application;\n};\n\nexport class ApplicationAlreadyExistsError extends FleekError<ApplicationAlreadyExistsErrorOptions> {\n  public name = 'ApplicationAlreadyExistsError';\n\n  toString = () => `Application ${this.data.application.name} already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\nexport class ApplicationsNotFoundError extends FleekError<object> {\n  public name = 'ApplicationsNotFoundError';\n\n  toString = () => 'No applications found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype Application = {\n  id?: string;\n  name?: string;\n}\n\ntype ApplicationNotFoundErrorOptions = {\n  application: Application;\n};\n\nexport class ApplicationNotFoundError extends FleekError<ApplicationNotFoundErrorOptions> {\n  public name = 'ApplicationNotFoundError';\n\n  toString = () => 'Application not found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ApplicationNameInvalidErrorOptions = {\n  name: string;\n};\n\nexport class ApplicationNameInvalidError extends FleekError<ApplicationNameInvalidErrorOptions> {\n  public name = 'ApplicationNameInvalidError';\n\n  toString = () => `The application name ${this.data.name} is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype EnsRecord = ObjectId & {\n  name?: string;\n}\n\ntype EnsRecordNotFoundErrorOptions = {\n  ensRecord: EnsRecord;\n  site?: ObjectId;\n};\n\nexport class EnsRecordNotFoundError extends FleekError<EnsRecordNotFoundErrorOptions> {\n  public name = 'EnsRecordNotFoundError';\n\n  toString = () => {\n    if (this.data.site?.id) {\n      return `No site associated with this ENS record.`;\n    }\n\n    return `ENS record was not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype EnsRecord = ObjectId & {\n  name?: string;\n}\n\ntype EnsRecordAlreadyExistsInProjectErrorOptions = {\n  ensRecord: EnsRecord;\n  project: ObjectId;\n};\n\nexport class EnsRecordAlreadyExistsInProjectError extends FleekError<EnsRecordAlreadyExistsInProjectErrorOptions> {\n  public name = 'EnsRecordAlreadyExistsInProjectError';\n\n  toString = () => {\n    return `ENS record already exists under the project.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype EnsRecord = {\n  'name': string;\n}\n\ntype EnsNameInvalidErrorOptions = {\n  ensRecord: EnsRecord;\n};\n\nexport class EnsNameInvalidError extends FleekError<EnsNameInvalidErrorOptions> {\n  public name = 'EnsNameInvalidError';\n\n  toString = () => {\n    return `ENS record name \"${this.data.ensRecord.name}\" is invalid.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype EnsRecord = {\n  id?: string;\n  status?: string;\n}\ntype EnsRecordInPendingStateErrorOptions = {\n  ensRecord: EnsRecord;\n};\n\nexport class EnsRecordInPendingStateError extends FleekError<EnsRecordInPendingStateErrorOptions> {\n  public name = 'EnsRecordInPendingStateError';\n\n  toString = () => {\n    return 'ENS Record is in pending state. Please wait and try action again later.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidPersonalAccessTokenErrorOptions = {\n  personalAccessToken: string;\n};\n\nexport class InvalidPersonalAccessTokenError extends FleekError<InvalidPersonalAccessTokenErrorOptions> {\n  public name = 'InvalidPersonalAccessTokenError';\n\n  toString = () => 'Personal access token is invalid.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype PersonalAccessTokenNotFoundErrorOptions = {\n  personalAccessToken: ObjectId;\n};\n\nexport class PersonalAccessTokenNotFoundError extends FleekError<PersonalAccessTokenNotFoundErrorOptions> {\n  public name = 'PersonalAccessTokenNotFoundError';\n\n  toString = () => `Personal access token with ID ${this.data.personalAccessToken.id} not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PrivateGateway = {\n  id?: string;\n  slug?: string;\n  name?: string;  \n};\n\ntype PrivateGatewayNotFoundErrorOptions = {\n  privateGateway: PrivateGateway;\n};\n\nexport class PrivateGatewayNotFoundError extends FleekError<PrivateGatewayNotFoundErrorOptions> {\n  public name = 'PrivateGatewayNotFoundError';\n\n  toString = () => `Private gateway not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PrivateGateway = {\n  id?: string;\n  name?: string;\n}\n\ntype PrivateGatewayAlreadyExistsErrorOptions = {\n  privateGateway: PrivateGateway;\n};\n\nexport class PrivateGatewayAlreadyExistsError extends FleekError<PrivateGatewayAlreadyExistsErrorOptions> {\n  public name = 'PrivateGatewayAlreadyExistsError';\n\n  toString = () => `Private gateway already exists. Please choose different name for the private gateway.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PrivateGatewayNameInvalidErrorOptions = {\n  name: string;\n};\n\nexport class PrivateGatewayNameInvalidError extends FleekError<PrivateGatewayNameInvalidErrorOptions> {\n  public name = 'PrivateGatewayNameInvalidError';\n\n  toString = () => `The private gateway name ${this.data.name} is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\nexport class PrivateGatewaysNotFoundError extends FleekError<Record<string, never>> {\n  public name = 'PrivateGatewaysNotFoundError';\n\n  toString = () => 'No private gateways found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype Template = {\n  id?: string;\n  name?: string;\n}\n\ntype TemplateAlreadyExistsErrorOptions = {\n  template: Template;\n};\n\nexport class TemplateAlreadyExistsError extends FleekError<TemplateAlreadyExistsErrorOptions> {\n  public name = 'TemplateAlreadyExistsError';\n\n  toString = () => `Template already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype TemplateNotFoundErrorOptions = {\n  template: ObjectId;\n};\n\nexport class TemplateNotFoundError extends FleekError<TemplateNotFoundErrorOptions> {\n  public name = 'TemplateNotFoundError';\n\n  toString = () => `Template not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UserHasNoAccessToAnotherUserErrorOptions = Record<string, never>;\n\nexport class UserHasNoAccessToAnotherUserError extends FleekError<UserHasNoAccessToAnotherUserErrorOptions> {\n  public name = 'UserHasNoAccessToAnotherUserError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'You don`t have access to user you try to fetch data for.';\n}\n", "import { FleekError } from './FleekError';\n\ntype Framework = {\n  id?: string;\n  name?: string;\n}\n\ntype SiteFrameworkAlreadyExistsErrorOptions = {\n  framework: Framework;\n};\n\nexport class SiteFrameworkAlreadyExistsError extends FleekError<SiteFrameworkAlreadyExistsErrorOptions> {\n  public name = 'SiteFrameworkAlreadyExistsError';\n\n  toString = () => `Site framework already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Framework = {\n  id?: string;\n  name?: string;\n}\ntype SiteFrameworkNotFoundErrorOptions = {\n  framework: Framework;\n};\n\nexport class SiteFrameworkNotFoundError extends FleekError<SiteFrameworkNotFoundErrorOptions> {\n  public name = 'SiteFrameworkNotFoundError';\n\n  toString = () => `Site framework not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype TemplateCategoryNotFoundErrorOptions = {\n  category: ObjectId;\n};\n\nexport class TemplateCategoryNotFoundError extends FleekError<TemplateCategoryNotFoundErrorOptions> {\n  public name = 'TemplateCategoryNotFoundError';\n\n  toString = () => `Template category not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype TemplateNotFoundErrorOptions = {\n  template: ObjectId;\n};\n\nexport class TemplateDeploymentNotFoundError extends FleekError<TemplateNotFoundErrorOptions> {\n  public name = 'TemplateDeploymentNotFoundError';\n\n  toString = () => `Template deployment not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype ProjectMembershipHasInefficientRoleErrorOptions = {\n  user: ObjectId;\n  project: ObjectId;\n};\n\nexport class ProjectMembershipHasInefficientRoleError extends FleekError<ProjectMembershipHasInefficientRoleErrorOptions> {\n  public name = 'ProjectMembershipHasInefficientRoleError';\n\n  toString = () => `Membership has inefficient role for this action.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype SecretGroupNotFoundErrorOptions = {\n  secretGroup: ObjectId;\n};\n\nexport class SecretGroupNotFoundError extends FleekError<SecretGroupNotFoundErrorOptions> {\n  public name = 'SecretGroupNotFoundError';\n\n  toString = () => {\n    return 'Secret group was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype SecretNotFoundErrorOptions = {\n  secret: ObjectId;\n};\n\nexport class SecretNotFoundError extends FleekError<SecretNotFoundErrorOptions> {\n  public name = 'SecretNotFoundError';\n\n  toString = () => {\n    return 'Secret was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype SecretVisibilityAlreadyEncryptedErrorOptions = {\n  secret: ObjectId;\n};\n\nexport class SecretVisibilityAlreadyEncryptedError extends FleekError<SecretVisibilityAlreadyEncryptedErrorOptions> {\n  public name = 'SecretVisibilityAlreadyEncryptedError';\n\n  toString = () => {\n    return 'You cannot change visibility of already encrypted secret.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype SecretKeyAlreadyExistsErrorOptions = Record<string, never>;\n\nexport class SecretKeyAlreadyExistsError extends FleekError<SecretKeyAlreadyExistsErrorOptions> {\n  public name = 'SecretKeyAlreadyExistsError';\n\n  toString = () => {\n    return 'Variable with this key is already set.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Secret = {\n  id?: string;\n  groupId?: string;\n  key?: string;\n};\n\ntype SecretFailToEncryptErrorOptions = {\n  secret: Secret;\n};\n\nexport class SecretFailToEncryptError extends FleekError<SecretFailToEncryptErrorOptions> {\n  public name = 'SecretFailToEncryptError';\n\n  toString = () => {\n    return 'Failed to encrypt secret.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Pin = {\n  id?: string;\n  cid?: string;\n  path?: string;\n  projectId?: string;\n};\n\ntype PinNotFoundErrorOptions = {\n  pin: Pin;\n};\n\nexport class PinNotFoundError extends FleekError<PinNotFoundErrorOptions> {\n  public name = 'PinNotFoundError';\n\n  toString = () => {\n    return 'Pin was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Pin = {\n  id?: string;\n  cid?: string;\n  path?: string;\n  projectId?: string;\n};\n\ntype PinAlreadyExistsInProjectErrorOptions = {\n  pin: Pin;\n};\n\nexport class PinAlreadyExistsInProjectError extends FleekError<PinAlreadyExistsInProjectErrorOptions> {\n  public name = 'PinAlreadyExistsInProjectError';\n\n  toString = () => {\n    return `Pin with the same '${this.data.pin.cid ? 'cid' : 'path'}' already exists within the project.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype UnstoppableDeploymentErrorOptions = {\n  deployment: ObjectId;\n};\n\nexport class UnstoppableDeploymentError extends FleekError<UnstoppableDeploymentErrorOptions> {\n  public name = 'UnstoppableDeploymentError';\n\n  toString = () => `Deployment cannot be stopped.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype SiteDeploymentNotReleasedErrorOptions = {\n  deployment: ObjectId;\n};\n\nexport class SiteDeploymentNotReleasedError extends FleekError<SiteDeploymentNotReleasedErrorOptions> {\n  public name = 'SiteDeploymentNotReleasedError';\n\n  toString = () => `Deployment not released.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidDeploymentTriggerErrorOptions = Record<string, never>;\n\nexport class InvalidDeploymentTriggerError extends FleekError<InvalidDeploymentTriggerErrorOptions> {\n  public name = 'InvalidDeploymentTriggerError';\n\n  toString = () => `Deployment can not be triggered, source provider integrations missing.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype IpfsGatewayContentUnreachableErrorOptions = {\n  url: string;\n};\n\nexport class IpfsGatewayContentUnreachableError extends FleekError<IpfsGatewayContentUnreachableErrorOptions> {\n  public name = 'IpfsGatewayContentUnreachableError';\n\n  toString = () => 'Cannot get IPFS content through Fleek gateway.';\n}\n", "import { FleekError } from './FleekError';\n\ntype Invitation = {\n  id?: string;\n  hash?: string;\n}\n\ntype InvitationNotFoundErrorOptions = {\n  invitation: Invitation;\n};\n\nexport class InvitationNotFoundError extends FleekError<InvitationNotFoundErrorOptions> {\n  public name = 'InvitationNotFoundError';\n\n  toString = () => {\n    return 'Invitation was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\nexport class MigrationTokenInvalidError extends FleekError<object> {\n  public name = 'MigrationTokenInvalidError';\n\n  toString = () => 'Migration token is invalid or expired.';\n}\n", "import { FleekError } from './FleekError';\n\nexport class MigrationRequestsAlreadyExistError extends FleekError<object> {\n  public name = 'MigrationRequestsAlreadyExistError';\n\n  toString = () => `All migration requests specified in token are either completed or in progress.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype MigrationRequestNotFoundErrorOptions = {\n  migrationRequest: ObjectId;\n};\n\nexport class MigrationRequestNotFoundError extends FleekError<MigrationRequestNotFoundErrorOptions> {\n  public name = 'MigrationRequestNotFoundError';\n\n  toString = () => `Migration request ${this.data.migrationRequest.id} not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype MigrationRequestInPendingStateErrorOptions = {\n  migrationRequest: ObjectId;\n};\n\nexport class MigrationRequestInPendingStateError extends FleekError<MigrationRequestInPendingStateErrorOptions> {\n  public name = 'MigrationRequestInPendingStateError';\n\n  toString = () => 'Migration request is in pending state. Please wait and try action again later.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id: string | null;\n}\n\ntype User = ObjectId & {\n  email: string | null;\n}\n\ntype ProjectInvitationAlreadyExistErrorOptions = {\n  user: User;\n  project: ObjectId;\n};\n\nexport class ProjectInvitationAlreadyExistError extends FleekError<ProjectInvitationAlreadyExistErrorOptions> {\n  public name = 'ProjectInvitationAlreadyExistError';\n\n  toString = () => `Project invitation with email ${this.data.user.email} for this project already exist.`;\n}\n", "import { FleekError } from './FleekError';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ProjectMembershipAlreadyExistErrorArgs = Record<string, any>;\n\nexport class ProjectMembershipAlreadyExistError extends FleekError<ProjectMembershipAlreadyExistErrorArgs> {\n  public name = 'ProjectMembershipAlreadyExistError';\n\n  toString = () => `Project membership already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype ProjectMembershipNoOwnersErrorOptions = {\n  project: ObjectId;\n  user: ObjectId;\n};\n\nexport class ProjectMembershipNoOwnersError extends FleekError<ProjectMembershipNoOwnersErrorOptions> {\n  public name = 'ProjectMembershipNoOwnersError';\n\n  toString = () => `Each project must have at least OWNER-role one membership.`;\n}\n", "import { FleekError } from './FleekError';\n\nexport class UploadedS3KeyNotFoundError extends FleekError<Record<string, never>> {\n  public name = 'UploadedS3KeyNotFoundError';\n\n  toString = () => 'Uploaded S3 Key not found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype PathIsNotADirectoryErrorOptions = {\n  path: string;\n};\n\nexport class PathIsNotADirectoryError extends FleekError<PathIsNotADirectoryErrorOptions> {\n  public name = 'PathIsNotADirectoryError';\n\n  toString = () => {\n    return `Given path ${this.data.path} is not a directory.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FunctionFields = {\n  name?: string;\n  slug?: string;\n}\n\ntype FleekFunctionAlreadyExistsErrorOptions = {\n  function: FunctionFields;\n};\n\nexport class FleekFunctionAlreadyExistsError extends FleekError<FleekFunctionAlreadyExistsErrorOptions> {\n  public name = 'FleekFunctionAlreadyExistsError';\n\n  toString = () => {    \n    if ('name' in this.data.function || 'slug' in this.data.function) {\n      return `Function ${this.data.function.name || this.data.function.slug} already exists.`;\n    }\n\n    return `Unexpected Function data structure ${JSON.stringify(this.data.function)}`\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FunctionFields = {\n  id?: string;\n  name?: string;  \n};\n\ntype FleekFunctionNotFoundErrorOptions = {\n  function?: FunctionFields;\n};\n\nexport class FleekFunctionNotFoundError extends FleekError<FleekFunctionNotFoundErrorOptions> {\n  public name = 'FleekFunctionNotFoundError';\n\n  toString = () => {\n    if (this.data.function?.name) {\n      return `Function ${this.data.function.name} not found.`;\n    }\n\n    return `Function not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype FleekFunctionDeploymentNotFoundErrorOptions = {\n  deployment?: ObjectId;\n};\n\nexport class FleekFunctionDeploymentNotFoundError extends FleekError<FleekFunctionDeploymentNotFoundErrorOptions> {\n  public name = 'FleekFunctionDeploymentNotFoundError';\n\n  toString = () => {\n    return `Deployment not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype FleekFunctionsNotFoundErrorOptions = {};\n\nexport class FleekFunctionsNotFoundError extends FleekError<FleekFunctionsNotFoundErrorOptions> {\n  public name = 'FleekFunctionsNotFoundError';\n\n  toString = () => 'No functions found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionPathNotValidErrorOptions = {\n  path: string;\n};\n\nexport class FleekFunctionPathNotValidError extends FleekError<FleekFunctionPathNotValidErrorOptions> {\n  public name = 'FleekFunctionPathNotValidError';\n\n  toString = () => {\n    return `File or folder at path, ${this.data.path} is invalid. Please refer to our documentation for more information on function file conventions.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionNameNotValidErrorOptions = {\n  name: string;\n};\n\nexport class FleekFunctionNameNotValidError extends FleekError<FleekFunctionNameNotValidErrorOptions> {\n  public name = 'FleekFunctionNameNotValidError';\n\n  toString = () => {\n    return `The name, ${this.data.name}, is invalid`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionStatusNotValidErrorOptions = Record<string, never>;\n\nexport class FleekFunctionStatusNotValidError extends FleekError<FleekFunctionStatusNotValidErrorOptions> {\n  public name = 'FleekFunctionStatusNotValidError';\n\n  toString = () => {\n    return `The function status is invalid. Must be one of ACTIVE and INACTIVE`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionSlugNotValidErrorOptions = {\n  slug: string;\n};\n\nexport class FleekFunctionSlugNotValidError extends FleekError<FleekFunctionSlugNotValidErrorOptions> {\n  public name = 'FleekFunctionSlugNotValidError';\n\n  toString = () => {\n    return `The slug, ${this.data.slug}, is invalid`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype MaintenanceErrorOptions = Record<string, never>;\n\nexport class MaintenanceError extends FleekError<MaintenanceErrorOptions> {\n  public name = 'MaintenanceError';\n\n  public extensions = {\n    http: {\n      status: 503, // Service Unavailable\n    },\n  };\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'The platform is under maintenance. Please try again later.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype UserHasNoAccessToFeatureErrorOptions = {\n  user: ObjectId;\n  feature: { name: string };\n};\n\nexport class UserHasNoAccessToFeatureError extends FleekError<UserHasNoAccessToFeatureErrorOptions> {\n  public name = 'UserHasNoAccessToFeatureError';\n\n  toString = () => `User has no access to this feature.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidCidErrorOptions = {\n  name: string;\n};\n\nexport class InvalidCidError extends FleekError<InvalidCidErrorOptions> {\n  public name = 'InvalidCidError';\n\n  toString = () => `The cid ${this.data.name} is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ValidationErrorOptions = Record<string, string>;\n\nexport class ValidationError extends FleekError<ValidationErrorOptions> {\n  public name = 'ValidationError';\n\n  toString = () => `${JSON.stringify(this.data)}`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UserInBlocklistErrorOptions = Record<string, never>;\n\nexport class UserInBlocklistError extends FleekError<UserInBlocklistErrorOptions> {\n  public name = 'UserInBlocklistError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'User is in the blocklist.';\n}\n", "import { FleekError } from './FleekError';\n\ntype EnsNameContentHashCodecMistmatchErrorOptions = {\n  codec: string;\n};\n\nexport class EnsNameContentHashCodecMistmatchError extends FleekError<EnsNameContentHashCodecMistmatchErrorOptions> {\n  public name = 'EnsNameContentHashCodecMistmatchError';\n\n  toString = () => {\n    return `The content hash does not match or does not corresponds to ${this.data.codec} protocol`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype EnsNameContentHashUndefinedErrorOptions = {\n  ensRecord: Record<'name', string>;\n};\n\nexport class EnsNameContentHashUndefinedError extends FleekError<EnsNameContentHashUndefinedErrorOptions> {\n  public name = 'EnsNameContentHashUndefinedError';\n\n  toString = () => {\n    return `The content hash for ENS record name \"${this.data.ensRecord.name}\" is undefined.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype DnsConfigAlreadyExistsErrorOptions = {\n  name: string;\n};\n\nexport class DnsConfigAlreadyExistsError extends FleekError<DnsConfigAlreadyExistsErrorOptions> {\n  public name = 'DnsConfigAlreadyExistsError';\n\n  toString = () => `DNS config already exists for \"${this.data.name}\".`;\n}\n", "import { FleekError } from './FleekError';\n\ntype DnsConfigNotFoundErrorOptions = {\n  name: string;\n};\n\nexport class DnsConfigNotFoundError extends FleekError<DnsConfigNotFoundErrorOptions> {\n  public name = 'DnsConfigNotFoundError';\n\n  toString = () => `DNS config for the \"${this.data.name}\" name doesn't exist.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype TwoFactorSecretKeyFailedToEncryptErrorOptions = Record<string, never>;\n\nexport class TwoFactorSecretKeyFailedToEncryptError extends FleekError<TwoFactorSecretKeyFailedToEncryptErrorOptions> {\n  public name = 'TwoFactorSecretKeyFailedToEncryptError';\n\n  toString = () => 'Failed to encrypt 2FA secret key.';\n}\n", "import { FleekError } from './FleekError';\n\ntype UserSecretKeyAlreadyExistsErrorOptions = Record<string, never>;\n\nexport class UserSecretKeyAlreadyExistsError extends FleekError<UserSecretKeyAlreadyExistsErrorOptions> {\n  public name = 'UserSecretKeyAlreadyExistsError';\n\n  toString = () => 'A secret key for this user already exists.';\n}\n", "import { FleekError } from './FleekError';\n\ntype UserSecretKeyNotFoundErrorOptions = Record<string, never>;\n\nexport class UserSecretKeyNotFoundError extends FleekError<UserSecretKeyNotFoundErrorOptions> {\n  public name = 'UserSecretKeyNotFoundError';\n\n  toString = () => 'A secret key for this user not found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype TwoFactorSecretKeyFailedToDecryptErrorOptions = Record<string, never>;\n\nexport class TwoFactorSecretKeyFailedToDecryptError extends FleekError<TwoFactorSecretKeyFailedToDecryptErrorOptions> {\n  public name = 'TwoFactorSecretKeyFailedToDecryptError';\n\n  toString = () => 'Failed to decrypt 2FA secret key.';\n}\n", "import { FleekError } from './FleekError';\n\ntype RecoveryCodesAlreadyExistsErrorOptions = Record<string, never>;\n\nexport class RecoveryCodesAlreadyExistsError extends FleekError<RecoveryCodesAlreadyExistsErrorOptions> {\n  public name = 'RecoveryCodesAlreadyExistsError';\n\n  toString = () => 'Recovery codes already exists.';\n}\n", "import { FleekError } from './FleekError';\n\ntype WriteFileFromStreamErrorOptions = Record<string, never>;\n\nexport class WriteFileFromStreamError extends FleekError<WriteFileFromStreamErrorOptions> {\n  public name = 'WriteFileFromStreamError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `There was an error while writing file from stream in globSource`;\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidTOTPTokenErrorOptions = {\n  token: string;\n};\n\nexport class InvalidTOTPTokenError extends FleekError<InvalidTOTPTokenErrorOptions> {\n  public name = 'InvalidTOTPTokenError';\n\n  toString = () => 'TOTP token is invalid.';\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidRecoveryCodeErrorOptions = {\n  code: string;\n};\n\nexport class InvalidRecoveryCodeError extends FleekError<InvalidRecoveryCodeErrorOptions> {\n  public name = 'InvalidRecoveryCodeError';\n\n  toString = () => 'Recovery code is invalid.';\n}\n", "import { FleekError } from './FleekError';\n\ntype MissingTwoFactorProtectionCredentialsErrorOptions = Record<string, never>;\n\nexport class MissingTwoFactorProtectionCredentialsError extends FleekError<MissingTwoFactorProtectionCredentialsErrorOptions> {\n  public name = 'MissingTwoFactorProtectionCredentialsError';\n\n  toString = () => 'Missing two factor protection credentials. Either a token or a recovery key should be provided.';\n}\n", "import { FleekError } from './FleekError';\n\nexport class DeploymentInProgressError extends FleekError<object> {\n  public name = 'DeploymentInProgressError';\n\n  toString = () => 'Deployment is already in progress.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype PullzoneNotFoundForZoneIdErrorOptions = ObjectId;\n\nexport class PullzoneNotFoundForZoneIdError extends FleekError<PullzoneNotFoundForZoneIdErrorOptions> {\n  public name = 'PullzoneNotFoundForZoneIdError';\n\n  toString = () => {\n    return `The pullzone is not found for zone id: ${this.data.id}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype RecoveryCodeFailedToEncryptErrorOptions = Record<string, never>;\n\nexport class RecoveryCodeFailedToEncryptError extends FleekError<RecoveryCodeFailedToEncryptErrorOptions> {\n  public name = 'RecoveryCodeFailedToEncryptError';\n\n  toString = () => 'Failed to encrypt recovery code.';\n}\n", "import { FleekError } from './FleekError';\n\ntype RecoveryCodeFailedToDecryptErrorOptions = Record<string, never>;\n\nexport class RecoveryCodeFailedToDecryptError extends FleekError<RecoveryCodeFailedToDecryptErrorOptions> {\n  public name = 'RecoveryCodeFailedToDecryptError';\n\n  toString = () => 'Failed to decrypt recovery code.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n}\n\ntype PermissionGroupNotFoundErrorOptions = {\n  permissionGroup: ObjectId;\n};\n\nexport class PermissionGroupNotFoundError extends FleekError<PermissionGroupNotFoundErrorOptions> {\n  public name = 'PermissionGroupNotFoundError';\n\n  toString = () => 'Permission group not found';\n}\n", "import { FleekError } from './FleekError';\n\ntype PermissionScopeErrorOptions = {\n  scope: string;\n};\n\nexport class PermissionScopeError extends FleekError<PermissionScopeErrorOptions> {\n  public name = 'PermissionScopeError';\n\n  toString = () => `Permission scope ${this.data.scope} doesn't exist.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidAdminAccessTokenErrorOptions = {\n  adminAccessToken: string;\n};\n\nexport class InvalidAdminAccessTokenError extends FleekError<InvalidAdminAccessTokenErrorOptions> {\n  public name = 'InvalidAdminAccessTokenError';\n\n  toString = () => 'Admin access token is invalid.';\n}\n", "import { FleekError } from './FleekError';\n\nexport class MissingExpectedDataError extends FleekError<void> {\n  public name = 'MissingExpectedDataError';\n\n  toString = () => 'Oops! This is embarassing but the app is missing important data. Please report this issue to the team.'\n}\n", "import { FleekError } from './FleekError';\n\nexport class EnvNotSetError extends FleekError<string> {\n  public name = 'EnvNotSetError';\n\n  toString = () =>\n      this.data\n      ? `Environment variable \"${this.data}\" is not set.`\n      : `Missing the defined object key pair values.`\n}\n", "import { FleekError } from './FleekError';\n\ntype GitSecretsFailedToEncryptErrorOptions = Record<string, never>;\n\nexport class GitSecretsFailedToEncryptError extends FleekError<GitSecretsFailedToEncryptErrorOptions> {\n  public name = 'GitSecretsFailedToEncryptError';\n\n  toString = () => 'Failed to encrypt Git Secrets.';\n}\n", "import { FleekError } from './FleekError';\n\ntype GitConfigFailedToParseErrorOptions = Record<string, never>;\n\nexport class GitConfigFailedToParseError extends FleekError<GitConfigFailedToParseErrorOptions> {\n  public name = 'GitSecretsFailedToEncryptError';\n\n  toString = () => 'Failed to parse Git Configs.';\n}\n", "import { FleekError } from './FleekError';\n\ntype PathIsNotAFileErrorOptions = {\n  path: string;\n};\n\nexport class PathIsNotAFileError extends FleekError<PathIsNotAFileErrorOptions> {\n  public name = 'PathIsNotAFileError';\n\n  toString = () => {\n    return `Given path ${this.data.path} is not a file.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionBundlingFailedErrorOptions = {\n  error: string;\n};\n\nexport class FleekFunctionBundlingFailedError extends FleekError<FleekFunctionBundlingFailedErrorOptions> {\n  public name = 'FleekFunctionBundlingFailedError';\n\n  toString = () => {\n    return `Bundle creation failed. For information on supported packages, please consult our documentation.\\nError: ${this.data.error}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype GitIntegrationNotFoundErrorOptions = { id: string } | { siteId: string };\n\nexport class GitIntegrationNotFoundError extends FleekError<GitIntegrationNotFoundErrorOptions> {\n  public name = 'GitIntegrationNotFoundError';\n\n  toString = () => {\n    let infix = '';\n\n    if ('siteId' in this.data) {\n      infix = `for site ${this.data.siteId}`;\n    } else if ('id' in this.data) {\n      infix = `with id ${this.data.id}`;\n    }\n\n    return `Git Integration ${infix} not found`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype GitProviderNotFoundErrorOptions = {\n  providerId?: string;\n};\n\nexport class GitProviderNotFoundError extends FleekError<GitProviderNotFoundErrorOptions> {\n  public name = 'GitProviderNotFoundError';\n\n  toString = () => {\n    return `No Git Provider found with id: ${this.data.providerId}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Values = {\n  receivedValue: string;\n  expectedValues: string[];\n};\n\nexport class ExpectedOneOfValuesError extends FleekError<Values> {\n  public name = 'ExpectedOneOfValuesError';\n\n  toString = () => `Expected one of ${this.data.expectedValues.join(', ')} but got ${this.data.receivedValue}`;\n}\n", "import { FleekError } from './FleekError';\n\nexport class InvalidJSONFormat extends FleekError<void> {\n  public name = 'InvalidJSONFormat';\n\n  toString = () => `Invalid JSON format.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype StorageUploadFileCountQuotaExceededErrorOptions = {\n  quota?: number;\n};\n\nexport class StorageUploadFileCountQuotaExceededError extends FleekError<StorageUploadFileCountQuotaExceededErrorOptions> {\n  public name = 'StorageUploadFileCountQuotaExceededError';\n\n  constructor(data: StorageUploadFileCountQuotaExceededErrorOptions = {}) {\n    super(data);\n  }\n\n  toString = () => {\n    if (this.data?.quota) {\n      return `Sorry, you have reached your daily limit of ${this.data.quota} file uploads. We are unable to process your request.`;\n    }\n\n    return 'You have exceeded your file upload limit for the past 24 hours.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype StorageUploadTotalSizeQuotaExceededErrorOptions = {\n  quota?: number;\n};\n\nexport class StorageUploadTotalSizeQuotaExceededError extends FleekError<StorageUploadTotalSizeQuotaExceededErrorOptions> {\n  public name = 'StorageUploadTotalSizeQuotaExceededError';\n\n  constructor(data: StorageUploadTotalSizeQuotaExceededErrorOptions = {}) {\n    super(data);\n  }\n\n  toString = () => {\n    if (this.data?.quota) {\n      return `Sorry, you have reached your daily upload limit of ${Math.round(\n        this.data.quota / 1000 ** 3\n      )}GB. We are unable to process your request.`;\n    }\n\n    return 'You have exceeded your storage upload quota for the last 24 hours.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype GitProviderNotSupportedErrorOptions = {\n  provider: string;\n};\n\nexport class GitProviderNotSupportedError extends FleekError<GitProviderNotSupportedErrorOptions> {\n  public name = 'GitProviderNotSupportedError';\n\n  toString = () => `Git provider: ${this.data.provider} not Supported`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitProviderNotAuthorizedErrorOptions = {\n  provider: string;\n};\n\nexport class GitProviderNotAuthorizedError extends FleekError<GitProviderNotAuthorizedErrorOptions> {\n  public name = 'GitProviderNotAuthorizedError';\n\n  toString = () => `The user has not authorized the Git provider: ${this.data.provider}`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitAccessTokenInvalidErrorOptions = {\n  projectId?: string;\n};\n\nexport class GitAccessTokenInvalidError extends FleekError<GitAccessTokenInvalidErrorOptions> {\n  public name = 'GitAccessTokenInvalidError';\n\n  toString = () => {\n    return 'The git access token for the user is invalid';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype QueuedDeploymentsLimitErrorOptions = {\n  limit: number;\n};\n\nexport class QueuedDeploymentsLimitError extends FleekError<QueuedDeploymentsLimitErrorOptions> {\n  public name = 'QueuedDeploymentsLimitError';\n\n  toString = () => `You've reached the limit of ${this.data.limit} queued deployments.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitIntegrationInstallationConflictErrorOptions = Record<string, never>;\n\nexport class GitIntegrationInstallationConflictError extends FleekError<GitIntegrationInstallationConflictErrorOptions> {\n  public name = 'GitIntegrationInstallationConflictError';\n\n  toString = () => `The Git Integration installation for this provider already exists in this project`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitLinkMultipleAccountErrorOptions = Record<string, never>;\n\nexport class GitLinkMultipleAccountError extends FleekError<GitLinkMultipleAccountErrorOptions> {\n  public name = 'GitLinkMultipleAccountError';\n\n  toString = () => `Oops! You already have a Git profile linked to your Fleek account. We don't allow multiple connections`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitRepoByNameAndOwnerNotFoundErrorOptions = {\n  repo: string;\n  owner: string;\n};\n\nexport class GitRepoByNameAndOwnerNotFoundError extends FleekError<GitRepoByNameAndOwnerNotFoundErrorOptions> {\n  public name = 'GitRepoByNameAndOwnerNotFoundError';\n\n  toString = () => `Git repo \"${this.data.owner}/${this.data.repo}\" not found`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitAccessTokenNotFoundErrorOptions = Record<never, never>;\n\nexport class GitAccessTokenNotFoundError extends FleekError<GitAccessTokenNotFoundErrorOptions> {\n  public name = 'GitAccessTokenNotFoundError';\n\n  toString = () => {\n    return 'The git access token for the user is not found';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FolderNotFoundErrorOptions = {\n  folder: { id?: string; path?: string };\n};\n\nexport class FolderNotFoundError extends FleekError<FolderNotFoundErrorOptions> {\n  public name = 'FolderNotFoundError';\n\n  toString = () => `Folder was not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype FolderAlreadyExistsErrorOptions = {\n  folder: { parentFolderId: string | null; name: string };\n};\n\nexport class FolderAlreadyExistsError extends FleekError<FolderAlreadyExistsErrorOptions> {\n  public name = 'FolderAlreadyExistsError';\n\n  toString = () =>\n    `Folder ${this.data.folder.name} already exists in ${this.data.folder.parentFolderId ? 'parent' : 'root project'} folder.`;\n}\n", "import { FleekError } from './FleekError';\n\nexport type FolderNameContainsReservedWordErrorOptions = {\n  name: string;\n};\n\nexport class FolderNameContainsReservedWordError extends FleekError<FolderNameContainsReservedWordErrorOptions> {\n  public name = 'FolderNameContainsReservedWorkError';\n\n  toString = () => `Folder name ${this.data.name} is reserved word and you cannot use it.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PinsNotFoundErrorOptions = {\n  filename?: string;\n};\n\nexport class PinsNotFoundError extends FleekError<PinsNotFoundErrorOptions> {\n  public name = 'PinsNotFoundError';\n\n  toString = () => {\n    return 'No pins found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype SiteCreationFailedErrorOptions = Record<string, never>;\n\nexport class SiteCreationFailedError extends FleekError<SiteCreationFailedErrorOptions> {\n  public name = 'SiteCreationFailedError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Site creation failed.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionInvalidWasmCodeErrorOptions = Record<string, never>;\n\nexport class FleekFunctionInvalidWasmCodeError extends FleekError<FleekFunctionInvalidWasmCodeErrorOptions> {\n  public name = 'FleekFunctionInvalidWasmCodeError';\n\n  toString = () => {\n    return `Fleek function encountered corrupt or invalid WASM code.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionWasmEncryptionFailedErrorOptions = Record<string, never>;\n\nexport class FleekFunctionWasmEncryptionFailedError extends FleekError<FleekFunctionWasmEncryptionFailedErrorOptions> {\n  public name = 'FleekFunctionWasmEncryptionFailedError';\n\n  toString = () => {\n    return `Unable to encrypt WASM code for Fleek function`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype UploadProxyStoreAsCarErrorOptions = Record<string, never>;\n\nexport class UploadProxyStoreAsCarError extends FleekError<UploadProxyStoreAsCarErrorOptions> {\n  public name = 'UploadProxyStoreAsCarError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Failed to Store as a CAR file.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UploadProxyUploadFileErrorOptions = Record<string, never>;\n\nexport class UploadProxyUploadFileError extends FleekError<UploadProxyUploadFileErrorOptions> {\n  public name = 'UploadProxyUploadFileError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Failed to Upload file.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype IpfsDenylistUpdateWorkflowTriggerFailedErrorOptions = {\n  error: string;\n};\n\nexport class IpfsDenylistUpdateWorkflowTriggerFailedError extends FleekError<IpfsDenylistUpdateWorkflowTriggerFailedErrorOptions> {\n  public name = 'IpfsDenylistUpdateWorkflowTriggerFailedError';\n\n  toString = () => {\n    return `Failed to trigger IPFS denylist update workflow: ${this.data.error}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectSiteLimitExceededErrorOptions = Record<string, never>;\n\nexport class ProjectSiteLimitExceededError extends FleekError<ProjectSiteLimitExceededErrorOptions> {\n  public name = 'ProjectSiteLimitExceededError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `You've reached the maximum number of sites for this project. Contact our Support team if you have any questions.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectFleekFunctionLimitExceededErrorOptions = Record<string, never>;\n\nexport class ProjectFleekFunctionLimitExceededError extends FleekError<ProjectFleekFunctionLimitExceededErrorOptions> {\n  public name = 'ProjectFleekFunctionLimitExceededError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () =>\n    `You've reached the maximum number of Fleek functions for this project. Contact our Support team if you have any questions.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UserProjectLimitExceededErrorOptions = Record<string, never>;\n\nexport class UserProjectLimitExceededError extends FleekError<UserProjectLimitExceededErrorOptions> {\n  public name = 'UserProjectLimitExceededError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `You've reached the maximum number of projects for your account. Contact our Support team if you have any questions.`;\n}\n", "export { FleekError } from './FleekError';\nexport { BunnyPullZoneNotFoundError } from './BunnyPullZoneNotFoundError';\nexport { DomainNotFoundError } from './DomainNotFoundError';\nexport { DomainsNotFoundError } from './DomainsNotFoundError';\nexport { DomainAlreadyExistsInProjectError } from './DomainAlreadyExistsInProjectError';\nexport { DomainInPendingStateError } from './DomainInPendingStateError';\nexport { DomainHostnameInvalidError } from './DomainHostnameInvalidError';\nexport { UnknownError } from './UnknownError';\nexport { SiteNotFoundError } from './SiteNotFoundError';\nexport { SitesNotFoundError } from './SitesNotFoundError';\nexport { SiteAlreadyExistsError } from './SiteAlreadyExistsError';\nexport { SiteDeploymentNotFoundError } from './SiteDeploymentNotFoundError';\nexport { SiteHasDependentsError } from './SiteHasDependentsError';\nexport { SiteHasNoSourceProviderError } from './SiteHasNoSourceProviderError';\nexport { SiteNotDeployedError } from './SiteNotDeployedError';\nexport { IpnsRecordNotFoundError } from './IpnsRecordNotFoundError';\nexport { IpnsRecordsNotFoundError } from './IpnsRecordsNotFoundError';\nexport { IpnsFailToDecryptKeyError } from './IpnsFailToDecryptKeyError';\nexport { IpnsRecordsForSiteLimitError } from './IpnsRecordsForSiteLimitError';\nexport { StorageIpfsUploadFailedError } from './StorageIpfsUploadFailedError';\nexport { SdkRequiredNodeRuntimeError } from './SdkRequiredNodeRuntimeError';\nexport { AuthorizationError } from './AuthorizationError';\nexport { ProjectMembershipNotFoundError } from './ProjectMembershipNotFoundError';\nexport { GithubAppInstallationNotFoundError } from './GithubAppInstallationNotFoundError';\nexport { UserNotFoundError } from './UserNotFoundError';\nexport { UserAlreadyExistsError } from './UserAlreadyExistsError';\nexport { ProjectNotFoundError } from './ProjectNotFoundError';\nexport { ProjectsNotFoundError } from './ProjectsNotFoundError';\nexport { ProjectHasDependentsError } from './ProjectHasDependentsError';\nexport { ProjectInvalidNameError } from './ProjectInvalidNameError';\nexport { PublicKeyAlreadyExistsError } from './PublicKeyAlreadyExistsError';\nexport { VerificationSessionAlreadyExistsError } from './VerificationSessionAlreadyExistsError';\nexport { UnauthenticatedError } from './UnauthenticatedError';\nexport { DomainZoneNotFoundError } from './DomainZoneNotFoundError';\nexport { DomainZoneHasDependentsError } from './DomainZoneHasDependentsError';\nexport { DomainZoneInPendingStateError } from './DomainZoneInPendingStateError';\nexport { DomainNotFoundUnderPullzoneError } from './DomainNotFoundUnderPullzoneError';\nexport { DomainZoneInvalidTypeError } from './DomainZoneInvalidTypeError';\nexport { UnauthorizedError } from './UnauthorizedError';\nexport { FleekConfigInvalidContentError } from './FleekConfigInvalidContentError';\nexport { FleekConfigMissingFileError } from './FleekConfigMissingFileError';\nexport { ApplicationWhitelistDomainDuplicityError } from './ApplicationWhitelistDomainDuplicityError';\nexport { ApplicationAlreadyExistsError } from './ApplicationAlreadyExistsError';\nexport { ApplicationsNotFoundError } from './ApplicationsNotFoundError';\nexport { ApplicationNotFoundError } from './ApplicationNotFoundError';\nexport { ApplicationNameInvalidError } from './ApplicationNameInvalidError';\nexport { EnsRecordNotFoundError } from './EnsRecordNotFoundError';\nexport { EnsRecordAlreadyExistsInProjectError } from './EnsRecordAlreadyExistsInProjectError';\nexport { EnsNameInvalidError } from './EnsNameInvalidError';\nexport { EnsRecordInPendingStateError } from './EnsRecordInPendingStateError';\nexport { InvalidPersonalAccessTokenError } from './InvalidPersonalAccessTokenError';\nexport { PersonalAccessTokenNotFoundError } from './PersonalAccessTokenNotFoundError';\nexport { PrivateGatewayNotFoundError } from './PrivateGatewayNotFoundError';\nexport { PrivateGatewayAlreadyExistsError } from './PrivateGatewayAlreadyExistsError';\nexport { PrivateGatewayNameInvalidError } from './PrivateGatewayNameInvalidError';\nexport { PrivateGatewaysNotFoundError } from './PrivateGatewaysNotFoundError';\nexport { TemplateAlreadyExistsError } from './TemplateAlreadyExistsError';\nexport { TemplateNotFoundError } from './TemplateNotFoundError';\nexport { UserHasNoAccessToAnotherUserError } from './UserHasNoAccessToAnotherUserError';\nexport { SiteFrameworkAlreadyExistsError } from './SiteFrameworkAlreadyExistsError';\nexport { SiteFrameworkNotFoundError } from './SiteFrameworkNotFoundError';\nexport { TemplateCategoryNotFoundError } from './TemplateCategoryNotFoundError';\nexport { TemplateDeploymentNotFoundError } from './TemplateDeploymentNotFoundError';\nexport { ProjectMembershipHasInefficientRoleError } from './ProjectMembershipHasInefficientRoleError';\nexport { SecretGroupNotFoundError } from './SecretGroupNotFoundError';\nexport { SecretNotFoundError } from './SecretNotFoundError';\nexport { SecretVisibilityAlreadyEncryptedError } from './SecretVisibilityAlreadyEncryptedError';\nexport { SecretKeyAlreadyExistsError } from './SecretKeyAlreadyExistsError';\nexport { SecretFailToEncryptError } from './SecretFailToEncryptError';\nexport { PinNotFoundError } from './PinNotFoundError';\nexport { PinAlreadyExistsInProjectError } from './PinAlreadyExistsInProjectError';\nexport { UnstoppableDeploymentError } from './UnstoppableDeploymentError';\nexport { SiteDeploymentNotReleasedError } from './SiteDeploymentNotReleasedError';\nexport { InvalidDeploymentTriggerError } from './InvalidDeploymentTriggerError';\nexport { IpfsGatewayContentUnreachableError } from './IpfsGatewayContentUnreachableError';\nexport { InvitationNotFoundError } from './InvitationNotFoundError';\nexport { MigrationTokenInvalidError } from './MigrationTokenInvalidError';\nexport { MigrationRequestsAlreadyExistError } from './MigrationRequestsAlreadyExistError';\nexport { MigrationRequestNotFoundError } from './MigrationRequestNotFoundError';\nexport { MigrationRequestInPendingStateError } from './MigrationRequestInPendingStateError';\nexport { ProjectInvitationAlreadyExistError } from './ProjectInvitationAlreadyExistError';\nexport { ProjectMembershipAlreadyExistError } from './ProjectMembershipAlreadyExistError';\nexport { ProjectMembershipNoOwnersError } from './ProjectMembershipNoOwnersError';\nexport { UploadedS3KeyNotFoundError } from './UploadedS3KeyNotFoundError';\nexport { PathIsNotADirectoryError } from './PathIsNotADirectoryError';\nexport { FleekFunctionAlreadyExistsError } from './FleekFunctionAlreadyExistsError';\nexport { FleekFunctionNotFoundError } from './FleekFunctionNotFoundError';\nexport { FleekFunctionDeploymentNotFoundError } from './FleekFunctionDeploymentNotFoundError';\nexport { FleekFunctionsNotFoundError } from './FleekFunctionsNotFoundError';\nexport { FleekFunctionPathNotValidError } from './FleekFunctionPathNotValidError';\nexport { FleekFunctionNameNotValidError } from './FleekFunctionNameNotValidError';\nexport { FleekFunctionStatusNotValidError } from './FleekFunctionStatusNotValidError';\nexport { FleekFunctionSlugNotValidError } from './FleekFunctionSlugNotValidError';\nexport { MaintenanceError } from './MaintenanceError';\nexport { UserHasNoAccessToFeatureError } from './UserHasNoAccessToFeatureError';\nexport { InvalidCidError } from './InvalidCidError';\nexport { ValidationError } from './ValidationError';\nexport { UserInBlocklistError } from './UserInBlocklistError';\nexport { EnsNameContentHashCodecMistmatchError } from './EnsNameContentHashCodecMistmatchError';\nexport { EnsNameContentHashUndefinedError } from './EnsNameContentHashUndefinedError';\nexport { DnsConfigAlreadyExistsError } from './DnsConfigAlreadyExistsError';\nexport { DnsConfigNotFoundError } from './DnsConfigNotFoundError';\nexport { TwoFactorSecretKeyFailedToEncryptError } from './TwoFactorSecretKeyFailedToEncryptError';\nexport { UserSecretKeyAlreadyExistsError } from './UserSecretKeyAlreadyExistsError';\nexport { UserSecretKeyNotFoundError } from './UserSecretKeyNotFoundError';\nexport { TwoFactorSecretKeyFailedToDecryptError } from './TwoFactorSecretKeyFailedToDecryptError';\nexport { RecoveryCodesAlreadyExistsError } from './RecoveryCodesAlreadyExistsError';\nexport { WriteFileFromStreamError } from './WriteFileFromStreamError';\nexport { InvalidTOTPTokenError } from './InvalidTOTPTokenError';\nexport { InvalidRecoveryCodeError } from './InvalidRecoveryCodeError';\nexport { MissingTwoFactorProtectionCredentialsError } from './MissingTwoFactorProtectionCredentialsError';\nexport { DeploymentInProgressError } from './DeploymentInProgressError';\nexport { PullzoneNotFoundForZoneIdError } from './PullzoneNotFoundForZoneIdError';\nexport { RecoveryCodeFailedToEncryptError } from './RecoveryCodeFailedToEncryptError';\nexport { RecoveryCodeFailedToDecryptError } from './RecoveryCodeFailedToDecryptError';\nexport { PermissionGroupNotFoundError } from './PermissionGroupNotFoundError';\nexport { PermissionScopeError } from './PermissionScopeError';\nexport { InvalidAdminAccessTokenError } from './InvalidAdminAccessTokenError';\nexport { MissingExpectedDataError } from './MissingExpectedDataError';\nexport { EnvNotSetError } from './EnvNotSetError';\nexport { GitSecretsFailedToEncryptError } from './GitSecretsFailedToEncryptError';\nexport { GitConfigFailedToParseError } from './GitConfigFailedToParseError';\nexport { PathIsNotAFileError } from './PathIsNotAFileError';\nexport { FleekFunctionBundlingFailedError } from './FleekFunctionBundlingFailedError';\nexport { GitIntegrationNotFoundError } from './GitIntegrationNotFoundError';\nexport { GitProviderNotFoundError } from './GitProviderNotFoundError';\nexport { ExpectedOneOfValuesError } from './ExpectedOneOfValuesError';\nexport { InvalidJSONFormat } from './InvalidJSONFormat';\nexport { StorageUploadFileCountQuotaExceededError } from './StorageUploadFileCountQuotaExceededError';\nexport { StorageUploadTotalSizeQuotaExceededError } from './StorageUploadTotalSizeQuotaExceededError';\nexport { GitProviderNotSupportedError } from './GitProviderNotSupportedError';\nexport { GitProviderNotAuthorizedError } from './GitProviderNotAuthorizedError';\nexport { GitAccessTokenInvalidError } from './GitAccessTokenInvalidError';\nexport { QueuedDeploymentsLimitError } from './QueuedDeploymentsLimitError';\nexport { GitIntegrationInstallationConflictError } from './GitIntegrationInstallationConflictError';\nexport { GitLinkMultipleAccountError } from './GitLinkMultipleAccountError';\nexport { GitRepoByNameAndOwnerNotFoundError } from './GitRepoByNameAndOwnerNotFoundError';\nexport { GitAccessTokenNotFoundError } from './GitAccessTokenNotFoundError';\nexport { FolderNotFoundError } from './FolderNotFoundError';\nexport { FolderAlreadyExistsError } from './FolderAlreadyExistsError';\nexport { FolderNameContainsReservedWordError } from './FolderNameContainsReservedWordError';\nexport { PinsNotFoundError } from './PinsNotFoundError';\nexport { SiteCreationFailedError } from './SiteCreationFailedError';\nexport { FleekFunctionInvalidWasmCodeError } from './FleekFunctionInvalidWasmCodeError';\nexport { FleekFunctionWasmEncryptionFailedError } from './FleekFunctionWasmEncryptionFailedError';\nexport { UploadProxyStoreAsCarError } from './UploadProxyStoreAsCarError';\nexport { UploadProxyUploadFileError } from './UploadProxyUploadFileError';\nexport { IpfsDenylistUpdateWorkflowTriggerFailedError } from './IpfsDenylistUpdateWorkflowTriggerFailedError';\nexport { ProjectSiteLimitExceededError } from './ProjectSiteLimitExceededError';\nexport { ProjectFleekFunctionLimitExceededError } from './ProjectFleekFunctionLimitExceededError';\nexport { UserProjectLimitExceededError } from './UserProjectLimitExceededError';\n", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "'use strict'\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n", "'use strict'\n\nconst { encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name\n    this.code = code\n    this.codeBuf = encodeText(this.code)\n    this.alphabet = alphabet\n    this.codec = factory(alphabet)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nmodule.exports = Base\n", "'use strict'\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n}\n\nmodule.exports = { rfc4648 }\n", "'use strict'\n\nconst baseX = require('@multiformats/base-x')\nconst Base = require('./base.js')\nconst { rfc4648 } = require('./rfc4648')\nconst { decodeText, encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText,\n    decode: encodeText\n  }\n}\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648(1), '01'],\n  ['base8', '7', rfc4648(3), '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}))\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}))\n\nmodule.exports = {\n  names,\n  codes\n}\n", "/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n'use strict'\n\nconst constants = require('./constants')\nconst { encodeText, decodeText, concat } = require('./util')\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode)\n  validEncode(name, buf)\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode)\n  const data = encodeText(enc.encode(buf))\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n  const prefix = data[0]\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase()\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name)\n  enc.decode(decodeText(buf))\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (Object.prototype.hasOwnProperty.call(constants.names, /** @type {BaseName} */(nameOrCode))) {\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (Object.prototype.hasOwnProperty.call(constants.codes, /** @type {BaseCode} */(nameOrCode))) {\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.encoding = encoding\nexports.encodingFromData = encodingFromData\nconst names = Object.freeze(constants.names)\nconst codes = Object.freeze(constants.codes)\nexports.names = names\nexports.codes = codes\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "/* eslint quote-props: off */\n'use strict'\n\n/**\n * Names for all available hashes\n *\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\n */\n/**\n * Codes for all available hashes\n *\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\n */\n\n/**\n * @type { Record<HashName,HashCode> }\n */\nconst names = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n})\n\nmodule.exports = { names }\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}\n\nexports.asUint8Array = asUint8Array;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8array.asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8array.asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}\n\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\n", "'use strict';\n\nvar basics = require('multiformats/basics');\nvar alloc = require('../alloc.js');\n\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = alloc.allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: basics.bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...basics.bases\n};\n\nmodule.exports = BASES;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bases = require('./util/bases.js');\n\nfunction toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}\n\nexports.toString = toString;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bases = require('./util/bases.js');\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8array.asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}\n\nexports.fromString = fromString;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar alloc = require('./alloc.js');\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = alloc.allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8array.asUint8Array(output);\n}\n\nexports.concat = concat;\n", "/**\n * Multihash implementation in JavaScript.\n */\n'use strict'\n\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst { names } = require('./constants')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\nconst codes = /** @type {import('./types').CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const key in names) {\n  const name = /** @type {HashName} */(key)\n  codes[names[name]] = name\n}\nObject.freeze(codes)\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toHexString (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(hash, 'base16')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Uint8Array}\n */\nfunction fromHexString (hash) {\n  return uint8ArrayFromString(hash, 'base16')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toB58String (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Uint8Array} hash\n * @returns {Uint8Array}\n */\nfunction fromB58String (hash) {\n  const encoded = hash instanceof Uint8Array\n    ? uint8ArrayToString(hash)\n    : hash\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Uint8Array} bytes\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\n */\nfunction decode (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array')\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = /** @type {HashCode} */(varint.decode(bytes))\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  const len = varint.decode(bytes)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\n  }\n\n  return {\n    code,\n    name: codes[code],\n    length: len,\n    digest: bytes\n  }\n}\n\n/**\n * Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Uint8Array} digest\n * @param {HashName | HashCode} code\n * @param {number} [length]\n * @returns {Uint8Array}\n */\nfunction encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = coerceCode(code)\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  const hash = varint.encode(hashfn)\n  const len = varint.encode(length)\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n *\n * @param {HashName | number} name\n * @returns {number}\n */\nfunction coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  // @ts-ignore\n  if (codes[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks if a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction isAppCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {HashCode} code\n * @returns {boolean}\n */\nfunction isValidCode (code) {\n  if (isAppCode(code)) {\n    return true\n  }\n\n  if (codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {void}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  decode(multihash) // throws if bad.\n}\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n * @throws {Error}\n */\nfunction prefix (multihash) {\n  validate(multihash)\n\n  return multihash.subarray(0, 2)\n}\n\nmodule.exports = {\n  names,\n  codes,\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode,\n  encode,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}\n\n/**\n * @typedef { import(\"./constants\").HashCode } HashCode\n * @typedef { import(\"./constants\").HashName } HashName\n */\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "'use strict'\n\nconst varint = require('varint')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\nmodule.exports = {\n  numberToUint8Array,\n  uint8ArrayToNumber,\n  varintUint8ArrayEncode,\n  varintEncode\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction uint8ArrayToNumber (buf) {\n  return parseInt(uint8ArrayToString(buf, 'base16'), 16)\n}\n\n/**\n * @param {number} num\n */\nfunction numberToUint8Array (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return uint8ArrayFromString(hexString, 'base16')\n}\n\n/**\n * @param {Uint8Array} input\n */\nfunction varintUint8ArrayEncode (input) {\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)))\n}\n\n/**\n * @param {number} num\n */\nfunction varintEncode (num) {\n  return Uint8Array.from(varint.encode(num))\n}\n", "// DO NOT CHANGE THIS FILE. IT IS GENERATED BY tools/update-table.js\n/* eslint quote-props: off */\n'use strict'\n\n/**\n * @type {import('./generated-types').NameCodeMap}\n */\nconst baseTable = Object.freeze({\n  'identity': 0x00,\n  'cidv1': 0x01,\n  'cidv2': 0x02,\n  'cidv3': 0x03,\n  'ip4': 0x04,\n  'tcp': 0x06,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'dccp': 0x21,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'ip6': 0x29,\n  'ip6zone': 0x2a,\n  'path': 0x2f,\n  'multicodec': 0x30,\n  'multihash': 0x31,\n  'multiaddr': 0x32,\n  'multibase': 0x33,\n  'dns': 0x35,\n  'dns4': 0x36,\n  'dns6': 0x37,\n  'dnsaddr': 0x38,\n  'protobuf': 0x50,\n  'cbor': 0x51,\n  'raw': 0x55,\n  'dbl-sha2-256': 0x56,\n  'rlp': 0x60,\n  'bencode': 0x63,\n  'dag-pb': 0x70,\n  'dag-cbor': 0x71,\n  'libp2p-key': 0x72,\n  'git-raw': 0x78,\n  'torrent-info': 0x7b,\n  'torrent-file': 0x7c,\n  'leofcoin-block': 0x81,\n  'leofcoin-tx': 0x82,\n  'leofcoin-pr': 0x83,\n  'sctp': 0x84,\n  'dag-jose': 0x85,\n  'dag-cose': 0x86,\n  'eth-block': 0x90,\n  'eth-block-list': 0x91,\n  'eth-tx-trie': 0x92,\n  'eth-tx': 0x93,\n  'eth-tx-receipt-trie': 0x94,\n  'eth-tx-receipt': 0x95,\n  'eth-state-trie': 0x96,\n  'eth-account-snapshot': 0x97,\n  'eth-storage-trie': 0x98,\n  'eth-receipt-log-trie': 0x99,\n  'eth-reciept-log': 0x9a,\n  'bitcoin-block': 0xb0,\n  'bitcoin-tx': 0xb1,\n  'bitcoin-witness-commitment': 0xb2,\n  'zcash-block': 0xc0,\n  'zcash-tx': 0xc1,\n  'caip-50': 0xca,\n  'streamid': 0xce,\n  'stellar-block': 0xd0,\n  'stellar-tx': 0xd1,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'decred-block': 0xe0,\n  'decred-tx': 0xe1,\n  'ipld-ns': 0xe2,\n  'ipfs-ns': 0xe3,\n  'swarm-ns': 0xe4,\n  'ipns-ns': 0xe5,\n  'zeronet': 0xe6,\n  'secp256k1-pub': 0xe7,\n  'bls12_381-g1-pub': 0xea,\n  'bls12_381-g2-pub': 0xeb,\n  'x25519-pub': 0xec,\n  'ed25519-pub': 0xed,\n  'bls12_381-g1g2-pub': 0xee,\n  'dash-block': 0xf0,\n  'dash-tx': 0xf1,\n  'swarm-manifest': 0xfa,\n  'swarm-feed': 0xfb,\n  'udp': 0x0111,\n  'p2p-webrtc-star': 0x0113,\n  'p2p-webrtc-direct': 0x0114,\n  'p2p-stardust': 0x0115,\n  'p2p-circuit': 0x0122,\n  'dag-json': 0x0129,\n  'udt': 0x012d,\n  'utp': 0x012e,\n  'unix': 0x0190,\n  'thread': 0x0196,\n  'p2p': 0x01a5,\n  'ipfs': 0x01a5,\n  'https': 0x01bb,\n  'onion': 0x01bc,\n  'onion3': 0x01bd,\n  'garlic64': 0x01be,\n  'garlic32': 0x01bf,\n  'tls': 0x01c0,\n  'noise': 0x01c6,\n  'quic': 0x01cc,\n  'ws': 0x01dd,\n  'wss': 0x01de,\n  'p2p-websocket-star': 0x01df,\n  'http': 0x01e0,\n  'swhid-1-snp': 0x01f0,\n  'json': 0x0200,\n  'messagepack': 0x0201,\n  'libp2p-peer-record': 0x0301,\n  'libp2p-relay-rsvp': 0x0302,\n  'car-index-sorted': 0x0400,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'p256-pub': 0x1200,\n  'p384-pub': 0x1201,\n  'p521-pub': 0x1202,\n  'ed448-pub': 0x1203,\n  'x448-pub': 0x1204,\n  'ed25519-priv': 0x1300,\n  'secp256k1-priv': 0x1301,\n  'x25519-priv': 0x1302,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402,\n  'zeroxcert-imprint-256': 0xce11,\n  'fil-commitment-unsealed': 0xf101,\n  'fil-commitment-sealed': 0xf102,\n  'holochain-adr-v0': 0x807124,\n  'holochain-adr-v1': 0x817124,\n  'holochain-key-v0': 0x947124,\n  'holochain-key-v1': 0x957124,\n  'holochain-sig-v0': 0xa27124,\n  'holochain-sig-v1': 0xa37124,\n  'skynet-ns': 0xb19910,\n  'arweave-ns': 0xb29910\n})\n\nmodule.exports = { baseTable }\n", "'use strict'\n\n/** @typedef {import('./generated-types').ConstantCodeMap} ConstantCodeMap */\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\n/** @typedef {import('./generated-types').CodeNameMap} CodeNameMap */\n/** @typedef {import('./generated-types').CodecName} CodecName */\n/** @typedef {import('./generated-types').CodecConstant} CodecConstant */\n\nconst { baseTable } = require('./generated-table')\nconst varintEncode = require('./util').varintEncode\n\nconst nameToVarint = /** @type {NameUint8ArrayMap} */ ({})\nconst constantToCode = /** @type {ConstantCodeMap} */({})\nconst codeToName = /** @type {CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const name in baseTable) {\n  const codecName = /** @type {CodecName} */(name)\n  const code = baseTable[codecName]\n  nameToVarint[codecName] = varintEncode(code)\n\n  const constant = /** @type {CodecConstant} */(codecName.toUpperCase().replace(/-/g, '_'))\n  constantToCode[constant] = code\n\n  if (!codeToName[code]) {\n    codeToName[code] = codecName\n  }\n}\n\nObject.freeze(nameToVarint)\nObject.freeze(constantToCode)\nObject.freeze(codeToName)\nconst nameToCode = Object.freeze(baseTable)\nmodule.exports = {\n  nameToVarint,\n  constantToCode,\n  nameToCode,\n  codeToName\n}\n", "/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */\n'use strict'\n\n/** @typedef {import('./generated-types').CodecName} CodecName */\n/** @typedef {import('./generated-types').CodecCode} CodecCode */\n\nconst varint = require('varint')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\nconst util = require('./util')\nconst { nameToVarint, constantToCode, nameToCode, codeToName } = require('./maps')\n\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {CodecName|Uint8Array} multicodecStrOrCode\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction addPrefix (multicodecStrOrCode, data) {\n  let prefix\n\n  if (multicodecStrOrCode instanceof Uint8Array) {\n    prefix = util.varintUint8ArrayEncode(multicodecStrOrCode)\n  } else {\n    if (nameToVarint[multicodecStrOrCode]) {\n      prefix = nameToVarint[multicodecStrOrCode]\n    } else {\n      throw new Error('multicodec not recognized')\n    }\n  }\n\n  return uint8ArrayConcat([prefix, data], prefix.length + data.length)\n}\n\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction rmPrefix (data) {\n  varint.decode(/** @type {Buffer} */(data))\n  return data.slice(varint.decode.bytes)\n}\n\n/**\n * Get the codec name of the prefixed data.\n *\n * @param {Uint8Array} prefixedData\n * @returns {CodecName}\n */\nfunction getNameFromData (prefixedData) {\n  const code = /** @type {CodecCode} */(varint.decode(/** @type {Buffer} */(prefixedData)))\n  const name = codeToName[code]\n  if (name === undefined) {\n    throw new Error(`Code \"${code}\" not found`)\n  }\n  return name\n}\n\n/**\n * Get the codec name from a code.\n *\n * @param {CodecCode} codec\n * @returns {CodecName}\n */\nfunction getNameFromCode (codec) {\n  return codeToName[codec]\n}\n\n/**\n * Get the code of the codec\n *\n * @param {CodecName} name\n * @returns {CodecCode}\n */\nfunction getCodeFromName (name) {\n  const code = nameToCode[name]\n  if (code === undefined) {\n    throw new Error(`Codec \"${name}\" not found`)\n  }\n  return code\n}\n\n/**\n * Get the code of the prefixed data.\n *\n * @param {Uint8Array} prefixedData\n * @returns {CodecCode}\n */\nfunction getCodeFromData (prefixedData) {\n  return /** @type {CodecCode} */(varint.decode(/** @type {Buffer} */(prefixedData)))\n}\n\n/**\n * Get the code as varint of a codec name.\n *\n * @param {CodecName} name\n * @returns {Uint8Array}\n */\nfunction getVarintFromName (name) {\n  const code = nameToVarint[name]\n  if (code === undefined) {\n    throw new Error(`Codec \"${name}\" not found`)\n  }\n  return code\n}\n\n/**\n * Get the varint of a code.\n *\n * @param {CodecCode} code\n * @returns {Uint8Array}\n */\nfunction getVarintFromCode (code) {\n  return util.varintEncode(code)\n}\n\n/**\n * Get the codec name of the prefixed data.\n *\n * @deprecated use getNameFromData instead.\n * @param {Uint8Array} prefixedData\n * @returns {CodecName}\n */\nfunction getCodec (prefixedData) {\n  return getNameFromData(prefixedData)\n}\n\n/**\n * Get the codec name from a code.\n *\n * @deprecated use getNameFromCode instead.\n * @param {CodecCode} codec\n * @returns {CodecName}\n */\nfunction getName (codec) {\n  return getNameFromCode(codec)\n}\n\n/**\n * Get the code of the codec\n *\n * @deprecated use getCodeFromName instead.\n * @param {CodecName} name\n * @returns {CodecCode}\n */\nfunction getNumber (name) {\n  return getCodeFromName(name)\n}\n\n/**\n * Get the code of the prefixed data.\n *\n * @deprecated use getCodeFromData instead.\n * @param {Uint8Array} prefixedData\n * @returns {CodecCode}\n */\nfunction getCode (prefixedData) {\n  return getCodeFromData(prefixedData)\n}\n\n/**\n * Get the code as varint of a codec name.\n *\n * @deprecated use getVarintFromName instead.\n * @param {CodecName} name\n * @returns {Uint8Array}\n */\nfunction getCodeVarint (name) {\n  return getVarintFromName(name)\n}\n\n/**\n * Get the varint of a code.\n *\n * @deprecated use getVarintFromCode instead.\n * @param {CodecCode} code\n * @returns {Array.<number>}\n */\nfunction getVarint (code) {\n  return Array.from(getVarintFromCode(code))\n}\n\nmodule.exports = {\n  addPrefix,\n  rmPrefix,\n  getNameFromData,\n  getNameFromCode,\n  getCodeFromName,\n  getCodeFromData,\n  getVarintFromName,\n  getVarintFromCode,\n  // Deprecated\n  getCodec,\n  getName,\n  getNumber,\n  getCode,\n  getCodeVarint,\n  getVarint,\n  // Make the constants top-level constants\n  ...constantToCode,\n  // Export the maps\n  nameToVarint,\n  nameToCode,\n  codeToName\n}\n", "'use strict'\n\nconst mh = require('multihashes')\n\nconst CIDUtil = {\n  /**\n   * Test if the given input is a valid CID object.\n   * Returns an error message if it is not.\n   * Returns undefined if it is a valid CID.\n   *\n   * @param {any} other\n   * @returns {string|undefined}\n   */\n  checkCIDComponents: function (other) {\n    if (other == null) {\n      return 'null values are not valid CIDs'\n    }\n\n    if (!(other.version === 0 || other.version === 1)) {\n      return 'Invalid version, must be a number equal to 1 or 0'\n    }\n\n    if (typeof other.codec !== 'string') {\n      return 'codec must be string'\n    }\n\n    if (other.version === 0) {\n      if (other.codec !== 'dag-pb') {\n        return \"codec must be 'dag-pb' for CIDv0\"\n      }\n      if (other.multibaseName !== 'base58btc') {\n        return \"multibaseName must be 'base58btc' for CIDv0\"\n      }\n    }\n\n    if (!(other.multihash instanceof Uint8Array)) {\n      return 'multihash must be a Uint8Array'\n    }\n\n    try {\n      mh.validate(other.multihash)\n    } catch (err) {\n      let errorMsg = err.message\n      if (!errorMsg) { // Just in case mh.validate() throws an error with empty error message\n        errorMsg = 'Multihash validation failed'\n      }\n      return errorMsg\n    }\n  }\n}\n\nmodule.exports = CIDUtil\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.equals = equals;\n", "'use strict'\n\nconst mh = require('multihashes')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\nconst CIDUtil = require('./cid-util')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { equals: uint8ArrayEquals } = require('uint8arrays/equals')\n\nconst codecs = multicodec.nameToCode\nconst codecInts = /** @type {CodecName[]} */(Object.keys(codecs)).reduce((p, name) => {\n  p[codecs[name]] = name\n  return p\n}, /** @type {Record<CodecCode, CodecName>} */({}))\n\nconst symbol = Symbol.for('@ipld/js-cid/CID')\n\n/**\n * @typedef {Object} SerializedCID\n * @property {string} codec\n * @property {number} version\n * @property {Uint8Array} hash\n */\n/**\n * @typedef {0|1} CIDVersion\n * @typedef {import('multibase').BaseNameOrCode} BaseNameOrCode\n * @typedef {import('multicodec').CodecName} CodecName\n * @typedef {import('multicodec').CodecCode} CodecCode\n */\n\n/**\n * Class representing a CID `<mbase><version><mcodec><mhash>`\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\n *\n * @class CID\n */\nclass CID {\n  /**\n   * Create a new CID.\n   *\n   * The algorithm for argument input is roughly:\n   * ```\n   * if (cid)\n   *   -> create a copy\n   * else if (str)\n   *   if (1st char is on multibase table) -> CID String\n   *   else -> bs58 encoded multihash\n   * else if (Uint8Array)\n   *   if (1st byte is 0 or 1) -> CID\n   *   else -> multihash\n   * else if (Number)\n   *   -> construct CID by parts\n   * ```\n   *\n   * @param {CIDVersion | string | Uint8Array | CID} version\n   * @param {string|number} [codec]\n   * @param {Uint8Array} [multihash]\n   * @param {string} [multibaseName]\n   *\n   * @example\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\n   * new CID(<cidStr>)\n   * new CID(<cid.bytes>)\n   * new CID(<multihash>)\n   * new CID(<bs58 encoded multihash>)\n   * new CID(<cid>)\n   */\n  constructor (version, codec, multihash, multibaseName) {\n    // We have below three blank field accessors only because\n    // otherwise TS will not pick them up if done after assignemnts\n\n    /**\n     * The version of the CID.\n     *\n     * @type {CIDVersion}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.version\n\n    /**\n     * The codec of the CID.\n     *\n     * @deprecated\n     * @type {CodecName}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.codec\n\n    /**\n     * The multihash of the CID.\n     *\n     * @type {Uint8Array}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.multihash\n\n    Object.defineProperty(this, symbol, { value: true })\n    if (CID.isCID(version)) {\n      // version is an exising CID instance\n      const cid = /** @type {CID} */(version)\n      this.version = cid.version\n      this.codec = cid.codec\n      this.multihash = cid.multihash\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\n      // @ts-ignore\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32')\n      return\n    }\n\n    if (typeof version === 'string') {\n      // e.g. 'base32' or false\n      const baseName = multibase.isEncoded(version)\n      if (baseName) {\n        // version is a CID String encoded with multibase, so v1\n        const cid = multibase.decode(version)\n        this.version = /** @type {CIDVersion} */(parseInt(cid[0].toString(), 16))\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = baseName\n      } else {\n        // version is a base58btc string multihash, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = mh.fromB58String(version)\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      Object.defineProperty(this, 'string', { value: version })\n      return\n    }\n\n    if (version instanceof Uint8Array) {\n      const v = parseInt(version[0].toString(), 16)\n      if (v === 1) {\n        // version is a CID Uint8Array\n        const cid = version\n        this.version = v\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = 'base32'\n      } else {\n        // version is a raw multihash Uint8Array, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = version\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      return\n    }\n\n    // otherwise, assemble the CID from the parameters\n\n    this.version = version\n\n    if (typeof codec === 'number') {\n      // @ts-ignore\n      codec = codecInts[codec]\n    }\n\n    this.codec = /** @type {CodecName} */ (codec)\n\n    this.multihash = /** @type {Uint8Array} */ (multihash)\n\n    /**\n     * Multibase name as string.\n     *\n     * @deprecated\n     * @type {string}\n     */\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32')\n\n    CID.validateCID(this)\n  }\n\n  /**\n   * The CID as a `Uint8Array`\n   *\n   * @returns {Uint8Array}\n   *\n   */\n  get bytes () {\n    // @ts-ignore\n    let bytes = this._bytes\n\n    if (!bytes) {\n      if (this.version === 0) {\n        bytes = this.multihash\n      } else if (this.version === 1) {\n        const codec = multicodec.getCodeVarint(this.codec)\n        bytes = uint8ArrayConcat([\n          [1], codec, this.multihash\n        ], 1 + codec.byteLength + this.multihash.byteLength)\n      } else {\n        throw new Error('unsupported version')\n      }\n\n      // Cache this Uint8Array so it doesn't have to be recreated\n      Object.defineProperty(this, '_bytes', { value: bytes })\n    }\n\n    return bytes\n  }\n\n  /**\n   * The prefix of the CID.\n   *\n   * @returns {Uint8Array}\n   */\n  get prefix () {\n    const codec = multicodec.getCodeVarint(this.codec)\n    const multihash = mh.prefix(this.multihash)\n    const prefix = uint8ArrayConcat([\n      [this.version], codec, multihash\n    ], 1 + codec.byteLength + multihash.byteLength)\n\n    return prefix\n  }\n\n  /**\n   * The codec of the CID in its number form.\n   *\n   * @returns {CodecCode}\n   */\n  get code () {\n    return codecs[this.codec]\n  }\n\n  /**\n   * Convert to a CID of version `0`.\n   *\n   * @returns {CID}\n   */\n  toV0 () {\n    if (this.codec !== 'dag-pb') {\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n    }\n\n    const { name, length } = mh.decode(this.multihash)\n\n    if (name !== 'sha2-256') {\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n    }\n\n    if (length !== 32) {\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\n    }\n\n    return new CID(0, this.codec, this.multihash)\n  }\n\n  /**\n   * Convert to a CID of version `1`.\n   *\n   * @returns {CID}\n   */\n  toV1 () {\n    return new CID(1, this.codec, this.multihash, this.multibaseName)\n  }\n\n  /**\n   * Encode the CID into a string.\n   *\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\n   * @returns {string}\n   */\n  toBaseEncodedString (base = this.multibaseName) {\n    // @ts-ignore non enumerable cache property\n    if (this.string && this.string.length !== 0 && base === this.multibaseName) {\n      // @ts-ignore non enumerable cache property\n      return this.string\n    }\n    let str\n    if (this.version === 0) {\n      if (base !== 'base58btc') {\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\n      }\n      str = mh.toB58String(this.multihash)\n    } else if (this.version === 1) {\n      str = uint8ArrayToString(multibase.encode(base, this.bytes))\n    } else {\n      throw new Error('unsupported version')\n    }\n    if (base === this.multibaseName) {\n      // cache the string value\n      Object.defineProperty(this, 'string', { value: str })\n    }\n    return str\n  }\n\n  /**\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\n   *\n   * @returns {string}\n   */\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return 'CID(' + this.toString() + ')'\n  }\n\n  /**\n   * Encode the CID into a string.\n   *\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\n   * @returns {string}\n   */\n  toString (base) {\n    return this.toBaseEncodedString(base)\n  }\n\n  /**\n   * Serialize to a plain object.\n   *\n   * @returns {SerializedCID}\n   */\n  toJSON () {\n    return {\n      codec: this.codec,\n      version: this.version,\n      hash: this.multihash\n    }\n  }\n\n  /**\n   * Compare equality with another CID.\n   *\n   * @param {CID} other\n   * @returns {boolean}\n   */\n  equals (other) {\n    return this.codec === other.codec &&\n      this.version === other.version &&\n      uint8ArrayEquals(this.multihash, other.multihash)\n  }\n\n  /**\n   * Test if the given input is a valid CID object.\n   * Throws if it is not.\n   *\n   * @param {any} other - The other CID.\n   * @returns {void}\n   */\n  static validateCID (other) {\n    const errorMsg = CIDUtil.checkCIDComponents(other)\n    if (errorMsg) {\n      throw new Error(errorMsg)\n    }\n  }\n\n  /**\n   * Check if object is a CID instance\n   *\n   * @param {any} value\n   * @returns {value is CID}\n   */\n  static isCID (value) {\n    return value instanceof CID || Boolean(value && value[symbol])\n  }\n}\n\nCID.codecs = codecs\n\nmodule.exports = CID\n", "export abstract class FleekError<T> extends Error {\n  public abstract name: string;\n  public data: T;\n\n  // eslint-disable-next-line fleek-custom/valid-argument-types\n  constructor(data: T) {\n    super();\n\n    this.data = data;\n  }\n\n  get message() {\n    return this.toString();\n  }\n\n  abstract toString(): string;\n}\n", "import { FleekError } from './FleekError';\n\ntype BunnyPullZoneNotFoundErrorOptions = {\n  name: string;\n};\n\nexport class BunnyPullZoneNotFoundError extends FleekError<BunnyPullZoneNotFoundErrorOptions> {\n  public name = 'BunnyPullZoneNotFoundError';\n\n  toString = () => `PullZone with name ${this.data.name} was not found on BunnyCDN.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Domain = {\n  id?: string;\n  hostname?: string;\n};\n\ntype DomainNotFoundErrorOptions = {\n  domain: Domain;\n};\n\nexport class DomainNotFoundError extends FleekError<DomainNotFoundErrorOptions> {\n  public name = 'DomainNotFoundError';\n\n  toString = () => {\n    if (this.data.domain.hostname) {\n      return `Domain ${this.data.domain.hostname} was not found.`;\n    }\n\n    return 'Domain was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype DomainsNotFoundErrorOptions = object;\n\nexport class DomainsNotFoundError extends FleekError<DomainsNotFoundErrorOptions> {\n  public name = 'DomainsNotFoundError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'No domains found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype Domain = ObjectId & {\n  hostname?: string;\n};\n\ntype DomainAlreadyExistsInProjectErrorOptions = {\n  domain: Domain;\n  project: ObjectId;\n};\n\nexport class DomainAlreadyExistsInProjectError extends FleekError<DomainAlreadyExistsInProjectErrorOptions> {\n  public name = 'DomainAlreadyExistsInProjectError';\n\n  toString = () => {\n    return `Domain ${this.data.domain.hostname} already exists under the project.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Domain = {\n  id?: string;\n  status?: string;\n};\n\ntype DomainInPendingStateErrorOptions = {\n  domain: Domain;\n};\n\nexport class DomainInPendingStateError extends FleekError<DomainInPendingStateErrorOptions> {\n  public name = 'DomainInPendingStateError';\n\n  toString = () => {\n    return 'Domain is in pending state. Please wait and try action again later.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype DomainHostnameInvalidErrorOptions = {\n  hostname: string;\n};\n\nexport class DomainHostnameInvalidError extends FleekError<DomainHostnameInvalidErrorOptions> {\n  public name = 'DomainHostnameInvalidError';\n\n  toString = () => {\n    return `The domain ${this.data.hostname} is invalid`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype UnknownErrorOptions = Record<string, never>;\n\nexport class UnknownError extends FleekError<UnknownErrorOptions> {\n  public name = 'UnknownError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Unexpected error. Repeat the action or contact support.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Site = {\n  id?: string;\n  slug?: string;\n  name?: string;\n};\n\ntype SiteNotFoundErrorOptions = {\n  site: Site;\n};\n\nexport class SiteNotFoundError extends FleekError<SiteNotFoundErrorOptions> {\n  public name = 'SiteNotFoundError';\n\n  toString = () => {\n    if (this.data.site.slug) {\n      return `Site ${this.data.site.slug} not found.`;\n    }\n\n    return `Site not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype SitesNotFoundErrorOptions = Record<string, never>;\n\nexport class SitesNotFoundError extends FleekError<SitesNotFoundErrorOptions> {\n  public name = 'SitesNotFoundError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'No sites found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype Site = ObjectId & {\n  name?: string;\n  slug?: string;\n};\n\ntype SiteAlreadyExistsErrorOptions = {\n  site: Site;\n  project: ObjectId;\n};\n\nexport class SiteAlreadyExistsError extends FleekError<SiteAlreadyExistsErrorOptions> {\n  public name = 'SiteAlreadyExistsError';\n\n  toString = () => {\n    if ('name' in this.data.site) {\n      return `Site ${this.data.site.name} already exists in the project.`;\n    }\n\n    return `Site slug must be unique within Fleek but ${this.data.site.slug} already exists.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype SiteDeploymentNotFoundErrorOptions = {\n  deployment: ObjectId;\n};\n\nexport class SiteDeploymentNotFoundError extends FleekError<SiteDeploymentNotFoundErrorOptions> {\n  public name = 'SiteDeploymentNotFoundError';\n\n  toString = () => `Deployment not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype SiteHasDependentsErrorOptions = {\n  site: ObjectId;\n  domains: ObjectId[];\n  ipnsRecords: ObjectId[];\n};\n\nexport class SiteHasDependentsError extends FleekError<SiteHasDependentsErrorOptions> {\n  public name = 'SiteHasDependentsError';\n\n  toString = () => {\n    const dependentsInfo: string[] = [];\n\n    if (this.data.domains.length > 0) {\n      dependentsInfo.push(`${this.data.domains.length} domains`);\n    }\n\n    if (this.data.ipnsRecords.length > 0) {\n      dependentsInfo.push(`${this.data.ipnsRecords.length} IPNS records`);\n    }\n\n    return `Site has assigned ${dependentsInfo}. You have to delete them first.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Site = {\n  id?: string;\n  slug?: string;\n};\n\ntype SiteHasNoSourceProviderErrorOptions = {\n  site: Site;\n};\n\nexport class SiteHasNoSourceProviderError extends FleekError<SiteHasNoSourceProviderErrorOptions> {\n  public name = 'SiteHasNoSourceProviderError';\n\n  toString = () => {\n    if (this.data.site.slug) {\n      return `Site ${this.data.site.slug} does not have a source provider.`;\n    }\n\n    return `Site does not have a source provider.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Site = {\n  id?: string;\n  slug?: string;\n};\n\ntype SiteNotDeployedErrorOptions = {\n  site: Site;\n};\n\nexport class SiteNotDeployedError extends FleekError<SiteNotDeployedErrorOptions> {\n  public name = 'SiteNotDeployedError';\n\n  toString = () => {\n    if (this.data.site.slug) {\n      return `Site ${this.data.site.slug} does not have released deployments.`;\n    }\n\n    return `Site does not have released deployments.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Record = {\n  id?: string;\n  name?: string;\n};\n\ntype IpnsRecordNotFoundErrorOptions = {\n  record: Record;\n};\n\nexport class IpnsRecordNotFoundError extends FleekError<IpnsRecordNotFoundErrorOptions> {\n  public name = 'IpnsRecordNotFoundError';\n\n  toString = () => `IPNS record not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype IpnsRecordsNotFoundErrorOptions = Record<string, never>;\n\nexport class IpnsRecordsNotFoundError extends FleekError<IpnsRecordsNotFoundErrorOptions> {\n  public name = 'IpnsRecordsNotFoundError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'No IPNS records found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype IpnsFailToDecryptKeyErrorOptions = {\n  record?: ObjectId;\n};\n\nexport class IpnsFailToDecryptKeyError extends FleekError<IpnsFailToDecryptKeyErrorOptions> {\n  public name = 'IpnsFailToDecryptKeyError';\n\n  toString = () => `Failed to decrypt IPNS key.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Site = {\n  id?: string;\n  name?: string;\n};\ntype IpnsRecordsForSiteLimitErrorOptions = {\n  site: Site;\n};\n\nexport class IpnsRecordsForSiteLimitError extends FleekError<IpnsRecordsForSiteLimitErrorOptions> {\n  public name = 'IpnsRecordsForSiteLimitError';\n\n  toString = () => {\n    if (this.data.site.name) {\n      return `Maximum amount of IPNS records that may be assigned to the ${this.data.site.name} site was exceeded.`;\n    }\n\n    return `Maximum amount of IPNS records that may be assigned to the site was exceeded.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype StorageIpfsUploadFailedErrorOptions = Record<string, never>;\n\nexport class StorageIpfsUploadFailedError extends FleekError<StorageIpfsUploadFailedErrorOptions> {\n  public name = 'StorageIpfsUploadFailedError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Upload failed.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype SdkRequiredNodeRuntimeErrorOptions = Record<string, never>;\n\nexport class SdkRequiredNodeRuntimeError extends FleekError<SdkRequiredNodeRuntimeErrorOptions> {\n  public name = 'SdkRequiredNodeRuntimeError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `The functionality of this SDK feature is dependent on the Node.js runtime.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype AuthorizationErrorOptions = object;\n\nexport class AuthorizationError extends FleekError<AuthorizationErrorOptions> {\n  public name = 'AuthorizationError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Authorization with provided credentials is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype ProjectMembershipNotFoundErrorOptions =\n  | { user: ObjectId; project: ObjectId }\n  | {\n      membership: ObjectId;\n      project: ObjectId;\n    };\n\nexport class ProjectMembershipNotFoundError extends FleekError<ProjectMembershipNotFoundErrorOptions> {\n  public name = 'ProjectMembershipNotFoundError';\n\n  toString = () => `Membership not found for project.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype GithubAppInstallationNotFoundErrorOptions = {\n  project?: ObjectId;\n};\n\nexport class GithubAppInstallationNotFoundError extends FleekError<GithubAppInstallationNotFoundErrorOptions> {\n  public name = 'GithubAppInstallationNotFoundError';\n\n  toString = () => {\n    return 'No GitHub App installation found for given project.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype UserNotFoundErrorOptions = {\n  id?: string;\n  email?: string;\n};\n\nexport class UserNotFoundError extends FleekError<UserNotFoundErrorOptions> {\n  public name = 'UserNotFoundError';\n\n  toString = () => {\n    if (this.data.email) {\n      return `User with email ${this.data.email} not found.`;\n    }\n\n    return `User not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\nexport class UserAlreadyExistsError extends FleekError<Record<string, never>> {\n  public name = 'UserAlreadyExistsError';\n\n  toString = () => 'The username is already in use, please select another one';\n}\n", "import { FleekError } from './FleekError';\n\ntype Project = {\n  id?: string;\n  name?: string;\n};\n\ntype ProjectNotFoundErrorOptions = {\n  project: Project;\n};\n\nexport class ProjectNotFoundError extends FleekError<ProjectNotFoundErrorOptions> {\n  public name = 'ProjectNotFoundError';\n\n  toString = () => 'Project not found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectsNotFoundErrorOptions = Record<string, never>;\n\nexport class ProjectsNotFoundError extends FleekError<ProjectsNotFoundErrorOptions> {\n  public name = 'ProjectsNotFoundError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'No projects found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype ProjectHasDependentsErrorOptions = {\n  project: ObjectId;\n  sites: ObjectId[];\n  privateGateways: ObjectId[];\n  ipnsRecords: ObjectId[];\n};\n\nexport class ProjectHasDependentsError extends FleekError<ProjectHasDependentsErrorOptions> {\n  public name = 'ProjectHasDependentsError';\n\n  toString = () => {\n    const dependentsInfo: string[] = [];\n\n    if (this.data.sites.length > 0) {\n      dependentsInfo.push(`${this.data.sites.length} sites`);\n    }\n\n    if (this.data.privateGateways.length > 0) {\n      dependentsInfo.push(`${this.data.privateGateways.length} private gateways`);\n    }\n\n    if (this.data.ipnsRecords.length > 0) {\n      dependentsInfo.push(`${this.data.ipnsRecords.length} IPNS records`);\n    }\n\n    return `Project has assigned ${dependentsInfo.join(', ')}. You have to delete them first.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectInvalidNameErrorOptions = {\n  name: string;\n};\n\nexport class ProjectInvalidNameError extends FleekError<ProjectInvalidNameErrorOptions> {\n  public name = 'ProjectInvalidNameError';\n\n  toString = () => `The project name ${this.data.name} is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PublicKeyAlreadyExistsErrorOptions = {\n  publicKey: Record<'publicKey', string>;\n};\n\nexport class PublicKeyAlreadyExistsError extends FleekError<PublicKeyAlreadyExistsErrorOptions> {\n  public name = 'PublicKeyAlreadyExistsError';\n\n  toString = () => `Public key already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype VerificationSessionAlreadyExistsErrorOptions = Record<string, never>;\n\nexport class VerificationSessionAlreadyExistsError extends FleekError<VerificationSessionAlreadyExistsErrorOptions> {\n  public name = 'VerificationSessionAlreadyExistsError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Verification session already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UnauthenticatedErrorOptions = Record<string, never>;\n\nexport class UnauthenticatedError extends FleekError<UnauthenticatedErrorOptions> {\n  public name = 'UnauthenticatedError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `The request is not authenticated.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id: string;\n};\n\ntype DomainZoneNotFoundErrorOptions = {\n  zone: ObjectId;\n  project?: ObjectId;\n};\n\nexport class DomainZoneNotFoundError extends FleekError<DomainZoneNotFoundErrorOptions> {\n  public name = 'DomainZoneNotFoundError';\n\n  toString = () => {\n    return 'Domain zone not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype DomainZoneHasDependentsErrorOptions = {\n  zone: ObjectId;\n};\n\nexport class DomainZoneHasDependentsError extends FleekError<DomainZoneHasDependentsErrorOptions> {\n  public name = 'DomainZoneHasDependentsError';\n\n  toString = () => 'Domain zone has assigned domains or private gateways. You have to delete them first.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype DomainZoneInPendingStateErrorOptions = {\n  zone: ObjectId;\n};\n\nexport class DomainZoneInPendingStateError extends FleekError<DomainZoneInPendingStateErrorOptions> {\n  public name = 'ZoneInPendingStateError';\n\n  toString = () => {\n    return 'Domain zone is in pending state. Please wait and try action again later.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype DomainNotFoundUnderPullzoneErrorOptions = {\n  bunnyZoneProvider: ObjectId;\n};\n\nexport class DomainNotFoundUnderPullzoneError extends FleekError<DomainNotFoundUnderPullzoneErrorOptions> {\n  public name = 'DomainNotFoundUnderPullzoneError';\n\n  toString = () => {\n    return 'Domain zone not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype DomainZoneInvalidTypeErrorOptions = {\n  zone: ObjectId;\n};\n\nexport class DomainZoneInvalidTypeError extends FleekError<DomainZoneInvalidTypeErrorOptions> {\n  public name = 'DomainZoneInvalidTypeError';\n\n  toString = () => 'Domain zone has different purpose of use.';\n}\n", "import { FleekError } from './FleekError';\n\ntype UnauthorizedErrorOptions = {\n  scopes?: string[];\n};\n\nexport class UnauthorizedError extends FleekError<UnauthorizedErrorOptions> {\n  public name = 'UnauthorizedError';\n\n  toString = () => {\n    if (this.data.scopes) {\n      return `You are not authorized to access this resource because of missing permissions: ${this.data.scopes.join(', ')}.`;\n    }\n\n    return `You are not authorized to access this resource.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekConfigInvalidContentErrorOptions = {\n  configPath: string;\n  validationResult?: string;\n};\n\nexport class FleekConfigInvalidContentError extends FleekError<FleekConfigInvalidContentErrorOptions> {\n  public name = 'FleekConfigInvalidContentError';\n\n  toString = () => {\n    if (this.data.validationResult) {\n      return `Validation of loaded ${this.data.configPath} failed. ${this.data.validationResult}`;\n    }\n\n    return `Loaded ${this.data.configPath} file is corrupted.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekConfigMissingFileErrorOptions = {\n  configPath?: string;\n};\n\nexport class FleekConfigMissingFileError extends FleekError<FleekConfigMissingFileErrorOptions> {\n  public name = 'FleekConfigMissingFileError';\n\n  toString = () => {\n    return `Unable to access or find the configuration file${(this.data.configPath && ' ' + this.data.configPath + '.') || '.'}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Application = {\n  id?: string;\n  name?: string;\n};\n\ntype ApplicationWhitelistDomainDuplicityErrorOptions = {\n  application: Application;\n  whitelistDomains: string[];\n};\n\nexport class ApplicationWhitelistDomainDuplicityError extends FleekError<ApplicationWhitelistDomainDuplicityErrorOptions> {\n  public name = 'ApplicationWhitelistDomainDuplicityError';\n\n  toString = () => `Application ${this.data.application.name} doesn't have unique white label domains.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Application = {\n  id?: string;\n  name?: string;\n};\n\ntype ApplicationAlreadyExistsErrorOptions = {\n  application: Application;\n};\n\nexport class ApplicationAlreadyExistsError extends FleekError<ApplicationAlreadyExistsErrorOptions> {\n  public name = 'ApplicationAlreadyExistsError';\n\n  toString = () => `Application ${this.data.application.name} already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\nexport class ApplicationsNotFoundError extends FleekError<object> {\n  public name = 'ApplicationsNotFoundError';\n\n  toString = () => 'No applications found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype Application = {\n  id?: string;\n  name?: string;\n};\n\ntype ApplicationNotFoundErrorOptions = {\n  application: Application;\n};\n\nexport class ApplicationNotFoundError extends FleekError<ApplicationNotFoundErrorOptions> {\n  public name = 'ApplicationNotFoundError';\n\n  toString = () => 'Application not found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ApplicationNameInvalidErrorOptions = {\n  name: string;\n};\n\nexport class ApplicationNameInvalidError extends FleekError<ApplicationNameInvalidErrorOptions> {\n  public name = 'ApplicationNameInvalidError';\n\n  toString = () => `The application name ${this.data.name} is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype EnsRecord = ObjectId & {\n  name?: string;\n};\n\ntype EnsRecordNotFoundErrorOptions = {\n  ensRecord: EnsRecord;\n  site?: ObjectId;\n};\n\nexport class EnsRecordNotFoundError extends FleekError<EnsRecordNotFoundErrorOptions> {\n  public name = 'EnsRecordNotFoundError';\n\n  toString = () => {\n    if (this.data.site?.id) {\n      return `No site associated with this ENS record.`;\n    }\n\n    return `ENS record was not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype EnsRecord = ObjectId & {\n  name?: string;\n};\n\ntype EnsRecordAlreadyExistsInProjectErrorOptions = {\n  ensRecord: EnsRecord;\n  project: ObjectId;\n};\n\nexport class EnsRecordAlreadyExistsInProjectError extends FleekError<EnsRecordAlreadyExistsInProjectErrorOptions> {\n  public name = 'EnsRecordAlreadyExistsInProjectError';\n\n  toString = () => {\n    return `ENS record already exists under the project.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype EnsRecord = {\n  name: string;\n};\n\ntype EnsNameInvalidErrorOptions = {\n  ensRecord: EnsRecord;\n};\n\nexport class EnsNameInvalidError extends FleekError<EnsNameInvalidErrorOptions> {\n  public name = 'EnsNameInvalidError';\n\n  toString = () => {\n    return `ENS record name \"${this.data.ensRecord.name}\" is invalid.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype EnsRecord = {\n  id?: string;\n  status?: string;\n};\ntype EnsRecordInPendingStateErrorOptions = {\n  ensRecord: EnsRecord;\n};\n\nexport class EnsRecordInPendingStateError extends FleekError<EnsRecordInPendingStateErrorOptions> {\n  public name = 'EnsRecordInPendingStateError';\n\n  toString = () => {\n    return 'ENS Record is in pending state. Please wait and try action again later.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidPersonalAccessTokenErrorOptions = {\n  personalAccessToken: string;\n};\n\nexport class InvalidPersonalAccessTokenError extends FleekError<InvalidPersonalAccessTokenErrorOptions> {\n  public name = 'InvalidPersonalAccessTokenError';\n\n  toString = () => 'Personal access token is invalid.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype PersonalAccessTokenNotFoundErrorOptions = {\n  personalAccessToken: ObjectId;\n};\n\nexport class PersonalAccessTokenNotFoundError extends FleekError<PersonalAccessTokenNotFoundErrorOptions> {\n  public name = 'PersonalAccessTokenNotFoundError';\n\n  toString = () => `Personal access token with ID ${this.data.personalAccessToken.id} not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PrivateGateway = {\n  id?: string;\n  slug?: string;\n  name?: string;\n};\n\ntype PrivateGatewayNotFoundErrorOptions = {\n  privateGateway: PrivateGateway;\n};\n\nexport class PrivateGatewayNotFoundError extends FleekError<PrivateGatewayNotFoundErrorOptions> {\n  public name = 'PrivateGatewayNotFoundError';\n\n  toString = () => `Private gateway not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PrivateGateway = {\n  id?: string;\n  name?: string;\n};\n\ntype PrivateGatewayAlreadyExistsErrorOptions = {\n  privateGateway: PrivateGateway;\n};\n\nexport class PrivateGatewayAlreadyExistsError extends FleekError<PrivateGatewayAlreadyExistsErrorOptions> {\n  public name = 'PrivateGatewayAlreadyExistsError';\n\n  toString = () => `Private gateway already exists. Please choose different name for the private gateway.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PrivateGatewayNameInvalidErrorOptions = {\n  name: string;\n};\n\nexport class PrivateGatewayNameInvalidError extends FleekError<PrivateGatewayNameInvalidErrorOptions> {\n  public name = 'PrivateGatewayNameInvalidError';\n\n  toString = () => `The private gateway name ${this.data.name} is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\nexport class PrivateGatewaysNotFoundError extends FleekError<Record<string, never>> {\n  public name = 'PrivateGatewaysNotFoundError';\n\n  toString = () => 'No private gateways found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype Template = {\n  id?: string;\n  name?: string;\n};\n\ntype TemplateAlreadyExistsErrorOptions = {\n  template: Template;\n};\n\nexport class TemplateAlreadyExistsError extends FleekError<TemplateAlreadyExistsErrorOptions> {\n  public name = 'TemplateAlreadyExistsError';\n\n  toString = () => `Template already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype TemplateNotFoundErrorOptions = {\n  template: ObjectId;\n};\n\nexport class TemplateNotFoundError extends FleekError<TemplateNotFoundErrorOptions> {\n  public name = 'TemplateNotFoundError';\n\n  toString = () => `Template not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UserHasNoAccessToAnotherUserErrorOptions = Record<string, never>;\n\nexport class UserHasNoAccessToAnotherUserError extends FleekError<UserHasNoAccessToAnotherUserErrorOptions> {\n  public name = 'UserHasNoAccessToAnotherUserError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'You don`t have access to user you try to fetch data for.';\n}\n", "import { FleekError } from './FleekError';\n\ntype Framework = {\n  id?: string;\n  name?: string;\n};\n\ntype SiteFrameworkAlreadyExistsErrorOptions = {\n  framework: Framework;\n};\n\nexport class SiteFrameworkAlreadyExistsError extends FleekError<SiteFrameworkAlreadyExistsErrorOptions> {\n  public name = 'SiteFrameworkAlreadyExistsError';\n\n  toString = () => `Site framework already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype Framework = {\n  id?: string;\n  name?: string;\n};\ntype SiteFrameworkNotFoundErrorOptions = {\n  framework: Framework;\n};\n\nexport class SiteFrameworkNotFoundError extends FleekError<SiteFrameworkNotFoundErrorOptions> {\n  public name = 'SiteFrameworkNotFoundError';\n\n  toString = () => `Site framework not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype TemplateCategoryNotFoundErrorOptions = {\n  category: ObjectId;\n};\n\nexport class TemplateCategoryNotFoundError extends FleekError<TemplateCategoryNotFoundErrorOptions> {\n  public name = 'TemplateCategoryNotFoundError';\n\n  toString = () => `Template category not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype TemplateNotFoundErrorOptions = {\n  template: ObjectId;\n};\n\nexport class TemplateDeploymentNotFoundError extends FleekError<TemplateNotFoundErrorOptions> {\n  public name = 'TemplateDeploymentNotFoundError';\n\n  toString = () => `Template deployment not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype ProjectMembershipHasInefficientRoleErrorOptions = {\n  user: ObjectId;\n  project: ObjectId;\n};\n\nexport class ProjectMembershipHasInefficientRoleError extends FleekError<ProjectMembershipHasInefficientRoleErrorOptions> {\n  public name = 'ProjectMembershipHasInefficientRoleError';\n\n  toString = () => `Membership has inefficient role for this action.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype SecretGroupNotFoundErrorOptions = {\n  secretGroup: ObjectId;\n};\n\nexport class SecretGroupNotFoundError extends FleekError<SecretGroupNotFoundErrorOptions> {\n  public name = 'SecretGroupNotFoundError';\n\n  toString = () => {\n    return 'Secret group was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype SecretNotFoundErrorOptions = {\n  secret: ObjectId;\n};\n\nexport class SecretNotFoundError extends FleekError<SecretNotFoundErrorOptions> {\n  public name = 'SecretNotFoundError';\n\n  toString = () => {\n    return 'Secret was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype SecretVisibilityAlreadyEncryptedErrorOptions = {\n  secret: ObjectId;\n};\n\nexport class SecretVisibilityAlreadyEncryptedError extends FleekError<SecretVisibilityAlreadyEncryptedErrorOptions> {\n  public name = 'SecretVisibilityAlreadyEncryptedError';\n\n  toString = () => {\n    return 'You cannot change visibility of already encrypted secret.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype SecretKeyAlreadyExistsErrorOptions = Record<string, never>;\n\nexport class SecretKeyAlreadyExistsError extends FleekError<SecretKeyAlreadyExistsErrorOptions> {\n  public name = 'SecretKeyAlreadyExistsError';\n\n  toString = () => {\n    return 'Variable with this key is already set.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Secret = {\n  id?: string;\n  groupId?: string;\n  key?: string;\n};\n\ntype SecretFailToEncryptErrorOptions = {\n  secret: Secret;\n};\n\nexport class SecretFailToEncryptError extends FleekError<SecretFailToEncryptErrorOptions> {\n  public name = 'SecretFailToEncryptError';\n\n  toString = () => {\n    return 'Failed to encrypt secret.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Pin = {\n  id?: string;\n  cid?: string;\n  path?: string;\n  projectId?: string;\n};\n\ntype PinNotFoundErrorOptions = {\n  pin: Pin;\n};\n\nexport class PinNotFoundError extends FleekError<PinNotFoundErrorOptions> {\n  public name = 'PinNotFoundError';\n\n  toString = () => {\n    return 'Pin was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Pin = {\n  id?: string;\n  cid?: string;\n  path?: string;\n  projectId?: string;\n};\n\ntype PinAlreadyExistsInProjectErrorOptions = {\n  pin: Pin;\n};\n\nexport class PinAlreadyExistsInProjectError extends FleekError<PinAlreadyExistsInProjectErrorOptions> {\n  public name = 'PinAlreadyExistsInProjectError';\n\n  toString = () => {\n    return `Pin with the same '${this.data.pin.cid ? 'cid' : 'path'}' already exists within the project.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype UnstoppableDeploymentErrorOptions = {\n  deployment: ObjectId;\n};\n\nexport class UnstoppableDeploymentError extends FleekError<UnstoppableDeploymentErrorOptions> {\n  public name = 'UnstoppableDeploymentError';\n\n  toString = () => `Deployment cannot be stopped.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype SiteDeploymentNotReleasedErrorOptions = {\n  deployment: ObjectId;\n};\n\nexport class SiteDeploymentNotReleasedError extends FleekError<SiteDeploymentNotReleasedErrorOptions> {\n  public name = 'SiteDeploymentNotReleasedError';\n\n  toString = () => `Deployment not released.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidDeploymentTriggerErrorOptions = Record<string, never>;\n\nexport class InvalidDeploymentTriggerError extends FleekError<InvalidDeploymentTriggerErrorOptions> {\n  public name = 'InvalidDeploymentTriggerError';\n\n  toString = () => `Deployment can not be triggered, source provider integrations missing.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype IpfsGatewayContentUnreachableErrorOptions = {\n  url: string;\n};\n\nexport class IpfsGatewayContentUnreachableError extends FleekError<IpfsGatewayContentUnreachableErrorOptions> {\n  public name = 'IpfsGatewayContentUnreachableError';\n\n  toString = () => 'Cannot get IPFS content through Fleek gateway.';\n}\n", "import { FleekError } from './FleekError';\n\ntype Invitation = {\n  id?: string;\n  hash?: string;\n};\n\ntype InvitationNotFoundErrorOptions = {\n  invitation: Invitation;\n};\n\nexport class InvitationNotFoundError extends FleekError<InvitationNotFoundErrorOptions> {\n  public name = 'InvitationNotFoundError';\n\n  toString = () => {\n    return 'Invitation was not found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\nexport class MigrationTokenInvalidError extends FleekError<object> {\n  public name = 'MigrationTokenInvalidError';\n\n  toString = () => 'Migration token is invalid or expired.';\n}\n", "import { FleekError } from './FleekError';\n\nexport class MigrationRequestsAlreadyExistError extends FleekError<object> {\n  public name = 'MigrationRequestsAlreadyExistError';\n\n  toString = () => `All migration requests specified in token are either completed or in progress.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype MigrationRequestNotFoundErrorOptions = {\n  migrationRequest: ObjectId;\n};\n\nexport class MigrationRequestNotFoundError extends FleekError<MigrationRequestNotFoundErrorOptions> {\n  public name = 'MigrationRequestNotFoundError';\n\n  toString = () => `Migration request ${this.data.migrationRequest.id} not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype MigrationRequestInPendingStateErrorOptions = {\n  migrationRequest: ObjectId;\n};\n\nexport class MigrationRequestInPendingStateError extends FleekError<MigrationRequestInPendingStateErrorOptions> {\n  public name = 'MigrationRequestInPendingStateError';\n\n  toString = () => 'Migration request is in pending state. Please wait and try action again later.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id: string | null;\n};\n\ntype User = ObjectId & {\n  email: string | null;\n};\n\ntype ProjectInvitationAlreadyExistErrorOptions = {\n  user: User;\n  project: ObjectId;\n};\n\nexport class ProjectInvitationAlreadyExistError extends FleekError<ProjectInvitationAlreadyExistErrorOptions> {\n  public name = 'ProjectInvitationAlreadyExistError';\n\n  toString = () => `Project invitation with email ${this.data.user.email} for this project already exist.`;\n}\n", "import { FleekError } from './FleekError';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ProjectMembershipAlreadyExistErrorArgs = Record<string, any>;\n\nexport class ProjectMembershipAlreadyExistError extends FleekError<ProjectMembershipAlreadyExistErrorArgs> {\n  public name = 'ProjectMembershipAlreadyExistError';\n\n  toString = () => `Project membership already exists.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype ProjectMembershipNoOwnersErrorOptions = {\n  project: ObjectId;\n  user: ObjectId;\n};\n\nexport class ProjectMembershipNoOwnersError extends FleekError<ProjectMembershipNoOwnersErrorOptions> {\n  public name = 'ProjectMembershipNoOwnersError';\n\n  toString = () => `Each project must have at least OWNER-role one membership.`;\n}\n", "import { FleekError } from './FleekError';\n\nexport class UploadedS3KeyNotFoundError extends FleekError<Record<string, never>> {\n  public name = 'UploadedS3KeyNotFoundError';\n\n  toString = () => 'Uploaded S3 Key not found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype PathIsNotADirectoryErrorOptions = {\n  path: string;\n};\n\nexport class PathIsNotADirectoryError extends FleekError<PathIsNotADirectoryErrorOptions> {\n  public name = 'PathIsNotADirectoryError';\n\n  toString = () => {\n    return `Given path ${this.data.path} is not a directory.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FunctionFields = {\n  name?: string;\n  slug?: string;\n};\n\ntype FleekFunctionAlreadyExistsErrorOptions = {\n  function: FunctionFields;\n};\n\nexport class FleekFunctionAlreadyExistsError extends FleekError<FleekFunctionAlreadyExistsErrorOptions> {\n  public name = 'FleekFunctionAlreadyExistsError';\n\n  toString = () => {\n    if ('name' in this.data.function || 'slug' in this.data.function) {\n      return `Function ${this.data.function.name || this.data.function.slug} already exists.`;\n    }\n\n    return `Unexpected Function data structure ${JSON.stringify(this.data.function)}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FunctionFields = {\n  id?: string;\n  name?: string;\n};\n\ntype FleekFunctionNotFoundErrorOptions = {\n  function?: FunctionFields;\n};\n\nexport class FleekFunctionNotFoundError extends FleekError<FleekFunctionNotFoundErrorOptions> {\n  public name = 'FleekFunctionNotFoundError';\n\n  toString = () => {\n    if (this.data.function?.name) {\n      return `Function ${this.data.function.name} not found.`;\n    }\n\n    return `Function not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype FleekFunctionDeploymentNotFoundErrorOptions = {\n  deployment?: ObjectId;\n};\n\nexport class FleekFunctionDeploymentNotFoundError extends FleekError<FleekFunctionDeploymentNotFoundErrorOptions> {\n  public name = 'FleekFunctionDeploymentNotFoundError';\n\n  toString = () => {\n    return `Deployment not found.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype FleekFunctionsNotFoundErrorOptions = {};\n\nexport class FleekFunctionsNotFoundError extends FleekError<FleekFunctionsNotFoundErrorOptions> {\n  public name = 'FleekFunctionsNotFoundError';\n\n  toString = () => 'No functions found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionPathNotValidErrorOptions = {\n  path: string;\n};\n\nexport class FleekFunctionPathNotValidError extends FleekError<FleekFunctionPathNotValidErrorOptions> {\n  public name = 'FleekFunctionPathNotValidError';\n\n  toString = () => {\n    return `File or folder at path, ${this.data.path} is invalid. Please refer to our documentation for more information on function file conventions.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionNameNotValidErrorOptions = {\n  name: string;\n};\n\nexport class FleekFunctionNameNotValidError extends FleekError<FleekFunctionNameNotValidErrorOptions> {\n  public name = 'FleekFunctionNameNotValidError';\n\n  toString = () => {\n    return `The name, ${this.data.name}, is invalid`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionStatusNotValidErrorOptions = Record<string, never>;\n\nexport class FleekFunctionStatusNotValidError extends FleekError<FleekFunctionStatusNotValidErrorOptions> {\n  public name = 'FleekFunctionStatusNotValidError';\n\n  toString = () => {\n    return `The function status is invalid. Must be one of ACTIVE and INACTIVE`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionSlugNotValidErrorOptions = {\n  slug: string;\n};\n\nexport class FleekFunctionSlugNotValidError extends FleekError<FleekFunctionSlugNotValidErrorOptions> {\n  public name = 'FleekFunctionSlugNotValidError';\n\n  toString = () => {\n    return `The slug, ${this.data.slug}, is invalid`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype MaintenanceErrorOptions = Record<string, never>;\n\nexport class MaintenanceError extends FleekError<MaintenanceErrorOptions> {\n  public name = 'MaintenanceError';\n\n  public extensions = {\n    http: {\n      status: 503, // Service Unavailable\n    },\n  };\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'The platform is under maintenance. Please try again later.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype UserHasNoAccessToFeatureErrorOptions = {\n  user: ObjectId;\n  feature: { name: string };\n};\n\nexport class UserHasNoAccessToFeatureError extends FleekError<UserHasNoAccessToFeatureErrorOptions> {\n  public name = 'UserHasNoAccessToFeatureError';\n\n  toString = () => `User has no access to this feature.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidCidErrorOptions = {\n  name: string;\n};\n\nexport class InvalidCidError extends FleekError<InvalidCidErrorOptions> {\n  public name = 'InvalidCidError';\n\n  toString = () => `The cid ${this.data.name} is invalid.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ValidationErrorOptions = Record<string, string>;\n\nexport class ValidationError extends FleekError<ValidationErrorOptions> {\n  public name = 'ValidationError';\n\n  toString = () => `${JSON.stringify(this.data)}`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UserInBlocklistErrorOptions = Record<string, never>;\n\nexport class UserInBlocklistError extends FleekError<UserInBlocklistErrorOptions> {\n  public name = 'UserInBlocklistError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => 'User is in the blocklist.';\n}\n", "import { FleekError } from './FleekError';\n\ntype EnsNameContentHashCodecMistmatchErrorOptions = {\n  codec: string;\n};\n\nexport class EnsNameContentHashCodecMistmatchError extends FleekError<EnsNameContentHashCodecMistmatchErrorOptions> {\n  public name = 'EnsNameContentHashCodecMistmatchError';\n\n  toString = () => {\n    return `The content hash does not match or does not corresponds to ${this.data.codec} protocol`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype EnsNameContentHashUndefinedErrorOptions = {\n  ensRecord: Record<'name', string>;\n};\n\nexport class EnsNameContentHashUndefinedError extends FleekError<EnsNameContentHashUndefinedErrorOptions> {\n  public name = 'EnsNameContentHashUndefinedError';\n\n  toString = () => {\n    return `The content hash for ENS record name \"${this.data.ensRecord.name}\" is undefined.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype DnsConfigAlreadyExistsErrorOptions = {\n  name: string;\n};\n\nexport class DnsConfigAlreadyExistsError extends FleekError<DnsConfigAlreadyExistsErrorOptions> {\n  public name = 'DnsConfigAlreadyExistsError';\n\n  toString = () => `DNS config already exists for \"${this.data.name}\".`;\n}\n", "import { FleekError } from './FleekError';\n\ntype DnsConfigNotFoundErrorOptions = {\n  name: string;\n};\n\nexport class DnsConfigNotFoundError extends FleekError<DnsConfigNotFoundErrorOptions> {\n  public name = 'DnsConfigNotFoundError';\n\n  toString = () => `DNS config for the \"${this.data.name}\" name doesn't exist.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype TwoFactorSecretKeyFailedToEncryptErrorOptions = Record<string, never>;\n\nexport class TwoFactorSecretKeyFailedToEncryptError extends FleekError<TwoFactorSecretKeyFailedToEncryptErrorOptions> {\n  public name = 'TwoFactorSecretKeyFailedToEncryptError';\n\n  toString = () => 'Failed to encrypt 2FA secret key.';\n}\n", "import { FleekError } from './FleekError';\n\ntype UserSecretKeyAlreadyExistsErrorOptions = Record<string, never>;\n\nexport class UserSecretKeyAlreadyExistsError extends FleekError<UserSecretKeyAlreadyExistsErrorOptions> {\n  public name = 'UserSecretKeyAlreadyExistsError';\n\n  toString = () => 'A secret key for this user already exists.';\n}\n", "import { FleekError } from './FleekError';\n\ntype UserSecretKeyNotFoundErrorOptions = Record<string, never>;\n\nexport class UserSecretKeyNotFoundError extends FleekError<UserSecretKeyNotFoundErrorOptions> {\n  public name = 'UserSecretKeyNotFoundError';\n\n  toString = () => 'A secret key for this user not found.';\n}\n", "import { FleekError } from './FleekError';\n\ntype TwoFactorSecretKeyFailedToDecryptErrorOptions = Record<string, never>;\n\nexport class TwoFactorSecretKeyFailedToDecryptError extends FleekError<TwoFactorSecretKeyFailedToDecryptErrorOptions> {\n  public name = 'TwoFactorSecretKeyFailedToDecryptError';\n\n  toString = () => 'Failed to decrypt 2FA secret key.';\n}\n", "import { FleekError } from './FleekError';\n\ntype RecoveryCodesAlreadyExistsErrorOptions = Record<string, never>;\n\nexport class RecoveryCodesAlreadyExistsError extends FleekError<RecoveryCodesAlreadyExistsErrorOptions> {\n  public name = 'RecoveryCodesAlreadyExistsError';\n\n  toString = () => 'Recovery codes already exists.';\n}\n", "import { FleekError } from './FleekError';\n\ntype WriteFileFromStreamErrorOptions = Record<string, never>;\n\nexport class WriteFileFromStreamError extends FleekError<WriteFileFromStreamErrorOptions> {\n  public name = 'WriteFileFromStreamError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `There was an error while writing file from stream in globSource`;\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidTOTPTokenErrorOptions = {\n  token: string;\n};\n\nexport class InvalidTOTPTokenError extends FleekError<InvalidTOTPTokenErrorOptions> {\n  public name = 'InvalidTOTPTokenError';\n\n  toString = () => 'TOTP token is invalid.';\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidRecoveryCodeErrorOptions = {\n  code: string;\n};\n\nexport class InvalidRecoveryCodeError extends FleekError<InvalidRecoveryCodeErrorOptions> {\n  public name = 'InvalidRecoveryCodeError';\n\n  toString = () => 'Recovery code is invalid.';\n}\n", "import { FleekError } from './FleekError';\n\ntype MissingTwoFactorProtectionCredentialsErrorOptions = Record<string, never>;\n\nexport class MissingTwoFactorProtectionCredentialsError extends FleekError<MissingTwoFactorProtectionCredentialsErrorOptions> {\n  public name = 'MissingTwoFactorProtectionCredentialsError';\n\n  toString = () => 'Missing two factor protection credentials. Either a token or a recovery key should be provided.';\n}\n", "import { FleekError } from './FleekError';\n\nexport class DeploymentInProgressError extends FleekError<object> {\n  public name = 'DeploymentInProgressError';\n\n  toString = () => 'Deployment is already in progress.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype PullzoneNotFoundForZoneIdErrorOptions = ObjectId;\n\nexport class PullzoneNotFoundForZoneIdError extends FleekError<PullzoneNotFoundForZoneIdErrorOptions> {\n  public name = 'PullzoneNotFoundForZoneIdError';\n\n  toString = () => {\n    return `The pullzone is not found for zone id: ${this.data.id}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype RecoveryCodeFailedToEncryptErrorOptions = Record<string, never>;\n\nexport class RecoveryCodeFailedToEncryptError extends FleekError<RecoveryCodeFailedToEncryptErrorOptions> {\n  public name = 'RecoveryCodeFailedToEncryptError';\n\n  toString = () => 'Failed to encrypt recovery code.';\n}\n", "import { FleekError } from './FleekError';\n\ntype RecoveryCodeFailedToDecryptErrorOptions = Record<string, never>;\n\nexport class RecoveryCodeFailedToDecryptError extends FleekError<RecoveryCodeFailedToDecryptErrorOptions> {\n  public name = 'RecoveryCodeFailedToDecryptError';\n\n  toString = () => 'Failed to decrypt recovery code.';\n}\n", "import { FleekError } from './FleekError';\n\ntype ObjectId = {\n  id?: string;\n};\n\ntype PermissionGroupNotFoundErrorOptions = {\n  permissionGroup: ObjectId;\n};\n\nexport class PermissionGroupNotFoundError extends FleekError<PermissionGroupNotFoundErrorOptions> {\n  public name = 'PermissionGroupNotFoundError';\n\n  toString = () => 'Permission group not found';\n}\n", "import { FleekError } from './FleekError';\n\ntype PermissionScopeErrorOptions = {\n  scope: string;\n};\n\nexport class PermissionScopeError extends FleekError<PermissionScopeErrorOptions> {\n  public name = 'PermissionScopeError';\n\n  toString = () => `Permission scope ${this.data.scope} doesn't exist.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype InvalidAdminAccessTokenErrorOptions = {\n  adminAccessToken: string;\n};\n\nexport class InvalidAdminAccessTokenError extends FleekError<InvalidAdminAccessTokenErrorOptions> {\n  public name = 'InvalidAdminAccessTokenError';\n\n  toString = () => 'Admin access token is invalid.';\n}\n", "import { FleekError } from './FleekError';\n\nexport class MissingExpectedDataError extends FleekError<void> {\n  public name = 'MissingExpectedDataError';\n\n  toString = () => 'Oops! This is embarassing but the app is missing important data. Please report this issue to the team.';\n}\n", "import { FleekError } from './FleekError';\n\nexport class EnvNotSetError extends FleekError<string> {\n  public name = 'EnvNotSetError';\n\n  toString = () => (this.data ? `Environment variable \"${this.data}\" is not set.` : `Missing the defined object key pair values.`);\n}\n", "import { FleekError } from './FleekError';\n\ntype GitSecretsFailedToEncryptErrorOptions = Record<string, never>;\n\nexport class GitSecretsFailedToEncryptError extends FleekError<GitSecretsFailedToEncryptErrorOptions> {\n  public name = 'GitSecretsFailedToEncryptError';\n\n  toString = () => 'Failed to encrypt Git Secrets.';\n}\n", "import { FleekError } from './FleekError';\n\ntype GitConfigFailedToParseErrorOptions = Record<string, never>;\n\nexport class GitConfigFailedToParseError extends FleekError<GitConfigFailedToParseErrorOptions> {\n  public name = 'GitSecretsFailedToEncryptError';\n\n  toString = () => 'Failed to parse Git Configs.';\n}\n", "import { FleekError } from './FleekError';\n\ntype PathIsNotAFileErrorOptions = {\n  path: string;\n};\n\nexport class PathIsNotAFileError extends FleekError<PathIsNotAFileErrorOptions> {\n  public name = 'PathIsNotAFileError';\n\n  toString = () => {\n    return `Given path ${this.data.path} is not a file.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionBundlingFailedErrorOptions = {\n  error: string;\n};\n\nexport class FleekFunctionBundlingFailedError extends FleekError<FleekFunctionBundlingFailedErrorOptions> {\n  public name = 'FleekFunctionBundlingFailedError';\n\n  toString = () => {\n    return `Bundle creation failed. For information on supported packages, please consult our documentation.\\nError: ${this.data.error}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype GitIntegrationNotFoundErrorOptions = { id: string } | { siteId: string };\n\nexport class GitIntegrationNotFoundError extends FleekError<GitIntegrationNotFoundErrorOptions> {\n  public name = 'GitIntegrationNotFoundError';\n\n  toString = () => {\n    let infix = '';\n\n    if ('siteId' in this.data) {\n      infix = `for site ${this.data.siteId}`;\n    } else if ('id' in this.data) {\n      infix = `with id ${this.data.id}`;\n    }\n\n    return `Git Integration ${infix} not found`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype GitProviderNotFoundErrorOptions = {\n  providerId?: string;\n};\n\nexport class GitProviderNotFoundError extends FleekError<GitProviderNotFoundErrorOptions> {\n  public name = 'GitProviderNotFoundError';\n\n  toString = () => {\n    return `No Git Provider found with id: ${this.data.providerId}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype Values = {\n  receivedValue: string;\n  expectedValues: string[];\n};\n\nexport class ExpectedOneOfValuesError extends FleekError<Values> {\n  public name = 'ExpectedOneOfValuesError';\n\n  toString = () => `Expected one of ${this.data.expectedValues.join(', ')} but got ${this.data.receivedValue}`;\n}\n", "import { FleekError } from './FleekError';\n\nexport class InvalidJSONFormat extends FleekError<void> {\n  public name = 'InvalidJSONFormat';\n\n  toString = () => `Invalid JSON format.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype StorageUploadFileCountQuotaExceededErrorOptions = {\n  quota?: number;\n};\n\nexport class StorageUploadFileCountQuotaExceededError extends FleekError<StorageUploadFileCountQuotaExceededErrorOptions> {\n  public name = 'StorageUploadFileCountQuotaExceededError';\n\n  constructor(data: StorageUploadFileCountQuotaExceededErrorOptions = {}) {\n    super(data);\n  }\n\n  toString = () => {\n    if (this.data?.quota) {\n      return `Sorry, you have reached your daily limit of ${this.data.quota} file uploads. We are unable to process your request.`;\n    }\n\n    return 'You have exceeded your file upload limit for the past 24 hours.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype StorageUploadTotalSizeQuotaExceededErrorOptions = {\n  quota?: number;\n};\n\nexport class StorageUploadTotalSizeQuotaExceededError extends FleekError<StorageUploadTotalSizeQuotaExceededErrorOptions> {\n  public name = 'StorageUploadTotalSizeQuotaExceededError';\n\n  constructor(data: StorageUploadTotalSizeQuotaExceededErrorOptions = {}) {\n    super(data);\n  }\n\n  toString = () => {\n    if (this.data?.quota) {\n      return `Sorry, you have reached your daily upload limit of ${Math.round(\n        this.data.quota / 1000 ** 3\n      )}GB. We are unable to process your request.`;\n    }\n\n    return 'You have exceeded your storage upload quota for the last 24 hours.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype GitProviderNotSupportedErrorOptions = {\n  provider: string;\n};\n\nexport class GitProviderNotSupportedError extends FleekError<GitProviderNotSupportedErrorOptions> {\n  public name = 'GitProviderNotSupportedError';\n\n  toString = () => `Git provider: ${this.data.provider} not Supported`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitProviderNotAuthorizedErrorOptions = {\n  provider: string;\n};\n\nexport class GitProviderNotAuthorizedError extends FleekError<GitProviderNotAuthorizedErrorOptions> {\n  public name = 'GitProviderNotAuthorizedError';\n\n  toString = () => `The user has not authorized the Git provider: ${this.data.provider}`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitAccessTokenInvalidErrorOptions = {\n  projectId?: string;\n};\n\nexport class GitAccessTokenInvalidError extends FleekError<GitAccessTokenInvalidErrorOptions> {\n  public name = 'GitAccessTokenInvalidError';\n\n  toString = () => {\n    return 'The git access token for the user is invalid';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype QueuedDeploymentsLimitErrorOptions = {\n  limit: number;\n};\n\nexport class QueuedDeploymentsLimitError extends FleekError<QueuedDeploymentsLimitErrorOptions> {\n  public name = 'QueuedDeploymentsLimitError';\n\n  toString = () => `You've reached the limit of ${this.data.limit} queued deployments.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitIntegrationInstallationConflictErrorOptions = Record<string, never>;\n\nexport class GitIntegrationInstallationConflictError extends FleekError<GitIntegrationInstallationConflictErrorOptions> {\n  public name = 'GitIntegrationInstallationConflictError';\n\n  toString = () => `The Git Integration installation for this provider already exists in this project`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitLinkMultipleAccountErrorOptions = Record<string, never>;\n\nexport class GitLinkMultipleAccountError extends FleekError<GitLinkMultipleAccountErrorOptions> {\n  public name = 'GitLinkMultipleAccountError';\n\n  toString = () => `Oops! You already have a Git profile linked to your Fleek account. We don't allow multiple connections`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitRepoByNameAndOwnerNotFoundErrorOptions = {\n  repo: string;\n  owner: string;\n};\n\nexport class GitRepoByNameAndOwnerNotFoundError extends FleekError<GitRepoByNameAndOwnerNotFoundErrorOptions> {\n  public name = 'GitRepoByNameAndOwnerNotFoundError';\n\n  toString = () => `Git repo \"${this.data.owner}/${this.data.repo}\" not found`;\n}\n", "import { FleekError } from './FleekError';\n\ntype GitAccessTokenNotFoundErrorOptions = Record<never, never>;\n\nexport class GitAccessTokenNotFoundError extends FleekError<GitAccessTokenNotFoundErrorOptions> {\n  public name = 'GitAccessTokenNotFoundError';\n\n  toString = () => {\n    return 'The git access token for the user is not found';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FolderNotFoundErrorOptions = {\n  folder: { id?: string; path?: string };\n};\n\nexport class FolderNotFoundError extends FleekError<FolderNotFoundErrorOptions> {\n  public name = 'FolderNotFoundError';\n\n  toString = () => `Folder was not found.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype FolderAlreadyExistsErrorOptions = {\n  folder: { parentFolderId: string | null; name: string };\n};\n\nexport class FolderAlreadyExistsError extends FleekError<FolderAlreadyExistsErrorOptions> {\n  public name = 'FolderAlreadyExistsError';\n\n  toString = () =>\n    `Folder ${this.data.folder.name} already exists in ${this.data.folder.parentFolderId ? 'parent' : 'root project'} folder.`;\n}\n", "import { FleekError } from './FleekError';\n\nexport type FolderNameContainsReservedWordErrorOptions = {\n  name: string;\n};\n\nexport class FolderNameContainsReservedWordError extends FleekError<FolderNameContainsReservedWordErrorOptions> {\n  public name = 'FolderNameContainsReservedWorkError';\n\n  toString = () => `Folder name ${this.data.name} is reserved word and you cannot use it.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype PinsNotFoundErrorOptions = {\n  filename?: string;\n};\n\nexport class PinsNotFoundError extends FleekError<PinsNotFoundErrorOptions> {\n  public name = 'PinsNotFoundError';\n\n  toString = () => {\n    return 'No pins found.';\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype SiteCreationFailedErrorOptions = Record<string, never>;\n\nexport class SiteCreationFailedError extends FleekError<SiteCreationFailedErrorOptions> {\n  public name = 'SiteCreationFailedError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Site creation failed.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionInvalidWasmCodeErrorOptions = Record<string, never>;\n\nexport class FleekFunctionInvalidWasmCodeError extends FleekError<FleekFunctionInvalidWasmCodeErrorOptions> {\n  public name = 'FleekFunctionInvalidWasmCodeError';\n\n  toString = () => {\n    return `Fleek function encountered corrupt or invalid WASM code.`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekFunctionWasmEncryptionFailedErrorOptions = Record<string, never>;\n\nexport class FleekFunctionWasmEncryptionFailedError extends FleekError<FleekFunctionWasmEncryptionFailedErrorOptions> {\n  public name = 'FleekFunctionWasmEncryptionFailedError';\n\n  toString = () => {\n    return `Unable to encrypt WASM code for Fleek function`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype UploadProxyStoreAsCarErrorOptions = Record<string, never>;\n\nexport class UploadProxyStoreAsCarError extends FleekError<UploadProxyStoreAsCarErrorOptions> {\n  public name = 'UploadProxyStoreAsCarError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Failed to Store as a CAR file.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UploadProxyUploadFileErrorOptions = Record<string, never>;\n\nexport class UploadProxyUploadFileError extends FleekError<UploadProxyUploadFileErrorOptions> {\n  public name = 'UploadProxyUploadFileError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `Failed to Upload file.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype IpfsDenylistUpdateWorkflowTriggerFailedErrorOptions = {\n  error: string;\n};\n\nexport class IpfsDenylistUpdateWorkflowTriggerFailedError extends FleekError<IpfsDenylistUpdateWorkflowTriggerFailedErrorOptions> {\n  public name = 'IpfsDenylistUpdateWorkflowTriggerFailedError';\n\n  toString = () => {\n    return `Failed to trigger IPFS denylist update workflow: ${this.data.error}`;\n  };\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectSiteLimitExceededErrorOptions = Record<string, never>;\n\nexport class ProjectSiteLimitExceededError extends FleekError<ProjectSiteLimitExceededErrorOptions> {\n  public name = 'ProjectSiteLimitExceededError';\n\n  toString = () => `You've reached the maximum number of sites for this project. Contact our Support team if you have any questions.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectFleekFunctionLimitExceededErrorOptions = Record<string, never>;\n\nexport class ProjectFleekFunctionLimitExceededError extends FleekError<ProjectFleekFunctionLimitExceededErrorOptions> {\n  public name = 'ProjectFleekFunctionLimitExceededError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () =>\n    `You've reached the maximum number of Fleek functions for this project. Contact our Support team if you have any questions.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype UserProjectLimitExceededErrorOptions = Record<string, never>;\n\nexport class UserProjectLimitExceededError extends FleekError<UserProjectLimitExceededErrorOptions> {\n  public name = 'UserProjectLimitExceededError';\n\n  constructor() {\n    super({});\n  }\n\n  toString = () => `You've reached the maximum number of projects for your account. Contact our Support team if you have any questions.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectDomainsLimitExceededErrorOptions = Record<string, never>;\n\nexport class ProjectDomainsLimitExceededError extends FleekError<ProjectDomainsLimitExceededErrorOptions> {\n  public name = 'ProjectDomainsLimitExceededError';\n\n  toString = () => `You've reached the maximum number of domains for this project. Contact our Support team if you have any questions.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype ProjectMembershipsLimitExceededErrorOptions = Record<string, never>;\n\nexport class ProjectMembershipsLimitExceededError extends FleekError<ProjectMembershipsLimitExceededErrorOptions> {\n  public name = 'ProjectMembershipsLimitExceededError';\n\n  toString = () => `You've reached the maximum number of memberships for this project. Contact our Support team if you have any questions.`;\n}\n", "import { FleekError } from './FleekError';\n\ntype FleekRestApiInternalErrorOptions = {\n  message: string;\n};\n\nexport class FleekRestApiInternalError extends FleekError<FleekRestApiInternalErrorOptions> {\n  public name = 'FleekRestApiInternalError';\n\n  toString = () => this.data.message;\n}\n", "export { FleekError } from './FleekError';\nexport { BunnyPullZoneNotFoundError } from './BunnyPullZoneNotFoundError';\nexport { DomainNotFoundError } from './DomainNotFoundError';\nexport { DomainsNotFoundError } from './DomainsNotFoundError';\nexport { DomainAlreadyExistsInProjectError } from './DomainAlreadyExistsInProjectError';\nexport { DomainInPendingStateError } from './DomainInPendingStateError';\nexport { DomainHostnameInvalidError } from './DomainHostnameInvalidError';\nexport { UnknownError } from './UnknownError';\nexport { SiteNotFoundError } from './SiteNotFoundError';\nexport { SitesNotFoundError } from './SitesNotFoundError';\nexport { SiteAlreadyExistsError } from './SiteAlreadyExistsError';\nexport { SiteDeploymentNotFoundError } from './SiteDeploymentNotFoundError';\nexport { SiteHasDependentsError } from './SiteHasDependentsError';\nexport { SiteHasNoSourceProviderError } from './SiteHasNoSourceProviderError';\nexport { SiteNotDeployedError } from './SiteNotDeployedError';\nexport { IpnsRecordNotFoundError } from './IpnsRecordNotFoundError';\nexport { IpnsRecordsNotFoundError } from './IpnsRecordsNotFoundError';\nexport { IpnsFailToDecryptKeyError } from './IpnsFailToDecryptKeyError';\nexport { IpnsRecordsForSiteLimitError } from './IpnsRecordsForSiteLimitError';\nexport { StorageIpfsUploadFailedError } from './StorageIpfsUploadFailedError';\nexport { SdkRequiredNodeRuntimeError } from './SdkRequiredNodeRuntimeError';\nexport { AuthorizationError } from './AuthorizationError';\nexport { ProjectMembershipNotFoundError } from './ProjectMembershipNotFoundError';\nexport { GithubAppInstallationNotFoundError } from './GithubAppInstallationNotFoundError';\nexport { UserNotFoundError } from './UserNotFoundError';\nexport { UserAlreadyExistsError } from './UserAlreadyExistsError';\nexport { ProjectNotFoundError } from './ProjectNotFoundError';\nexport { ProjectsNotFoundError } from './ProjectsNotFoundError';\nexport { ProjectHasDependentsError } from './ProjectHasDependentsError';\nexport { ProjectInvalidNameError } from './ProjectInvalidNameError';\nexport { PublicKeyAlreadyExistsError } from './PublicKeyAlreadyExistsError';\nexport { VerificationSessionAlreadyExistsError } from './VerificationSessionAlreadyExistsError';\nexport { UnauthenticatedError } from './UnauthenticatedError';\nexport { DomainZoneNotFoundError } from './DomainZoneNotFoundError';\nexport { DomainZoneHasDependentsError } from './DomainZoneHasDependentsError';\nexport { DomainZoneInPendingStateError } from './DomainZoneInPendingStateError';\nexport { DomainNotFoundUnderPullzoneError } from './DomainNotFoundUnderPullzoneError';\nexport { DomainZoneInvalidTypeError } from './DomainZoneInvalidTypeError';\nexport { UnauthorizedError } from './UnauthorizedError';\nexport { FleekConfigInvalidContentError } from './FleekConfigInvalidContentError';\nexport { FleekConfigMissingFileError } from './FleekConfigMissingFileError';\nexport { ApplicationWhitelistDomainDuplicityError } from './ApplicationWhitelistDomainDuplicityError';\nexport { ApplicationAlreadyExistsError } from './ApplicationAlreadyExistsError';\nexport { ApplicationsNotFoundError } from './ApplicationsNotFoundError';\nexport { ApplicationNotFoundError } from './ApplicationNotFoundError';\nexport { ApplicationNameInvalidError } from './ApplicationNameInvalidError';\nexport { EnsRecordNotFoundError } from './EnsRecordNotFoundError';\nexport { EnsRecordAlreadyExistsInProjectError } from './EnsRecordAlreadyExistsInProjectError';\nexport { EnsNameInvalidError } from './EnsNameInvalidError';\nexport { EnsRecordInPendingStateError } from './EnsRecordInPendingStateError';\nexport { InvalidPersonalAccessTokenError } from './InvalidPersonalAccessTokenError';\nexport { PersonalAccessTokenNotFoundError } from './PersonalAccessTokenNotFoundError';\nexport { PrivateGatewayNotFoundError } from './PrivateGatewayNotFoundError';\nexport { PrivateGatewayAlreadyExistsError } from './PrivateGatewayAlreadyExistsError';\nexport { PrivateGatewayNameInvalidError } from './PrivateGatewayNameInvalidError';\nexport { PrivateGatewaysNotFoundError } from './PrivateGatewaysNotFoundError';\nexport { TemplateAlreadyExistsError } from './TemplateAlreadyExistsError';\nexport { TemplateNotFoundError } from './TemplateNotFoundError';\nexport { UserHasNoAccessToAnotherUserError } from './UserHasNoAccessToAnotherUserError';\nexport { SiteFrameworkAlreadyExistsError } from './SiteFrameworkAlreadyExistsError';\nexport { SiteFrameworkNotFoundError } from './SiteFrameworkNotFoundError';\nexport { TemplateCategoryNotFoundError } from './TemplateCategoryNotFoundError';\nexport { TemplateDeploymentNotFoundError } from './TemplateDeploymentNotFoundError';\nexport { ProjectMembershipHasInefficientRoleError } from './ProjectMembershipHasInefficientRoleError';\nexport { SecretGroupNotFoundError } from './SecretGroupNotFoundError';\nexport { SecretNotFoundError } from './SecretNotFoundError';\nexport { SecretVisibilityAlreadyEncryptedError } from './SecretVisibilityAlreadyEncryptedError';\nexport { SecretKeyAlreadyExistsError } from './SecretKeyAlreadyExistsError';\nexport { SecretFailToEncryptError } from './SecretFailToEncryptError';\nexport { PinNotFoundError } from './PinNotFoundError';\nexport { PinAlreadyExistsInProjectError } from './PinAlreadyExistsInProjectError';\nexport { UnstoppableDeploymentError } from './UnstoppableDeploymentError';\nexport { SiteDeploymentNotReleasedError } from './SiteDeploymentNotReleasedError';\nexport { InvalidDeploymentTriggerError } from './InvalidDeploymentTriggerError';\nexport { IpfsGatewayContentUnreachableError } from './IpfsGatewayContentUnreachableError';\nexport { InvitationNotFoundError } from './InvitationNotFoundError';\nexport { MigrationTokenInvalidError } from './MigrationTokenInvalidError';\nexport { MigrationRequestsAlreadyExistError } from './MigrationRequestsAlreadyExistError';\nexport { MigrationRequestNotFoundError } from './MigrationRequestNotFoundError';\nexport { MigrationRequestInPendingStateError } from './MigrationRequestInPendingStateError';\nexport { ProjectInvitationAlreadyExistError } from './ProjectInvitationAlreadyExistError';\nexport { ProjectMembershipAlreadyExistError } from './ProjectMembershipAlreadyExistError';\nexport { ProjectMembershipNoOwnersError } from './ProjectMembershipNoOwnersError';\nexport { UploadedS3KeyNotFoundError } from './UploadedS3KeyNotFoundError';\nexport { PathIsNotADirectoryError } from './PathIsNotADirectoryError';\nexport { FleekFunctionAlreadyExistsError } from './FleekFunctionAlreadyExistsError';\nexport { FleekFunctionNotFoundError } from './FleekFunctionNotFoundError';\nexport { FleekFunctionDeploymentNotFoundError } from './FleekFunctionDeploymentNotFoundError';\nexport { FleekFunctionsNotFoundError } from './FleekFunctionsNotFoundError';\nexport { FleekFunctionPathNotValidError } from './FleekFunctionPathNotValidError';\nexport { FleekFunctionNameNotValidError } from './FleekFunctionNameNotValidError';\nexport { FleekFunctionStatusNotValidError } from './FleekFunctionStatusNotValidError';\nexport { FleekFunctionSlugNotValidError } from './FleekFunctionSlugNotValidError';\nexport { MaintenanceError } from './MaintenanceError';\nexport { UserHasNoAccessToFeatureError } from './UserHasNoAccessToFeatureError';\nexport { InvalidCidError } from './InvalidCidError';\nexport { ValidationError } from './ValidationError';\nexport { UserInBlocklistError } from './UserInBlocklistError';\nexport { EnsNameContentHashCodecMistmatchError } from './EnsNameContentHashCodecMistmatchError';\nexport { EnsNameContentHashUndefinedError } from './EnsNameContentHashUndefinedError';\nexport { DnsConfigAlreadyExistsError } from './DnsConfigAlreadyExistsError';\nexport { DnsConfigNotFoundError } from './DnsConfigNotFoundError';\nexport { TwoFactorSecretKeyFailedToEncryptError } from './TwoFactorSecretKeyFailedToEncryptError';\nexport { UserSecretKeyAlreadyExistsError } from './UserSecretKeyAlreadyExistsError';\nexport { UserSecretKeyNotFoundError } from './UserSecretKeyNotFoundError';\nexport { TwoFactorSecretKeyFailedToDecryptError } from './TwoFactorSecretKeyFailedToDecryptError';\nexport { RecoveryCodesAlreadyExistsError } from './RecoveryCodesAlreadyExistsError';\nexport { WriteFileFromStreamError } from './WriteFileFromStreamError';\nexport { InvalidTOTPTokenError } from './InvalidTOTPTokenError';\nexport { InvalidRecoveryCodeError } from './InvalidRecoveryCodeError';\nexport { MissingTwoFactorProtectionCredentialsError } from './MissingTwoFactorProtectionCredentialsError';\nexport { DeploymentInProgressError } from './DeploymentInProgressError';\nexport { PullzoneNotFoundForZoneIdError } from './PullzoneNotFoundForZoneIdError';\nexport { RecoveryCodeFailedToEncryptError } from './RecoveryCodeFailedToEncryptError';\nexport { RecoveryCodeFailedToDecryptError } from './RecoveryCodeFailedToDecryptError';\nexport { PermissionGroupNotFoundError } from './PermissionGroupNotFoundError';\nexport { PermissionScopeError } from './PermissionScopeError';\nexport { InvalidAdminAccessTokenError } from './InvalidAdminAccessTokenError';\nexport { MissingExpectedDataError } from './MissingExpectedDataError';\nexport { EnvNotSetError } from './EnvNotSetError';\nexport { GitSecretsFailedToEncryptError } from './GitSecretsFailedToEncryptError';\nexport { GitConfigFailedToParseError } from './GitConfigFailedToParseError';\nexport { PathIsNotAFileError } from './PathIsNotAFileError';\nexport { FleekFunctionBundlingFailedError } from './FleekFunctionBundlingFailedError';\nexport { GitIntegrationNotFoundError } from './GitIntegrationNotFoundError';\nexport { GitProviderNotFoundError } from './GitProviderNotFoundError';\nexport { ExpectedOneOfValuesError } from './ExpectedOneOfValuesError';\nexport { InvalidJSONFormat } from './InvalidJSONFormat';\nexport { StorageUploadFileCountQuotaExceededError } from './StorageUploadFileCountQuotaExceededError';\nexport { StorageUploadTotalSizeQuotaExceededError } from './StorageUploadTotalSizeQuotaExceededError';\nexport { GitProviderNotSupportedError } from './GitProviderNotSupportedError';\nexport { GitProviderNotAuthorizedError } from './GitProviderNotAuthorizedError';\nexport { GitAccessTokenInvalidError } from './GitAccessTokenInvalidError';\nexport { QueuedDeploymentsLimitError } from './QueuedDeploymentsLimitError';\nexport { GitIntegrationInstallationConflictError } from './GitIntegrationInstallationConflictError';\nexport { GitLinkMultipleAccountError } from './GitLinkMultipleAccountError';\nexport { GitRepoByNameAndOwnerNotFoundError } from './GitRepoByNameAndOwnerNotFoundError';\nexport { GitAccessTokenNotFoundError } from './GitAccessTokenNotFoundError';\nexport { FolderNotFoundError } from './FolderNotFoundError';\nexport { FolderAlreadyExistsError } from './FolderAlreadyExistsError';\nexport { FolderNameContainsReservedWordError } from './FolderNameContainsReservedWordError';\nexport { PinsNotFoundError } from './PinsNotFoundError';\nexport { SiteCreationFailedError } from './SiteCreationFailedError';\nexport { FleekFunctionInvalidWasmCodeError } from './FleekFunctionInvalidWasmCodeError';\nexport { FleekFunctionWasmEncryptionFailedError } from './FleekFunctionWasmEncryptionFailedError';\nexport { UploadProxyStoreAsCarError } from './UploadProxyStoreAsCarError';\nexport { UploadProxyUploadFileError } from './UploadProxyUploadFileError';\nexport { IpfsDenylistUpdateWorkflowTriggerFailedError } from './IpfsDenylistUpdateWorkflowTriggerFailedError';\nexport { ProjectSiteLimitExceededError } from './ProjectSiteLimitExceededError';\nexport { ProjectFleekFunctionLimitExceededError } from './ProjectFleekFunctionLimitExceededError';\nexport { UserProjectLimitExceededError } from './UserProjectLimitExceededError';\nexport { ProjectDomainsLimitExceededError } from './ProjectDomainsLimitExceededError';\nexport { ProjectMembershipsLimitExceededError } from './ProjectMembershipsLimitExceededError';\nexport { FleekRestApiInternalError } from './FleekRestApiInternalError';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst digest = (algorithm, data) => (0, crypto_1.createHash)(algorithm).update(data).digest();\nexports.default = digest;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatKdf = exports.lengthAndInput = exports.uint32be = exports.uint64be = exports.p2s = exports.concat = exports.decoder = exports.encoder = void 0;\nconst digest_js_1 = require(\"../runtime/digest.js\");\nexports.encoder = new TextEncoder();\nexports.decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexports.concat = concat;\nfunction p2s(alg, p2sInput) {\n    return concat(exports.encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nexports.p2s = p2s;\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nfunction uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexports.uint64be = uint64be;\nfunction uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexports.uint32be = uint32be;\nfunction lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexports.lengthAndInput = lengthAndInput;\nasync function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await (0, digest_js_1.default)('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\nexports.concatKdf = concatKdf;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = exports.encodeBase64 = exports.decodeBase64 = void 0;\nconst buffer_1 = require(\"buffer\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nlet encode;\nexports.encode = encode;\nfunction normalize(input) {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = buffer_utils_js_1.decoder.decode(encoded);\n    }\n    return encoded;\n}\nif (buffer_1.Buffer.isEncoding('base64url')) {\n    exports.encode = encode = (input) => buffer_1.Buffer.from(input).toString('base64url');\n}\nelse {\n    exports.encode = encode = (input) => buffer_1.Buffer.from(input).toString('base64').replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nconst decodeBase64 = (input) => buffer_1.Buffer.from(input, 'base64');\nexports.decodeBase64 = decodeBase64;\nconst encodeBase64 = (input) => buffer_1.Buffer.from(input).toString('base64');\nexports.encodeBase64 = encodeBase64;\nconst decode = (input) => buffer_1.Buffer.from(normalize(input), 'base64');\nexports.decode = decode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JWSSignatureVerificationFailed = exports.JWKSTimeout = exports.JWKSMultipleMatchingKeys = exports.JWKSNoMatchingKey = exports.JWKSInvalid = exports.JWKInvalid = exports.JWTInvalid = exports.JWSInvalid = exports.JWEInvalid = exports.JWEDecryptionFailed = exports.JOSENotSupported = exports.JOSEAlgNotAllowed = exports.JWTExpired = exports.JWTClaimValidationFailed = exports.JOSEError = void 0;\nclass JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexports.JOSEError = JOSEError;\nclass JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexports.JWTClaimValidationFailed = JWTClaimValidationFailed;\nclass JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexports.JWTExpired = JWTExpired;\nclass JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexports.JOSEAlgNotAllowed = JOSEAlgNotAllowed;\nclass JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexports.JOSENotSupported = JOSENotSupported;\nclass JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexports.JWEDecryptionFailed = JWEDecryptionFailed;\nclass JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexports.JWEInvalid = JWEInvalid;\nclass JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexports.JWSInvalid = JWSInvalid;\nclass JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexports.JWTInvalid = JWTInvalid;\nclass JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexports.JWKInvalid = JWKInvalid;\nclass JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexports.JWKSInvalid = JWKSInvalid;\nclass JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexports.JWKSNoMatchingKey = JWKSNoMatchingKey;\nclass JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nexports.JWKSMultipleMatchingKeys = JWKSMultipleMatchingKeys;\nclass JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexports.JWKSTimeout = JWKSTimeout;\nclass JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nexports.JWSSignatureVerificationFailed = JWSSignatureVerificationFailed;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar crypto_1 = require(\"crypto\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return crypto_1.randomFillSync; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitLength = void 0;\nconst errors_js_1 = require(\"../util/errors.js\");\nconst random_js_1 = require(\"../runtime/random.js\");\nfunction bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexports.bitLength = bitLength;\nexports.default = (alg) => (0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nconst iv_js_1 = require(\"./iv.js\");\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== (0, iv_js_1.bitLength)(enc)) {\n        throw new errors_js_1.JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexports.default = checkIvLength;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst util = require(\"util\");\nexports.default = util.types.isKeyObject\n    ? (obj) => util.types.isKeyObject(obj)\n    : (obj) => obj != null && obj instanceof crypto_1.KeyObject;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst checkCekLength = (enc, cek) => {\n    let expected;\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            expected = parseInt(enc.slice(-3), 10);\n            break;\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            expected = parseInt(enc.slice(1, 4), 10);\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Content Encryption Algorithm ${enc} is not supported either by JOSE or your javascript runtime`);\n    }\n    if (cek instanceof Uint8Array) {\n        const actual = cek.byteLength << 3;\n        if (actual !== expected) {\n            throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    if ((0, is_key_object_js_1.default)(cek) && cek.type === 'secret') {\n        const actual = cek.symmetricKeySize << 3;\n        if (actual !== expected) {\n            throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    throw new TypeError('Invalid Content Encryption Key type');\n};\nexports.default = checkCekLength;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst timingSafeEqual = crypto_1.timingSafeEqual;\nexports.default = timingSafeEqual;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nfunction cbcTag(aad, iv, ciphertext, macSize, macKey, keySize) {\n    const macData = (0, buffer_utils_js_1.concat)(aad, iv, ciphertext, (0, buffer_utils_js_1.uint64be)(aad.length << 3));\n    const hmac = (0, crypto_1.createHmac)(`sha${macSize}`, macKey);\n    hmac.update(macData);\n    return hmac.digest().slice(0, keySize >> 3);\n}\nexports.default = cbcTag;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCryptoKey = void 0;\nconst crypto = require(\"crypto\");\nconst util = require(\"util\");\nconst webcrypto = crypto.webcrypto;\nexports.default = webcrypto;\nexports.isCryptoKey = util.types.isCryptoKey\n    ? (key) => util.types.isCryptoKey(key)\n    :\n        (key) => false;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCloudflareWorkers = void 0;\nfunction isCloudflareWorkers() {\n    return false;\n}\nexports.isCloudflareWorkers = isCloudflareWorkers;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkEncCryptoKey = exports.checkSigCryptoKey = void 0;\nconst env_js_1 = require(\"../runtime/env.js\");\nfunction unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nfunction checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case (0, env_js_1.isCloudflareWorkers)() && 'EdDSA': {\n            if (!isAlgorithm(key.algorithm, 'NODE-ED25519'))\n                throw unusable('NODE-ED25519');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexports.checkSigCryptoKey = checkSigCryptoKey;\nfunction checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexports.checkEncCryptoKey = checkEncCryptoKey;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withAlg = void 0;\nfunction message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexports.default = (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nfunction withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\nexports.withAlg = withAlg;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nlet ciphers;\nexports.default = (algorithm) => {\n    ciphers || (ciphers = new Set((0, crypto_1.getCiphers)()));\n    return ciphers.has(algorithm);\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.types = void 0;\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nexports.default = (key) => (0, is_key_object_js_1.default)(key) || (0, webcrypto_js_1.isCryptoKey)(key);\nconst types = ['KeyObject'];\nexports.types = types;\nif (globalThis.CryptoKey || (webcrypto_js_1.default === null || webcrypto_js_1.default === void 0 ? void 0 : webcrypto_js_1.default.CryptoKey)) {\n    types.push('CryptoKey');\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst check_iv_length_js_1 = require(\"../lib/check_iv_length.js\");\nconst check_cek_length_js_1 = require(\"./check_cek_length.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst timing_safe_equal_js_1 = require(\"./timing_safe_equal.js\");\nconst cbc_tag_js_1 = require(\"./cbc_tag.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst ciphers_js_1 = require(\"./ciphers.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nfunction cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if ((0, is_key_object_js_1.default)(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const macSize = parseInt(enc.slice(-3), 10);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const expectedTag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n    let macCheckPassed;\n    try {\n        macCheckPassed = (0, timing_safe_equal_js_1.default)(tag, expectedTag);\n    }\n    catch {\n    }\n    if (!macCheckPassed) {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        const decipher = (0, crypto_1.createDecipheriv)(algorithm, encKey, iv);\n        plaintext = (0, buffer_utils_js_1.concat)(decipher.update(ciphertext), decipher.final());\n    }\n    catch {\n    }\n    if (!plaintext) {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nfunction gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    try {\n        const decipher = (0, crypto_1.createDecipheriv)(algorithm, cek, iv, { authTagLength: 16 });\n        decipher.setAuthTag(tag);\n        if (aad.byteLength) {\n            decipher.setAAD(aad, { plaintextLength: ciphertext.length });\n        }\n        const plaintext = decipher.update(ciphertext);\n        decipher.final();\n        return plaintext;\n    }\n    catch {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n}\nconst decrypt = (enc, cek, ciphertext, iv, tag, aad) => {\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, 'decrypt');\n        key = crypto_1.KeyObject.from(cek);\n    }\n    else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n        key = cek;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, 'Uint8Array'));\n    }\n    (0, check_cek_length_js_1.default)(enc, key);\n    (0, check_iv_length_js_1.default)(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return cbcDecrypt(enc, key, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            return gcmDecrypt(enc, key, ciphertext, iv, tag, aad);\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexports.default = decrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deflate = exports.inflate = void 0;\nconst util_1 = require(\"util\");\nconst zlib_1 = require(\"zlib\");\nconst inflateRaw = (0, util_1.promisify)(zlib_1.inflateRaw);\nconst deflateRaw = (0, util_1.promisify)(zlib_1.deflateRaw);\nconst inflate = (input) => inflateRaw(input);\nexports.inflate = inflate;\nconst deflate = (input) => deflateRaw(input);\nexports.deflate = deflate;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexports.default = isDisjoint;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\nexports.default = isObject;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unwrap = exports.wrap = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst ciphers_js_1 = require(\"./ciphers.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nfunction checkKeySize(key, alg) {\n    if (key.symmetricKeySize << 3 !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction ensureKeyObject(key, alg, usage) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return (0, crypto_1.createSecretKey)(key);\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, usage);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nconst wrap = (alg, key, cek) => {\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, 'wrapKey');\n    checkKeySize(keyObject, alg);\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n    return (0, buffer_utils_js_1.concat)(cipher.update(cek), cipher.final());\n};\nexports.wrap = wrap;\nconst unwrap = (alg, key, encryptedKey) => {\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, 'unwrapKey');\n    checkKeySize(keyObject, alg);\n    const cipher = (0, crypto_1.createDecipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n    return (0, buffer_utils_js_1.concat)(cipher.update(encryptedKey), cipher.final());\n};\nexports.unwrap = unwrap;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setCurve = exports.weakMap = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst p256 = buffer_1.Buffer.from([42, 134, 72, 206, 61, 3, 1, 7]);\nconst p384 = buffer_1.Buffer.from([43, 129, 4, 0, 34]);\nconst p521 = buffer_1.Buffer.from([43, 129, 4, 0, 35]);\nconst secp256k1 = buffer_1.Buffer.from([43, 129, 4, 0, 10]);\nexports.weakMap = new WeakMap();\nconst namedCurveToJOSE = (namedCurve) => {\n    switch (namedCurve) {\n        case 'prime256v1':\n            return 'P-256';\n        case 'secp384r1':\n            return 'P-384';\n        case 'secp521r1':\n            return 'P-521';\n        case 'secp256k1':\n            return 'secp256k1';\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported key curve for this operation');\n    }\n};\nconst getNamedCurve = (kee, raw) => {\n    var _a;\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n        key = crypto_1.KeyObject.from(kee);\n    }\n    else if ((0, is_key_object_js_1.default)(kee)) {\n        key = kee;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError('only \"private\" or \"public\" type keys can be used for this operation');\n    }\n    switch (key.asymmetricKeyType) {\n        case 'ed25519':\n        case 'ed448':\n            return `Ed${key.asymmetricKeyType.slice(2)}`;\n        case 'x25519':\n        case 'x448':\n            return `X${key.asymmetricKeyType.slice(1)}`;\n        case 'ec': {\n            if (exports.weakMap.has(key)) {\n                return exports.weakMap.get(key);\n            }\n            let namedCurve = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.namedCurve;\n            if (!namedCurve && key.type === 'private') {\n                namedCurve = getNamedCurve((0, crypto_1.createPublicKey)(key), true);\n            }\n            else if (!namedCurve) {\n                const buf = key.export({ format: 'der', type: 'spki' });\n                const i = buf[1] < 128 ? 14 : 15;\n                const len = buf[i];\n                const curveOid = buf.slice(i + 1, i + 1 + len);\n                if (curveOid.equals(p256)) {\n                    namedCurve = 'prime256v1';\n                }\n                else if (curveOid.equals(p384)) {\n                    namedCurve = 'secp384r1';\n                }\n                else if (curveOid.equals(p521)) {\n                    namedCurve = 'secp521r1';\n                }\n                else if (curveOid.equals(secp256k1)) {\n                    namedCurve = 'secp256k1';\n                }\n                else {\n                    throw new errors_js_1.JOSENotSupported('Unsupported key curve for this operation');\n                }\n            }\n            if (raw)\n                return namedCurve;\n            const curve = namedCurveToJOSE(namedCurve);\n            exports.weakMap.set(key, curve);\n            return curve;\n        }\n        default:\n            throw new TypeError('Invalid asymmetric key type for this operation');\n    }\n};\nfunction setCurve(keyObject, curve) {\n    exports.weakMap.set(keyObject, curve);\n}\nexports.setCurve = setCurve;\nexports.default = getNamedCurve;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecdhAllowed = exports.generateEpk = exports.deriveKey = void 0;\nconst crypto_1 = require(\"crypto\");\nconst util_1 = require(\"util\");\nconst get_named_curve_js_1 = require(\"./get_named_curve.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst generateKeyPair = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function deriveKey(publicKee, privateKee, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    let publicKey;\n    if ((0, webcrypto_js_1.isCryptoKey)(publicKee)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(publicKee, 'ECDH');\n        publicKey = crypto_1.KeyObject.from(publicKee);\n    }\n    else if ((0, is_key_object_js_1.default)(publicKee)) {\n        publicKey = publicKee;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(publicKee, ...is_key_like_js_1.types));\n    }\n    let privateKey;\n    if ((0, webcrypto_js_1.isCryptoKey)(privateKee)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(privateKee, 'ECDH', 'deriveBits');\n        privateKey = crypto_1.KeyObject.from(privateKee);\n    }\n    else if ((0, is_key_object_js_1.default)(privateKee)) {\n        privateKey = privateKee;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(privateKee, ...is_key_like_js_1.types));\n    }\n    const value = (0, buffer_utils_js_1.concat)((0, buffer_utils_js_1.lengthAndInput)(buffer_utils_js_1.encoder.encode(algorithm)), (0, buffer_utils_js_1.lengthAndInput)(apu), (0, buffer_utils_js_1.lengthAndInput)(apv), (0, buffer_utils_js_1.uint32be)(keyLength));\n    const sharedSecret = (0, crypto_1.diffieHellman)({ privateKey, publicKey });\n    return (0, buffer_utils_js_1.concatKdf)(sharedSecret, keyLength, value);\n}\nexports.deriveKey = deriveKey;\nasync function generateEpk(kee) {\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n        key = crypto_1.KeyObject.from(kee);\n    }\n    else if ((0, is_key_object_js_1.default)(kee)) {\n        key = kee;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n    }\n    switch (key.asymmetricKeyType) {\n        case 'x25519':\n            return generateKeyPair('x25519');\n        case 'x448': {\n            return generateKeyPair('x448');\n        }\n        case 'ec': {\n            const namedCurve = (0, get_named_curve_js_1.default)(key);\n            return generateKeyPair('ec', { namedCurve });\n        }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported EPK');\n    }\n}\nexports.generateEpk = generateEpk;\nconst ecdhAllowed = (key) => ['P-256', 'P-384', 'P-521', 'X25519', 'X448'].includes((0, get_named_curve_js_1.default)(key));\nexports.ecdhAllowed = ecdhAllowed;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nfunction checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new errors_js_1.JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\nexports.default = checkP2s;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decrypt = exports.encrypt = void 0;\nconst util_1 = require(\"util\");\nconst crypto_1 = require(\"crypto\");\nconst random_js_1 = require(\"./random.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst base64url_js_1 = require(\"./base64url.js\");\nconst aeskw_js_1 = require(\"./aeskw.js\");\nconst check_p2s_js_1 = require(\"../lib/check_p2s.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst pbkdf2 = (0, util_1.promisify)(crypto_1.pbkdf2);\nfunction getPassword(key, alg) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key.export();\n    }\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, 'deriveBits', 'deriveKey');\n        return crypto_1.KeyObject.from(key).export();\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nconst encrypt = async (alg, key, cek, p2c = 2048, p2s = (0, random_js_1.default)(new Uint8Array(16))) => {\n    (0, check_p2s_js_1.default)(p2s);\n    const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    const encryptedKey = await (0, aeskw_js_1.wrap)(alg.slice(-6), derivedKey, cek);\n    return { encryptedKey, p2c, p2s: (0, base64url_js_1.encode)(p2s) };\n};\nexports.encrypt = encrypt;\nconst decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    (0, check_p2s_js_1.default)(p2s);\n    const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    return (0, aeskw_js_1.unwrap)(alg.slice(-6), derivedKey, encryptedKey);\n};\nexports.decrypt = decrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setModulusLength = exports.weakMap = void 0;\nexports.weakMap = new WeakMap();\nconst getLength = (buf, index) => {\n    let len = buf.readUInt8(1);\n    if ((len & 0x80) === 0) {\n        if (index === 0) {\n            return len;\n        }\n        return getLength(buf.subarray(2 + len), index - 1);\n    }\n    const num = len & 0x7f;\n    len = 0;\n    for (let i = 0; i < num; i++) {\n        len <<= 8;\n        const j = buf.readUInt8(2 + i);\n        len |= j;\n    }\n    if (index === 0) {\n        return len;\n    }\n    return getLength(buf.subarray(2 + len), index - 1);\n};\nconst getLengthOfSeqIndex = (sequence, index) => {\n    const len = sequence.readUInt8(1);\n    if ((len & 0x80) === 0) {\n        return getLength(sequence.subarray(2), index);\n    }\n    const num = len & 0x7f;\n    return getLength(sequence.subarray(2 + num), index);\n};\nconst getModulusLength = (key) => {\n    var _a, _b;\n    if (exports.weakMap.has(key)) {\n        return exports.weakMap.get(key);\n    }\n    const modulusLength = (_b = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.modulusLength) !== null && _b !== void 0 ? _b : (getLengthOfSeqIndex(key.export({ format: 'der', type: 'pkcs1' }), key.type === 'private' ? 1 : 0) -\n        1) <<\n        3;\n    exports.weakMap.set(key, modulusLength);\n    return modulusLength;\n};\nconst setModulusLength = (keyObject, modulusLength) => {\n    exports.weakMap.set(keyObject, modulusLength);\n};\nexports.setModulusLength = setModulusLength;\nexports.default = (key, alg) => {\n    if (getModulusLength(key) < 2048) {\n        throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n    }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decrypt = exports.encrypt = void 0;\nconst crypto_1 = require(\"crypto\");\nconst check_modulus_length_js_1 = require(\"./check_modulus_length.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst checkKey = (key, alg) => {\n    if (key.asymmetricKeyType !== 'rsa') {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n    }\n    (0, check_modulus_length_js_1.default)(key, alg);\n};\nconst resolvePadding = (alg) => {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return crypto_1.constants.RSA_PKCS1_OAEP_PADDING;\n        case 'RSA1_5':\n            return crypto_1.constants.RSA_PKCS1_PADDING;\n        default:\n            return undefined;\n    }\n};\nconst resolveOaepHash = (alg) => {\n    switch (alg) {\n        case 'RSA-OAEP':\n            return 'sha1';\n        case 'RSA-OAEP-256':\n            return 'sha256';\n        case 'RSA-OAEP-384':\n            return 'sha384';\n        case 'RSA-OAEP-512':\n            return 'sha512';\n        default:\n            return undefined;\n    }\n};\nfunction ensureKeyObject(key, alg, ...usages) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, ...usages);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n}\nconst encrypt = (alg, key, cek) => {\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, 'wrapKey', 'encrypt');\n    checkKey(keyObject, alg);\n    return (0, crypto_1.publicEncrypt)({ key: keyObject, oaepHash, padding }, cek);\n};\nexports.encrypt = encrypt;\nconst decrypt = (alg, key, encryptedKey) => {\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, 'unwrapKey', 'decrypt');\n    checkKey(keyObject, alg);\n    return (0, crypto_1.privateDecrypt)({ key: keyObject, oaepHash, padding }, encryptedKey);\n};\nexports.decrypt = decrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitLength = void 0;\nconst errors_js_1 = require(\"../util/errors.js\");\nconst random_js_1 = require(\"../runtime/random.js\");\nfunction bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexports.bitLength = bitLength;\nexports.default = (alg) => (0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSPKI = exports.fromPKCS8 = exports.toPKCS8 = exports.toSPKI = void 0;\nconst crypto_1 = require(\"crypto\");\nconst buffer_1 = require(\"buffer\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst genericExport = (keyType, keyFormat, key) => {\n    let keyObject;\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        if (!key.extractable) {\n            throw new TypeError('CryptoKey is not extractable');\n        }\n        keyObject = crypto_1.KeyObject.from(key);\n    }\n    else if ((0, is_key_object_js_1.default)(key)) {\n        keyObject = key;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n    }\n    if (keyObject.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return keyObject.export({ format: 'pem', type: keyFormat });\n};\nconst toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexports.toSPKI = toSPKI;\nconst toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nexports.toPKCS8 = toPKCS8;\nconst fromPKCS8 = (pem) => (0, crypto_1.createPrivateKey)({\n    key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, ''), 'base64'),\n    type: 'pkcs8',\n    format: 'der',\n});\nexports.fromPKCS8 = fromPKCS8;\nconst fromSPKI = (pem) => (0, crypto_1.createPublicKey)({\n    key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, ''), 'base64'),\n    type: 'spki',\n    format: 'der',\n});\nexports.fromSPKI = fromSPKI;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"buffer\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst tagInteger = 0x02;\nconst tagBitStr = 0x03;\nconst tagOctStr = 0x04;\nconst tagSequence = 0x30;\nconst bZero = buffer_1.Buffer.from([0x00]);\nconst bTagInteger = buffer_1.Buffer.from([tagInteger]);\nconst bTagBitStr = buffer_1.Buffer.from([tagBitStr]);\nconst bTagSequence = buffer_1.Buffer.from([tagSequence]);\nconst bTagOctStr = buffer_1.Buffer.from([tagOctStr]);\nconst encodeLength = (len) => {\n    if (len < 128)\n        return buffer_1.Buffer.from([len]);\n    const buffer = buffer_1.Buffer.alloc(5);\n    buffer.writeUInt32BE(len, 1);\n    let offset = 1;\n    while (buffer[offset] === 0)\n        offset++;\n    buffer[offset - 1] = 0x80 | (5 - offset);\n    return buffer.slice(offset - 1);\n};\nconst oids = new Map([\n    ['P-256', buffer_1.Buffer.from('06 08 2A 86 48 CE 3D 03 01 07'.replace(/ /g, ''), 'hex')],\n    ['secp256k1', buffer_1.Buffer.from('06 05 2B 81 04 00 0A'.replace(/ /g, ''), 'hex')],\n    ['P-384', buffer_1.Buffer.from('06 05 2B 81 04 00 22'.replace(/ /g, ''), 'hex')],\n    ['P-521', buffer_1.Buffer.from('06 05 2B 81 04 00 23'.replace(/ /g, ''), 'hex')],\n    ['ecPublicKey', buffer_1.Buffer.from('06 07 2A 86 48 CE 3D 02 01'.replace(/ /g, ''), 'hex')],\n    ['X25519', buffer_1.Buffer.from('06 03 2B 65 6E'.replace(/ /g, ''), 'hex')],\n    ['X448', buffer_1.Buffer.from('06 03 2B 65 6F'.replace(/ /g, ''), 'hex')],\n    ['Ed25519', buffer_1.Buffer.from('06 03 2B 65 70'.replace(/ /g, ''), 'hex')],\n    ['Ed448', buffer_1.Buffer.from('06 03 2B 65 71'.replace(/ /g, ''), 'hex')],\n]);\nclass DumbAsn1Encoder {\n    constructor() {\n        this.length = 0;\n        this.elements = [];\n    }\n    oidFor(oid) {\n        const bOid = oids.get(oid);\n        if (!bOid) {\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported OID');\n        }\n        this.elements.push(bOid);\n        this.length += bOid.length;\n    }\n    zero() {\n        this.elements.push(bTagInteger, buffer_1.Buffer.from([0x01]), bZero);\n        this.length += 3;\n    }\n    one() {\n        this.elements.push(bTagInteger, buffer_1.Buffer.from([0x01]), buffer_1.Buffer.from([0x01]));\n        this.length += 3;\n    }\n    unsignedInteger(integer) {\n        if (integer[0] & 0x80) {\n            const len = encodeLength(integer.length + 1);\n            this.elements.push(bTagInteger, len, bZero, integer);\n            this.length += 2 + len.length + integer.length;\n        }\n        else {\n            let i = 0;\n            while (integer[i] === 0 && (integer[i + 1] & 0x80) === 0)\n                i++;\n            const len = encodeLength(integer.length - i);\n            this.elements.push(bTagInteger, encodeLength(integer.length - i), integer.slice(i));\n            this.length += 1 + len.length + integer.length - i;\n        }\n    }\n    octStr(octStr) {\n        const len = encodeLength(octStr.length);\n        this.elements.push(bTagOctStr, encodeLength(octStr.length), octStr);\n        this.length += 1 + len.length + octStr.length;\n    }\n    bitStr(bitS) {\n        const len = encodeLength(bitS.length + 1);\n        this.elements.push(bTagBitStr, encodeLength(bitS.length + 1), bZero, bitS);\n        this.length += 1 + len.length + bitS.length + 1;\n    }\n    add(seq) {\n        this.elements.push(seq);\n        this.length += seq.length;\n    }\n    end(tag = bTagSequence) {\n        const len = encodeLength(this.length);\n        return buffer_1.Buffer.concat([tag, len, ...this.elements], 1 + len.length + this.length);\n    }\n}\nexports.default = DumbAsn1Encoder;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jwkImport = exports.jwkExport = exports.rsaPssParams = exports.oneShotCallback = void 0;\nconst [major, minor] = process.versions.node.split('.').map((str) => parseInt(str, 10));\nexports.oneShotCallback = major >= 16 || (major === 15 && minor >= 13);\nexports.rsaPssParams = !('electron' in process.versions) && (major >= 17 || (major === 16 && minor >= 9));\nexports.jwkExport = major >= 16 || (major === 15 && minor >= 9);\nexports.jwkImport = major >= 16 || (major === 15 && minor >= 12);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nconst base64url_js_1 = require(\"./base64url.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst get_named_curve_js_1 = require(\"./get_named_curve.js\");\nconst check_modulus_length_js_1 = require(\"./check_modulus_length.js\");\nconst asn1_sequence_encoder_js_1 = require(\"./asn1_sequence_encoder.js\");\nconst flags_js_1 = require(\"./flags.js\");\nconst parse = (jwk) => {\n    if (flags_js_1.jwkImport && jwk.kty !== 'oct') {\n        return jwk.d\n            ? (0, crypto_1.createPrivateKey)({ format: 'jwk', key: jwk })\n            : (0, crypto_1.createPublicKey)({ format: 'jwk', key: jwk });\n    }\n    switch (jwk.kty) {\n        case 'oct': {\n            return (0, crypto_1.createSecretKey)((0, base64url_js_1.decode)(jwk.k));\n        }\n        case 'RSA': {\n            const enc = new asn1_sequence_encoder_js_1.default();\n            const isPrivate = jwk.d !== undefined;\n            const modulus = buffer_1.Buffer.from(jwk.n, 'base64');\n            const exponent = buffer_1.Buffer.from(jwk.e, 'base64');\n            if (isPrivate) {\n                enc.zero();\n                enc.unsignedInteger(modulus);\n                enc.unsignedInteger(exponent);\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.d, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.p, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.q, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.dp, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.dq, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.qi, 'base64'));\n            }\n            else {\n                enc.unsignedInteger(modulus);\n                enc.unsignedInteger(exponent);\n            }\n            const der = enc.end();\n            const createInput = {\n                key: der,\n                format: 'der',\n                type: 'pkcs1',\n            };\n            const keyObject = isPrivate ? (0, crypto_1.createPrivateKey)(createInput) : (0, crypto_1.createPublicKey)(createInput);\n            (0, check_modulus_length_js_1.setModulusLength)(keyObject, modulus.length << 3);\n            return keyObject;\n        }\n        case 'EC': {\n            const enc = new asn1_sequence_encoder_js_1.default();\n            const isPrivate = jwk.d !== undefined;\n            const pub = buffer_1.Buffer.concat([\n                buffer_1.Buffer.alloc(1, 4),\n                buffer_1.Buffer.from(jwk.x, 'base64'),\n                buffer_1.Buffer.from(jwk.y, 'base64'),\n            ]);\n            if (isPrivate) {\n                enc.zero();\n                const enc$1 = new asn1_sequence_encoder_js_1.default();\n                enc$1.oidFor('ecPublicKey');\n                enc$1.oidFor(jwk.crv);\n                enc.add(enc$1.end());\n                const enc$2 = new asn1_sequence_encoder_js_1.default();\n                enc$2.one();\n                enc$2.octStr(buffer_1.Buffer.from(jwk.d, 'base64'));\n                const enc$3 = new asn1_sequence_encoder_js_1.default();\n                enc$3.bitStr(pub);\n                const f2 = enc$3.end(buffer_1.Buffer.from([0xa1]));\n                enc$2.add(f2);\n                const f = enc$2.end();\n                const enc$4 = new asn1_sequence_encoder_js_1.default();\n                enc$4.add(f);\n                const f3 = enc$4.end(buffer_1.Buffer.from([0x04]));\n                enc.add(f3);\n                const der = enc.end();\n                const keyObject = (0, crypto_1.createPrivateKey)({ key: der, format: 'der', type: 'pkcs8' });\n                (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n                return keyObject;\n            }\n            const enc$1 = new asn1_sequence_encoder_js_1.default();\n            enc$1.oidFor('ecPublicKey');\n            enc$1.oidFor(jwk.crv);\n            enc.add(enc$1.end());\n            enc.bitStr(pub);\n            const der = enc.end();\n            const keyObject = (0, crypto_1.createPublicKey)({ key: der, format: 'der', type: 'spki' });\n            (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n            return keyObject;\n        }\n        case 'OKP': {\n            const enc = new asn1_sequence_encoder_js_1.default();\n            const isPrivate = jwk.d !== undefined;\n            if (isPrivate) {\n                enc.zero();\n                const enc$1 = new asn1_sequence_encoder_js_1.default();\n                enc$1.oidFor(jwk.crv);\n                enc.add(enc$1.end());\n                const enc$2 = new asn1_sequence_encoder_js_1.default();\n                enc$2.octStr(buffer_1.Buffer.from(jwk.d, 'base64'));\n                const f = enc$2.end(buffer_1.Buffer.from([0x04]));\n                enc.add(f);\n                const der = enc.end();\n                return (0, crypto_1.createPrivateKey)({ key: der, format: 'der', type: 'pkcs8' });\n            }\n            const enc$1 = new asn1_sequence_encoder_js_1.default();\n            enc$1.oidFor(jwk.crv);\n            enc.add(enc$1.end());\n            enc.bitStr(buffer_1.Buffer.from(jwk.x, 'base64'));\n            const der = enc.end();\n            return (0, crypto_1.createPublicKey)({ key: der, format: 'der', type: 'spki' });\n        }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n};\nexports.default = parse;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = (b64, descriptor) => {\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importJWK = exports.importPKCS8 = exports.importX509 = exports.importSPKI = void 0;\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nconst asn1_js_1 = require(\"../runtime/asn1.js\");\nconst asn1_js_2 = require(\"../runtime/asn1.js\");\nconst jwk_to_key_js_1 = require(\"../runtime/jwk_to_key.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst format_pem_js_1 = require(\"../lib/format_pem.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return (0, base64url_js_1.encodeBase64)(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = (0, base64url_js_1.decodeBase64)(pem);\n    return (0, format_pem_js_1.default)(spkiFromX509(raw), 'PUBLIC KEY');\n}\nasync function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return (0, asn1_js_1.fromSPKI)(spki, alg, options);\n}\nexports.importSPKI = importSPKI;\nasync function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    let spki;\n    try {\n        spki = getSPKI(x509);\n    }\n    catch (cause) {\n        throw new TypeError('failed to parse the X.509 certificate', { cause });\n    }\n    return (0, asn1_js_1.fromSPKI)(spki, alg, options);\n}\nexports.importX509 = importX509;\nasync function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return (0, asn1_js_2.fromPKCS8)(pkcs8, alg, options);\n}\nexports.importPKCS8 = importPKCS8;\nasync function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    if (typeof alg !== 'string' || !alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return (0, jwk_to_key_js_1.default)({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return (0, base64url_js_1.decode)(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new errors_js_1.JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return (0, jwk_to_key_js_1.default)({ ...jwk, alg });\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\nexports.importJWK = importJWK;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst invalid_key_input_js_1 = require(\"./invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"../runtime/is_key_like.js\");\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!(0, is_key_like_js_1.default)(key)) {\n        throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!(0, is_key_like_js_1.default)(key)) {\n        throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexports.default = checkKeyType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst check_iv_length_js_1 = require(\"../lib/check_iv_length.js\");\nconst check_cek_length_js_1 = require(\"./check_cek_length.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst cbc_tag_js_1 = require(\"./cbc_tag.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst ciphers_js_1 = require(\"./ciphers.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nfunction cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if ((0, is_key_object_js_1.default)(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, encKey, iv);\n    const ciphertext = (0, buffer_utils_js_1.concat)(cipher.update(plaintext), cipher.final());\n    const macSize = parseInt(enc.slice(-3), 10);\n    const tag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n    return { ciphertext, tag };\n}\nfunction gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, cek, iv, { authTagLength: 16 });\n    if (aad.byteLength) {\n        cipher.setAAD(aad, { plaintextLength: plaintext.length });\n    }\n    const ciphertext = cipher.update(plaintext);\n    cipher.final();\n    const tag = cipher.getAuthTag();\n    return { ciphertext, tag };\n}\nconst encrypt = (enc, plaintext, cek, iv, aad) => {\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, 'encrypt');\n        key = crypto_1.KeyObject.from(cek);\n    }\n    else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n        key = cek;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, 'Uint8Array'));\n    }\n    (0, check_cek_length_js_1.default)(enc, key);\n    (0, check_iv_length_js_1.default)(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return cbcEncrypt(enc, plaintext, key, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            return gcmEncrypt(enc, plaintext, key, iv, aad);\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexports.default = encrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unwrap = exports.wrap = void 0;\nconst encrypt_js_1 = require(\"../runtime/encrypt.js\");\nconst decrypt_js_1 = require(\"../runtime/decrypt.js\");\nconst iv_js_1 = require(\"./iv.js\");\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nasync function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = (0, iv_js_1.default)(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await (0, encrypt_js_1.default)(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: (0, base64url_js_1.encode)(iv), tag: (0, base64url_js_1.encode)(tag) };\n}\nexports.wrap = wrap;\nasync function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return (0, decrypt_js_1.default)(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\nexports.unwrap = unwrap;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aeskw_js_1 = require(\"../runtime/aeskw.js\");\nconst ECDH = require(\"../runtime/ecdhes.js\");\nconst pbes2kw_js_1 = require(\"../runtime/pbes2kw.js\");\nconst rsaes_js_1 = require(\"../runtime/rsaes.js\");\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst cek_js_1 = require(\"../lib/cek.js\");\nconst import_js_1 = require(\"../key/import.js\");\nconst check_key_type_js_1 = require(\"./check_key_type.js\");\nconst is_object_js_1 = require(\"./is_object.js\");\nconst aesgcmkw_js_1 = require(\"./aesgcmkw.js\");\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    (0, check_key_type_js_1.default)(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new errors_js_1.JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new errors_js_1.JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!(0, is_object_js_1.default)(joseHeader.epk))\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new errors_js_1.JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await (0, import_js_1.importJWK)(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new errors_js_1.JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                partyUInfo = (0, base64url_js_1.decode)(joseHeader.apu);\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new errors_js_1.JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                partyVInfo = (0, base64url_js_1.decode)(joseHeader.apv);\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? (0, cek_js_1.bitLength)(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            return (0, aeskw_js_1.unwrap)(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            return (0, rsaes_js_1.decrypt)(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            return (0, pbes2kw_js_1.decrypt)(alg, key, encryptedKey, joseHeader.p2c, (0, base64url_js_1.decode)(joseHeader.p2s));\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            return (0, aeskw_js_1.unwrap)(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            const iv = (0, base64url_js_1.decode)(joseHeader.iv);\n            const tag = (0, base64url_js_1.decode)(joseHeader.tag);\n            return (0, aesgcmkw_js_1.unwrap)(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexports.default = decryptKeyManagement;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new errors_js_1.JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexports.default = validateCrit;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexports.default = validateAlgorithms;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flattenedDecrypt = void 0;\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst decrypt_js_1 = require(\"../../runtime/decrypt.js\");\nconst zlib_js_1 = require(\"../../runtime/zlib.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst is_object_js_1 = require(\"../../lib/is_object.js\");\nconst decrypt_key_management_js_1 = require(\"../../lib/decrypt_key_management.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nconst cek_js_1 = require(\"../../lib/cek.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nconst validate_algorithms_js_1 = require(\"../../lib/validate_algorithms.js\");\nasync function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jwe)) {\n        throw new errors_js_1.JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new errors_js_1.JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !(0, is_object_js_1.default)(jwe.header)) {\n        throw new errors_js_1.JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !(0, is_object_js_1.default)(jwe.unprotected)) {\n        throw new errors_js_1.JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = (0, base64url_js_1.decode)(jwe.protected);\n            parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new errors_js_1.JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!(0, is_disjoint_js_1.default)(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new errors_js_1.JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new errors_js_1.JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new errors_js_1.JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && (0, validate_algorithms_js_1.default)('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        (0, validate_algorithms_js_1.default)('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = (0, base64url_js_1.decode)(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await (0, decrypt_key_management_js_1.default)(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof errors_js_1.JWEInvalid || err instanceof errors_js_1.JOSENotSupported) {\n            throw err;\n        }\n        cek = (0, cek_js_1.default)(enc);\n    }\n    const iv = (0, base64url_js_1.decode)(jwe.iv);\n    const tag = (0, base64url_js_1.decode)(jwe.tag);\n    const protectedHeader = buffer_utils_js_1.encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), buffer_utils_js_1.encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await (0, decrypt_js_1.default)(enc, cek, (0, base64url_js_1.decode)(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || zlib_js_1.inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = (0, base64url_js_1.decode)(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\nexports.flattenedDecrypt = flattenedDecrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compactDecrypt = void 0;\nconst decrypt_js_1 = require(\"../flattened/decrypt.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nasync function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = buffer_utils_js_1.decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new errors_js_1.JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new errors_js_1.JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await (0, decrypt_js_1.flattenedDecrypt)({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\nexports.compactDecrypt = compactDecrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generalDecrypt = void 0;\nconst decrypt_js_1 = require(\"../flattened/decrypt.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst is_object_js_1 = require(\"../../lib/is_object.js\");\nasync function generalDecrypt(jwe, key, options) {\n    if (!(0, is_object_js_1.default)(jwe)) {\n        throw new errors_js_1.JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(is_object_js_1.default)) {\n        throw new errors_js_1.JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new errors_js_1.JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await (0, decrypt_js_1.flattenedDecrypt)({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new errors_js_1.JWEDecryptionFailed();\n}\nexports.generalDecrypt = generalDecrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagInteger = 0x02;\nconst tagSequence = 0x30;\nclass Asn1SequenceDecoder {\n    constructor(buffer) {\n        if (buffer[0] !== tagSequence) {\n            throw new TypeError();\n        }\n        this.buffer = buffer;\n        this.offset = 1;\n        const len = this.decodeLength();\n        if (len !== buffer.length - this.offset) {\n            throw new TypeError();\n        }\n    }\n    decodeLength() {\n        let length = this.buffer[this.offset++];\n        if (length & 0x80) {\n            const nBytes = length & ~0x80;\n            length = 0;\n            for (let i = 0; i < nBytes; i++)\n                length = (length << 8) | this.buffer[this.offset + i];\n            this.offset += nBytes;\n        }\n        return length;\n    }\n    unsignedInteger() {\n        if (this.buffer[this.offset++] !== tagInteger) {\n            throw new TypeError();\n        }\n        let length = this.decodeLength();\n        if (this.buffer[this.offset] === 0) {\n            this.offset++;\n            length--;\n        }\n        const result = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n        return result;\n    }\n    end() {\n        if (this.offset !== this.buffer.length) {\n            throw new TypeError();\n        }\n    }\n}\nexports.default = Asn1SequenceDecoder;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst base64url_js_1 = require(\"./base64url.js\");\nconst asn1_sequence_decoder_js_1 = require(\"./asn1_sequence_decoder.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst get_named_curve_js_1 = require(\"./get_named_curve.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst flags_js_1 = require(\"./flags.js\");\nconst keyToJWK = (key) => {\n    let keyObject;\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        if (!key.extractable) {\n            throw new TypeError('CryptoKey is not extractable');\n        }\n        keyObject = crypto_1.KeyObject.from(key);\n    }\n    else if ((0, is_key_object_js_1.default)(key)) {\n        keyObject = key;\n    }\n    else if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: (0, base64url_js_1.encode)(key),\n        };\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n    }\n    if (flags_js_1.jwkExport) {\n        if (keyObject.type !== 'secret' &&\n            !['rsa', 'ec', 'ed25519', 'x25519', 'ed448', 'x448'].includes(keyObject.asymmetricKeyType)) {\n            throw new errors_js_1.JOSENotSupported('Unsupported key asymmetricKeyType');\n        }\n        return keyObject.export({ format: 'jwk' });\n    }\n    switch (keyObject.type) {\n        case 'secret':\n            return {\n                kty: 'oct',\n                k: (0, base64url_js_1.encode)(keyObject.export()),\n            };\n        case 'private':\n        case 'public': {\n            switch (keyObject.asymmetricKeyType) {\n                case 'rsa': {\n                    const der = keyObject.export({ format: 'der', type: 'pkcs1' });\n                    const dec = new asn1_sequence_decoder_js_1.default(der);\n                    if (keyObject.type === 'private') {\n                        dec.unsignedInteger();\n                    }\n                    const n = (0, base64url_js_1.encode)(dec.unsignedInteger());\n                    const e = (0, base64url_js_1.encode)(dec.unsignedInteger());\n                    let jwk;\n                    if (keyObject.type === 'private') {\n                        jwk = {\n                            d: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            p: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            q: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            dp: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            dq: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            qi: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                        };\n                    }\n                    dec.end();\n                    return { kty: 'RSA', n, e, ...jwk };\n                }\n                case 'ec': {\n                    const crv = (0, get_named_curve_js_1.default)(keyObject);\n                    let len;\n                    let offset;\n                    let correction;\n                    switch (crv) {\n                        case 'secp256k1':\n                            len = 64;\n                            offset = 31 + 2;\n                            correction = -1;\n                            break;\n                        case 'P-256':\n                            len = 64;\n                            offset = 34 + 2;\n                            correction = -1;\n                            break;\n                        case 'P-384':\n                            len = 96;\n                            offset = 33 + 2;\n                            correction = -3;\n                            break;\n                        case 'P-521':\n                            len = 132;\n                            offset = 33 + 2;\n                            correction = -3;\n                            break;\n                        default:\n                            throw new errors_js_1.JOSENotSupported('Unsupported curve');\n                    }\n                    if (keyObject.type === 'public') {\n                        const der = keyObject.export({ type: 'spki', format: 'der' });\n                        return {\n                            kty: 'EC',\n                            crv,\n                            x: (0, base64url_js_1.encode)(der.subarray(-len, -len / 2)),\n                            y: (0, base64url_js_1.encode)(der.subarray(-len / 2)),\n                        };\n                    }\n                    const der = keyObject.export({ type: 'pkcs8', format: 'der' });\n                    if (der.length < 100) {\n                        offset += correction;\n                    }\n                    return {\n                        ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                        d: (0, base64url_js_1.encode)(der.subarray(offset, offset + len / 2)),\n                    };\n                }\n                case 'ed25519':\n                case 'x25519': {\n                    const crv = (0, get_named_curve_js_1.default)(keyObject);\n                    if (keyObject.type === 'public') {\n                        const der = keyObject.export({ type: 'spki', format: 'der' });\n                        return {\n                            kty: 'OKP',\n                            crv,\n                            x: (0, base64url_js_1.encode)(der.subarray(-32)),\n                        };\n                    }\n                    const der = keyObject.export({ type: 'pkcs8', format: 'der' });\n                    return {\n                        ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                        d: (0, base64url_js_1.encode)(der.subarray(-32)),\n                    };\n                }\n                case 'ed448':\n                case 'x448': {\n                    const crv = (0, get_named_curve_js_1.default)(keyObject);\n                    if (keyObject.type === 'public') {\n                        const der = keyObject.export({ type: 'spki', format: 'der' });\n                        return {\n                            kty: 'OKP',\n                            crv,\n                            x: (0, base64url_js_1.encode)(der.subarray(crv === 'Ed448' ? -57 : -56)),\n                        };\n                    }\n                    const der = keyObject.export({ type: 'pkcs8', format: 'der' });\n                    return {\n                        ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                        d: (0, base64url_js_1.encode)(der.subarray(crv === 'Ed448' ? -57 : -56)),\n                    };\n                }\n                default:\n                    throw new errors_js_1.JOSENotSupported('Unsupported key asymmetricKeyType');\n            }\n        }\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported key type');\n    }\n};\nexports.default = keyToJWK;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exportJWK = exports.exportPKCS8 = exports.exportSPKI = void 0;\nconst asn1_js_1 = require(\"../runtime/asn1.js\");\nconst asn1_js_2 = require(\"../runtime/asn1.js\");\nconst key_to_jwk_js_1 = require(\"../runtime/key_to_jwk.js\");\nasync function exportSPKI(key) {\n    return (0, asn1_js_1.toSPKI)(key);\n}\nexports.exportSPKI = exportSPKI;\nasync function exportPKCS8(key) {\n    return (0, asn1_js_2.toPKCS8)(key);\n}\nexports.exportPKCS8 = exportPKCS8;\nasync function exportJWK(key) {\n    return (0, key_to_jwk_js_1.default)(key);\n}\nexports.exportJWK = exportJWK;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aeskw_js_1 = require(\"../runtime/aeskw.js\");\nconst ECDH = require(\"../runtime/ecdhes.js\");\nconst pbes2kw_js_1 = require(\"../runtime/pbes2kw.js\");\nconst rsaes_js_1 = require(\"../runtime/rsaes.js\");\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nconst cek_js_1 = require(\"../lib/cek.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst export_js_1 = require(\"../key/export.js\");\nconst check_key_type_js_1 = require(\"./check_key_type.js\");\nconst aesgcmkw_js_1 = require(\"./aesgcmkw.js\");\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    (0, check_key_type_js_1.default)(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new errors_js_1.JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await (0, export_js_1.exportJWK)(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? (0, cek_js_1.bitLength)(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = (0, base64url_js_1.encode)(apu);\n            if (apv)\n                parameters.apv = (0, base64url_js_1.encode)(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await (0, aeskw_js_1.wrap)(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            encryptedKey = await (0, rsaes_js_1.encrypt)(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await (0, pbes2kw_js_1.encrypt)(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            encryptedKey = await (0, aeskw_js_1.wrap)(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await (0, aesgcmkw_js_1.wrap)(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexports.default = encryptKeyManagement;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FlattenedEncrypt = exports.unprotected = void 0;\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst encrypt_js_1 = require(\"../../runtime/encrypt.js\");\nconst zlib_js_1 = require(\"../../runtime/zlib.js\");\nconst iv_js_1 = require(\"../../lib/iv.js\");\nconst encrypt_key_management_js_1 = require(\"../../lib/encrypt_key_management.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nexports.unprotected = Symbol();\nclass FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new errors_js_1.JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new errors_js_1.JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await (0, encrypt_key_management_js_1.default)(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && exports.unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = (0, iv_js_1.default)(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = buffer_utils_js_1.encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = (0, base64url_js_1.encode)(this._aad);\n            additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), buffer_utils_js_1.encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || zlib_js_1.deflate)(this._plaintext);\n            ({ ciphertext, tag } = await (0, encrypt_js_1.default)(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await (0, encrypt_js_1.default)(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: (0, base64url_js_1.encode)(ciphertext),\n            iv: (0, base64url_js_1.encode)(this._iv),\n            tag: (0, base64url_js_1.encode)(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\nexports.FlattenedEncrypt = FlattenedEncrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeneralEncrypt = void 0;\nconst encrypt_js_1 = require(\"../flattened/encrypt.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst cek_js_1 = require(\"../../lib/cek.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst encrypt_key_management_js_1 = require(\"../../lib/encrypt_key_management.js\");\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new errors_js_1.JWEInvalid('at least one recipient must be added');\n        }\n        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options, ...options });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new errors_js_1.JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new errors_js_1.JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = (0, cek_js_1.default)(enc);\n        let jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [encrypt_js_1.unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await (0, encrypt_key_management_js_1.default)(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) ||\n                ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) ||\n                ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });\n            target.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\nexports.GeneralEncrypt = GeneralEncrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nfunction dsaDigest(alg) {\n    switch (alg) {\n        case 'PS256':\n        case 'RS256':\n        case 'ES256':\n        case 'ES256K':\n            return 'sha256';\n        case 'PS384':\n        case 'RS384':\n        case 'ES384':\n            return 'sha384';\n        case 'PS512':\n        case 'RS512':\n        case 'ES512':\n            return 'sha512';\n        case 'EdDSA':\n            return undefined;\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports.default = dsaDigest;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst get_named_curve_js_1 = require(\"./get_named_curve.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst check_modulus_length_js_1 = require(\"./check_modulus_length.js\");\nconst flags_js_1 = require(\"./flags.js\");\nconst PSS = {\n    padding: crypto_1.constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: crypto_1.constants.RSA_PSS_SALTLEN_DIGEST,\n};\nconst ecCurveAlgMap = new Map([\n    ['ES256', 'P-256'],\n    ['ES256K', 'secp256k1'],\n    ['ES384', 'P-384'],\n    ['ES512', 'P-521'],\n]);\nfunction keyForCrypto(alg, key) {\n    switch (alg) {\n        case 'EdDSA':\n            if (!['ed25519', 'ed448'].includes(key.asymmetricKeyType)) {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ed25519 or ed448');\n            }\n            return key;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            if (key.asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return key;\n        case flags_js_1.rsaPssParams && 'PS256':\n        case flags_js_1.rsaPssParams && 'PS384':\n        case flags_js_1.rsaPssParams && 'PS512':\n            if (key.asymmetricKeyType === 'rsa-pss') {\n                const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;\n                const length = parseInt(alg.slice(-3), 10);\n                if (hashAlgorithm !== undefined &&\n                    (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm)) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${alg}`);\n                }\n                if (saltLength !== undefined && saltLength > length >> 3) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${alg}`);\n                }\n            }\n            else if (key.asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa or rsa-pss');\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return { key, ...PSS };\n        case !flags_js_1.rsaPssParams && 'PS256':\n        case !flags_js_1.rsaPssParams && 'PS384':\n        case !flags_js_1.rsaPssParams && 'PS512':\n            if (key.asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return { key, ...PSS };\n        case 'ES256':\n        case 'ES256K':\n        case 'ES384':\n        case 'ES512': {\n            if (key.asymmetricKeyType !== 'ec') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ec');\n            }\n            const actual = (0, get_named_curve_js_1.default)(key);\n            const expected = ecCurveAlgMap.get(alg);\n            if (actual !== expected) {\n                throw new TypeError(`Invalid key curve for the algorithm, its curve must be ${expected}, got ${actual}`);\n            }\n            return { dsaEncoding: 'ieee-p1363', key };\n        }\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports.default = keyForCrypto;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nfunction hmacDigest(alg) {\n    switch (alg) {\n        case 'HS256':\n            return 'sha256';\n        case 'HS384':\n            return 'sha384';\n        case 'HS512':\n            return 'sha512';\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports.default = hmacDigest;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nfunction getSignVerifyKey(alg, key, usage) {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n        }\n        return (0, crypto_1.createSecretKey)(key);\n    }\n    if (key instanceof crypto_1.KeyObject) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkSigCryptoKey)(key, alg, usage);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nexports.default = getSignVerifyKey;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"crypto\");\nconst util_1 = require(\"util\");\nconst dsa_digest_js_1 = require(\"./dsa_digest.js\");\nconst hmac_digest_js_1 = require(\"./hmac_digest.js\");\nconst node_key_js_1 = require(\"./node_key.js\");\nconst get_sign_verify_key_js_1 = require(\"./get_sign_verify_key.js\");\nlet oneShotSign;\nif (crypto.sign.length > 3) {\n    oneShotSign = (0, util_1.promisify)(crypto.sign);\n}\nelse {\n    oneShotSign = crypto.sign;\n}\nconst sign = async (alg, key, data) => {\n    const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, 'sign');\n    if (alg.startsWith('HS')) {\n        const hmac = crypto.createHmac((0, hmac_digest_js_1.default)(alg), keyObject);\n        hmac.update(data);\n        return hmac.digest();\n    }\n    return oneShotSign((0, dsa_digest_js_1.default)(alg), data, (0, node_key_js_1.default)(alg, keyObject));\n};\nexports.default = sign;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"crypto\");\nconst util_1 = require(\"util\");\nconst dsa_digest_js_1 = require(\"./dsa_digest.js\");\nconst node_key_js_1 = require(\"./node_key.js\");\nconst sign_js_1 = require(\"./sign.js\");\nconst get_sign_verify_key_js_1 = require(\"./get_sign_verify_key.js\");\nconst flags_js_1 = require(\"./flags.js\");\nlet oneShotVerify;\nif (crypto.verify.length > 4 && flags_js_1.oneShotCallback) {\n    oneShotVerify = (0, util_1.promisify)(crypto.verify);\n}\nelse {\n    oneShotVerify = crypto.verify;\n}\nconst verify = async (alg, key, signature, data) => {\n    const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, 'verify');\n    if (alg.startsWith('HS')) {\n        const expected = await (0, sign_js_1.default)(alg, keyObject, data);\n        const actual = signature;\n        try {\n            return crypto.timingSafeEqual(actual, expected);\n        }\n        catch {\n            return false;\n        }\n    }\n    const algorithm = (0, dsa_digest_js_1.default)(alg);\n    const keyInput = (0, node_key_js_1.default)(alg, keyObject);\n    try {\n        return await oneShotVerify(algorithm, data, keyInput, signature);\n    }\n    catch {\n        return false;\n    }\n};\nexports.default = verify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flattenedVerify = void 0;\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst verify_js_1 = require(\"../../runtime/verify.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst is_object_js_1 = require(\"../../lib/is_object.js\");\nconst check_key_type_js_1 = require(\"../../lib/check_key_type.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nconst validate_algorithms_js_1 = require(\"../../lib/validate_algorithms.js\");\nasync function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jws)) {\n        throw new errors_js_1.JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new errors_js_1.JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new errors_js_1.JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new errors_js_1.JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new errors_js_1.JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !(0, is_object_js_1.default)(jws.header)) {\n        throw new errors_js_1.JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = (0, base64url_js_1.decode)(jws.protected);\n            parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new errors_js_1.JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!(0, is_disjoint_js_1.default)(parsedProt, jws.header)) {\n        throw new errors_js_1.JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && (0, validate_algorithms_js_1.default)('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new errors_js_1.JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new errors_js_1.JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    (0, check_key_type_js_1.default)(alg, key, 'verify');\n    const data = (0, buffer_utils_js_1.concat)(buffer_utils_js_1.encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), buffer_utils_js_1.encoder.encode('.'), typeof jws.payload === 'string' ? buffer_utils_js_1.encoder.encode(jws.payload) : jws.payload);\n    const signature = (0, base64url_js_1.decode)(jws.signature);\n    const verified = await (0, verify_js_1.default)(alg, key, signature, data);\n    if (!verified) {\n        throw new errors_js_1.JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = (0, base64url_js_1.decode)(jws.payload);\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = buffer_utils_js_1.encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\nexports.flattenedVerify = flattenedVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compactVerify = void 0;\nconst verify_js_1 = require(\"../flattened/verify.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nasync function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = buffer_utils_js_1.decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new errors_js_1.JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new errors_js_1.JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await (0, verify_js_1.flattenedVerify)({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\nexports.compactVerify = compactVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generalVerify = void 0;\nconst verify_js_1 = require(\"../flattened/verify.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst is_object_js_1 = require(\"../../lib/is_object.js\");\nasync function generalVerify(jws, key, options) {\n    if (!(0, is_object_js_1.default)(jws)) {\n        throw new errors_js_1.JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(is_object_js_1.default)) {\n        throw new errors_js_1.JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await (0, verify_js_1.flattenedVerify)({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new errors_js_1.JWSSignatureVerificationFailed();\n}\nexports.generalVerify = generalVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = (date) => Math.floor(date.getTime() / 1000);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexports.default = (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"./buffer_utils.js\");\nconst epoch_js_1 = require(\"./epoch.js\");\nconst secs_js_1 = require(\"./secs.js\");\nconst is_object_js_1 = require(\"./is_object.js\");\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexports.default = (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(buffer_utils_js_1.decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!(0, is_object_js_1.default)(payload)) {\n        throw new errors_js_1.JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { issuer } = options;\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    const { subject } = options;\n    if (subject && payload.sub !== subject) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    const { audience } = options;\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = (0, secs_js_1.default)(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = (0, epoch_js_1.default)(currentDate || new Date());\n    if ((payload.iat !== undefined || options.maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new errors_js_1.JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new errors_js_1.JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (options.maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof options.maxTokenAge === 'number' ? options.maxTokenAge : (0, secs_js_1.default)(options.maxTokenAge);\n        if (age - tolerance > max) {\n            throw new errors_js_1.JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jwtVerify = void 0;\nconst verify_js_1 = require(\"../jws/compact/verify.js\");\nconst jwt_claims_set_js_1 = require(\"../lib/jwt_claims_set.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nasync function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await (0, verify_js_1.compactVerify)(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new errors_js_1.JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = (0, jwt_claims_set_js_1.default)(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\nexports.jwtVerify = jwtVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jwtDecrypt = void 0;\nconst decrypt_js_1 = require(\"../jwe/compact/decrypt.js\");\nconst jwt_claims_set_js_1 = require(\"../lib/jwt_claims_set.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nasync function jwtDecrypt(jwt, key, options) {\n    const decrypted = await (0, decrypt_js_1.compactDecrypt)(jwt, key, options);\n    const payload = (0, jwt_claims_set_js_1.default)(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\nexports.jwtDecrypt = jwtDecrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompactEncrypt = void 0;\nconst encrypt_js_1 = require(\"../flattened/encrypt.js\");\nclass CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new encrypt_js_1.FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\nexports.CompactEncrypt = CompactEncrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FlattenedSign = void 0;\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst sign_js_1 = require(\"../../runtime/sign.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nconst check_key_type_js_1 = require(\"../../lib/check_key_type.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nclass FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new errors_js_1.JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader)) {\n            throw new errors_js_1.JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        (0, check_key_type_js_1.default)(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = buffer_utils_js_1.encoder.encode('');\n        }\n        const data = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), payload);\n        const signature = await (0, sign_js_1.default)(alg, key, data);\n        const jws = {\n            signature: (0, base64url_js_1.encode)(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = buffer_utils_js_1.decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\nexports.FlattenedSign = FlattenedSign;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompactSign = void 0;\nconst sign_js_1 = require(\"../flattened/sign.js\");\nclass CompactSign {\n    constructor(payload) {\n        this._flattened = new sign_js_1.FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\nexports.CompactSign = CompactSign;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeneralSign = void 0;\nconst sign_js_1 = require(\"../flattened/sign.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new errors_js_1.JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new sign_js_1.FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new errors_js_1.JWSInvalid('inconsistent use of JWS Unencoded Payload Option (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\nexports.GeneralSign = GeneralSign;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProduceJWT = void 0;\nconst epoch_js_1 = require(\"../lib/epoch.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nconst secs_js_1 = require(\"../lib/secs.js\");\nclass ProduceJWT {\n    constructor(payload) {\n        if (!(0, is_object_js_1.default)(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: (0, epoch_js_1.default)(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\nexports.ProduceJWT = ProduceJWT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignJWT = void 0;\nconst sign_js_1 = require(\"../jws/compact/sign.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst produce_js_1 = require(\"./produce.js\");\nclass SignJWT extends produce_js_1.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new sign_js_1.CompactSign(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new errors_js_1.JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\nexports.SignJWT = SignJWT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EncryptJWT = void 0;\nconst encrypt_js_1 = require(\"../jwe/compact/encrypt.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst produce_js_1 = require(\"./produce.js\");\nclass EncryptJWT extends produce_js_1.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new encrypt_js_1.CompactEncrypt(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\nexports.EncryptJWT = EncryptJWT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = void 0;\nconst digest_js_1 = require(\"../runtime/digest.js\");\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new errors_js_1.JWKInvalid(`${description} missing or invalid`);\n    }\n};\nasync function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!(0, is_object_js_1.default)(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = buffer_utils_js_1.encoder.encode(JSON.stringify(components));\n    return (0, base64url_js_1.encode)(await (0, digest_js_1.default)(digestAlgorithm, data));\n}\nexports.calculateJwkThumbprint = calculateJwkThumbprint;\nasync function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\nexports.calculateJwkThumbprintUri = calculateJwkThumbprintUri;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmbeddedJWK = void 0;\nconst import_js_1 = require(\"../key/import.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nasync function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token.header,\n    };\n    if (!(0, is_object_js_1.default)(joseHeader.jwk)) {\n        throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await (0, import_js_1.importJWK)({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\nexports.EmbeddedJWK = EmbeddedJWK;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLocalJWKSet = exports.LocalJWKSet = exports.isJWKSLike = void 0;\nconst import_js_1 = require(\"../key/import.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nexports.isJWKSLike = isJWKSLike;\nfunction isJWKLike(key) {\n    return (0, is_object_js_1.default)(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new errors_js_1.JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new errors_js_1.JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            throw new errors_js_1.JWKSMultipleMatchingKeys();\n        }\n        const cached = this._cached.get(jwk) || this._cached.set(jwk, {}).get(jwk);\n        if (cached[alg] === undefined) {\n            const keyObject = await (0, import_js_1.importJWK)({ ...jwk, ext: true }, alg);\n            if (keyObject instanceof Uint8Array || keyObject.type !== 'public') {\n                throw new errors_js_1.JWKSInvalid('JSON Web Key Set members must be public keys');\n            }\n            cached[alg] = keyObject;\n        }\n        return cached[alg];\n    }\n}\nexports.LocalJWKSet = LocalJWKSet;\nfunction createLocalJWKSet(jwks) {\n    return LocalJWKSet.prototype.getKey.bind(new LocalJWKSet(jwks));\n}\nexports.createLocalJWKSet = createLocalJWKSet;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst events_1 = require(\"events\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst fetchJwks = async (url, timeout, options) => {\n    let get;\n    switch (url.protocol) {\n        case 'https:':\n            get = https.get;\n            break;\n        case 'http:':\n            get = http.get;\n            break;\n        default:\n            throw new TypeError('Unsupported URL protocol.');\n    }\n    const { agent, headers } = options;\n    const req = get(url.href, {\n        agent,\n        timeout,\n        headers,\n    });\n    const [response] = (await Promise.race([(0, events_1.once)(req, 'response'), (0, events_1.once)(req, 'timeout')]));\n    if (!response) {\n        req.destroy();\n        throw new errors_js_1.JWKSTimeout();\n    }\n    if (response.statusCode !== 200) {\n        throw new errors_js_1.JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    const parts = [];\n    for await (const part of response) {\n        parts.push(part);\n    }\n    try {\n        return JSON.parse(buffer_utils_js_1.decoder.decode((0, buffer_utils_js_1.concat)(...parts)));\n    }\n    catch {\n        throw new errors_js_1.JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexports.default = fetchJwks;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRemoteJWKSet = void 0;\nconst fetch_jwks_js_1 = require(\"../runtime/fetch_jwks.js\");\nconst env_js_1 = require(\"../runtime/env.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst local_js_1 = require(\"./local.js\");\nclass RemoteJWKSet extends local_js_1.LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof errors_js_1.JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && (0, env_js_1.isCloudflareWorkers)()) {\n            return new Promise((resolve) => {\n                const isDone = () => {\n                    if (this._pendingFetch === undefined) {\n                        resolve();\n                    }\n                    else {\n                        setTimeout(isDone, 5);\n                    }\n                };\n                isDone();\n            });\n        }\n        if (!this._pendingFetch) {\n            this._pendingFetch = (0, fetch_jwks_js_1.default)(this._url, this._timeoutDuration, this._options)\n                .then((json) => {\n                if (!(0, local_js_1.isJWKSLike)(json)) {\n                    throw new errors_js_1.JWKSInvalid('JSON Web Key Set malformed');\n                }\n                this._jwks = { keys: json.keys };\n                this._jwksTimestamp = Date.now();\n                this._pendingFetch = undefined;\n            })\n                .catch((err) => {\n                this._pendingFetch = undefined;\n                throw err;\n            });\n        }\n        await this._pendingFetch;\n    }\n}\nfunction createRemoteJWKSet(url, options) {\n    return RemoteJWKSet.prototype.getKey.bind(new RemoteJWKSet(url, options));\n}\nexports.createRemoteJWKSet = createRemoteJWKSet;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsecuredJWT = void 0;\nconst base64url = require(\"../runtime/base64url.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst jwt_claims_set_js_1 = require(\"../lib/jwt_claims_set.js\");\nconst produce_js_1 = require(\"./produce.js\");\nclass UnsecuredJWT extends produce_js_1.ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new errors_js_1.JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new errors_js_1.JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(buffer_utils_js_1.decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch {\n            throw new errors_js_1.JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = (0, jwt_claims_set_js_1.default)(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\nexports.UnsecuredJWT = UnsecuredJWT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst base64url = require(\"../runtime/base64url.js\");\nexports.encode = base64url.encode;\nexports.decode = base64url.decode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeProtectedHeader = void 0;\nconst base64url_js_1 = require(\"./base64url.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nfunction decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(buffer_utils_js_1.decoder.decode((0, base64url_js_1.decode)(protectedB64u)));\n        if (!(0, is_object_js_1.default)(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\nexports.decodeProtectedHeader = decodeProtectedHeader;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeJwt = void 0;\nconst base64url_js_1 = require(\"./base64url.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nconst errors_js_1 = require(\"./errors.js\");\nfunction decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new errors_js_1.JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new errors_js_1.JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new errors_js_1.JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new errors_js_1.JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = (0, base64url_js_1.decode)(payload);\n    }\n    catch {\n        throw new errors_js_1.JWTInvalid('Failed to parse the base64url encoded payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(buffer_utils_js_1.decoder.decode(decoded));\n    }\n    catch {\n        throw new errors_js_1.JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!(0, is_object_js_1.default)(result))\n        throw new errors_js_1.JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\nexports.decodeJwt = decodeJwt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateKeyPair = exports.generateSecret = void 0;\nconst crypto_1 = require(\"crypto\");\nconst util_1 = require(\"util\");\nconst random_js_1 = require(\"./random.js\");\nconst check_modulus_length_js_1 = require(\"./check_modulus_length.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst generate = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function generateSecret(alg, options) {\n    let length;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            break;\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (0, crypto_1.createSecretKey)((0, random_js_1.default)(new Uint8Array(length >> 3)));\n}\nexports.generateSecret = generateSecret;\nasync function generateKeyPair(alg, options) {\n    var _a, _b;\n    switch (alg) {\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n        case 'RSA1_5': {\n            const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n            if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n                throw new errors_js_1.JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n            }\n            const keypair = await generate('rsa', {\n                modulusLength,\n                publicExponent: 0x10001,\n            });\n            (0, check_modulus_length_js_1.setModulusLength)(keypair.privateKey, modulusLength);\n            (0, check_modulus_length_js_1.setModulusLength)(keypair.publicKey, modulusLength);\n            return keypair;\n        }\n        case 'ES256':\n            return generate('ec', { namedCurve: 'P-256' });\n        case 'ES256K':\n            return generate('ec', { namedCurve: 'secp256k1' });\n        case 'ES384':\n            return generate('ec', { namedCurve: 'P-384' });\n        case 'ES512':\n            return generate('ec', { namedCurve: 'P-521' });\n        case 'EdDSA': {\n            switch (options === null || options === void 0 ? void 0 : options.crv) {\n                case undefined:\n                case 'Ed25519':\n                    return generate('ed25519');\n                case 'Ed448':\n                    return generate('ed448');\n                default:\n                    throw new errors_js_1.JOSENotSupported('Invalid or unsupported crv option provided, supported values are Ed25519 and Ed448');\n            }\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW':\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n            switch (crv) {\n                case undefined:\n                case 'P-256':\n                case 'P-384':\n                case 'P-521':\n                    return generate('ec', { namedCurve: crv });\n                case 'X25519':\n                    return generate('x25519');\n                case 'X448':\n                    return generate('x448');\n                default:\n                    throw new errors_js_1.JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n}\nexports.generateKeyPair = generateKeyPair;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateKeyPair = void 0;\nconst generate_js_1 = require(\"../runtime/generate.js\");\nasync function generateKeyPair(alg, options) {\n    return (0, generate_js_1.generateKeyPair)(alg, options);\n}\nexports.generateKeyPair = generateKeyPair;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateSecret = void 0;\nconst generate_js_1 = require(\"../runtime/generate.js\");\nasync function generateSecret(alg, options) {\n    return (0, generate_js_1.generateSecret)(alg, options);\n}\nexports.generateSecret = generateSecret;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64url = exports.generateSecret = exports.generateKeyPair = exports.errors = exports.decodeJwt = exports.decodeProtectedHeader = exports.importJWK = exports.importX509 = exports.importPKCS8 = exports.importSPKI = exports.exportJWK = exports.exportSPKI = exports.exportPKCS8 = exports.UnsecuredJWT = exports.createRemoteJWKSet = exports.createLocalJWKSet = exports.EmbeddedJWK = exports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = exports.EncryptJWT = exports.SignJWT = exports.GeneralSign = exports.FlattenedSign = exports.CompactSign = exports.FlattenedEncrypt = exports.CompactEncrypt = exports.jwtDecrypt = exports.jwtVerify = exports.generalVerify = exports.flattenedVerify = exports.compactVerify = exports.GeneralEncrypt = exports.generalDecrypt = exports.flattenedDecrypt = exports.compactDecrypt = void 0;\nvar decrypt_js_1 = require(\"./jwe/compact/decrypt.js\");\nObject.defineProperty(exports, \"compactDecrypt\", { enumerable: true, get: function () { return decrypt_js_1.compactDecrypt; } });\nvar decrypt_js_2 = require(\"./jwe/flattened/decrypt.js\");\nObject.defineProperty(exports, \"flattenedDecrypt\", { enumerable: true, get: function () { return decrypt_js_2.flattenedDecrypt; } });\nvar decrypt_js_3 = require(\"./jwe/general/decrypt.js\");\nObject.defineProperty(exports, \"generalDecrypt\", { enumerable: true, get: function () { return decrypt_js_3.generalDecrypt; } });\nvar encrypt_js_1 = require(\"./jwe/general/encrypt.js\");\nObject.defineProperty(exports, \"GeneralEncrypt\", { enumerable: true, get: function () { return encrypt_js_1.GeneralEncrypt; } });\nvar verify_js_1 = require(\"./jws/compact/verify.js\");\nObject.defineProperty(exports, \"compactVerify\", { enumerable: true, get: function () { return verify_js_1.compactVerify; } });\nvar verify_js_2 = require(\"./jws/flattened/verify.js\");\nObject.defineProperty(exports, \"flattenedVerify\", { enumerable: true, get: function () { return verify_js_2.flattenedVerify; } });\nvar verify_js_3 = require(\"./jws/general/verify.js\");\nObject.defineProperty(exports, \"generalVerify\", { enumerable: true, get: function () { return verify_js_3.generalVerify; } });\nvar verify_js_4 = require(\"./jwt/verify.js\");\nObject.defineProperty(exports, \"jwtVerify\", { enumerable: true, get: function () { return verify_js_4.jwtVerify; } });\nvar decrypt_js_4 = require(\"./jwt/decrypt.js\");\nObject.defineProperty(exports, \"jwtDecrypt\", { enumerable: true, get: function () { return decrypt_js_4.jwtDecrypt; } });\nvar encrypt_js_2 = require(\"./jwe/compact/encrypt.js\");\nObject.defineProperty(exports, \"CompactEncrypt\", { enumerable: true, get: function () { return encrypt_js_2.CompactEncrypt; } });\nvar encrypt_js_3 = require(\"./jwe/flattened/encrypt.js\");\nObject.defineProperty(exports, \"FlattenedEncrypt\", { enumerable: true, get: function () { return encrypt_js_3.FlattenedEncrypt; } });\nvar sign_js_1 = require(\"./jws/compact/sign.js\");\nObject.defineProperty(exports, \"CompactSign\", { enumerable: true, get: function () { return sign_js_1.CompactSign; } });\nvar sign_js_2 = require(\"./jws/flattened/sign.js\");\nObject.defineProperty(exports, \"FlattenedSign\", { enumerable: true, get: function () { return sign_js_2.FlattenedSign; } });\nvar sign_js_3 = require(\"./jws/general/sign.js\");\nObject.defineProperty(exports, \"GeneralSign\", { enumerable: true, get: function () { return sign_js_3.GeneralSign; } });\nvar sign_js_4 = require(\"./jwt/sign.js\");\nObject.defineProperty(exports, \"SignJWT\", { enumerable: true, get: function () { return sign_js_4.SignJWT; } });\nvar encrypt_js_4 = require(\"./jwt/encrypt.js\");\nObject.defineProperty(exports, \"EncryptJWT\", { enumerable: true, get: function () { return encrypt_js_4.EncryptJWT; } });\nvar thumbprint_js_1 = require(\"./jwk/thumbprint.js\");\nObject.defineProperty(exports, \"calculateJwkThumbprint\", { enumerable: true, get: function () { return thumbprint_js_1.calculateJwkThumbprint; } });\nObject.defineProperty(exports, \"calculateJwkThumbprintUri\", { enumerable: true, get: function () { return thumbprint_js_1.calculateJwkThumbprintUri; } });\nvar embedded_js_1 = require(\"./jwk/embedded.js\");\nObject.defineProperty(exports, \"EmbeddedJWK\", { enumerable: true, get: function () { return embedded_js_1.EmbeddedJWK; } });\nvar local_js_1 = require(\"./jwks/local.js\");\nObject.defineProperty(exports, \"createLocalJWKSet\", { enumerable: true, get: function () { return local_js_1.createLocalJWKSet; } });\nvar remote_js_1 = require(\"./jwks/remote.js\");\nObject.defineProperty(exports, \"createRemoteJWKSet\", { enumerable: true, get: function () { return remote_js_1.createRemoteJWKSet; } });\nvar unsecured_js_1 = require(\"./jwt/unsecured.js\");\nObject.defineProperty(exports, \"UnsecuredJWT\", { enumerable: true, get: function () { return unsecured_js_1.UnsecuredJWT; } });\nvar export_js_1 = require(\"./key/export.js\");\nObject.defineProperty(exports, \"exportPKCS8\", { enumerable: true, get: function () { return export_js_1.exportPKCS8; } });\nObject.defineProperty(exports, \"exportSPKI\", { enumerable: true, get: function () { return export_js_1.exportSPKI; } });\nObject.defineProperty(exports, \"exportJWK\", { enumerable: true, get: function () { return export_js_1.exportJWK; } });\nvar import_js_1 = require(\"./key/import.js\");\nObject.defineProperty(exports, \"importSPKI\", { enumerable: true, get: function () { return import_js_1.importSPKI; } });\nObject.defineProperty(exports, \"importPKCS8\", { enumerable: true, get: function () { return import_js_1.importPKCS8; } });\nObject.defineProperty(exports, \"importX509\", { enumerable: true, get: function () { return import_js_1.importX509; } });\nObject.defineProperty(exports, \"importJWK\", { enumerable: true, get: function () { return import_js_1.importJWK; } });\nvar decode_protected_header_js_1 = require(\"./util/decode_protected_header.js\");\nObject.defineProperty(exports, \"decodeProtectedHeader\", { enumerable: true, get: function () { return decode_protected_header_js_1.decodeProtectedHeader; } });\nvar decode_jwt_js_1 = require(\"./util/decode_jwt.js\");\nObject.defineProperty(exports, \"decodeJwt\", { enumerable: true, get: function () { return decode_jwt_js_1.decodeJwt; } });\nexports.errors = require(\"./util/errors.js\");\nvar generate_key_pair_js_1 = require(\"./key/generate_key_pair.js\");\nObject.defineProperty(exports, \"generateKeyPair\", { enumerable: true, get: function () { return generate_key_pair_js_1.generateKeyPair; } });\nvar generate_secret_js_1 = require(\"./key/generate_secret.js\");\nObject.defineProperty(exports, \"generateSecret\", { enumerable: true, get: function () { return generate_secret_js_1.generateSecret; } });\nexports.base64url = require(\"./util/base64url.js\");\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createToken = void 0;\nvar jose_1 = require(\"jose\");\nvar textEncoder = new TextEncoder();\nvar createToken = function (_a) {\n    var payload = _a.payload, secret = _a.secret, expiration = _a.expiration;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var secretKey, jwt;\n        return __generator(this, function (_b) {\n            secretKey = textEncoder.encode(secret);\n            jwt = new jose_1.SignJWT(payload).setProtectedHeader({ alg: 'HS256' });\n            if (expiration) {\n                jwt.setExpirationTime(expiration);\n            }\n            return [2 /*return*/, jwt.sign(secretKey)];\n        });\n    });\n};\nexports.createToken = createToken;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAccessToken = void 0;\nvar createToken_1 = require(\"./createToken\");\nvar createAccessToken = function (args) { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n    return [2 /*return*/, (0, createToken_1.createToken)(args)];\n}); }); };\nexports.createAccessToken = createAccessToken;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAssetsAccessToken = void 0;\nvar createToken_1 = require(\"./createToken\");\nvar createAssetsAccessToken = function (args) { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n    return [2 /*return*/, (0, createToken_1.createToken)(args)];\n}); }); };\nexports.createAssetsAccessToken = createAssetsAccessToken;\n", "let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nmodule.exports = { urlAlphabet }\n", "let crypto = require('crypto')\nlet { urlAlphabet } = require('./url-alphabet/index.cjs')\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nlet fillPool = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nlet random = bytes => {\n  fillPool((bytes -= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  fillPool((size -= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += urlAlphabet[pool[i] & 63]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChallengeToken = void 0;\nvar nanoid_1 = require(\"nanoid\");\nvar createToken_1 = require(\"./createToken\");\nvar createChallengeToken = function (_a) {\n    var secret = _a.secret;\n    return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_b) {\n        return [2 /*return*/, (0, createToken_1.createToken)({ payload: { challenge: (0, nanoid_1.nanoid)(20) }, secret: secret, expiration: '10m' })];\n    }); });\n};\nexports.createChallengeToken = createChallengeToken;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMigrationToken = void 0;\nvar createToken_1 = require(\"./createToken\");\nvar createMigrationToken = function (args) { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n    return [2 /*return*/, (0, createToken_1.createToken)(args)];\n}); }); };\nexports.createMigrationToken = createMigrationToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPersonalAccessToken = void 0;\nvar nanoid_1 = require(\"nanoid\");\nvar createPersonalAccessToken = function () { return \"pat_\".concat((0, nanoid_1.nanoid)(20)); };\nexports.createPersonalAccessToken = createPersonalAccessToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeToken = void 0;\nvar errors_1 = require(\"@fleek-platform/errors\");\nvar jose_1 = require(\"jose\");\nvar decodeToken = function (_a) {\n    var token = _a.token;\n    try {\n        return (0, jose_1.decodeJwt)(token);\n    }\n    catch (_b) {\n        throw new errors_1.AuthorizationError();\n    }\n};\nexports.decodeToken = decodeToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeAccessToken = void 0;\nvar decodeToken_1 = require(\"./decodeToken\");\nvar decodeAccessToken = function (args) { return (0, decodeToken_1.decodeToken)(args); };\nexports.decodeAccessToken = decodeAccessToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTokenFromRequest = void 0;\nvar errors_1 = require(\"@fleek-platform/errors\");\nvar getTokenFromRequest = function (request) {\n    var header = request.headers.authorization;\n    if (!header) {\n        throw new errors_1.AuthorizationError();\n    }\n    return header.replace('Bearer ', '');\n};\nexports.getTokenFromRequest = getTokenFromRequest;\n", "!function(n,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else if(\"object\"==typeof exports)exports.JsCrypto=t();else{var r=t();for(var i in n.JsCrypto=n.JsCrypto||{},r)n.JsCrypto[i]=r[i]}}(this,(function(){return function(){\"use strict\";var n={9691:function(n,t,r){r.d(t,{AES:function(){return _}});var i,e=r(9456),o=r(787),u=r(5693),f=r(9109),c=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=function(){return(s=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},a=[],h=[],v=[],w=[],l=[],b=[],d=[],y=[],p=[],O=[];!function(){for(var n=[],t=0;t<256;t++)n[t]=t<128?t<<1:t<<1^283;var r=0,i=0;for(t=0;t<256;t++){var e=i^i<<1^i<<2^i<<3^i<<4;e=e>>>8^255&e^99,a[r]=e,h[e]=r;var o=n[r],u=n[o],f=n[u],c=257*n[e]^16843008*e;v[r]=c<<24|c>>>8,w[r]=c<<16|c>>>16,l[r]=c<<8|c>>>24,b[r]=c,c=16843009*f^65537*u^257*o^16843008*r,d[e]=c<<24|c>>>8,y[e]=c<<16|c>>>16,p[e]=c<<8|c>>>24,O[e]=c,r?(r=o^n[n[n[f^o]]],i^=n[n[i]]):r=i=1}}();var j=[0,1,2,4,8,16,32,64,128,27,54],_=function(n){function t(t){var r=n.call(this,t)||this;return r.u=0,r.h=[],r.v=[],r.O=t,r.A(),r}return c(t,n),t.prototype.A=function(){var n;if(!this.u||this.k!==this.H){for(var t=this.k=this.H,r=t.words,i=t.nSigBytes/4,e=4*((this.u=i+6)+1),o=this.h=[],u=0;u<e;u++)u<i?o[u]=r[u]:(n=o[u-1],u%i?i>6&&u%i==4&&(n=a[n>>>24]<<24|a[n>>>16&255]<<16|a[n>>>8&255]<<8|a[255&n]):(n=a[(n=n<<8|n>>>24)>>>24]<<24|a[n>>>16&255]<<16|a[n>>>8&255]<<8|a[255&n],n^=j[u/i|0]<<24),o[u]=o[u-i]^n);this.v=[];for(var f=0;f<e;f++){u=e-f;n=f%4?o[u]:o[u-4],this.v[f]=f<4||u<=4?n:d[a[n>>>24]]^y[a[n>>>16&255]]^p[a[n>>>8&255]]^O[a[255&n]]}}},t.prototype.encryptBlock=function(n,t){this.B(n,t,this.h,v,w,l,b,a)},t.prototype.decryptBlock=function(n,t){var r=n[t+1];n[t+1]=n[t+3],n[t+3]=r,this.B(n,t,this.v,d,y,p,O,h),r=n[t+1],n[t+1]=n[t+3],n[t+3]=r},t.prototype.B=function(n,t,r,i,e,o,u,f){for(var c=this.u,s=n[t]^r[0],a=n[t+1]^r[1],h=n[t+2]^r[2],v=n[t+3]^r[3],w=4,l=1;l<c;l++){var b=i[s>>>24]^e[a>>>16&255]^o[h>>>8&255]^u[255&v]^r[w++],d=i[a>>>24]^e[h>>>16&255]^o[v>>>8&255]^u[255&s]^r[w++],y=i[h>>>24]^e[v>>>16&255]^o[s>>>8&255]^u[255&a]^r[w++],p=i[v>>>24]^e[s>>>16&255]^o[a>>>8&255]^u[255&h]^r[w++];s=b,a=d,h=y,v=p}var O=(f[s>>>24]<<24|f[a>>>16&255]<<16|f[h>>>8&255]<<8|f[255&v])^r[w++],j=(f[a>>>24]<<24|f[h>>>16&255]<<16|f[v>>>8&255]<<8|f[255&s])^r[w++],_=(f[h>>>24]<<24|f[v>>>16&255]<<16|f[s>>>8&255]<<8|f[255&a])^r[w++],m=(f[v>>>24]<<24|f[s>>>16&255]<<16|f[a>>>8&255]<<8|f[255&h])^r[w++];n[t]=O,n[t+1]=j,n[t+2]=_,n[t+3]=m},t.createEncryptor=function(n,r){return new t(s(s({},r=void 0===r?{}:r),{key:n,transformMode:e.t.ENC_TRANSFORM_MODE}))},t.createDecryptor=function(n,r){return new t(s(s({},r=void 0===r?{}:r),{key:n,transformMode:e.t.DEC_TRANSFORM_MODE}))},t.encrypt=function(n,r,i){if(\"string\"==typeof r)return u.E.encrypt(t,n,r,i);if(r.nSigBytes%4!=0)throw new Error(\"Key size must be multiple of 32bit/4byte/1word\");return f.D.encrypt(t,n,r,i)},t.decrypt=function(n,r,i){if(\"string\"==typeof r)return u.E.decrypt(t,n,r,i);if(r.nSigBytes%4!=0)throw new Error(\"Key size must be multiple of 32bit/4byte/1word\");return f.D.decrypt(t,n,r,i)},t.keySize=8,t}(o.G)},3967:function(n,t,r){r.d(t,{CBCMAC:function(){return f}});var i=r(4768),e=r(3354),o=r(9691),u=r(3664);function f(n,t,r,f,c,s){var a=s&&s.Cipher?s.Cipher:o.AES,h=\"string\"==typeof r?i.d.parse(r):r,v=f||new e.e([0,0]),w=\"string\"==typeof t?i.d.parse(t):t,l=\"string\"==typeof n?i.d.parse(n):n,b=c||16;return u.K.mac(a,h,v,w,l,b)}},9910:function(n,t,r){r.d(t,{DES:function(){return b}});var i,e=r(787),o=r(9456),u=r(5693),f=r(9109),c=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=function(){return(s=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},a=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],h=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],v=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],w=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],l=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],b=function(n){function t(t){var r=n.call(this,t)||this;return r.N=2,r.I=[],r.U=[],r.L=0,r.F=0,r.O=t,r.A(),r}return c(t,n),t.prototype.A=function(){for(var n=this.H.words,t=[],r=0;r<56;r++){var i=a[r]-1;t[r]=n[i>>>5]>>>31-i%32&1}for(var e=this.I=[],o=0;o<16;o++){var u=e[o]=[],f=v[o];for(r=0;r<24;r++)u[r/6|0]|=t[(h[r]-1+f)%28]<<31-r%6,u[4+(r/6|0)]|=t[28+(h[r+24]-1+f)%28]<<31-r%6;u[0]=u[0]<<1|u[0]>>>31;for(r=1;r<7;r++)u[r]=u[r]>>>4*(r-1)+3;u[7]=u[7]<<5|u[7]>>>27}this.U=[];for(r=0;r<16;r++)this.U[r]=e[15-r]},t.prototype.encryptBlock=function(n,t){this.R(n,t,this.I)},t.prototype.decryptBlock=function(n,t){this.R(n,t,this.U)},t.prototype.R=function(n,t,r){this.L=n[t],this.F=n[t+1],this.X(4,252645135),this.X(16,65535),this.Z(2,858993459),this.Z(8,16711935),this.X(1,1431655765);for(var i=0;i<16;i++){for(var e=r[i],o=this.L,u=this.F,f=0,c=0;c<8;c++){var s=(u^e[c])&l[c];f|=w[c][s>>>0]}this.L=u,this.F=o^f}var a=this.L;this.L=this.F,this.F=a,this.X(1,1431655765),this.Z(8,16711935),this.Z(2,858993459),this.X(16,65535),this.X(4,252645135),n[t]=this.L,n[t+1]=this.F},t.prototype.X=function(n,t){var r=(this.L>>>n^this.F)&t;this.F^=r,this.L^=r<<n},t.prototype.Z=function(n,t){var r=(this.F>>>n^this.L)&t;this.L^=r,this.F^=r<<n},t.createEncryptor=function(n,r){return new t(s(s({},r=void 0===r?{}:r),{key:n,transformMode:o.t.ENC_TRANSFORM_MODE}))},t.createDecryptor=function(n,r){return new t(s(s({},r=void 0===r?{}:r),{key:n,transformMode:o.t.DEC_TRANSFORM_MODE}))},t.encrypt=function(n,r,i){return\"string\"==typeof r?u.E.encrypt(t,n,r,i):f.D.encrypt(t,n,r,i)},t.decrypt=function(n,r,i){return\"string\"==typeof r?u.E.decrypt(t,n,r,i):f.D.decrypt(t,n,r,i)},t.keySize=2,t.ivSize=2,t}(e.G)},6739:function(n,t,r){r.d(t,{DES3:function(){return v}});var i,e=r(9109),o=r(787),u=r(9456),f=r(9910),c=r(3354),s=r(5693),a=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),h=function(){return(h=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},v=function(n){function t(t){var r=n.call(this,t)||this;r.N=2,r.O=t;var i=r.J();return r.Y=i[0],r.$=i[1],r.nn=i[2],r}return a(t,n),t.prototype.J=function(){var n=this.H.words;if(2!==n.length&&4!==n.length&&n.length<6)throw new Error(\"Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.\");var t=n.slice(0,2),r=n.length<4?n.slice(0,2):n.slice(2,4),i=n.length<6?n.slice(0,2):n.slice(4,6);return[f.DES.createEncryptor(new c.e(t)),f.DES.createEncryptor(new c.e(r)),f.DES.createEncryptor(new c.e(i))]},t.prototype.A=function(){var n=this.J();this.Y=n[0],this.$=n[1],this.nn=n[2]},t.prototype.encryptBlock=function(n,t){this.Y.encryptBlock(n,t),this.$.decryptBlock(n,t),this.nn.encryptBlock(n,t)},t.prototype.decryptBlock=function(n,t){this.nn.decryptBlock(n,t),this.$.encryptBlock(n,t),this.Y.decryptBlock(n,t)},t.createEncryptor=function(n,r){return new t(h(h({},r=void 0===r?{}:r),{key:n,transformMode:u.t.ENC_TRANSFORM_MODE}))},t.createDecryptor=function(n,r){return new t(h(h({},r=void 0===r?{}:r),{key:n,transformMode:u.t.DEC_TRANSFORM_MODE}))},t.encrypt=function(n,r,i){return\"string\"==typeof r?s.E.encrypt(t,n,r,i):e.D.encrypt(t,n,r,i)},t.decrypt=function(n,r,i){return\"string\"==typeof r?s.E.decrypt(t,n,r,i):e.D.decrypt(t,n,r,i)},t.keySize=6,t.ivSize=2,t}(o.G)},7753:function(n,t,r){r.d(t,{GMAC:function(){return f}});var i=r(4768),e=r(3354),o=r(9691),u=r(5607);function f(n,t,r,f,c){var s=\"string\"==typeof n?i.d.parse(n):n,a=r||new e.e([0,0,0,0]),h=c&&c.Cipher?c.Cipher:o.AES,v=\"string\"==typeof t?i.d.parse(t):t,w=f||16;return u.V.mac(h,v,a,s,void 0,w)}},6367:function(n,t,r){r.d(t,{Hmac:function(){return e}});var i=r(4768),e=function(){function n(n,t){this.tn=n,\"string\"==typeof t&&(t=i.d.parse(t));var r=n.blockSize,e=4*r;t.nSigBytes>e&&(t=n.finalize(t)),t.clamp();for(var o=this.rn=t.clone(),u=this.en=t.clone(),f=o.words,c=u.words,s=0;s<r;s++)f[s]^=1549556828,c[s]^=909522486;u.nSigBytes=e,o.nSigBytes=e,this.reset()}return n.prototype.reset=function(){this.tn.reset(),this.tn.update(this.en)},n.prototype.update=function(n){return this.tn.update(n),this},n.prototype.finalize=function(n){var t=this.tn.finalize(n);return this.tn.reset(),this.tn.finalize(this.rn.clone().concat(t))},n}()},3027:function(n,t,r){r.d(t,{HmacMD5:function(){return o}});var i=r(6367),e=r(670);function o(n,t){return new i.Hmac(new e.MD5,t).finalize(n)}},149:function(n,t,r){r.d(t,{HmacSHA1:function(){return o}});var i=r(6367),e=r(3173);function o(n,t){return new i.Hmac(new e.SHA1,t).finalize(n)}},4105:function(n,t,r){r.d(t,{HmacSHA224:function(){return o}});var i=r(6367),e=r(766);function o(n,t){return new i.Hmac(new e.SHA224,t).finalize(n)}},980:function(n,t,r){r.d(t,{HmacSHA256:function(){return o}});var i=r(6367),e=r(5561);function o(n,t){return new i.Hmac(new e.SHA256,t).finalize(n)}},5838:function(n,t,r){r.d(t,{HmacSHA384:function(){return o}});var i=r(6367),e=r(6324);function o(n,t){return new i.Hmac(new e.SHA384,t).finalize(n)}},9902:function(n,t,r){r.d(t,{HmacSHA512:function(){return o}});var i=r(6367),e=r(7491);function o(n,t){return new i.Hmac(new e.SHA512,t).finalize(n)}},670:function(n,t,r){r.d(t,{MD5:function(){return v}});var i,e=r(3354),o=r(1868),u=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),f=[];function c(n,t,r,i,e,o,u){var f=n+(t&r|~t&i)+e+u;return(f<<o|f>>>32-o)+t}function s(n,t,r,i,e,o,u){var f=n+(t&i|r&~i)+e+u;return(f<<o|f>>>32-o)+t}function a(n,t,r,i,e,o,u){var f=n+(t^r^i)+e+u;return(f<<o|f>>>32-o)+t}function h(n,t,r,i,e,o,u){var f=n+(r^(t|~i))+e+u;return(f<<o|f>>>32-o)+t}!function(){for(var n=0;n<64;n++)f[n]=4294967296*Math.abs(Math.sin(n+1))|0}();var v=function(n){function t(t){var r=n.call(this,t)||this;return r.on=new e.e([1732584193,4023233417,2562383102,271733878]),t&&void 0!==t.hash&&(r.on=t.hash.clone()),r}return u(t,n),t.prototype.A=function(){this.on=new e.e([1732584193,4023233417,2562383102,271733878])},t.prototype.un=function(n,t){for(var r=0;r<16;r++){var i=t+r,e=n[i];n[i]=16711935&(e<<8|e>>>24)|4278255360&(e<<24|e>>>8)}var o=this.on.words,u=n[t],v=n[t+1],w=n[t+2],l=n[t+3],b=n[t+4],d=n[t+5],y=n[t+6],p=n[t+7],O=n[t+8],j=n[t+9],_=n[t+10],m=n[t+11],A=n[t+12],g=n[t+13],E=n[t+14],S=n[t+15],M=o[0],k=o[1],H=o[2],C=o[3];M=c(M,k,H,C,u,7,f[0]),C=c(C,M,k,H,v,12,f[1]),H=c(H,C,M,k,w,17,f[2]),k=c(k,H,C,M,l,22,f[3]),M=c(M,k,H,C,b,7,f[4]),C=c(C,M,k,H,d,12,f[5]),H=c(H,C,M,k,y,17,f[6]),k=c(k,H,C,M,p,22,f[7]),M=c(M,k,H,C,O,7,f[8]),C=c(C,M,k,H,j,12,f[9]),H=c(H,C,M,k,_,17,f[10]),k=c(k,H,C,M,m,22,f[11]),M=c(M,k,H,C,A,7,f[12]),C=c(C,M,k,H,g,12,f[13]),H=c(H,C,M,k,E,17,f[14]),M=s(M,k=c(k,H,C,M,S,22,f[15]),H,C,v,5,f[16]),C=s(C,M,k,H,y,9,f[17]),H=s(H,C,M,k,m,14,f[18]),k=s(k,H,C,M,u,20,f[19]),M=s(M,k,H,C,d,5,f[20]),C=s(C,M,k,H,_,9,f[21]),H=s(H,C,M,k,S,14,f[22]),k=s(k,H,C,M,b,20,f[23]),M=s(M,k,H,C,j,5,f[24]),C=s(C,M,k,H,E,9,f[25]),H=s(H,C,M,k,l,14,f[26]),k=s(k,H,C,M,O,20,f[27]),M=s(M,k,H,C,g,5,f[28]),C=s(C,M,k,H,w,9,f[29]),H=s(H,C,M,k,p,14,f[30]),M=a(M,k=s(k,H,C,M,A,20,f[31]),H,C,d,4,f[32]),C=a(C,M,k,H,O,11,f[33]),H=a(H,C,M,k,m,16,f[34]),k=a(k,H,C,M,E,23,f[35]),M=a(M,k,H,C,v,4,f[36]),C=a(C,M,k,H,b,11,f[37]),H=a(H,C,M,k,p,16,f[38]),k=a(k,H,C,M,_,23,f[39]),M=a(M,k,H,C,g,4,f[40]),C=a(C,M,k,H,u,11,f[41]),H=a(H,C,M,k,l,16,f[42]),k=a(k,H,C,M,y,23,f[43]),M=a(M,k,H,C,j,4,f[44]),C=a(C,M,k,H,A,11,f[45]),H=a(H,C,M,k,S,16,f[46]),M=h(M,k=a(k,H,C,M,w,23,f[47]),H,C,u,6,f[48]),C=h(C,M,k,H,p,10,f[49]),H=h(H,C,M,k,E,15,f[50]),k=h(k,H,C,M,d,21,f[51]),M=h(M,k,H,C,A,6,f[52]),C=h(C,M,k,H,l,10,f[53]),H=h(H,C,M,k,_,15,f[54]),k=h(k,H,C,M,v,21,f[55]),M=h(M,k,H,C,O,6,f[56]),C=h(C,M,k,H,S,10,f[57]),H=h(H,C,M,k,y,15,f[58]),k=h(k,H,C,M,g,21,f[59]),M=h(M,k,H,C,b,6,f[60]),C=h(C,M,k,H,m,10,f[61]),H=h(H,C,M,k,w,15,f[62]),k=h(k,H,C,M,j,21,f[63]),o[0]=o[0]+M|0,o[1]=o[1]+k|0,o[2]=o[2]+H|0,o[3]=o[3]+C|0},t.prototype.fn=function(){var n=this.cn,t=n.words,r=8*this.sn,i=8*n.nSigBytes;t[i>>>5]|=128<<24-i%32;var e=Math.floor(r/4294967296),o=r;t[15+(i+64>>>9<<4)]=16711935&(e<<8|e>>>24)|4278255360&(e<<24|e>>>8),t[14+(i+64>>>9<<4)]=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),n.nSigBytes=4*(t.length+1),this.an();for(var u=this.on,f=u.words,c=0;c<4;c++){var s=f[c];f[c]=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8)}return u},t.prototype.clone=function(){return new t({hash:this.on,blockSize:this.N,data:this.cn,nBytes:this.sn})},t.hash=function(n){return(new t).finalize(n)},t}(o.P)},4615:function(n,t,r){r.d(t,{RC4:function(){return s}});var i,e=r(30),o=r(5693),u=r(9109),f=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),c=function(){return(c=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},s=function(n){function t(t){var r=n.call(this,t)||this;return r.S=[],r.i=0,r.j=0,r.O=t,r.A(),r}return f(t,n),t.prototype.A=function(){var n=this.H,t=n.words,r=n.nSigBytes;this.S=[];for(var i=0;i<256;i++)this.S[i]=i;i=0;for(var e=0;i<256;i++){var o=i%r,u=t[o>>>2]>>>24-o%4*8&255;e=(e+this.S[i]+u)%256;var f=this.S[i];this.S[i]=this.S[e],this.S[e]=f}this.i=this.j=0},t.prototype.un=function(n,t){n[t]^=this.generateKeyStreamWord()},t.prototype.generateKeyStreamWord=function(){for(var n=this.S,t=this.i,r=this.j,i=0,e=0;e<4;e++){r=(r+n[t=(t+1)%256])%256;var o=n[t];n[t]=n[r],n[r]=o,i|=n[(n[t]+n[r])%256]<<24-8*e}return this.i=t,this.j=r,i},t.createEncryptor=function(n,r){return new t(c(c({},r=void 0===r?{}:r),{key:n}))},t.createDecryptor=function(n,r){return new t(c(c({},r=void 0===r?{}:r),{key:n}))},t.encrypt=function(n,r,i){return\"string\"==typeof r?o.E.encrypt(t,n,r,i):u.D.encrypt(t,n,r,i)},t.decrypt=function(n,r,i){return\"string\"==typeof r?o.E.decrypt(t,n,r,i):u.D.decrypt(t,n,r,i)},t.ivSize=0,t.keySize=8,t}(e.q)},9639:function(n,t,r){r.d(t,{RC4Drop:function(){return s}});var i,e=r(5693),o=r(9109),u=r(4615),f=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),c=function(){return(c=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},s=function(n){function t(t){var r=n.call(this,t)||this;return r.drop=192,r.O=t,t&&\"number\"==typeof t.drop&&(r.drop=t.drop),r.A(),r}return f(t,n),t.prototype.A=function(){n.prototype.A.call(this);for(var t=this.drop;t>0;t--)this.generateKeyStreamWord()},t.createEncryptor=function(n,r){return new t(c(c({},r=void 0===r?{}:r),{key:n}))},t.createDecryptor=function(n,r){return new t(c(c({},r=void 0===r?{}:r),{key:n}))},t.encrypt=function(n,r,i){return\"string\"==typeof r?e.E.encrypt(t,n,r,i):o.D.encrypt(t,n,r,i)},t.decrypt=function(n,r,i){return\"string\"==typeof r?e.E.decrypt(t,n,r,i):o.D.decrypt(t,n,r,i)},t}(u.RC4)},7104:function(n,t,r){r.d(t,{RIPEMD160:function(){return O}});var i,e=r(1868),o=r(3354),u=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),f=new o.e([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),c=new o.e([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),s=new o.e([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),a=new o.e([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),h=new o.e([0,1518500249,1859775393,2400959708,2840853838]),v=new o.e([1352829926,1548603684,1836072691,2053994217,0]);function w(n,t,r){return n^t^r}function l(n,t,r){return n&t|~n&r}function b(n,t,r){return(n|~t)^r}function d(n,t,r){return n&r|t&~r}function y(n,t,r){return n^(t|~r)}function p(n,t){return n<<t|n>>>32-t}var O=function(n){function t(t){var r=n.call(this,t)||this;return r.on=new o.e([1732584193,4023233417,2562383102,271733878,3285377520]),r.O=t,t&&void 0!==t.hash&&(r.on=t.hash.clone()),r}return u(t,n),t.prototype.A=function(){this.on=new o.e([1732584193,4023233417,2562383102,271733878,3285377520])},t.prototype.un=function(n,t){for(var r=0;r<16;r++){var i=t+r,e=n[i];n[i]=16711935&(e<<8|e>>>24)|4278255360&(e<<24|e>>>8)}var o,u,O,j,_,m,A,g,E,S,M,k=this.on.words,H=h.words,C=v.words,B=f.words,N=c.words,I=s.words,z=a.words;m=o=k[0],A=u=k[1],g=O=k[2],E=j=k[3],S=_=k[4];for(r=0;r<80;r+=1)M=o+n[t+B[r]]|0,M+=r<16?w(u,O,j)+H[0]:r<32?l(u,O,j)+H[1]:r<48?b(u,O,j)+H[2]:r<64?d(u,O,j)+H[3]:y(u,O,j)+H[4],M=(M=p(M|=0,I[r]))+_|0,o=_,_=j,j=p(O,10),O=u,u=M,M=m+n[t+N[r]]|0,M+=r<16?y(A,g,E)+C[0]:r<32?d(A,g,E)+C[1]:r<48?b(A,g,E)+C[2]:r<64?l(A,g,E)+C[3]:w(A,g,E)+C[4],M=(M=p(M|=0,z[r]))+S|0,m=S,S=E,E=p(g,10),g=A,A=M;M=k[1]+O+E|0,k[1]=k[2]+j+S|0,k[2]=k[3]+_+m|0,k[3]=k[4]+o+A|0,k[4]=k[0]+u+g|0,k[0]=M},t.prototype.fn=function(){var n=this.cn,t=n.words,r=8*this.sn,i=8*n.nSigBytes;t[i>>>5]|=128<<24-i%32,t[14+(i+64>>>9<<4)]=16711935&(r<<8|r>>>24)|4278255360&(r<<24|r>>>8),n.nSigBytes=4*(t.length+1),this.an();for(var e=this.on,o=e.words,u=0;u<5;u++){var f=o[u];o[u]=16711935&(f<<8|f>>>24)|4278255360&(f<<24|f>>>8)}return e},t.prototype.clone=function(){return new t({hash:this.on,blockSize:this.N,data:this.cn,nBytes:this.sn})},t.hash=function(n,r){return new t(r).finalize(n)},t}(e.P)},5187:function(n,t,r){r.d(t,{Rabbit:function(){return s}});var i,e=r(30),o=r(5693),u=r(9109),f=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),c=function(){return(c=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},s=function(n){function t(t){var r=n.call(this,t)||this;return r.N=4,r.S=[],r.C=[],r.G=[],r.hn=[],r.vn=[],r.wn=0,r.O=t,r.A(),r}return f(t,n),t.prototype.A=function(){for(var n=this.H.words,t=this.ln,r=0;r<4;r++)n[r]=16711935&(n[r]<<8|n[r]>>>24)|4278255360&(n[r]<<24|n[r]>>>8);var i=this.hn=[n[0],n[3]<<16|n[2]>>>16,n[1],n[0]<<16|n[3]>>>16,n[2],n[1]<<16|n[0]>>>16,n[3],n[2]<<16|n[1]>>>16],e=this.vn=[n[2]<<16|n[2]>>>16,4294901760&n[0]|65535&n[1],n[3]<<16|n[3]>>>16,4294901760&n[1]|65535&n[2],n[0]<<16|n[0]>>>16,4294901760&n[2]|65535&n[3],n[1]<<16|n[1]>>>16,4294901760&n[3]|65535&n[0]];this.wn=0;for(r=0;r<4;r++)this.nextState();for(r=0;r<8;r++)e[r]^=i[r+4&7];if(t){var o=t.words,u=o[0],f=o[1],c=16711935&(u<<8|u>>>24)|4278255360&(u<<24|u>>>8),s=16711935&(f<<8|f>>>24)|4278255360&(f<<24|f>>>8),a=c>>>16|4294901760&s,h=s<<16|65535&c;e[0]^=c,e[1]^=a,e[2]^=s,e[3]^=h,e[4]^=c,e[5]^=a,e[6]^=s,e[7]^=h;for(r=0;r<4;r++)this.nextState()}},t.prototype.un=function(n,t){var r=this.hn;this.nextState(),this.S[0]=r[0]^r[5]>>>16^r[3]<<16,this.S[1]=r[2]^r[7]>>>16^r[5]<<16,this.S[2]=r[4]^r[1]>>>16^r[7]<<16,this.S[3]=r[6]^r[3]>>>16^r[1]<<16;for(var i=0;i<4;i++)this.S[i]=16711935&(this.S[i]<<8|this.S[i]>>>24)|4278255360&(this.S[i]<<24|this.S[i]>>>8),n[t+i]^=this.S[i]},t.prototype.nextState=function(){for(var n=this.hn,t=this.vn,r=0;r<8;r++)this.C[r]=t[r];t[0]=t[0]+1295307597+this.wn|0,t[1]=t[1]+3545052371+(t[0]>>>0<this.C[0]>>>0?1:0)|0,t[2]=t[2]+886263092+(t[1]>>>0<this.C[1]>>>0?1:0)|0,t[3]=t[3]+1295307597+(t[2]>>>0<this.C[2]>>>0?1:0)|0,t[4]=t[4]+3545052371+(t[3]>>>0<this.C[3]>>>0?1:0)|0,t[5]=t[5]+886263092+(t[4]>>>0<this.C[4]>>>0?1:0)|0,t[6]=t[6]+1295307597+(t[5]>>>0<this.C[5]>>>0?1:0)|0,t[7]=t[7]+3545052371+(t[6]>>>0<this.C[6]>>>0?1:0)|0,this.wn=t[7]>>>0<this.C[7]>>>0?1:0;for(r=0;r<8;r++){var i=n[r]+t[r],e=65535&i,o=i>>>16,u=((e*e>>>17)+e*o>>>15)+o*o,f=((4294901760&i)*i|0)+((65535&i)*i|0);this.G[r]=u^f}var c=this.G;n[0]=c[0]+(c[7]<<16|c[7]>>>16)+(c[6]<<16|c[6]>>>16)|0,n[1]=c[1]+(c[0]<<8|c[0]>>>24)+c[7]|0,n[2]=c[2]+(c[1]<<16|c[1]>>>16)+(c[0]<<16|c[0]>>>16)|0,n[3]=c[3]+(c[2]<<8|c[2]>>>24)+c[1]|0,n[4]=c[4]+(c[3]<<16|c[3]>>>16)+(c[2]<<16|c[2]>>>16)|0,n[5]=c[5]+(c[4]<<8|c[4]>>>24)+c[3]|0,n[6]=c[6]+(c[5]<<16|c[5]>>>16)+(c[4]<<16|c[4]>>>16)|0,n[7]=c[7]+(c[6]<<8|c[6]>>>24)+c[5]|0},t.createEncryptor=function(n,r){return new t(c(c({},r=void 0===r?{}:r),{key:n}))},t.createDecryptor=function(n,r){return new t(c(c({},r=void 0===r?{}:r),{key:n}))},t.encrypt=function(n,r,i){return\"string\"==typeof r?o.E.encrypt(t,n,r,i):u.D.encrypt(t,n,r,i)},t.decrypt=function(n,r,i){return\"string\"==typeof r?o.E.decrypt(t,n,r,i):u.D.decrypt(t,n,r,i)},t.ivSize=4,t}(e.q)},3173:function(n,t,r){r.d(t,{SHA1:function(){return c}});var i,e=r(1868),o=r(3354),u=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),f=[],c=function(n){function t(t){var r=n.call(this,t)||this;return r.on=new o.e([1732584193,4023233417,2562383102,271733878,3285377520]),r.O=t,t&&void 0!==t.hash&&(r.on=t.hash.clone()),r}return u(t,n),t.prototype.A=function(){this.on=new o.e([1732584193,4023233417,2562383102,271733878,3285377520])},t.prototype.un=function(n,t){for(var r=this.on.words,i=r[0],e=r[1],o=r[2],u=r[3],c=r[4],s=0;s<80;s++){if(s<16)f[s]=0|n[t+s];else{var a=f[s-3]^f[s-8]^f[s-14]^f[s-16];f[s]=a<<1|a>>>31}var h=(i<<5|i>>>27)+c+f[s];h+=s<20?1518500249+(e&o|~e&u):s<40?1859775393+(e^o^u):s<60?(e&o|e&u|o&u)-1894007588:(e^o^u)-899497514,c=u,u=o,o=e<<30|e>>>2,e=i,i=h}r[0]=r[0]+i|0,r[1]=r[1]+e|0,r[2]=r[2]+o|0,r[3]=r[3]+u|0,r[4]=r[4]+c|0},t.prototype.fn=function(){var n=this.cn.words,t=8*this.sn,r=8*this.cn.nSigBytes;return n[r>>>5]|=128<<24-r%32,n[14+(r+64>>>9<<4)]=Math.floor(t/4294967296),n[15+(r+64>>>9<<4)]=t,this.cn.nSigBytes=4*n.length,this.an(),this.on},t.prototype.clone=function(){return new t({hash:this.on,blockSize:this.N,data:this.cn,nBytes:this.sn})},t.hash=function(n,r){return new t(r).finalize(n)},t}(e.P)},766:function(n,t,r){r.d(t,{SHA224:function(){return f}});var i,e=r(3354),o=r(5561),u=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),f=function(n){function t(t){var r=n.call(this,t)||this;return r.on=new e.e([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]),r.O=t,t&&void 0!==t.hash&&(r.on=t.hash.clone()),r}return u(t,n),t.prototype.A=function(){this.on=new e.e([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},t.prototype.fn=function(){var t=n.prototype.fn.call(this);return t.nSigBytes-=4,t},t.prototype.clone=function(){return new t({hash:this.on,blockSize:this.N,data:this.cn,nBytes:this.sn})},t.hash=function(n,r){return new t(r).finalize(n)},t}(o.SHA256)},5561:function(n,t,r){r.d(t,{SHA256:function(){return v}});var i,e=r(1868),o=r(3354),u=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),f=[],c=[];function s(n){for(var t=Math.sqrt(n),r=2;r<=t;r++)if(!(n%r))return!1;return!0}function a(n){return 4294967296*(n-(0|n))|0}!function(){for(var n=2,t=0;t<64;)s(n)&&(t<8&&(f[t]=a(Math.pow(n,.5))),c[t]=a(Math.pow(n,1/3)),t++),n++}();var h=[],v=function(n){function t(t){var r=n.call(this,t)||this;return r.on=new o.e(f.slice(0)),r.O=t,t&&void 0!==t.hash&&(r.on=t.hash.clone()),r}return u(t,n),t.prototype.A=function(){this.on=new o.e(f.slice(0))},t.prototype.un=function(n,t){for(var r=this.on.words,i=r[0],e=r[1],o=r[2],u=r[3],f=r[4],s=r[5],a=r[6],v=r[7],w=0;w<64;w++){if(w<16)h[w]=0|n[t+w];else{var l=h[w-15],b=(l<<25|l>>>7)^(l<<14|l>>>18)^l>>>3,d=h[w-2],y=(d<<15|d>>>17)^(d<<13|d>>>19)^d>>>10;h[w]=b+h[w-7]+y+h[w-16]}var p=i&e^i&o^e&o,O=(i<<30|i>>>2)^(i<<19|i>>>13)^(i<<10|i>>>22),j=v+((f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25))+(f&s^~f&a)+c[w]+h[w];v=a,a=s,s=f,f=u+j|0,u=o,o=e,e=i,i=j+(O+p)|0}r[0]=r[0]+i|0,r[1]=r[1]+e|0,r[2]=r[2]+o|0,r[3]=r[3]+u|0,r[4]=r[4]+f|0,r[5]=r[5]+s|0,r[6]=r[6]+a|0,r[7]=r[7]+v|0},t.prototype.fn=function(){var n=this.cn.words,t=8*this.sn,r=8*this.cn.nSigBytes;return n[r>>>5]|=128<<24-r%32,n[14+(r+64>>>9<<4)]=Math.floor(t/4294967296),n[15+(r+64>>>9<<4)]=t,this.cn.nSigBytes=4*n.length,this.an(),this.on},t.prototype.clone=function(){return new t({hash:this.on,blockSize:this.N,data:this.cn,nBytes:this.sn})},t.hash=function(n,r){return new t(r).finalize(n)},t}(e.P)},3408:function(n,t,r){r.d(t,{SHA3:function(){return v}});var i,e=r(6957),o=r(1868),u=r(3354),f=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),c=[],s=[],a=[];!function(){for(var n=1,t=0,r=0;r<24;r++){c[n+5*t]=(r+1)*(r+2)/2%64;var i=(2*n+3*t)%5;n=t%5,t=i}for(var o=0;o<5;o++)for(var u=0;u<5;u++)s[o+5*u]=u+(2*o+3*u)%5*5;for(var f=1,h=0;h<24;h++){for(var v=0,w=0,l=0;l<7;l++){if(1&f){var b=(1<<l)-1;b<32?w^=1<<b:v^=1<<b-32}128&f?f=f<<1^113:f<<=1}a[h]=new e.r(v,w)}}();var h=[];!function(){for(var n=0;n<25;n++)h[n]=new e.r(0,0)}();var v=function(n){function t(t){var r=n.call(this,t)||this;if(r.N=32,r.bn=[],r.dn=512,r.O=t,t){if(void 0!==t.outputLength){if(![224,256,384,512].includes(t.outputLength))throw new Error(\"Unsupported output length.\");r.dn=t.outputLength}void 0!==t.state&&(r.bn=t.state.map((function(n){return n.clone()})))}if(0===r.bn.length)for(var i=0;i<25;i++)r.bn[i]=new e.r(0,0);return r.N=(1600-2*r.dn)/32,r}return f(t,n),t.prototype.A=function(){this.bn=[];for(var n=0;n<25;n++)this.bn[n]=new e.r(0,0);this.N=(1600-2*this.dn)/32},t.prototype.un=function(n,t){for(var r=this.bn,i=this.N/2,e=0;e<i;e++){var o=n[t+2*e],u=n[t+2*e+1];o=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),u=16711935&(u<<8|u>>>24)|4278255360&(u<<24|u>>>8),r[e].high^=u,r[e].low^=o}for(var f=0;f<24;f++){for(var v=0;v<5;v++){for(var w=0,l=0,b=0;b<5;b++){w^=(k=r[v+5*b]).high,l^=k.low}var d=h[v];d.high=w,d.low=l}for(v=0;v<5;v++){var y=h[(v+4)%5],p=h[(v+1)%5],O=p.high,j=p.low;for(w=y.high^(O<<1|j>>>31),l=y.low^(j<<1|O>>>31),b=0;b<5;b++){(k=r[v+5*b]).high^=w,k.low^=l}}for(var _=1;_<25;_++){w=void 0,l=void 0;var m=r[_].high,A=r[_].low,g=c[_];g<32?(w=m<<g|A>>>32-g,l=A<<g|m>>>32-g):(w=A<<g-32|m>>>64-g,l=m<<g-32|A>>>64-g);var E=h[s[_]];E.high=w,E.low=l}var S=h[0],M=r[0];S.high=M.high,S.low=M.low;for(v=0;v<5;v++)for(b=0;b<5;b++){var k=r[_=v+5*b],H=h[_],C=h[(v+1)%5+5*b],B=h[(v+2)%5+5*b];k.high=H.high^~C.high&B.high,k.low=H.low^~C.low&B.low}var N=r[0],I=a[f];N.high^=I.high,N.low^=I.low}},t.prototype.fn=function(){var n=this.cn,t=n.words,r=8*n.nSigBytes,i=32*this.blockSize;t[r>>>5]|=1<<24-r%32,t[(Math.ceil((r+1)/i)*i>>>5)-1]|=128,n.nSigBytes=4*t.length,this.an();for(var e=this.bn,o=this.dn/8,f=o/8,c=[],s=0;s<f;s++){var a=e[s],h=a.high,v=a.low;h=16711935&(h<<8|h>>>24)|4278255360&(h<<24|h>>>8),v=16711935&(v<<8|v>>>24)|4278255360&(v<<24|v>>>8),c.push(v),c.push(h)}return new u.e(c,o)},t.prototype.clone=function(){return new t({outputLength:this.dn,state:this.bn,blockSize:this.N,data:this.cn,nBytes:this.sn})},t.hash=function(n,r){return new t(r).finalize(n)},t}(o.P)},6324:function(n,t,r){r.d(t,{SHA384:function(){return f}});var i,e=r(6957),o=r(7491),u=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),f=function(n){function t(t){var r=n.call(this,t)||this;return r.on=new e.m([new e.r(3418070365,3238371032),new e.r(1654270250,914150663),new e.r(2438529370,812702999),new e.r(355462360,4144912697),new e.r(1731405415,4290775857),new e.r(2394180231,1750603025),new e.r(3675008525,1694076839),new e.r(1203062813,3204075428)]),r.O=t,t&&void 0!==t.hash&&(r.on=t.hash.clone()),r}return u(t,n),t.prototype.A=function(){this.on=new e.m([new e.r(3418070365,3238371032),new e.r(1654270250,914150663),new e.r(2438529370,812702999),new e.r(355462360,4144912697),new e.r(1731405415,4290775857),new e.r(2394180231,1750603025),new e.r(3675008525,1694076839),new e.r(1203062813,3204075428)])},t.prototype.fn=function(){var t=n.prototype.fn.call(this);return t.nSigBytes-=16,t},t.prototype.clone=function(){return new t({hash:this.on,blockSize:this.N,data:this.cn,nBytes:this.sn})},t.hash=function(n,r){return new t(r).finalize(n)},t}(o.SHA512)},7491:function(n,t,r){r.d(t,{SHA512:function(){return s}});var i,e=r(1868),o=r(6957),u=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),f=[new o.r(1116352408,3609767458),new o.r(1899447441,602891725),new o.r(3049323471,3964484399),new o.r(3921009573,2173295548),new o.r(961987163,4081628472),new o.r(1508970993,3053834265),new o.r(2453635748,2937671579),new o.r(2870763221,3664609560),new o.r(3624381080,2734883394),new o.r(310598401,1164996542),new o.r(607225278,1323610764),new o.r(1426881987,3590304994),new o.r(1925078388,4068182383),new o.r(2162078206,991336113),new o.r(2614888103,633803317),new o.r(3248222580,3479774868),new o.r(3835390401,2666613458),new o.r(4022224774,944711139),new o.r(264347078,2341262773),new o.r(604807628,2007800933),new o.r(770255983,1495990901),new o.r(1249150122,1856431235),new o.r(1555081692,3175218132),new o.r(1996064986,2198950837),new o.r(2554220882,3999719339),new o.r(2821834349,766784016),new o.r(2952996808,2566594879),new o.r(3210313671,3203337956),new o.r(3336571891,1034457026),new o.r(3584528711,2466948901),new o.r(113926993,3758326383),new o.r(338241895,168717936),new o.r(666307205,1188179964),new o.r(773529912,1546045734),new o.r(1294757372,1522805485),new o.r(1396182291,2643833823),new o.r(1695183700,2343527390),new o.r(1986661051,1014477480),new o.r(2177026350,1206759142),new o.r(2456956037,344077627),new o.r(2730485921,1290863460),new o.r(2820302411,3158454273),new o.r(3259730800,3505952657),new o.r(3345764771,106217008),new o.r(3516065817,3606008344),new o.r(3600352804,1432725776),new o.r(4094571909,1467031594),new o.r(275423344,851169720),new o.r(430227734,3100823752),new o.r(506948616,1363258195),new o.r(659060556,3750685593),new o.r(883997877,3785050280),new o.r(958139571,3318307427),new o.r(1322822218,3812723403),new o.r(1537002063,2003034995),new o.r(1747873779,3602036899),new o.r(1955562222,1575990012),new o.r(2024104815,1125592928),new o.r(2227730452,2716904306),new o.r(2361852424,442776044),new o.r(2428436474,593698344),new o.r(2756734187,3733110249),new o.r(3204031479,2999351573),new o.r(3329325298,3815920427),new o.r(3391569614,3928383900),new o.r(3515267271,566280711),new o.r(3940187606,3454069534),new o.r(4118630271,4000239992),new o.r(116418474,1914138554),new o.r(174292421,2731055270),new o.r(289380356,3203993006),new o.r(460393269,320620315),new o.r(685471733,587496836),new o.r(852142971,1086792851),new o.r(1017036298,365543100),new o.r(1126000580,2618297676),new o.r(1288033470,3409855158),new o.r(1501505948,4234509866),new o.r(1607167915,987167468),new o.r(1816402316,1246189591)],c=[];!function(){for(var n=0;n<80;n++)c[n]=new o.r(0,0)}();var s=function(n){function t(t){var r=n.call(this,t)||this;return r.N=32,r.on=new o.m([new o.r(1779033703,4089235720),new o.r(3144134277,2227873595),new o.r(1013904242,4271175723),new o.r(2773480762,1595750129),new o.r(1359893119,2917565137),new o.r(2600822924,725511199),new o.r(528734635,4215389547),new o.r(1541459225,327033209)]),r.O=t,t&&void 0!==t.hash&&(r.on=t.hash.clone()),r}return u(t,n),t.prototype.A=function(){this.on=new o.m([new o.r(1779033703,4089235720),new o.r(3144134277,2227873595),new o.r(1013904242,4271175723),new o.r(2773480762,1595750129),new o.r(1359893119,2917565137),new o.r(2600822924,725511199),new o.r(528734635,4215389547),new o.r(1541459225,327033209)])},t.prototype.un=function(n,t){for(var r=this.on.words,i=r[0],e=r[1],o=r[2],u=r[3],s=r[4],a=r[5],h=r[6],v=r[7],w=i.high,l=i.low,b=e.high,d=e.low,y=o.high,p=o.low,O=u.high,j=u.low,_=s.high,m=s.low,A=a.high,g=a.low,E=h.high,S=h.low,M=v.high,k=v.low,H=w,C=l,B=b,N=d,I=y,z=p,D=O,U=j,L=_,F=m,x=A,P=g,R=E,T=S,K=M,W=k,G=0;G<80;G++){var q=void 0,Q=void 0,X=c[G];if(G<16)Q=X.high=0|n[t+2*G],q=X.low=0|n[t+2*G+1];else{var V=c[G-15],Z=V.high,J=V.low,Y=(Z>>>1|J<<31)^(Z>>>8|J<<24)^Z>>>7,$=(J>>>1|Z<<31)^(J>>>8|Z<<24)^(J>>>7|Z<<25),nn=c[G-2],tn=nn.high,rn=nn.low,en=(tn>>>19|rn<<13)^(tn<<3|rn>>>29)^tn>>>6,on=(rn>>>19|tn<<13)^(rn<<3|tn>>>29)^(rn>>>6|tn<<26),un=c[G-7],fn=un.high,cn=un.low,sn=c[G-16],an=sn.high,hn=sn.low;Q=(Q=(Q=Y+fn+((q=$+cn)>>>0<$>>>0?1:0))+en+((q+=on)>>>0<on>>>0?1:0))+an+((q+=hn)>>>0<hn>>>0?1:0),X.high=Q,X.low=q}var vn=L&x^~L&R,wn=F&P^~F&T,ln=H&B^H&I^B&I,bn=C&N^C&z^N&z,dn=(H>>>28|C<<4)^(H<<30|C>>>2)^(H<<25|C>>>7),yn=(C>>>28|H<<4)^(C<<30|H>>>2)^(C<<25|H>>>7),pn=(L>>>14|F<<18)^(L>>>18|F<<14)^(L<<23|F>>>9),On=(F>>>14|L<<18)^(F>>>18|L<<14)^(F<<23|L>>>9),jn=f[G],_n=jn.high,mn=jn.low,An=W+On,gn=K+pn+(An>>>0<W>>>0?1:0),En=yn+bn;K=R,W=T,R=x,T=P,x=L,P=F,L=D+(gn=(gn=(gn=gn+vn+((An+=wn)>>>0<wn>>>0?1:0))+_n+((An+=mn)>>>0<mn>>>0?1:0))+Q+((An+=q)>>>0<q>>>0?1:0))+((F=U+An|0)>>>0<U>>>0?1:0)|0,D=I,U=z,I=B,z=N,B=H,N=C,H=gn+(dn+ln+(En>>>0<yn>>>0?1:0))+((C=An+En|0)>>>0<An>>>0?1:0)|0}l=i.low=l+C,i.high=w+H+(l>>>0<C>>>0?1:0),d=e.low=d+N,e.high=b+B+(d>>>0<N>>>0?1:0),p=o.low=p+z,o.high=y+I+(p>>>0<z>>>0?1:0),j=u.low=j+U,u.high=O+D+(j>>>0<U>>>0?1:0),m=s.low=m+F,s.high=_+L+(m>>>0<F>>>0?1:0),g=a.low=g+P,a.high=A+x+(g>>>0<P>>>0?1:0),S=h.low=S+T,h.high=E+R+(S>>>0<T>>>0?1:0),k=v.low=k+W,v.high=M+K+(k>>>0<W>>>0?1:0)},t.prototype.fn=function(){var n=this.cn,t=n.words,r=8*this.sn,i=8*n.nSigBytes;return t[i>>>5]|=128<<24-i%32,t[30+(i+128>>>10<<5)]=Math.floor(r/4294967296),t[31+(i+128>>>10<<5)]=r,n.nSigBytes=4*t.length,this.an(),this.on.to32()},t.prototype.clone=function(){return new t({hash:this.on,blockSize:this.N,data:this.cn,nBytes:this.sn})},t.hash=function(n,r){return new t(r).finalize(n)},t}(e.P)},3354:function(n,t,r){r.d(t,{e:function(){return o}});var i=r(5720),e=r(9054),o=function(){function n(t,r){if(Array.isArray(t)||!t)return this.yn=Array.isArray(t)?t:[],void(this.pn=\"number\"==typeof r?r:4*this.yn.length);if(t instanceof n)return this.yn=t.words.slice(),void(this.pn=t.nSigBytes);var i;try{t instanceof ArrayBuffer?i=new Uint8Array(t):(t instanceof Uint8Array||t instanceof Int8Array||t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)&&(i=new Uint8Array(t.buffer,t.byteOffset,t.byteLength))}catch(n){throw new Error(\"Invalid argument\")}if(!i)throw new Error(\"Invalid argument\");for(var e=i.byteLength,o=[],u=0;u<e;u++)o[u>>>2]|=i[u]<<24-u%4*8;this.yn=o,this.pn=e}return Object.defineProperty(n.prototype,\"nSigBytes\",{get:function(){return this.pn},set:function(n){this.pn=n},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"words\",{get:function(){return this.yn},enumerable:!1,configurable:!0}),n.prototype.toString=function(n){return n?n.stringify(this):i.p.stringify(this)},n.prototype.toUint8Array=function(){for(var n=this.yn,t=this.pn,r=new Uint8Array(t),i=0;i<t;i++)r[i]=n[i>>>2]>>>24-i%4*8&255;return r},n.prototype.concat=function(n){var t=n.words.slice(),r=n.nSigBytes;if(this.clamp(),this.pn%4)for(var i=0;i<r;i++){var e=t[i>>>2]>>>24-i%4*8&255;this.yn[this.pn+i>>>2]|=e<<24-(this.pn+i)%4*8}else for(i=0;i<r;i+=4)this.yn[this.pn+i>>>2]=t[i>>>2];return this.pn+=r,this},n.prototype.clamp=function(){var n=this.pn;this.yn[n>>>2]&=4294967295<<32-n%4*8,this.yn.length=Math.ceil(n/4)},n.prototype.clone=function(){return new n(this.yn.slice(),this.pn)},n.random=function(t){for(var r=[],i=0;i<t;i+=4)r.push((0,e.M)());return new n(r,t)},n}()},6957:function(n,t,r){r.d(t,{r:function(){return o},m:function(){return u}});var i=r(5720),e=r(3354),o=function(){function n(n,t){this.high=n,this.low=t}return n.prototype.clone=function(){return new n(this.high,this.low)},n}(),u=function(){function n(n,t){this.yn=n||[],this.pn=\"number\"==typeof t?t:8*this.yn.length}return Object.defineProperty(n.prototype,\"nSigBytes\",{get:function(){return this.pn},set:function(n){this.pn=n},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"words\",{get:function(){return this.yn},enumerable:!1,configurable:!0}),n.prototype.to32=function(){for(var n=[],t=0;t<this.yn.length;t++){var r=this.yn[t];n.push(r.high),n.push(r.low)}return new e.e(n,this.pn)},n.prototype.toString=function(n){return n?n.stringify(this.to32()):i.p.stringify(this.to32())},n.prototype.clone=function(){for(var t=this.yn.slice(),r=0;r<t.length;r++)t[r]=t[r].clone();return new n(t,this.pn)},n}()},7211:function(n,t,r){r.d(t,{C:function(){return o}});var i=r(3354),e=r(4768),o=function(){function n(n){this.On=0,this.N=0,this.O=n,this.cn=n&&void 0!==n.data?n.data.clone():new i.e,this.sn=n&&\"number\"==typeof n.nBytes?n.nBytes:0}return Object.defineProperty(n.prototype,\"blockSize\",{get:function(){return this.N},enumerable:!1,configurable:!0}),n.prototype.reset=function(n,t){this.cn=void 0!==n?n.clone():new i.e,this.sn=\"number\"==typeof t?t:0},n.prototype.jn=function(n){var t=\"string\"==typeof n?e.d.parse(n):n;this.cn.concat(t),this.sn+=t.nSigBytes},n.prototype.an=function(n){var t,r=this.cn.words,e=this.cn.nSigBytes,o=this.N,u=e/(4*this.N),f=(u=n?Math.ceil(u):Math.max((0|u)-this.On,0))*o,c=Math.min(4*f,e);if(f){for(var s=0;s<f;s+=o)this.un(r,s);t=r.splice(0,f),this.cn.nSigBytes-=c}return new i.e(t,c)},n.prototype.un=function(n,t){throw new Error(\"Not implemented\")},n}()},1868:function(n,t,r){r.d(t,{P:function(){return u}});var i,e=r(7211),o=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),u=function(n){function t(t){var r=n.call(this,t)||this;return r.N=16,r.O=t,t&&\"number\"==typeof t.blockSize&&(r.N=t.blockSize),r.reset(t?t.data:void 0,t?t.nBytes:void 0),r}return o(t,n),Object.defineProperty(t.prototype,\"blockSize\",{get:function(){return this.N},enumerable:!1,configurable:!0}),t.prototype.reset=function(t,r){n.prototype.reset.call(this,t,r),this.A()},t.prototype.update=function(n){return this.jn(n),this.an(),this},t.prototype.finalize=function(n){return n&&this.jn(n),this.fn()},t.prototype.A=function(){throw new Error(\"Not implemented\")},t.prototype.fn=function(){throw new Error(\"Not implemented\")},t}(e.C)},787:function(n,t,r){r.d(t,{G:function(){return s}});var i,e=r(9456),o=r(4344),u=r(7919),f=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),c=function(){return(c=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},s=function(n){function t(t){var r=n.call(this,t)||this;return r.N=4,r._n=o.n,r.mn=u.l,r.O=t,r._n=void 0!==t.mode?t.mode:r._n,r.mn=void 0!==t.padding?t.padding:r.mn,r.reset(null==t?void 0:t.data,null==t?void 0:t.nBytes),r}return f(t,n),Object.defineProperty(t.prototype,\"mode\",{get:function(){return this.An},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"padding\",{get:function(){return this.mn},enumerable:!1,configurable:!0}),t.prototype.reset=function(t,r){var i;n.prototype.reset.call(this,t,r),this.gn===e.t.ENC_TRANSFORM_MODE?i=this._n.createEncryptor:(i=this._n.createDecryptor,this.On=1),this._n&&this.En===i?this.An=new this._n({cipher:this,iv:this.ln}):(this.An=i.call(this._n,{cipher:this,iv:this.ln}),this.En=i)},t.prototype.un=function(n,t){var r;null===(r=this.An)||void 0===r||r.processBlock(n,t)},t.prototype.fn=function(){var n,t=this.mn;return this.gn===e.t.ENC_TRANSFORM_MODE?(t.pad(this.cn,this.blockSize),n=this.an(!0)):(n=this.an(!0),t.unpad(n)),n},t.prototype.encryptBlock=function(n,t){throw new Error(\"Not implemented\")},t.prototype.decryptBlock=function(n,t){throw new Error(\"Not implemented\")},t.createEncryptor=function(n,r){return new t(c(c({},r=void 0===r?{}:r),{key:n,transformMode:e.t.ENC_TRANSFORM_MODE}))},t.createDecryptor=function(n,r){return new t(c(c({},r=void 0===r?{}:r),{key:n,transformMode:e.t.DEC_TRANSFORM_MODE}))},t}(e.t)},9456:function(n,t,r){r.d(t,{t:function(){return f}});var i,e=r(7211),o=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),u=function(){return(u=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},f=function(n){function t(t){var r=n.call(this,t)||this;return r.gn=1,r.O=t,r.H=t.key,r.ln=void 0!==t.iv?t.iv:r.ln,r.gn=void 0!==t.transformMode?t.transformMode:r.gn,r}return o(t,n),Object.defineProperty(t.prototype,\"iv\",{get:function(){return this.ln},enumerable:!1,configurable:!0}),t.prototype.reset=function(t,r){n.prototype.reset.call(this,t,r),this.A()},t.prototype.process=function(n){return this.jn(n),this.an()},t.prototype.finalize=function(n){return n&&this.jn(n),this.fn()},t.prototype.A=function(){throw new Error(\"Not implemented\")},t.prototype.un=function(n,t){throw new Error(\"Not implemented\")},t.prototype.fn=function(){throw new Error(\"Not implemented\")},t.createEncryptor=function(n,r){return new t(u(u({},r=void 0===r?{}:r),{key:n,transformMode:t.ENC_TRANSFORM_MODE}))},t.createDecryptor=function(n,r){return new t(u(u({},r=void 0===r?{}:r),{key:n,transformMode:t.DEC_TRANSFORM_MODE}))},t.ENC_TRANSFORM_MODE=1,t.DEC_TRANSFORM_MODE=2,t.keySize=4,t.ivSize=4,t}(e.C)},2505:function(n,t,r){r.d(t,{Q:function(){return e}});var i=r(1232),e=function(){function n(n){this.formatter=i.w,n&&(this.cipherText=n.cipherText,this.key=n.key,this.iv=n.iv,this.salt=n.salt,this.Algorithm=n.Algorithm,this.mode=n.mode,this.padding=n.padding,this.blockSize=n.blockSize,this.formatter=n.formatter||i.w)}return n.prototype.toString=function(n){return(n||this.formatter).stringify(this)},n}()},5693:function(n,t,r){r.d(t,{E:function(){return c}});var i=r(9109),e=r(2214),o=r(2505),u=r(1232),f=function(){return(f=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},c={encrypt:function(n,t,r,u){var c=u?f({},u):{},s=u&&u.KDF?u.KDF:e.s,a={};u&&u.kdfHasher&&(a.kdfHasher=u.kdfHasher),u&&u.kdfIterations&&(a.kdfIterations=u.kdfIterations),u&&u.kdfModule&&(a.kdfModule=u.kdfModule);var h=s.execute(r,n.keySize,n.ivSize,c.kdfSalt,a);c.iv=h.iv;var v=i.D.encrypt(n,t,h.key,c);return new o.Q(f(f({},v),{key:h.key,iv:h.iv,salt:h.salt}))},decrypt:function(n,t,r,o){var c=o?f({},o):{},s=c.KDF?c.KDF:e.s,a=c.formatter?c.formatter:u.w,h=(0,i.W)(t,a),v={};o&&o.kdfHasher&&(v.kdfHasher=o.kdfHasher),o&&o.kdfIterations&&(v.kdfIterations=o.kdfIterations),o&&o.kdfModule&&(v.kdfModule=o.kdfModule);var w=s.execute(r,n.keySize,n.ivSize,h.salt,v);return c.iv=w.iv,i.D.decrypt(n,h,w.key,c)}}},9109:function(n,t,r){r.d(t,{W:function(){return o},D:function(){return u}});var i=r(1232),e=r(2505);function o(n,t){return\"string\"==typeof n?t.parse(n):n}var u={encrypt:function(n,t,r,o){var u=n.createEncryptor(r,o),f=u.finalize(t);return new e.Q({cipherText:f,key:r,iv:u.iv,Algorithm:n,mode:u.mode,padding:u.padding,blockSize:u.blockSize,formatter:(null==o?void 0:o.formatter)||i.w})},decrypt:function(n,t,r,e){var u=n.createDecryptor(r,e),f=o(t,(null==e?void 0:e.formatter)||i.w);return u.finalize(f.cipherText||\"\")}}},30:function(n,t,r){r.d(t,{q:function(){return u}});var i,e=r(9456),o=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),u=function(n){function t(t){var r=n.call(this,t)||this;return r.N=1,r}return o(t,n),t.prototype.fn=function(){return this.an(!0)},t}(e.t)},1232:function(n,t,r){r.d(t,{w:function(){return u}});var i=r(2505),e=r(3354),o=r(1773),u={stringify:function(n){var t=n.cipherText,r=n.salt;return t?r?new e.e([1398893684,1701076831]).concat(r).concat(t).toString(o.D):t.toString(o.D):\"\"},parse:function(n){var t,r=o.D.parse(n),u=r.words;return 1398893684===u[0]&&1701076831===u[1]&&(t=new e.e(u.slice(2,4)),u.splice(0,4),r.nSigBytes-=16),new i.Q({cipherText:r,salt:t})}}},2214:function(n,t,r){r.d(t,{s:function(){return f}});var i=r(3354),e=r(2505),o=r(7008),u=function(){return(u=Object.assign||function(n){for(var t,r=1,i=arguments.length;r<i;r++)for(var e in t=arguments[r])Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n}).apply(this,arguments)},f={execute:function(n,t,r,f,c){f||(f=i.e.random(8));var s=c&&c.kdfModule||o.E,a=c?{Hasher:c.kdfHasher,iterations:c.kdfIterations}:{},h=s.getKey(n,f,u(u({},a),{keySize:t+r})),v=new i.e(h.words.slice(t),4*r);return h.nSigBytes=4*t,new e.Q({key:h,iv:v,salt:f})}}},7008:function(n,t,r){r.d(t,{E:function(){return s}});var i,e=r(5561),o=r(6367),u=r(3354),f=r(9541),c=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=function(n){function t(t){var r=n.call(this,t)||this;return r.Sn=4,r.Mn=e.SHA256,r.kn=1e4,t&&(r.Sn=void 0!==t.keySize?t.keySize:r.Sn,r.Mn=void 0!==t.Hasher?t.Hasher:r.Mn,r.kn=void 0!==t.iterations?t.iterations:r.kn),r}return c(t,n),t.prototype.compute=function(n,t){for(var r=new o.Hmac(new this.Mn,n),i=new u.e,e=new u.e([1]),f=i.words,c=e.words,s=this.Sn,a=this.kn;f.length<s;){var h=r.update(t).finalize(e);r.reset();for(var v=h.words,w=v.length,l=h,b=1;b<a;b++){l=r.finalize(l),r.reset();for(var d=l.words,y=0;y<w;y++)v[y]^=d[y]}i.concat(h),c[0]++}return i.nSigBytes=4*s,i},t.getKey=function(n,r,i){return new t(i).compute(n,r)},t}(f._)},9541:function(n,t,r){r.d(t,{_:function(){return i}});var i=function(){function n(n){this.O=n}return n.prototype.compute=function(n,t){throw new Error(\"Not implemented\")},n.getKey=function(n,t,r){throw new Error(\"Not implemented\")},n}()},1863:function(n,t,r){r.d(t,{T:function(){return i}});var i=function(){function n(n){this.O=n,this.Hn=n.cipher,this.ln=n.iv}return n.prototype.processBlock=function(n,t){},n.createEncryptor=function(n){throw new Error(\"Not implemented yet\")},n.createDecryptor=function(n){throw new Error(\"Not implemented yet\")},n}()},4344:function(n,t,r){r.d(t,{n:function(){return u}});var i,e=r(1863),o=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),u=function(n){function t(t){var r=n.call(this,t)||this;return r.Cn=[],r}return o(t,n),t.prototype.xorBlock=function(n,t,r){var i,e=this.ln;e?(i=e.words,this.ln=void 0):i=this.Cn;for(var o=0;o<r;o++)n[t+o]^=i[o]},t.createEncryptor=function(n){return new t.Encryptor(n)},t.createDecryptor=function(n){return new t.Decryptor(n)},t.Encryptor=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return o(t,n),t.prototype.processBlock=function(n,t){var r=this.Hn,i=r.blockSize;this.xorBlock(n,t,i),r.encryptBlock(n,t),this.Cn=n.slice(t,t+i)},t}(t),t.Decryptor=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return o(t,n),t.prototype.processBlock=function(n,t){var r=this.Hn,i=r.blockSize,e=n.slice(t,t+i);r.decryptBlock(n,t),this.xorBlock(n,t,i),this.Cn=e},t}(t),t}(e.T)},4055:function(n,t,r){r.d(t,{I4:function(){return e},z6:function(){return o},ur:function(){return u}});var i=r(3354);function e(n){var t=n.nSigBytes%16;if(0!==t){for(var r=16-t,e=[],o=Math.floor(r/4),u=0;u<o;u++)e.push(0);r%4>0&&e.push(0),n.concat(new i.e(e,r))}}function o(n,t){return new i.e(n.words.slice(),t)}function u(n,t){for(var r=n.nSigBytes-t,e=[],o=0;o<t;o++){var u=o>>>2,f=r+o,c=f>>>2,s=n.words[c]>>>24-f%4*8&255;e[u]=0|e[u]|s<<24-o%4*8}var a=new i.e(e,t);return a.clamp(),a}},7919:function(n,t,r){r.d(t,{l:function(){return e}});var i=r(3354);var e={pad:function(n,t){for(var r=4*t,e=r-n.nSigBytes%r,o=e<<24|e<<16|e<<8|e,u=[],f=0;f<e;f+=4)u.push(o);var c=new i.e(u,e);n.concat(c)},unpad:function(n){var t=255&n.words[n.nSigBytes-1>>>2];n.nSigBytes-=t}}},1756:function(n,t,r){r.d(t,{w:function(){return u}});var i,e=\"undefined\"!=typeof navigator&&navigator.userAgent?navigator.userAgent.toLowerCase():\"\",o=(i=parseInt((/msie (\\d+)/.exec(e)||[])[1],10),isNaN(i)?(i=parseInt((/trident\\/.*; rv:(\\d+)/.exec(e)||[])[1],10),!isNaN(i)&&i):i);function u(n,t){return!1!==o&&(!t||(\"<\"===n?o<t:\"<=\"===n?o<=t:\">\"===n?o>t:\">=\"===n?o>=t:o===t))}},1773:function(n,t,r){r.d(t,{D:function(){return f}});for(var i=r(3354),e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",o=[],u=0;u<e.length;u++)o[e.charCodeAt(u)]=u;var f={stringify:function(n){var t=n.words,r=n.nSigBytes;n.clamp();for(var i=[],o=0;o<r;o+=3)for(var u=(t[o>>>2]>>>24-o%4*8&255)<<16|(t[o+1>>>2]>>>24-(o+1)%4*8&255)<<8|t[o+2>>>2]>>>24-(o+2)%4*8&255,f=0;f<4&&o+.75*f<r;f++)i.push(e.charAt(u>>>6*(3-f)&63));var c=e.charAt(64);if(c)for(;i.length%4;)i.push(c);return i.join(\"\")},parse:function(n){var t=n.length,r=e.charAt(64);if(r){var u=n.indexOf(r);-1!==u&&(t=u)}for(var f=[],c=0,s=0;s<t;s++)if(s%4){var a=o[n.charCodeAt(s-1)]<<s%4*2|o[n.charCodeAt(s)]>>>6-s%4*2;f[c>>>2]|=a<<24-c%4*8,c++}return new i.e(f,c)}}},5720:function(n,t,r){r.d(t,{p:function(){return e}});var i=r(3354),e={stringify:function(n){for(var t=n.nSigBytes,r=n.words,i=[],e=0;e<t;e++){var o=r[e>>>2]>>>24-e%4*8&255;i.push((o>>>4).toString(16)),i.push((15&o).toString(16))}return i.join(\"\")},parse:function(n){var t=n.length;if(t%2!=0)throw new Error(\"Hex string count must be even\");if(!/^[a-fA-F0-9]+$/.test(n))throw new Error(\"Invalid Hex string: \"+n);for(var r=[],e=0;e<t;e+=2)r[e>>>3]|=parseInt(n.substr(e,2),16)<<24-e%8*4;return new i.e(r,t/2)}}},8702:function(n,t,r){r.d(t,{m:function(){return e}});var i=r(3354),e={stringify:function(n){for(var t=n.nSigBytes,r=n.words,i=[],e=0;e<t;e++){var o=r[e>>>2]>>>24-e%4*8&255;i.push(String.fromCharCode(o))}return i.join(\"\")},parse:function(n){for(var t=n.length,r=[],e=0;e<t;e++)r[e>>>2]|=(255&n.charCodeAt(e))<<24-e%4*8;return new i.e(r,t)}}},4768:function(n,t,r){r.d(t,{d:function(){return e}});var i=r(8702),e={stringify:function(n){try{return decodeURIComponent(escape(i.m.stringify(n)))}catch(n){throw new Error(\"Malformed UTF-8 data\")}},parse:function(n){return i.m.parse(unescape(encodeURIComponent(n)))}}},2688:function(n,t,r){r.d(t,{Base64:function(){return o.D},EvpKDF:function(){return O},Hex:function(){return c.p},Latin1:function(){return f.m},OpenSSLKDF:function(){return l.s},PBKDF2:function(){return b.E},Utf16:function(){return w},Utf16BE:function(){return s},Utf16LE:function(){return v},Utf8:function(){return u.d},Word32Array:function(){return i.e},Word64:function(){return e.r},Word64Array:function(){return e.m}});r(9054);var i=r(3354),e=r(6957),o=(r(1756),r(1773)),u=r(4768),f=r(8702),c=r(5720),s={stringify:function(n){for(var t=n.words,r=n.nSigBytes,i=[],e=0;e<r;e+=2){var o=t[e>>>2]>>>16-e%4*8&65535;i.push(String.fromCharCode(o))}return i.join(\"\")},parse:function(n){for(var t=n.length,r=[],e=0;e<t;e++)r[e>>>1]|=n.charCodeAt(e)<<16-e%2*16;return new i.e(r,2*t)}};function a(n){return n<<8&4278255360|n>>>8&16711935}var h,v={stringify:function(n){for(var t=n.words,r=n.nSigBytes,i=[],e=0;e<r;e+=2){var o=a(t[e>>>2]>>>16-e%4*8&65535);i.push(String.fromCharCode(o))}return i.join(\"\")},parse:function(n){for(var t=n.length,r=[],e=0;e<t;e++)r[e>>>1]|=a(n.charCodeAt(e)<<16-e%2*16);return new i.e(r,2*t)}},w=s,l=r(2214),b=r(7008),d=r(670),y=r(9541),p=(h=function(n,t){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}h(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),O=function(n){function t(t){var r=n.call(this,t)||this;return r.Sn=4,r.Mn=d.MD5,r.kn=1,t&&(r.Sn=void 0!==t.keySize?t.keySize:r.Sn,r.Mn=void 0!==t.Hasher?t.Hasher:r.Mn,r.kn=void 0!==t.iterations?t.iterations:r.kn),r}return p(t,n),t.prototype.compute=function(n,t){for(var r,e=new this.Mn,o=new i.e,u=o.words,f=this.Sn,c=this.kn;u.length<f;){r&&e.update(r),r=e.update(n).finalize(t),e.reset();for(var s=1;s<c;s++)r=e.finalize(r),e.reset();o.concat(r)}return o.nSigBytes=4*f,o},t.getKey=function(n,r,i){return new t(i).compute(n,r)},t}(y._)},9054:function(n,t,r){r.d(t,{M:function(){return e}});var i=r(1756);var e=function(){if(\"undefined\"!=typeof window){var n=window.crypto||window.msCrypto;if(!n){if((0,i.w)(\"<\",11))return console.warn(\"IE <= 10 uses insecure random generator. Please consider to use IE11 or another modern browser\"),function(){return Math.floor(512*Math.random())%256};throw new Error(\"Crypto module not found\")}return function(){return n.getRandomValues(new Uint32Array(1))[0]}}return void 0!==r.g&&r.g.crypto?function(){return r.g.crypto.randomBytes(4).readInt32LE()}:function(){return require(\"crypto\").randomBytes(4).readInt32LE()}}()},3664:function(n,t,r){r.d(t,{K:function(){return c}});var i,e=r(1863),o=r(3354),u=r(4055),f=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),c=function(n){function t(t){var r=n.call(this,t)||this;r.Bn=1;var i=t.cipher,e=t.iv;if(4!==i.blockSize)throw new Error(\"In CCM, cipher block size must be 128bit\");if(e&&(e.nSigBytes>13||e.nSigBytes<7))throw new Error(\"Byte size of iv must be between 7 and 13\");return r.Nn=e||new o.e([0,0],8),r.In=15-r.Nn.nSigBytes,r}return f(t,n),t.getB0=function(n,t,r,i){if(r.nSigBytes+i.nSigBytes!==15)throw new Error(\"LEN(Q)+LEN(N) must be 15\");var e=255&(0|(n?1:0)<<6|(t-2)/2<<3|r.nSigBytes-1),u=i.clone().concat(r);return new o.e([e<<24],1).concat(u)},t.formatAssociatedDataAndPayload=function(n,t){var r,i=n.nSigBytes;if(0===i)r=new o.e([0],0);else if(i<Math.pow(2,16)-Math.pow(2,8))r=new o.e([i<<16],2);else{if(!(i<Math.pow(2,32)))throw new Error(\"LEN(A) larger than 2**32-1 is not supported\");r=new o.e([4294836224],2).concat(new o.e([i],4))}for(var e=Math.floor(n.nSigBytes/4),u=0;u<e;u++)r.concat(new o.e([n.words[u]],4));n.nSigBytes%4&&(r.concat(new o.e([n.words[e]],n.nSigBytes%4)),r.concat(new o.e([0],4-n.nSigBytes%4))),r.nSigBytes%16&&r.concat(new o.e([0],16-r.nSigBytes%16));var f=Math.floor(t.nSigBytes/4);for(u=0;u<f;u++)r.concat(new o.e([t.words[u]],4));return t.nSigBytes%4&&(r.concat(new o.e([t.words[f]],t.nSigBytes%4)),r.concat(new o.e([0],4-t.nSigBytes%4))),r.nSigBytes%16&&r.concat(new o.e([0],16-r.nSigBytes%16)),r},t.genCtr=function(n,t,r){if(t.nSigBytes+n!==15)throw new Error(\"LEN(Q)+LEN(N) must be 15\");for(var i=new o.e([(n-1&7)<<24],1),e=new o.e([],0),u=Math.floor(n/4),f=0;f<u-1;f++)e.concat(new o.e([0],4));return n%4?n>4?(e.concat(new o.e([0],n%4)),e.concat(new o.e([r],4))):e.concat(new o.e([r<<32-8*n],n)):e.concat(new o.e([r],4)),i.concat(t).concat(e)},t.mac=function(n,r,i,e,f,c){var s=new n({key:r,iv:i});if(4!==s.blockSize)throw new Error(\"In CCM, cipher block size must be 128bit\");if(i&&(i.nSigBytes>13||i.nSigBytes<7))throw new Error(\"Byte size of iv must be between 7 and 13\");var a=i||new o.e([0,0],8),h=(null==e?void 0:e.clone())||new o.e,v=h.nSigBytes,w=(null==f?void 0:f.clone())||new o.e,l=w.nSigBytes;if(l>>>0>4294967295)throw new Error(\"Byte length of Payload(plainText) larger than 2^32-1 (4,294,967,295byte) is not supported at this time.\");var b=15-a.nSigBytes,d=(0,u.ur)(new o.e([0,l],8),b),y=c||16,p=t.getB0(Boolean(v),y,d,a),O=t.formatAssociatedDataAndPayload(h,w),j=p.words.slice();s.encryptBlock(j,0);for(var _=O.nSigBytes/16,m=O.words,A=j,g=0;g<_;g++){var E=[m[4*g]^A[0],m[4*g+1]^A[1],m[4*g+2]^A[2],m[4*g+3]^A[3]];s.encryptBlock(E,0),A=E}var S=new o.e(A,y),M=t.genCtr(b,a,0);s.encryptBlock(M.words,0);for(g=0;g<4;g++)S.words[g]^=M.words[g];return S.clamp(),S},t.combineCipherTextAndAuthTag=function(n,t){return n.clone().concat(t)},t.splitCipherTextAndAuthTag=function(n,t){var r=t||16;return{cipherText:(0,u.z6)(n,n.nSigBytes-r),authTag:(0,u.ur)(n,r)}},t.createEncryptor=function(n){return new t.Encryptor(n)},t.createDecryptor=function(n){return new t.Decryptor(n)},t.Encryptor=function(n){function r(){return null!==n&&n.apply(this,arguments)||this}return f(r,n),r.prototype.processBlock=function(n,r){var i=this.Hn,e=i.blockSize,o=t.genCtr(this.In,this.Nn,this.Bn);i.encryptBlock(o.words,0);for(var u=0;u<e;u++)n[r+u]^=o.words[u];this.Bn++},r}(t),t.Decryptor=function(n){function r(){return null!==n&&n.apply(this,arguments)||this}return f(r,n),r.prototype.processBlock=function(n,r){var i=this.Hn,e=i.blockSize,o=t.genCtr(this.In,this.Nn,this.Bn);i.encryptBlock(o.words,0);for(var u=0;u<e;u++)n[r+u]^=o.words[u];this.Bn++},r}(t),t}(e.T)},5607:function(n,t,r){r.d(t,{V:function(){return c}});var i,e=r(1863),o=r(3354),u=r(4055),f=(i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(n,t)},function(n,t){function r(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),c=function(n){function t(r){var i=n.call(this,r)||this;if(i.zn=[],i.Dn=[],i.Un=[],4!==r.cipher.blockSize)throw new Error(\"In GCM block cipher mode, cipher block size must be 128bit\");var e=r.cipher,o=r.iv,u=[0,0,0,0];return e.encryptBlock(u,0),i.zn=u,i.Dn=t.getJ0(u,null==o?void 0:o.words),i.Un=i.Dn.slice(),i}return f(t,n),t.getJ0=function(n,r){var i;if(r&&0!==r.length)if(3===r.length)i=[r[0],r[1],r[2],1];else{for(var e=r.length%4>0?4-r.length%4:0,o=r.slice(),u=0;u<e+2;u++)o.push(0);o.push(0),o.push(32*r.length),i=t.GHASH(n,o)}else i=[0,0,0,1];return i},t.inc32=function(n){var t=n.slice(),r=t[3]>>>0,i=r+1>>>0<r;if(t[3]=t[3]+1|0,i){var e=t[2]>>>0,o=e+1>>>0<e;t[2]=t[2]+1|0,o&&(t[1]=t[1]+1|0)}return t},t.mul=function(n,t){for(var r=[3774873600,0,0,0],i=[0,0,0,0],e=t.slice(),o=0;o<128;o++){(n[o>>>5]>>>31-o%32&1)>0&&(i[0]=i[0]^e[0],i[1]=i[1]^e[1],i[2]=i[2]^e[2],i[3]=i[3]^e[3]);var u=(1&e[3])>>>0,f=(1&e[0])>>>0,c=(1&e[1])>>>0,s=(1&e[2])>>>0;e[0]=e[0]>>>1,e[1]=e[1]>>>1|(f?2147483648:0),e[2]=e[2]>>>1|(c?2147483648:0),e[3]=e[3]>>>1|(s?2147483648:0),u>0&&(e[0]^=r[0],e[1]^=r[1],e[2]^=r[2],e[3]^=r[3])}return i},t.GHASH=function(n,r){if(n.length%4!=0)throw new Error(\"Length of 32bit word array 'H' must be multiple of 4(128bit)\");if(r.length%4!=0)throw new Error(\"Length of 32bit word array 'X' must be multiple of 4(128bit)\");for(var i=r.length,e=[0,0,0,0],o=0;o<i;o+=4)e[0]=e[0]^r[o],e[1]=e[1]^r[o+1],e[2]=e[2]^r[o+2],e[3]=e[3]^r[o+3],e=t.mul(e,n);return e},t.GCTR=function(n,r,i){if(0===i.nSigBytes)return i.clone();if(4!==r.length)throw new Error(\"Initial Counter Block size must be 128bit\");for(var e=i.words,u=Math.ceil(i.nSigBytes/16),f=[r.slice()],c=1;c<u;c++){var s=t.inc32(f[c-1]);f.push(s)}var a=new o.e;for(c=0;c<u;c++){n.encryptBlock(f[c],0);var h=i.nSigBytes%16;if(c<u-1||0===h){var v=e[4*c]^f[c][0],w=e[4*c+1]^f[c][1],l=e[4*c+2]^f[c][2],b=e[4*c+3]^f[c][3],d=new o.e([v,w,l,b]);a.concat(d)}else{for(var y=[],p=0,O=Math.floor(h/4),j=0;j<O;j++){var _=e[4*c+j]^f[c][j];y.push(_),p+=4}var m=h%4;if(m>0){var A=e[4*c+O]<<32-8*m^f[c][O];y.push(A),p+=m}var g=new o.e(y,p);a.concat(g)}}return a.nSigBytes=i.nSigBytes,a.clamp(),a},t.mac=function(n,r,i,e,f,c){var s=new n({key:r,iv:i}),a=[0,0,0,0];s.encryptBlock(a,0);var h=t.getJ0(a,i.words),v=(null==e?void 0:e.clone())||new o.e,w=[0,8*v.nSigBytes],l=(null==f?void 0:f.clone())||new o.e,b=[0,8*l.nSigBytes],d=c||16;(0,u.I4)(v),(0,u.I4)(l);var y=v.words.concat(l.words).concat(w).concat(b),p=t.GHASH(a,y),O=t.GCTR(s,h,new o.e(p));return(0,u.z6)(O,d)},t.createEncryptor=function(n){return new t.Encryptor(n)},t.createDecryptor=function(n){return new t.Decryptor(n)},t.Encryptor=function(n){function r(){return null!==n&&n.apply(this,arguments)||this}return f(r,n),r.prototype.processBlock=function(n,r){var i=this.Hn.blockSize;this.Un=t.inc32(this.Un);for(var e=new o.e(n.slice(r,r+i)),u=t.GCTR(this.Hn,this.Un,e),f=0;f<i;f++)n[r+f]=u.words[f]},r}(t),t.Decryptor=function(n){function r(){return null!==n&&n.apply(this,arguments)||this}return f(r,n),r.prototype.processBlock=function(n,r){var i=this.Hn.blockSize;this.Un=t.inc32(this.Un);for(var e=new o.e(n.slice(r,r+i)),u=t.GCTR(this.Hn,this.Un,e),f=0;f<i;f++)n[r+f]=u.words[f]},r}(t),t}(e.T)}},t={};function r(i){var e=t[i];if(void 0!==e)return e.exports;var o=t[i]={exports:{}};return n[i](o,o.exports,r),o.exports}r.d=function(n,t){for(var i in t)r.o(t,i)&&!r.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:t[i]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(n){if(\"object\"==typeof window)return window}}(),r.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},r.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"Ln\",{value:!0})};var i={};return function(){r.r(i),r.d(i,{AES:function(){return A.AES},Base64:function(){return t.Base64},CBCMAC:function(){return b.CBCMAC},CipherParams:function(){return u.Q},DES:function(){return g.DES},DES3:function(){return E.DES3},EvpKDF:function(){return t.EvpKDF},GMAC:function(){return l.GMAC},Hex:function(){return t.Hex},Hmac:function(){return f.Hmac},HmacMD5:function(){return c.HmacMD5},HmacSHA1:function(){return s.HmacSHA1},HmacSHA224:function(){return a.HmacSHA224},HmacSHA256:function(){return h.HmacSHA256},HmacSHA384:function(){return v.HmacSHA384},HmacSHA512:function(){return w.HmacSHA512},Latin1:function(){return t.Latin1},MD5:function(){return d.MD5},OpenSSLKDF:function(){return t.OpenSSLKDF},PBKDF2:function(){return t.PBKDF2},PasswordBasedCipher:function(){return o.E},RC4:function(){return k.RC4},RC4Drop:function(){return H.RC4Drop},RIPEMD160:function(){return S.RIPEMD160},Rabbit:function(){return M.Rabbit},SHA1:function(){return y.SHA1},SHA224:function(){return p.SHA224},SHA256:function(){return O.SHA256},SHA3:function(){return m.SHA3},SHA384:function(){return j.SHA384},SHA512:function(){return _.SHA512},SerializableCipher:function(){return e.D},Utf16:function(){return t.Utf16},Utf16BE:function(){return t.Utf16BE},Utf16LE:function(){return t.Utf16LE},Utf8:function(){return t.Utf8},Word32Array:function(){return t.Word32Array},Word64:function(){return t.Word64},Word64Array:function(){return t.Word64Array},formatter:function(){return Y},mode:function(){return Z},pad:function(){return J}});var n,t=r(2688),e=r(9109),o=r(5693),u=r(2505),f=r(6367),c=r(3027),s=r(149),a=r(4105),h=r(980),v=r(5838),w=r(9902),l=r(7753),b=r(3967),d=r(670),y=r(3173),p=r(766),O=r(5561),j=r(6324),_=r(7491),m=r(3408),A=r(9691),g=r(9910),E=r(6739),S=r(7104),M=r(5187),k=r(4615),H=r(9639),C=r(4344),B=r(1863),N=(n=function(t,r){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(t,r)},function(t,r){function i(){this.constructor=t}n(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}),I=function(n){function t(t){var r=n.call(this,t)||this;return r.Cn=[],r}return N(t,n),t.prototype.generateKeyStreamAndEncrypt=function(n,t,r,i){var e,o=this.ln;o?(e=o.words.slice(0),this.ln=void 0):e=this.Cn,i.encryptBlock(e,0);for(var u=0;u<r;u++)n[t+u]^=e[u]},t.createEncryptor=function(n){return new t.Encryptor(n)},t.createDecryptor=function(n){return new t.Decryptor(n)},t.Encryptor=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return N(t,n),t.prototype.processBlock=function(n,t){this.generateKeyStreamAndEncrypt(n,t,this.Hn.blockSize,this.Hn),this.Cn=n.slice(t,t+this.Hn.blockSize)},t}(t),t.Decryptor=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return N(t,n),t.prototype.processBlock=function(n,t){var r=n.slice(t,t+this.Hn.blockSize);this.generateKeyStreamAndEncrypt(n,t,this.Hn.blockSize,this.Hn),this.Cn=r},t}(t),t}(B.T),z=function(){var n=function(t,r){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}n(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),D=function(n){function t(t){var r=n.call(this,t)||this;return r.Fn=[],r}return z(t,n),t.createEncryptor=function(n){return new t.Encryptor(n)},t.createDecryptor=function(n){return new t.Decryptor(n)},t.Encryptor=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return z(t,n),t.prototype.processBlock=function(n,t){var r=this.Hn,i=r.blockSize,e=this.ln,o=this.Fn;e&&(o=this.Fn=e.words.slice(0),this.ln=void 0);var u=o.slice(0);r.encryptBlock(u,0),o[i-1]=o[i-1]+1|0;for(var f=0;f<i;f++)n[t+f]^=u[f]},t}(t),t.Decryptor=t.Encryptor,t}(B.T),U=function(){var n=function(t,r){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}n(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),L=function(n){function t(t){return n.call(this,t)||this}return U(t,n),t.createEncryptor=function(n){return new t.Encryptor(n)},t.createDecryptor=function(n){return new t.Decryptor(n)},t.Encryptor=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return U(t,n),t.prototype.processBlock=function(n,t){this.Hn.encryptBlock(n,t)},t}(t),t.Decryptor=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return U(t,n),t.prototype.processBlock=function(n,t){this.Hn.decryptBlock(n,t)},t}(t),t}(B.T),F=function(){var n=function(t,r){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}n(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),x=function(n){function t(t){var r=n.call(this,t)||this;return r.xn=[],r}return F(t,n),t.createEncryptor=function(n){return new t.Encryptor(n)},t.createDecryptor=function(n){return new t.Decryptor(n)},t.Encryptor=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return F(t,n),t.prototype.processBlock=function(n,t){var r=this.Hn,i=r.blockSize,e=this.ln,o=this.xn;e&&(o=this.xn=e.words.slice(0),this.ln=void 0),r.encryptBlock(o,0);for(var u=0;u<i;u++)n[t+u]^=o[u]},t}(t),t.Decryptor=t.Encryptor,t}(B.T),P=r(5607),R=r(3664);var T={pad:function(n,t){var r=n.nSigBytes,i=4*t,e=i-r%i,o=r+e-1;n.clamp(),n.words[o>>>2]|=e<<24-o%4*8,n.nSigBytes+=e},unpad:function(n){var t=255&n.words[n.nSigBytes-1>>>2];n.nSigBytes-=t}},K=r(3354);var W={pad:function(n,t){var r=4*t,i=r-n.nSigBytes%r;n.concat(K.e.random(i-1)).concat(new K.e([i<<24],1))},unpad:function(n){var t=255&n.words[n.nSigBytes-1>>>2];n.nSigBytes-=t}};var G={pad:function(n,t){var r=4*t;n.clamp(),n.nSigBytes+=r-(n.nSigBytes%r||r)},unpad:function(n){for(var t=n.words,r=n.nSigBytes-1;r>=0;r--)if(t[r>>>2]>>>24-r%4*8&255){n.nSigBytes=r+1;break}}};var q={pad:function(n,t){n.concat(new K.e([2147483648],1)),G.pad(n,t)},unpad:function(n){G.unpad(n),n.nSigBytes-=1}},Q=r(7919);var X={pad:function(n,t){},unpad:function(n){}},V=r(1232),Z={CBC:C.n,CFB:I,CTR:D,ECB:L,OFB:x,GCM:P.V,CCM:R.K},J={AnsiX923:T,ISO10126:W,ISO97971:q,Pkcs7:Q.l,NoPadding:X,Zero:G},Y={OpenSSLFormatter:V.w}}(),i}()}));", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tokenToHash = void 0;\nvar JsCrypto = require(\"jscrypto\");\nvar tokenToHash = function (_a) {\n    var secretToken = _a.secretToken;\n    return JsCrypto.SHA256.hash(secretToken).toString(JsCrypto.Base64);\n};\nexports.tokenToHash = tokenToHash;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyToken = void 0;\nvar errors_1 = require(\"@fleek-platform/errors\");\nvar jose_1 = require(\"jose\");\nvar textEncoder = new TextEncoder();\nvar verifyToken = function (_a) {\n    var secret = _a.secret, token = _a.token;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var secretKey, verifiedToken;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    secretKey = textEncoder.encode(secret);\n                    return [4 /*yield*/, (0, jose_1.jwtVerify)(token, secretKey).catch(function () {\n                            throw new errors_1.AuthorizationError();\n                        })];\n                case 1:\n                    verifiedToken = _b.sent();\n                    return [2 /*return*/, verifiedToken.payload];\n            }\n        });\n    });\n};\nexports.verifyToken = verifyToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyAccessToken = void 0;\nvar verifyToken_1 = require(\"./verifyToken\");\nvar verifyAccessToken = function (args) { return (0, verifyToken_1.verifyToken)(args); };\nexports.verifyAccessToken = verifyAccessToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyAssetsAccessToken = void 0;\nvar verifyToken_1 = require(\"./verifyToken\");\nvar verifyAssetsAccessToken = function (args) { return (0, verifyToken_1.verifyToken)(args); };\nexports.verifyAssetsAccessToken = verifyAssetsAccessToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyChallengeToken = void 0;\nvar verifyToken_1 = require(\"./verifyToken\");\nvar verifyChallengeToken = function (args) { return (0, verifyToken_1.verifyToken)(args); };\nexports.verifyChallengeToken = verifyChallengeToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyMigrationToken = void 0;\nvar verifyToken_1 = require(\"./verifyToken\");\nvar verifyMigrationToken = function (args) { return (0, verifyToken_1.verifyToken)(args); };\nexports.verifyMigrationToken = verifyMigrationToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createApplicationClientId = void 0;\nvar nanoid_1 = require(\"nanoid\");\nvar createApplicationClientId = function () { return \"client_\".concat((0, nanoid_1.nanoid)(20)); };\nexports.createApplicationClientId = createApplicationClientId;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./createAccessToken\"), exports);\n__exportStar(require(\"./createAssetsAccessToken\"), exports);\n__exportStar(require(\"./createChallengeToken\"), exports);\n__exportStar(require(\"./createMigrationToken\"), exports);\n__exportStar(require(\"./createPersonalAccessToken\"), exports);\n__exportStar(require(\"./decodeAccessToken\"), exports);\n__exportStar(require(\"./getTokenFromRequest\"), exports);\n__exportStar(require(\"./tokenToHash\"), exports);\n__exportStar(require(\"./verifyAccessToken\"), exports);\n__exportStar(require(\"./verifyAssetsAccessToken\"), exports);\n__exportStar(require(\"./verifyChallengeToken\"), exports);\n__exportStar(require(\"./verifyMigrationToken\"), exports);\n__exportStar(require(\"./createApplicationClientId\"), exports);\n", "export {\n  createSignedRequest,\n  getIpfsGatewayUrl,\n  getCfIpfsGatewayUrl,\n  getPrivateIpfsGatewayUrl,\n  getIpfsGatewayAssetsUrl,\n  getIpfsInternalGatewayUrl,\n  getInternalGatewayUrlByStorageType,\n  getWeb3IpfsGatewayUrl,\n  getFleekXyzIpfsGatewayUrl,\n} from './ipfs';\nexport type { CreateSignedRequestArgs, GetPrivateIpfsGatewayUrlArgs } from './ipfs';\nexport { getStoragePinIdByCidAndProjectIdKey } from './cache';\n", "import { sign } from 'aws4';\nimport FormData from 'form-data';\n\nexport type AwsCredentials = {\n  accessKeyId: string;\n  secretAccessKey: string;\n};\n\nexport type CreateSignedRequestArgs = {\n  credentials: AwsCredentials;\n  url: URL;\n  method: 'GET' | 'POST';\n  data?: FormData;\n  headers?: Record<string, string>;\n};\n\nexport const createSignedRequest = (args: CreateSignedRequestArgs) => {\n  const { credentials, url, method, data, headers } = args;\n\n  const request = {\n    host: url.hostname,\n    url: url.toString(),\n    method,\n    // path needs to include query params when present\n    path: `${url.pathname}${url.search}`,\n    timeout: 20_000,\n    headers: headers || {},\n    data,\n\n    // signed request options\n    service: 's3',\n    region: 'us-west-2',\n  };\n\n  sign(request, credentials);\n\n  request.headers = {\n    'Accept-Encoding': '*',\n    ...(data ? data.getHeaders() : {}),\n    ...request.headers,\n  };\n\n  return request;\n};\n\n// TODO: These functions can be turned into generics with computed strings\n/**\n * @deprecated use getFleekXyzIpfsGatewayUrl instead\n **/\nexport const getIpfsGatewayUrl = (hash: string) => `https://ipfs.io/ipfs/${hash}`;\n/**\n * @deprecated use getFleekXyzIpfsGatewayUrl instead\n **/\nexport const getCfIpfsGatewayUrl = (hash: string) => `https://${hash}.ipfs.cf-ipfs.com`;\n/**\n * @deprecated use getFleekXyzIpfsGatewayUrl instead\n **/\nexport const getWeb3IpfsGatewayUrl = (hash: string) => `https://${hash}.ipfs.w3s.link`;\n/**\n * @deprecated use getFleekXyzIpfsGatewayUrl instead\n **/\nexport const getFleekCoolIpfsGatewayUrl = (hash: string) => `https://${hash}.ipfs.fleek.cool`;\nexport const getFleekXyzIpfsGatewayUrl = (hash: string) => `https://${hash}.ipfs.flk-ipfs.xyz`;\nexport type GetPrivateIpfsGatewayUrlArgs = {\n  hostname: string;\n  hash: string;\n};\n\nexport const getPrivateIpfsGatewayUrl = ({ hostname, hash }: GetPrivateIpfsGatewayUrlArgs) => `https://${hostname}/ipfs/${hash}`;\n\nexport { getInternalGatewayUrlByStorageType } from './getInternalGatewayUrlByStorageType';\nexport { getIpfsInternalGatewayUrl } from './getIpfsInternalGatewayUrl';\nexport { getIpfsGatewayAssetsUrl } from './getIpfsGatewayAssetsUrl';\n", "// TODO: Deprecate in favour of utils version\nimport { MissingExpectedDataError } from '@fleek-platform/errors';\nimport CID from 'cids';\n\nimport { getDefined } from '../defined';\n\nexport const IPFS_GATEWAY_HOSTNAME = getDefined('IPFS_GATEWAY_HOSTNAME');\n\nexport const getIpfsInternalGatewayUrl = (hash: string) => {\n  const cid = new CID(hash);\n  const cidV1 = cid.toV1().toString('base32');\n\n  if (!IPFS_GATEWAY_HOSTNAME) {\n    throw new MissingExpectedDataError();\n  }\n\n  return `https://${cidV1}.ipfs.${IPFS_GATEWAY_HOSTNAME}`;\n};\n", "/* eslint-disable no-process-env */\n\nexport type Defined = {\n  IPFS_GATEWAY_HOSTNAME?: string;\n};\n\n// WARNING: Those values will be visible in public source code pushed to NPM\nexport const defined: Defined = {\n  IPFS_GATEWAY_HOSTNAME: process.env.IPFS_GATEWAY_HOSTNAME,\n};\n\n// The variables are parsed at build time, in order to ensure\n// that the override is intentional we should stick\n// with the application prefix to avoid unexpected behaviour for\n// polluted environments that might have similar env vars\n// e.g. FLEEK__UI_APP_URL\nconst override_env_var_prefix = '';\n\nexport const getDefined = (key: keyof typeof defined) => process.env[`${override_env_var_prefix}${key}`] || defined[key];\n", "import { getIpfsInternalGatewayUrl } from './getIpfsInternalGatewayUrl';\n\ntype StorageType = 'IPFS';\ntype GetInternalGatewayUrlByStorageTypeArgs = {\n  storageType: StorageType;\n  cid: string;\n};\n\nexport const getInternalGatewayUrlByStorageType = ({ cid, storageType }: GetInternalGatewayUrlByStorageTypeArgs): string => {\n  switch (storageType) {\n    case 'IPFS':\n      return getIpfsInternalGatewayUrl(cid);\n    default:\n      // eslint-disable-next-line fleek-custom/no-default-error\n      throw new Error(`Cannot generate internal gateway URL for unknown storageType: ${storageType}`);\n  }\n};\n", "/* eslint-disable no-process-env */\nimport { createAssetsAccessToken } from '@fleek-platform/utils-token';\n\nexport const getIpfsGatewayAssetsUrl = async (cid: string) => {\n  const token = await createAssetsAccessToken({\n    payload: {\n      cid,\n    },\n    secret: process.env.SECRET_JWT_IDENTITY as string,\n    expiration: '1m',\n  });\n\n  return `https://${process.env.ASSETS_URL as string}/cid?token=${token}`;\n};\n", "export type GetStoragePinIdByCidAndProjectIdKeyArgs = { cid: string; projectId: string };\n\nexport const getStoragePinIdByCidAndProjectIdKey = ({ cid, projectId }: GetStoragePinIdByCidAndProjectIdKeyArgs) =>\n  `StoragePinIdByCidAndProjectId.${cid}.${projectId}`;\n", "import { MissingExpectedDataError } from '@fleek-platform/errors';\n\nexport const getIpnsGatewayUrl = (name: string) => {\n  if (!name) {\n    throw new MissingExpectedDataError();\n  }\n\n  return `https://ipfs.io/ipns/${name}`;\n};\n", "'use strict';\n\nconst ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexports.ALIAS = ALIAS;\nexports.DOC = DOC;\nexports.MAP = MAP;\nexports.NODE_TYPE = NODE_TYPE;\nexports.PAIR = PAIR;\nexports.SCALAR = SCALAR;\nexports.SEQ = SEQ;\nexports.hasAnchor = hasAnchor;\nexports.isAlias = isAlias;\nexports.isCollection = isCollection;\nexports.isDocument = isDocument;\nexports.isMap = isMap;\nexports.isNode = isNode;\nexports.isPair = isPair;\nexports.isScalar = isScalar;\nexports.isSeq = isSeq;\n", "'use strict';\n\nvar identity = require('./nodes/identity.js');\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (identity.isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (identity.isNode(ctrl) || identity.isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (identity.isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (identity.isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (identity.isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (identity.isNode(ctrl) || identity.isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (identity.isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (identity.isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (identity.isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (identity.isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (identity.isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (identity.isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (identity.isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (identity.isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (identity.isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (identity.isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = identity.isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexports.visit = visit;\nexports.visitAsync = visitAsync;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar visit = require('../visit.js');\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && identity.isNode(doc.contents)) {\n            const tags = {};\n            visit.visit(doc.contents, (_key, node) => {\n                if (identity.isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexports.Directives = Directives;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar visit = require('../visit.js');\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit.visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (identity.isScalar(ref.node) || identity.isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexports.anchorIsValid = anchorIsValid;\nexports.anchorNames = anchorNames;\nexports.createNodeAnchors = createNodeAnchors;\nexports.findNewAnchor = findNewAnchor;\n", "'use strict';\n\n/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexports.applyReviver = applyReviver;\n", "'use strict';\n\nvar identity = require('./identity.js');\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !identity.hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexports.toJS = toJS;\n", "'use strict';\n\nvar applyReviver = require('../doc/applyReviver.js');\nvar identity = require('./identity.js');\nvar toJS = require('./toJS.js');\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, identity.NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!identity.isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS.toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver.applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexports.NodeBase = NodeBase;\n", "'use strict';\n\nvar anchors = require('../doc/anchors.js');\nvar visit = require('../visit.js');\nvar identity = require('./identity.js');\nvar Node = require('./Node.js');\nvar toJS = require('./toJS.js');\n\nclass Alias extends Node.NodeBase {\n    constructor(source) {\n        super(identity.ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit.visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS.toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchors.anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (identity.isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (identity.isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (identity.isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexports.Alias = Alias;\n", "'use strict';\n\nvar identity = require('./identity.js');\nvar Node = require('./Node.js');\nvar toJS = require('./toJS.js');\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends Node.NodeBase {\n    constructor(value) {\n        super(identity.SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS.toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexports.Scalar = Scalar;\nexports.isScalarValue = isScalarValue;\n", "'use strict';\n\nvar Alias = require('../nodes/Alias.js');\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (identity.isDocument(value))\n        value = value.contents;\n    if (identity.isNode(value))\n        return value;\n    if (identity.isPair(value)) {\n        const map = ctx.schema[identity.MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias.Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar.Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[identity.MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[identity.SEQ]\n                    : schema[identity.MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar.Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexports.createNode = createNode;\n", "'use strict';\n\nvar createNode = require('../doc/createNode.js');\nvar identity = require('./identity.js');\nvar Node = require('./Node.js');\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode.createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends Node.NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => identity.isNode(it) || identity.isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (identity.isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (identity.isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && identity.isScalar(node) ? node.value : node;\n        else\n            return identity.isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!identity.isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    identity.isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return identity.isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (identity.isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexports.Collection = Collection;\nexports.collectionFromPath = collectionFromPath;\nexports.isEmptyPath = isEmptyPath;\n", "'use strict';\n\n/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexports.indentComment = indentComment;\nexports.lineComment = lineComment;\nexports.stringifyComment = stringifyComment;\n", "'use strict';\n\nconst FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexports.FOLD_BLOCK = FOLD_BLOCK;\nexports.FOLD_FLOW = FOLD_FLOW;\nexports.FOLD_QUOTED = FOLD_QUOTED;\nexports.foldFlowLines = foldFlowLines;\n", "'use strict';\n\nvar Scalar = require('../nodes/Scalar.js');\nvar foldFlowLines = require('./foldFlowLines.js');\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines.foldFlowLines(str, indent, foldFlowLines.FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines.foldFlowLines(res, indent, foldFlowLines.FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    // Leading | or > is added later\n    let header = (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (!literal) {\n        const foldedValue = value\n            .replace(/\\n+/g, '\\n$&')\n            .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n            //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n            .replace(/\\n+/g, `$&${indent}`);\n        let literalFallback = false;\n        const foldOptions = getFoldOptions(ctx, true);\n        if (blockQuote !== 'folded' && type !== Scalar.Scalar.BLOCK_FOLDED) {\n            foldOptions.onOverflow = () => {\n                literalFallback = true;\n            };\n        }\n        const body = foldFlowLines.foldFlowLines(`${start}${foldedValue}${end}`, indent, foldFlowLines.FOLD_BLOCK, foldOptions);\n        if (!literalFallback)\n            return `>${header}\\n${indent}${body}`;\n    }\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines.foldFlowLines(str, indent, foldFlowLines.FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.Scalar.BLOCK_FOLDED:\n            case Scalar.Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexports.stringifyString = stringifyString;\n", "'use strict';\n\nvar anchors = require('../doc/anchors.js');\nvar identity = require('../nodes/identity.js');\nvar stringifyComment = require('./stringifyComment.js');\nvar stringifyString = require('./stringifyString.js');\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment.stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (identity.isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors: anchors$1, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (identity.isScalar(node) || identity.isCollection(node)) && node.anchor;\n    if (anchor && anchors.anchorIsValid(anchor)) {\n        anchors$1.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (identity.isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (identity.isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = identity.isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : identity.isScalar(node)\n            ? stringifyString.stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return identity.isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexports.createStringifyContext = createStringifyContext;\nexports.stringify = stringify;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\nvar stringify = require('./stringify.js');\nvar stringifyComment = require('./stringifyComment.js');\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (identity.isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (identity.isCollection(key) || (!identity.isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            identity.isCollection(key) ||\n            (identity.isScalar(key)\n                ? key.type === Scalar.Scalar.BLOCK_FOLDED || key.type === Scalar.Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify.stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (identity.isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && identity.isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        identity.isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify.stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${stringifyComment.indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && identity.isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += stringifyComment.lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexports.stringifyPair = stringifyPair;\n", "'use strict';\n\nfunction debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexports.debug = debug;\nexports.warn = warn;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar Scalar = require('../../nodes/Scalar.js');\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar.Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (identity.isScalar(key) &&\n        (!key.type || key.type === Scalar.Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && identity.isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (identity.isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && identity.isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!identity.isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexports.addMergeToJSMap = addMergeToJSMap;\nexports.isMergeKey = isMergeKey;\nexports.merge = merge;\n", "'use strict';\n\nvar log = require('../log.js');\nvar merge = require('../schema/yaml-1.1/merge.js');\nvar stringify = require('../stringify/stringify.js');\nvar identity = require('./identity.js');\nvar toJS = require('./toJS.js');\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (identity.isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (merge.isMergeKey(ctx, key))\n        merge.addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS.toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS.toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS.toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (identity.isNode(key) && ctx?.doc) {\n        const strCtx = stringify.createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            log.warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexports.addPairToJSMap = addPairToJSMap;\n", "'use strict';\n\nvar createNode = require('../doc/createNode.js');\nvar stringifyPair = require('../stringify/stringifyPair.js');\nvar addPairToJSMap = require('./addPairToJSMap.js');\nvar identity = require('./identity.js');\n\nfunction createPair(key, value, ctx) {\n    const k = createNode.createNode(key, undefined, ctx);\n    const v = createNode.createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, identity.NODE_TYPE, { value: identity.PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (identity.isNode(key))\n            key = key.clone(schema);\n        if (identity.isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap.addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair.stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexports.Pair = Pair;\nexports.createPair = createPair;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar stringify = require('./stringify.js');\nvar stringifyComment = require('./stringifyComment.js');\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (identity.isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (identity.isPair(item)) {\n            const ik = identity.isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify.stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += stringifyComment.lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + stringifyComment.indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (identity.isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (identity.isPair(item)) {\n            const ik = identity.isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = identity.isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify.stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += stringifyComment.lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = stringifyComment.indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexports.stringifyCollection = stringifyCollection;\n", "'use strict';\n\nvar stringifyCollection = require('../stringify/stringifyCollection.js');\nvar addPairToJSMap = require('./addPairToJSMap.js');\nvar Collection = require('./Collection.js');\nvar identity = require('./identity.js');\nvar Pair = require('./Pair.js');\nvar Scalar = require('./Scalar.js');\n\nfunction findPair(items, key) {\n    const k = identity.isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (identity.isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (identity.isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection.Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(identity.MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(Pair.createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (identity.isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair.Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair.Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (identity.isScalar(prev.value) && Scalar.isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && identity.isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair.Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap.addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!identity.isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection.stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexports.YAMLMap = YAMLMap;\nexports.findPair = findPair;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar YAMLMap = require('../../nodes/YAMLMap.js');\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap.YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!identity.isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.YAMLMap.from(schema, obj, ctx)\n};\n\nexports.map = map;\n", "'use strict';\n\nvar createNode = require('../doc/createNode.js');\nvar stringifyCollection = require('../stringify/stringifyCollection.js');\nvar Collection = require('./Collection.js');\nvar identity = require('./identity.js');\nvar Scalar = require('./Scalar.js');\nvar toJS = require('./toJS.js');\n\nclass YAMLSeq extends Collection.Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(identity.SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && identity.isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (identity.isScalar(prev) && Scalar.isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS.toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection.stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode.createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = identity.isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexports.YAMLSeq = YAMLSeq;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar YAMLSeq = require('../../nodes/YAMLSeq.js');\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq.YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!identity.isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.YAMLSeq.from(schema, obj, ctx)\n};\n\nexports.seq = seq;\n", "'use strict';\n\nvar stringifyString = require('../../stringify/stringifyString.js');\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString.stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexports.string = string;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar.Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar.Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexports.nullTag = nullTag;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar.Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexports.boolTag = boolTag;\n", "'use strict';\n\nfunction stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexports.stringifyNumber = stringifyNumber;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber.stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber.stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar.Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber.stringifyNumber\n};\n\nexports.float = float;\nexports.floatExp = floatExp;\nexports.floatNaN = floatNaN;\n", "'use strict';\n\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber.stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber.stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexports.int = int;\nexports.intHex = intHex;\nexports.intOct = intOct;\n", "'use strict';\n\nvar map = require('../common/map.js');\nvar _null = require('../common/null.js');\nvar seq = require('../common/seq.js');\nvar string = require('../common/string.js');\nvar bool = require('./bool.js');\nvar float = require('./float.js');\nvar int = require('./int.js');\n\nconst schema = [\n    map.map,\n    seq.seq,\n    string.string,\n    _null.nullTag,\n    bool.boolTag,\n    int.intOct,\n    int.int,\n    int.intHex,\n    float.floatNaN,\n    float.floatExp,\n    float.float\n];\n\nexports.schema = schema;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar map = require('../common/map.js');\nvar seq = require('../common/seq.js');\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar.Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true$|^false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map.map, seq.seq].concat(jsonScalars, jsonError);\n\nexports.schema = schema;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar stringifyString = require('../../stringify/stringifyString.js');\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString.stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexports.binary = binary;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar Pair = require('../../nodes/Pair.js');\nvar Scalar = require('../../nodes/Scalar.js');\nvar YAMLSeq = require('../../nodes/YAMLSeq.js');\n\nfunction resolvePairs(seq, onError) {\n    if (identity.isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (identity.isPair(item))\n                continue;\n            else if (identity.isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair.Pair(new Scalar.Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = identity.isPair(item) ? item : new Pair.Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq.YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(Pair.createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexports.createPairs = createPairs;\nexports.pairs = pairs;\nexports.resolvePairs = resolvePairs;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar toJS = require('../../nodes/toJS.js');\nvar YAMLMap = require('../../nodes/YAMLMap.js');\nvar YAMLSeq = require('../../nodes/YAMLSeq.js');\nvar pairs = require('./pairs.js');\n\nclass YAMLOMap extends YAMLSeq.YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (identity.isPair(pair)) {\n                key = toJS.toJS(pair.key, '', ctx);\n                value = toJS.toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS.toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs$1 = pairs.createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs$1.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs$1 = pairs.resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs$1.items) {\n            if (identity.isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs$1);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexports.YAMLOMap = YAMLOMap;\nexports.omap = omap;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar.Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar.Scalar(false),\n    stringify: boolStringify\n};\n\nexports.falseTag = falseTag;\nexports.trueTag = trueTag;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber.stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber.stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar.Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber.stringifyNumber\n};\n\nexports.float = float;\nexports.floatExp = floatExp;\nexports.floatNaN = floatNaN;\n", "'use strict';\n\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber.stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber.stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexports.int = int;\nexports.intBin = intBin;\nexports.intHex = intHex;\nexports.intOct = intOct;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar Pair = require('../../nodes/Pair.js');\nvar YAMLMap = require('../../nodes/YAMLMap.js');\n\nclass YAMLSet extends YAMLMap.YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (identity.isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair.Pair(key.key, null);\n        else\n            pair = new Pair.Pair(key, null);\n        const prev = YAMLMap.findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = YAMLMap.findPair(this.items, key);\n        return !keepPair && identity.isPair(pair)\n            ? identity.isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = YAMLMap.findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair.Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(Pair.createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (identity.isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexports.YAMLSet = YAMLSet;\nexports.set = set;\n", "'use strict';\n\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber.stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/(T00:00:00)?\\.000Z$/, '')\n};\n\nexports.floatTime = floatTime;\nexports.intTime = intTime;\nexports.timestamp = timestamp;\n", "'use strict';\n\nvar map = require('../common/map.js');\nvar _null = require('../common/null.js');\nvar seq = require('../common/seq.js');\nvar string = require('../common/string.js');\nvar binary = require('./binary.js');\nvar bool = require('./bool.js');\nvar float = require('./float.js');\nvar int = require('./int.js');\nvar merge = require('./merge.js');\nvar omap = require('./omap.js');\nvar pairs = require('./pairs.js');\nvar set = require('./set.js');\nvar timestamp = require('./timestamp.js');\n\nconst schema = [\n    map.map,\n    seq.seq,\n    string.string,\n    _null.nullTag,\n    bool.trueTag,\n    bool.falseTag,\n    int.intBin,\n    int.intOct,\n    int.int,\n    int.intHex,\n    float.floatNaN,\n    float.floatExp,\n    float.float,\n    binary.binary,\n    merge.merge,\n    omap.omap,\n    pairs.pairs,\n    set.set,\n    timestamp.intTime,\n    timestamp.floatTime,\n    timestamp.timestamp\n];\n\nexports.schema = schema;\n", "'use strict';\n\nvar map = require('./common/map.js');\nvar _null = require('./common/null.js');\nvar seq = require('./common/seq.js');\nvar string = require('./common/string.js');\nvar bool = require('./core/bool.js');\nvar float = require('./core/float.js');\nvar int = require('./core/int.js');\nvar schema = require('./core/schema.js');\nvar schema$1 = require('./json/schema.js');\nvar binary = require('./yaml-1.1/binary.js');\nvar merge = require('./yaml-1.1/merge.js');\nvar omap = require('./yaml-1.1/omap.js');\nvar pairs = require('./yaml-1.1/pairs.js');\nvar schema$2 = require('./yaml-1.1/schema.js');\nvar set = require('./yaml-1.1/set.js');\nvar timestamp = require('./yaml-1.1/timestamp.js');\n\nconst schemas = new Map([\n    ['core', schema.schema],\n    ['failsafe', [map.map, seq.seq, string.string]],\n    ['json', schema$1.schema],\n    ['yaml11', schema$2.schema],\n    ['yaml-1.1', schema$2.schema]\n]);\nconst tagsByName = {\n    binary: binary.binary,\n    bool: bool.boolTag,\n    float: float.float,\n    floatExp: float.floatExp,\n    floatNaN: float.floatNaN,\n    floatTime: timestamp.floatTime,\n    int: int.int,\n    intHex: int.intHex,\n    intOct: int.intOct,\n    intTime: timestamp.intTime,\n    map: map.map,\n    merge: merge.merge,\n    null: _null.nullTag,\n    omap: omap.omap,\n    pairs: pairs.pairs,\n    seq: seq.seq,\n    set: set.set,\n    timestamp: timestamp.timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary.binary,\n    'tag:yaml.org,2002:merge': merge.merge,\n    'tag:yaml.org,2002:omap': omap.omap,\n    'tag:yaml.org,2002:pairs': pairs.pairs,\n    'tag:yaml.org,2002:set': set.set,\n    'tag:yaml.org,2002:timestamp': timestamp.timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge.merge)\n            ? schemaTags.concat(merge.merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge.merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexports.coreKnownTags = coreKnownTags;\nexports.getTags = getTags;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar map = require('./common/map.js');\nvar seq = require('./common/seq.js');\nvar string = require('./common/string.js');\nvar tags = require('./tags.js');\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? tags.getTags(compat, 'compat')\n            : compat\n                ? tags.getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? tags.coreKnownTags : {};\n        this.tags = tags.getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, identity.MAP, { value: map.map });\n        Object.defineProperty(this, identity.SCALAR, { value: string.string });\n        Object.defineProperty(this, identity.SEQ, { value: seq.seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexports.Schema = Schema;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar stringify = require('./stringify.js');\nvar stringifyComment = require('./stringifyComment.js');\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = stringify.createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(stringifyComment.indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (identity.isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(stringifyComment.indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify.stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += stringifyComment.lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify.stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(stringifyComment.indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(stringifyComment.indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexports.stringifyDocument = stringifyDocument;\n", "'use strict';\n\nvar Alias = require('../nodes/Alias.js');\nvar Collection = require('../nodes/Collection.js');\nvar identity = require('../nodes/identity.js');\nvar Pair = require('../nodes/Pair.js');\nvar toJS = require('../nodes/toJS.js');\nvar Schema = require('../schema/Schema.js');\nvar stringifyDocument = require('../stringify/stringifyDocument.js');\nvar anchors = require('./anchors.js');\nvar applyReviver = require('./applyReviver.js');\nvar createNode = require('./createNode.js');\nvar directives = require('./directives.js');\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, identity.NODE_TYPE, { value: identity.DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new directives.Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [identity.NODE_TYPE]: { value: identity.DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = identity.isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchors.anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? anchors.findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias.Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = anchors.createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode.createNode(value, tag, ctx);\n        if (flow && identity.isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair.Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (Collection.isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return identity.isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (Collection.isEmptyPath(path))\n            return !keepScalar && identity.isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return identity.isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return identity.isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (Collection.isEmptyPath(path))\n            return this.contents !== undefined;\n        return identity.isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = Collection.collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (Collection.isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = Collection.collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new directives.Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new directives.Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema.Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS.toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver.applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument.stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (identity.isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexports.Document = Document;\n", "'use strict';\n\nclass YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '\u2026' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '\u2026';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '\u2026\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexports.YAMLError = YAMLError;\nexports.YAMLParseError = YAMLParseError;\nexports.YAMLWarning = YAMLWarning;\nexports.prettifyError = prettifyError;\n", "'use strict';\n\nfunction resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexports.resolveProps = resolveProps;\n", "'use strict';\n\nfunction containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexports.containsNewline = containsNewline;\n", "'use strict';\n\nvar utilContainsNewline = require('./util-contains-newline.js');\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            utilContainsNewline.containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexports.flowIndentCheck = flowIndentCheck;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (identity.isScalar(a) && identity.isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexports.mapIncludes = mapIncludes;\n", "'use strict';\n\nvar Pair = require('../nodes/Pair.js');\nvar YAMLMap = require('../nodes/YAMLMap.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilContainsNewline = require('./util-contains-newline.js');\nvar utilFlowIndentCheck = require('./util-flow-indent-check.js');\nvar utilMapIncludes = require('./util-map-includes.js');\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap.YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps.resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || utilContainsNewline.containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            utilFlowIndentCheck.flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (utilMapIncludes.mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps.resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                utilFlowIndentCheck.flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair.Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair.Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexports.resolveBlockMap = resolveBlockMap;\n", "'use strict';\n\nvar YAMLSeq = require('../nodes/YAMLSeq.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilFlowIndentCheck = require('./util-flow-indent-check.js');\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq.YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps.resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            utilFlowIndentCheck.flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexports.resolveBlockSeq = resolveBlockSeq;\n", "'use strict';\n\nfunction resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexports.resolveEnd = resolveEnd;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Pair = require('../nodes/Pair.js');\nvar YAMLMap = require('../nodes/YAMLMap.js');\nvar YAMLSeq = require('../nodes/YAMLSeq.js');\nvar resolveEnd = require('./resolve-end.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilContainsNewline = require('./util-contains-newline.js');\nvar utilMapIncludes = require('./util-map-includes.js');\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap.YAMLMap : YAMLSeq.YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps.resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && utilContainsNewline.containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (identity.isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // \u2192 key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps.resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair.Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (utilMapIncludes.mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap.YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd.resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexports.resolveFlowCollection = resolveFlowCollection;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\nvar YAMLMap = require('../nodes/YAMLMap.js');\nvar YAMLSeq = require('../nodes/YAMLSeq.js');\nvar resolveBlockMap = require('./resolve-block-map.js');\nvar resolveBlockSeq = require('./resolve-block-seq.js');\nvar resolveFlowCollection = require('./resolve-flow-collection.js');\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap.resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq.resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection.resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt?.collection) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = identity.isNode(res)\n        ? res\n        : new Scalar.Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexports.composeCollection = composeCollection;\n", "'use strict';\n\nvar Scalar = require('../nodes/Scalar.js');\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.Scalar.BLOCK_FOLDED : Scalar.Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexports.resolveBlockScalar = resolveBlockScalar;\n", "'use strict';\n\nvar Scalar = require('../nodes/Scalar.js');\nvar resolveEnd = require('./resolve-end.js');\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd.resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexports.resolveFlowScalar = resolveFlowScalar;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\nvar resolveBlockScalar = require('./resolve-block-scalar.js');\nvar resolveFlowScalar = require('./resolve-flow-scalar.js');\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar.resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar.resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[identity.SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[identity.SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = identity.isScalar(res) ? res : new Scalar.Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar.Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[identity.SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[identity.SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[identity.SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[identity.SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexports.composeScalar = composeScalar;\n", "'use strict';\n\nfunction emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexports.emptyScalarPosition = emptyScalarPosition;\n", "'use strict';\n\nvar Alias = require('../nodes/Alias.js');\nvar identity = require('../nodes/identity.js');\nvar composeCollection = require('./compose-collection.js');\nvar composeScalar = require('./compose-scalar.js');\nvar resolveEnd = require('./resolve-end.js');\nvar utilEmptyScalarPosition = require('./util-empty-scalar-position.js');\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar.composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection.composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!identity.isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: utilEmptyScalarPosition.emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar.composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias.Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd.resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexports.composeEmptyNode = composeEmptyNode;\nexports.composeNode = composeNode;\n", "'use strict';\n\nvar Document = require('../doc/Document.js');\nvar composeNode = require('./compose-node.js');\nvar resolveEnd = require('./resolve-end.js');\nvar resolveProps = require('./resolve-props.js');\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document.Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps.resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode.composeNode(ctx, value, props, onError)\n        : composeNode.composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd.resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexports.composeDoc = composeDoc;\n", "'use strict';\n\nvar directives = require('../doc/directives.js');\nvar Document = require('../doc/Document.js');\nvar errors = require('../errors.js');\nvar identity = require('../nodes/identity.js');\nvar composeDoc = require('./compose-doc.js');\nvar resolveEnd = require('./resolve-end.js');\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new errors.YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new errors.YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new directives.Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (identity.isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (identity.isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        if (process.env.LOG_STREAM)\n            console.dir(token, { depth: null });\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc.composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new errors.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new errors.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd.resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new errors.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document.Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexports.Composer = Composer;\n", "'use strict';\n\nvar resolveBlockScalar = require('../compose/resolve-block-scalar.js');\nvar resolveFlowScalar = require('../compose/resolve-flow-scalar.js');\nvar errors = require('../errors.js');\nvar stringifyString = require('../stringify/stringifyString.js');\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new errors.YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar.resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar.resolveBlockScalar({ options: { strict } }, token, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString.stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString.stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexports.createScalarToken = createScalarToken;\nexports.resolveAsScalar = resolveAsScalar;\nexports.setScalarValue = setScalarValue;\n", "'use strict';\n\n/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexports.stringify = stringify;\n", "'use strict';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` \u2013 Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` \u2013 Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` \u2013 Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` \u2013 The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexports.visit = visit;\n", "'use strict';\n\nvar cstScalar = require('./cst-scalar.js');\nvar cstStringify = require('./cst-stringify.js');\nvar cstVisit = require('./cst-visit.js');\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexports.createScalarToken = cstScalar.createScalarToken;\nexports.resolveAsScalar = cstScalar.resolveAsScalar;\nexports.setScalarValue = cstScalar.setScalarValue;\nexports.stringify = cstStringify.stringify;\nexports.visit = cstVisit.visit;\nexports.BOM = BOM;\nexports.DOCUMENT = DOCUMENT;\nexports.FLOW_END = FLOW_END;\nexports.SCALAR = SCALAR;\nexports.isCollection = isCollection;\nexports.isScalar = isScalar;\nexports.prettyToken = prettyToken;\nexports.tokenType = tokenType;\n", "'use strict';\n\nvar cst = require('./cst.js');\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === cst.BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield cst.DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield cst.FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield cst.SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield cst.SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexports.Lexer = Lexer;\n", "'use strict';\n\n/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexports.LineCounter = LineCounter;\n", "'use strict';\n\nvar cst = require('./cst.js');\nvar lexer = require('./lexer.js');\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new lexer.Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (process.env.LOG_TOKENS)\n            console.log('|', cst.prettyToken(source));\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = cst.tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atMapIndent && bv.type !== 'block-seq') {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexports.Parser = Parser;\n", "'use strict';\n\nvar composer = require('./compose/composer.js');\nvar Document = require('./doc/Document.js');\nvar errors = require('./errors.js');\nvar log = require('./log.js');\nvar identity = require('./nodes/identity.js');\nvar lineCounter = require('./parse/line-counter.js');\nvar parser = require('./parse/parser.js');\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter$1 = options.lineCounter || (prettyErrors && new lineCounter.LineCounter()) || null;\n    return { lineCounter: lineCounter$1, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser$1 = new parser.Parser(lineCounter?.addNewLine);\n    const composer$1 = new composer.Composer(options);\n    const docs = Array.from(composer$1.compose(parser$1.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(errors.prettifyError(source, lineCounter));\n            doc.warnings.forEach(errors.prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer$1.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser$1 = new parser.Parser(lineCounter?.addNewLine);\n    const composer$1 = new composer.Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer$1.compose(parser$1.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new errors.YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(errors.prettifyError(source, lineCounter));\n        doc.warnings.forEach(errors.prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => log.warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (identity.isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document.Document(value, _replacer, options).toString(options);\n}\n\nexports.parse = parse;\nexports.parseAllDocuments = parseAllDocuments;\nexports.parseDocument = parseDocument;\nexports.stringify = stringify;\n", "'use strict';\n\nvar composer = require('./compose/composer.js');\nvar Document = require('./doc/Document.js');\nvar Schema = require('./schema/Schema.js');\nvar errors = require('./errors.js');\nvar Alias = require('./nodes/Alias.js');\nvar identity = require('./nodes/identity.js');\nvar Pair = require('./nodes/Pair.js');\nvar Scalar = require('./nodes/Scalar.js');\nvar YAMLMap = require('./nodes/YAMLMap.js');\nvar YAMLSeq = require('./nodes/YAMLSeq.js');\nvar cst = require('./parse/cst.js');\nvar lexer = require('./parse/lexer.js');\nvar lineCounter = require('./parse/line-counter.js');\nvar parser = require('./parse/parser.js');\nvar publicApi = require('./public-api.js');\nvar visit = require('./visit.js');\n\n\n\nexports.Composer = composer.Composer;\nexports.Document = Document.Document;\nexports.Schema = Schema.Schema;\nexports.YAMLError = errors.YAMLError;\nexports.YAMLParseError = errors.YAMLParseError;\nexports.YAMLWarning = errors.YAMLWarning;\nexports.Alias = Alias.Alias;\nexports.isAlias = identity.isAlias;\nexports.isCollection = identity.isCollection;\nexports.isDocument = identity.isDocument;\nexports.isMap = identity.isMap;\nexports.isNode = identity.isNode;\nexports.isPair = identity.isPair;\nexports.isScalar = identity.isScalar;\nexports.isSeq = identity.isSeq;\nexports.Pair = Pair.Pair;\nexports.Scalar = Scalar.Scalar;\nexports.YAMLMap = YAMLMap.YAMLMap;\nexports.YAMLSeq = YAMLSeq.YAMLSeq;\nexports.CST = cst;\nexports.Lexer = lexer.Lexer;\nexports.LineCounter = lineCounter.LineCounter;\nexports.Parser = parser.Parser;\nexports.parse = publicApi.parse;\nexports.parseAllDocuments = publicApi.parseAllDocuments;\nexports.parseDocument = publicApi.parseDocument;\nexports.stringify = publicApi.stringify;\nexports.visit = visit.visit;\nexports.visitAsync = visit.visitAsync;\n", "import { stringify } from 'yaml';\n\n// TODO: Decide where to place sites utils\nexport type GenerateWorkflowStepsArgs = GenerateDeploymentWorkflowYamlArgs & { nodeVersion: number };\n\nexport const generateWorkflowSteps = (args: GenerateWorkflowStepsArgs) => {\n  const steps = [\n    { name: 'Checkout', uses: 'actions/checkout@v3' },\n    { name: 'Install Node.js', uses: 'actions/setup-node@v3', with: { 'node-version': args.nodeVersion } },\n    { name: 'Install Fleek CLI', run: 'npm i -g @fleek-platform/cli' },\n  ];\n  const deployStep = { name: 'Build & deploy sites', run: 'fleek sites deploy' };\n\n  if (args.installCommand) {\n    steps.push({ name: 'Install Packages', run: args.installCommand });\n  }\n\n  if (args.fleekConfigPath) {\n    deployStep.run = `fleek sites deploy --config ${args.fleekConfigPath}`;\n  }\n\n  steps.push(deployStep);\n\n  return steps;\n};\n\nexport type GenerateDeploymentWorkflowYamlArgs = {\n  nodeVersion: number;\n  fleekConfigPath?: string;\n  installCommand?: string;\n};\n\nexport const generateDeploymentWorkflowYaml = (args: GenerateDeploymentWorkflowYamlArgs): string => {\n  const yamlLikeObject = {\n    name: 'Deploy site via Fleek',\n    on: 'push',\n    jobs: {\n      'deploy-to-fleek': {\n        'runs-on': 'ubuntu-latest',\n        env: {\n          FLEEK_TOKEN: '${{ secrets.FLEEK_TOKEN }}',\n          FLEEK_PROJECT_ID: '${{ secrets.FLEEK_PROJECT_ID }}',\n        },\n        steps: generateWorkflowSteps(args),\n      },\n    },\n  };\n\n  return stringify(yamlLikeObject);\n};\n", "/* eslint-disable no-process-env */\n\n// WARNING: Those values will be visible in public source code pushed to NPM\nexport const defined = {\n  SITE_SLUG_DOMAIN: process.env.SITE_SLUG_DOMAIN,\n};\n\n// The variables are parsed at build time, in order to ensure\n// that the override is intentional we should stick\n// with the application prefix to avoid unexpected behaviour for\n// polluted environments that might have similar env vars\n// e.g. FLEEK__UI_APP_URL\nconst override_env_var_prefix = '';\n\nexport const getDefined = (key: keyof typeof defined) => process.env[`${override_env_var_prefix}${key}`] || defined[key];\n", "type GetStoragePinCidByProjectIdAndPathKeyArgs = { projectId: string; path: string };\n\nexport const getStoragePinCidByProjectIdAndPathKey = ({ projectId, path }: GetStoragePinCidByProjectIdAndPathKeyArgs) =>\n  `StoragePinCidByProjectIdAndPath.${projectId}.${path}`;\n", "import { MissingExpectedDataError } from '@fleek-platform/errors';\n\nimport { getDefined } from './defined';\n\nexport const SITE_SLUG_DOMAIN = getDefined('SITE_SLUG_DOMAIN');\n\nexport const getFleekDefaultGatewayBySlug = ({ slug }: { slug: string }) => {\n  if (!slug) {\n    throw new MissingExpectedDataError();\n  }\n\n  return `https://${slug}.${SITE_SLUG_DOMAIN}`;\n};\n\nexport * from './cache';\n", "import { Command } from 'commander';\nimport cmdApplications from './commands/applications/index';\nimport cmdAuth from './commands/auth/index';\nimport cmdDomains from './commands/domains/index';\nimport cmdEns from './commands/ens/index';\nimport cmdFunctions from './commands/functions/index';\nimport cmdGateways from './commands/gateways/index';\nimport cmdIPFS from './commands/ipfs/index';\nimport cmdIPNS from './commands/ipns/index';\nimport cmdPAT from './commands/pat/index';\nimport cmdProjects from './commands/projects/index';\nimport cmdSites from './commands/sites/index';\nimport cmdStorage from './commands/storage/index';\n\nimport { Output } from './output/Output';\nimport { t } from './utils/translation';\n\nexport type { FleekConfig } from './utils/configuration/types';\n\nconst isDebugging = process.argv.includes('--debug');\nexport const output = new Output({\n  stream: process.stdout,\n  debug: isDebugging,\n});\n\ntype InitArgs = {\n  version: string;\n  parser: (program: Command) => void;\n};\n\nconst logo = `\n                                                \n       ad88  88                          88         \n      d8\"    88                          88         \n      88     88                          88         \n    MM88MMM  88   ,adPPYba,   ,adPPYba,  88   ,d8   \n      88     88  a8P_____88  a8P_____88  88 ,a8\"    \n      88     88  8PP\"\"\"\"\"\"\"  8PP\"\"\"\"\"\"\"  8888[      \n      88     88  \"8b,   ,aa  \"8b,   ,aa  88'\"Yba,   \n      88     88   '\"Ybbd8\"    '\"Ybbd8\"   88   'Y8a  \n\n    \u26A1 ${t('aboutFleek')} \u26A1\n`;\n\nexport const init = ({ version, parser }: InitArgs) => {\n  const program: Command = new Command()\n    .name('fleek')\n    .option('--debug', t('enableDebugMode'))\n    .action(() => program.outputHelp())\n    .version(version);\n\n  // TODO: The ascii logo should only be displayed\n  // on default command, or general help\n  // a minimal version can be used instead\n  program.addHelpText('beforeAll', logo).showHelpAfterError();\n\n  type CmdVersionArgs = typeof program;\n\n  const cmdVersion = (program: CmdVersionArgs) =>\n    program.command('version').action(() => {\n      output.raw(version);\n      output.printNewLine();\n    });\n\n  // Initialise commands\n  const commands = [\n    cmdAuth,\n    cmdApplications,\n    cmdDomains,\n    cmdEns,\n    cmdGateways,\n    cmdIPFS,\n    cmdIPNS,\n    cmdPAT,\n    cmdProjects,\n    cmdSites,\n    cmdStorage,\n    cmdFunctions,\n    cmdVersion,\n  ];\n\n  for (const cmd of commands) {\n    const subCmd = cmd(program);\n\n    // Attach common subcommands\n    if (subCmd) {\n      // TODO: Identify common subcommands\n      // refactor to handle them here\n      for (const opt of subCmd.commands) {\n        opt.addHelpCommand();\n      }\n    }\n  }\n\n  // Init parser (unawaited)\n  parser(program);\n\n  return program;\n};\n\n// eslint-disable-next-line fleek-custom/valid-argument-types\nexport const asyncParser = async (program: Command) => {\n  try {\n    await program.parseAsync(process.argv);\n\n    process.exit(0);\n  } catch (err) {\n    console.error((err as Error).message || err);\n\n    if ((err as Error).stack) {\n      console.error((err as Error).stack);\n    }\n\n    process.exit(1);\n  }\n};\n", "// Warning this file may be included from outside `/src`\n// For example, see `/bin/index.js`\nimport { readFileSync } from 'node:fs';\nimport path from 'node:path';\n\n// The build distribution target directory\nconst BUILD_DIST_PATHNAME = '/dist';\n\n// Fallback path is the `src` used in tests\nconst TEST_SRC_PATHNAME = '/src';\n\nconst leadingSlash = (str: string) => (str.startsWith('/') ? str : `/${str}`);\n\nconst resolvePath = (filename: string) => {\n  /* eslint-disable no-process-env */\n  return path.join(\n    __dirname.split(\n      process.env.VITEST ? TEST_SRC_PATHNAME : BUILD_DIST_PATHNAME,\n    )[0],\n    leadingSlash(filename),\n  );\n};\n\n// JSON files should live outside `src`\n// help prevent tsc from generating the directory `/dist/src`\n// as current setup prefers surface files from `/src` into `/dist`\nexport const loadJSONFromPackageRoot = (filename: string) => {\n  const resolved = resolvePath(filename);\n\n  return JSON.parse(readFileSync(resolved, 'utf-8'));\n};\n", "import { loadJSONFromPackageRoot } from './json';\nconst en: Record<string, string> = loadJSONFromPackageRoot('locales/en.json');\nimport chalk from 'chalk';\n\nimport type { En } from '../../locales/en';\n\ntype AnsiOptions = {\n  bold: boolean;\n};\n\ntype Values = Record<string, string | AnsiOptions> & {\n  options?: AnsiOptions;\n};\n\n// TODO: Refactor the color system to be stricter to a small amount of well defined colours and meanings. See `Output.ts`, `update-notifier.ts` and wherever its applied\n\n// Ansi escape code handlers\n// these are ansi level, so do not confuse with the\n// cli `Output.ts`\nconst _b = (text: string) => chalk.bold(text);\n\nconst _t = (key: string, values?: Values) => {\n  const txt = (en as Record<string, string>)[key];\n\n  if (!txt) {\n    console.error(`Missing ${key}`);\n\n    return `[ERROR: Missing ${key}]`;\n  }\n\n  const matches = [...txt.matchAll(/{(.*?)}/g)];\n\n  let transl = txt;\n\n  if (matches.length && values) {\n    transl = matches.reduce((acc, curr) => {\n      const txt = values[curr[1]];\n\n      // Skip non-matches\n      // e.g. the update-notifier uses the same placeholder\n      // convention as the localization as {placeholder}\n      if (typeof txt !== 'string') {\n        return acc;\n      }\n\n      const val = values?.options?.bold ? _b(txt) : txt;\n\n      return acc.replace(curr[0], val);\n    }, txt);\n  }\n\n  return transl;\n};\n\n// TODO: create util for plural e.g. project -> projects\nexport const t = (key: En, values?: Values) => _t(key, values);\n", "import { isHostnameValid } from '@fleek-platform/utils-validation';\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { promptUntil } from '../../utils/prompts/promptUntil';\nimport { t } from '../../utils/translation';\nimport { enterApplicationNameOrPrompt } from './prompts/enterApplicationNameOrPrompt';\nimport { getWhitelistDomainsOrPrompt } from './prompts/getWhitelistDomainsOrPrompt';\n\ntype CreateApplicationActionArgs = {\n  name?: string;\n  whitelistDomains?: string[];\n};\n\ntype Whitelist = string[];\n\nexport const whitelistArgParser = (listArg: string[] | undefined) => {\n  try {\n    if (!Array.isArray(listArg)) {\n      // eslint-disable-next-line fleek-custom/no-default-error\n      throw new Error(t('unexpectedArg'));\n    }\n\n    return listArg[0].split(',').reduce((acc: string[], curr: string) => {\n      acc.push(curr.trim());\n      return acc;\n    }, [] as Whitelist);\n  } catch (err) {\n    if (err instanceof Error) {\n      output.error(err.message);\n\n      return;\n    }\n\n    // eslint-disable-next-line fleek-custom/no-default-error\n    throw Error(t('unexpectedError'));\n  }\n};\n\nexport const createApplicationAction: SdkGuardedFunction<\n  CreateApplicationActionArgs\n> = async ({ sdk, args }) => {\n  const isNonInteractive = !!Object.keys(args).length;\n\n  const name = isNonInteractive\n    ? args.name\n    : await enterApplicationNameOrPrompt({ name: args.name });\n\n  let whitelistDomains: string[] | undefined;\n\n  if (isNonInteractive) {\n    whitelistDomains = whitelistArgParser(args.whitelistDomains);\n  } else {\n    const handler = async () =>\n      getWhitelistDomainsOrPrompt({\n        whitelistDomains: args.whitelistDomains,\n      });\n\n    const validator = async (data: string[]) => {\n      let hasInvalidHostname = false;\n\n      for (const hostname of data) {\n        if (!isHostnameValid({ hostname })) {\n          hasInvalidHostname = true;\n          output.warn(t('invalidHostname', { hostname }));\n        }\n      }\n\n      // If error messages displayed\n      // show a new line to make it easier to read\n      if (hasInvalidHostname) {\n        output.printNewLine();\n      }\n\n      return !hasInvalidHostname;\n    };\n\n    whitelistDomains = await promptUntil({\n      handler,\n      validator,\n    });\n  }\n\n  if (!name || !whitelistDomains) {\n    output.error(t('unexpectedError'));\n\n    return;\n  }\n\n  // Warning: The whiteLabelDomains is deprecated and due to\n  // retroactive support requirements, the SDK applications create\n  // copies the data over from the new field to old. So, its not\n  // required to pass whiteLabelDomains here.\n  const { clientId } = await sdk\n    .applications()\n    .create({ name, whitelistDomains });\n\n  output.printNewLine();\n  output.success(t('appCreateSuccessClientId', { clientId }));\n  output.printNewLine();\n};\n\nexport const createApplicationActionHandler = withGuards(\n  createApplicationAction,\n  {\n    scopes: { authenticated: true, project: true, site: false },\n  },\n);\n", "import { MissingExpectedDataError } from '@fleek-platform/errors';\n\nimport { output } from '../cli';\nimport { loginActionHandler } from '../commands/auth/login';\nimport { config } from '../config';\nimport { getDefined } from '../defined';\nimport { t } from '../utils/translation';\n\nexport const loginGuard = async () => {\n  const uiAppUrl = getDefined('UI__APP_URL');\n  const authApiUrl = getDefined('SDK__GRAPHQL_API_URL');\n\n  if (!uiAppUrl || !authApiUrl) {\n    throw new MissingExpectedDataError();\n  }\n\n  const accessToken = config.personalAccessToken.get();\n\n  if (accessToken) {\n    return;\n  }\n\n  output.warn(t('authReqStartLogginFlow'));\n  output.printNewLine();\n\n  await loginActionHandler({\n    uiAppUrl,\n    authApiUrl,\n  });\n};\n", "import { createClient } from '@fleek-platform/sdk/node';\n\nimport { output } from '../../cli';\nimport { config } from '../../config';\nimport { generateVerificationSessionId } from '../../utils/token/generateVerificationSessionId';\nimport { showVerificationSessionLink } from '../../utils/token/showVerificationSessionLink';\nimport { waitForPersonalAccessTokenFromVerificationSession } from '../../utils/token/waitForPersonalAccessTokenFromVerificationSession';\nimport { t } from '../../utils/translation';\n\ntype LoginActionHandlerArgs = {\n  uiAppUrl: string;\n  authApiUrl: string;\n};\n\nexport const loginActionHandler = async ({\n  uiAppUrl,\n  authApiUrl,\n}: LoginActionHandlerArgs) => {\n  const verificationSessionId = generateVerificationSessionId();\n\n  showVerificationSessionLink({ output, uiAppUrl, verificationSessionId });\n\n  const client = createClient({ url: authApiUrl });\n  const personalAccessToken =\n    await waitForPersonalAccessTokenFromVerificationSession({\n      verificationSessionId,\n      client,\n    });\n\n  if (!personalAccessToken) {\n    output.error(t('timeoutPATfetch'));\n    output.printNewLine();\n\n    return;\n  }\n\n  config.personalAccessToken.set(personalAccessToken);\n  config.projectId.clear();\n  output.success(t('logged', { status: t('loggedInTo') }));\n  output.printNewLine();\n};\n", "import Conf from 'conf';\n\nimport { secrets } from './secrets';\n\ntype ConfSchema = {\n  personalAccessToken: string | undefined;\n  projectId: string | undefined;\n};\n\nconst schema = {\n  personalAccessToken: { type: 'string' },\n  projectId: { type: 'string' },\n} as const;\n\nconst conf = new Conf<ConfSchema>({\n  schema,\n  projectName: 'fleek',\n  configName: 'global',\n});\n\nexport const config = {\n  personalAccessToken: {\n    get: () => secrets.FLEEK_TOKEN ?? conf.get('personalAccessToken'),\n    set: (value: string) => conf.set('personalAccessToken', value),\n    clear: () => conf.delete('personalAccessToken'),\n  },\n  projectId: {\n    get: () => secrets.FLEEK_PROJECT_ID ?? conf.get('projectId'),\n    set: (value: string) => conf.set('projectId', value),\n    clear: () => conf.delete('projectId'),\n  },\n  clear: () => conf.clear(),\n};\n", "/* eslint-disable no-process-env */\n\ntype Secrets = {\n  FLEEK_TOKEN?: string;\n  FLEEK_PROJECT_ID?: string;\n};\n\nexport const secrets: Secrets = {\n  FLEEK_TOKEN: process.env.FLEEK_TOKEN,\n  FLEEK_PROJECT_ID: process.env.FLEEK_PROJECT_ID,\n};\n", "import { randomBytes } from 'node:crypto';\n\nexport const generateVerificationSessionId = () =>\n  randomBytes(16).toString('hex');\n", "import type { Output } from '../../output/Output';\n\nimport { t } from '../../utils/translation';\n\ntype ShowVerificationSessionLinkArgs = {\n  output: Output;\n  uiAppUrl: string;\n  verificationSessionId: string;\n};\n\nexport const getVerificationSessionLink = ({\n  verificationSessionId,\n  uiAppUrl,\n}: { verificationSessionId: string; uiAppUrl: string }) =>\n  `${uiAppUrl}/login/${verificationSessionId}`;\n\nexport const showVerificationSessionLink = ({\n  output,\n  uiAppUrl,\n  verificationSessionId,\n}: ShowVerificationSessionLinkArgs) => {\n  const url = getVerificationSessionLink({\n    uiAppUrl,\n    verificationSessionId,\n  });\n\n  output.spinner(url);\n  output.chore(t('followLinkToLogin'));\n  output.link(url);\n  output.printNewLine();\n};\n", "export type CheckPeriodicallyUntilArgs<T> = {\n  conditionFn: () => Promise<T>;\n  period: number;\n  tries: number;\n};\n\nexport const checkPeriodicallyUntil = async <T>({\n  conditionFn,\n  period,\n  tries,\n}: CheckPeriodicallyUntilArgs<T>): Promise<T> => {\n  const result = await conditionFn();\n\n  if (result || tries < 1) {\n    return result;\n  }\n\n  return new Promise((resolve) => setTimeout(resolve, period)).then(() =>\n    checkPeriodicallyUntil({ conditionFn, period, tries: tries - 1 }),\n  );\n};\n", "import type { Client } from '@fleek-platform/sdk/node';\n\nimport { checkPeriodicallyUntil } from '../checkPeriodicallyUntil';\n\ntype WaitForPersonalAccessTokenFromVerificationSessionArgs = {\n  verificationSessionId: string;\n  client: Client;\n  name?: string;\n};\n\nexport const waitForPersonalAccessTokenFromVerificationSession = async ({\n  verificationSessionId,\n  client,\n  name,\n}: WaitForPersonalAccessTokenFromVerificationSessionArgs): Promise<\n  string | null\n> =>\n  checkPeriodicallyUntil({\n    conditionFn: async () => {\n      const response = await client\n        .mutation({\n          createPersonalAccessTokenFromVerificationSession: {\n            __args: {\n              where: {\n                id: verificationSessionId,\n              },\n              data: {\n                name,\n              },\n            },\n          },\n        })\n        .catch(() => null);\n\n      return response?.createPersonalAccessTokenFromVerificationSession ?? null;\n    },\n    period: 2_000,\n    tries: 500,\n  });\n", "/* eslint-disable no-process-env */\n\nexport type Defined = {\n  UI__APP_URL?: string;\n  SDK__GRAPHQL_API_URL?: string;\n  SDK__AUTH_APPS_URL?: string;\n  SDK__IPFS__STORAGE_API_URL?: string;\n  SDK__UPLOAD_PROXY_API_URL?: string;\n};\n\n// WARNING: Those values will be visible in public source code pushed to NPM\nexport const defined: Defined = {\n  UI__APP_URL: process.env.UI__APP_URL,\n  SDK__GRAPHQL_API_URL: process.env.SDK__GRAPHQL_API_URL,\n  SDK__AUTH_APPS_URL: process.env.SDK__AUTH_APPS_URL,\n  SDK__IPFS__STORAGE_API_URL: process.env.SDK__IPFS__STORAGE_API_URL,\n  SDK__UPLOAD_PROXY_API_URL: process.env.SDK__UPLOAD_PROXY_API_URL,\n};\n\n// The variables are parsed at build time, in order to ensure\n// that the override is intentional we should stick\n// with the application prefix to avoid unexpected behaviour for\n// polluted environments that might have similar env vars\n// e.g. FLEEK__UI_APP_URL\nconst override_env_var_prefix = '';\n\nexport const getDefined = (key: keyof typeof defined) =>\n  process.env[`${override_env_var_prefix}${key}`] || defined[key];\n", "import { FleekSdk, PersonalAccessTokenService } from '@fleek-platform/sdk/node';\nimport { getDefined } from '../defined';\n\nimport { output } from '../cli';\nimport { config } from '../config';\nimport { t } from '../utils/translation';\nimport { loginGuard } from './loginGuard';\n\nimport type { Action, SdkGuardedFunction } from './types';\n\ntype SdkGuardArgs<T> = SdkGuardedFunction<T>;\n\nexport const getSdkClient = () => {\n  const personalAccessToken = config.personalAccessToken.get();\n  const projectId = config.projectId.get();\n\n  if (!personalAccessToken) {\n    output.error(t('missingPersonalAccessToken'));\n    process.exit(1);\n  }\n\n  const accessTokenService = new PersonalAccessTokenService({\n    projectId,\n    personalAccessToken,\n  });\n  const sdk = new FleekSdk({\n    accessTokenService,\n    graphqlServiceApiUrl: getDefined('SDK__GRAPHQL_API_URL'),\n    ipfsStorageApiUrl: getDefined('SDK__IPFS__STORAGE_API_URL'),\n    uploadProxyApiUrl: getDefined('SDK__UPLOAD_PROXY_API_URL'),\n  });\n\n  return sdk;\n};\n\nexport const sdkGuard = <T>(func: SdkGuardArgs<T>): Action<T> => {\n  return async (args: T = {} as T) => {\n    await loginGuard();\n\n    const sdk = getSdkClient();\n\n    if (!sdk) {\n      output.error(t('failedAuthentication'));\n      process.exit(1);\n    }\n\n    try {\n      await func({ sdk, args });\n    } catch (error) {\n      if (error instanceof Error) {\n        output.error(error?.toString());\n        process.exit(1);\n      }\n\n      output.error(`Unknown Error: ${JSON.stringify(error)}`);\n      process.exit(1);\n    }\n  };\n};\n", "import { ProjectInvalidNameError } from '@fleek-platform/errors';\nimport { isProjectNameValid } from '@fleek-platform/utils-validation';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetProjectNameOrPromptArgs = {\n  name?: string;\n};\n\nexport const getProjectNameOrPrompt = async ({\n  name,\n}: GetProjectNameOrPromptArgs) => {\n  if (name && isProjectNameValid({ name })) {\n    return name;\n  }\n\n  if (name && !isProjectNameValid({ name })) {\n    throw new ProjectInvalidNameError({ name });\n  }\n\n  return textPrompt({\n    message: `${t('enterProjectName')}:`,\n    validate: (partialName) =>\n      isProjectNameValid({ name: partialName }) ||\n      t('mustHaveXandYValidChars', { min: '3', max: '30' }),\n  });\n};\n", "// eslint-disable-next-line no-restricted-imports\nimport prompts, { type PromptObject } from 'prompts';\n\nexport type PromptArgs = Omit<PromptObject, 'name'> & {\n  onCancel?: () => void;\n};\n\nexport const prompt = async <T = string>({\n  onCancel,\n  ...args\n}: PromptArgs): Promise<T> => {\n  const { value }: { value?: T } = await prompts(\n    {\n      ...args,\n      name: 'value',\n    },\n    {\n      onCancel: () => {\n        onCancel?.();\n        process.exit(0);\n      },\n    },\n  );\n\n  return value as T;\n};\n", "import { type PromptArgs, prompt } from './prompt';\n\ntype TextPromptArgs = Omit<PromptArgs, 'type'> & {\n  initial?: string;\n};\n\nexport const textPrompt = async ({\n  message,\n  initial,\n  validate,\n  onCancel,\n}: TextPromptArgs): Promise<string> => {\n  return prompt<string>({ type: 'text', message, initial, validate, onCancel });\n};\n", "import { output } from '../../cli';\nimport { config } from '../../config';\nimport { sdkGuard } from '../../guards/sdkGuard';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { t } from '../../utils/translation';\nimport { getProjectNameOrPrompt } from './prompts/getProjectNameOrPrompt';\n\ntype CreateProjectActionArgs = {\n  name?: string;\n};\n\nexport const createProjectAction: SdkGuardedFunction<\n  CreateProjectActionArgs\n> = async ({ sdk, args }) => {\n  const name = await getProjectNameOrPrompt({ name: args.name });\n\n  output.spinner(`${t('projectCreating')}...`);\n\n  const response = await sdk.projects().create({ name });\n\n  config.projectId.set(response.id);\n\n  output.printNewLine();\n  output.success(\n    t('projectCreatedAndSwitched', { name, projectId: response.id }),\n  );\n  output.printNewLine();\n};\n\nexport const createProjectActionHandler = sdkGuard(createProjectAction);\n", "import { ProjectsNotFoundError } from '@fleek-platform/errors';\nimport type { FleekSdk, Project } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetProjectOrPromptArgs = {\n  sdk: FleekSdk;\n  id?: string;\n};\n\nexport const getProjectOrPrompt = async ({\n  sdk,\n  id,\n}: GetProjectOrPromptArgs): Promise<Project | undefined> => {\n  if (id) {\n    return await sdk.projects().get({ id });\n  }\n\n  const projects = await sdk.projects().list();\n\n  if (projects.length === 0) {\n    throw new ProjectsNotFoundError();\n  }\n\n  const projectId = await selectPrompt({\n    message: `${t('commonSelectXFromList', { subject: t('aProject') })}:`,\n    choices: projects.map((project) => ({\n      title: project.name,\n      value: project.id,\n    })),\n  });\n\n  const matchProject = projects.find((project) => project.id === projectId);\n\n  if (!matchProject) return;\n\n  return matchProject;\n};\n", "import ansiEscapes from 'ansi-escapes';\n\nexport const eraseLines = (numberOfLines: number) => {\n  return ansiEscapes.eraseLines(numberOfLines);\n};\n", "import { eraseLines } from '../output/utils/eraseLines';\nimport { type PromptArgs, prompt } from './prompt';\n\ntype Choice<T> = {\n  title: string;\n  value?: T;\n  disabled?: boolean | undefined;\n  selected?: boolean | undefined;\n  description?: string | undefined;\n};\n\ntype SelectPromptArgs<T> = Omit<PromptArgs, 'type'> & {\n  choices: Choice<T>[];\n  initial?: number;\n};\n\nexport const selectPrompt = async <T>({\n  message,\n  choices = [],\n  initial,\n  onCancel,\n}: SelectPromptArgs<T>): Promise<T> => {\n  while (true) {\n    const selectedValue = await prompt({\n      type: 'autocomplete',\n      message,\n      choices,\n      initial,\n      onCancel,\n    });\n\n    if (choices.some((choice) => choice.value === selectedValue)) {\n      return selectedValue as T;\n    }\n\n    process.stdout.write(eraseLines(2));\n  }\n};\n", "import { output } from '../../cli';\nimport { config } from '../../config';\nimport { sdkGuard } from '../../guards/sdkGuard';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { t } from '../../utils/translation';\nimport { createProjectActionHandler } from './create';\nimport { getProjectOrPrompt } from './prompts/getProjectOrPrompt';\n\ntype SwitchProjectActionArgs = {\n  id?: string;\n};\n\nexport const switchProjectAction: SdkGuardedFunction<\n  SwitchProjectActionArgs\n> = async ({ sdk, args }) => {\n  const project = await getProjectOrPrompt({ sdk, id: args.id }).catch(\n    () => null,\n  );\n\n  if (project === null) {\n    output.log(t('projectsSwitchNeedCreateFirst'));\n    await createProjectActionHandler();\n\n    return;\n  }\n\n  if (!project) {\n    output.log(t('noProjectIdFoundUnexpectedly'));\n\n    return;\n  }\n\n  config.projectId.set(project.id);\n\n  output.printNewLine();\n  output.success(t('projectsSwitchSuccess', { name: project.name }));\n  output.printNewLine();\n};\n\nexport const switchProjectActionHandler = sdkGuard(switchProjectAction);\n", "import { output } from '../cli';\nimport { switchProjectAction } from '../commands/projects/switch';\nimport { config } from '../config';\nimport { t } from '../utils/translation';\nimport { sdkGuard } from './sdkGuard';\n\nexport const projectGuard = async () => {\n  const projectId = config.projectId.get();\n\n  if (projectId) {\n    return;\n  }\n\n  output.warn(t('projectSelectRequiredStarPrjFlow'));\n  output.printNewLine();\n\n  await sdkGuard(switchProjectAction)();\n};\n", "import { type PromptArgs, prompt } from './prompt';\n\ntype ConfirmPromptArgs = Omit<PromptArgs, 'type'> & { initial: boolean };\n\nexport const confirmPrompt = async ({\n  message,\n  initial,\n  onCancel,\n}: ConfirmPromptArgs): Promise<boolean> => {\n  return prompt<boolean>({\n    type: 'confirm',\n    message,\n    initial,\n    onCancel,\n  });\n};\n", "import { confirmPrompt } from '../../../prompts/confirmPrompt';\nimport { t } from '../../../utils/translation';\n\nexport const confirmUseExistingSitePrompt = async (): Promise<boolean> =>\n  confirmPrompt({\n    message: t('foundSiteLinkToExisting'),\n    initial: true,\n  });\n", "import { SitesNotFoundError } from '@fleek-platform/errors';\nimport type { FleekSdk, Site } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetSiteOrPromptArgs = {\n  id?: string;\n  slug?: string;\n  sdk: FleekSdk;\n};\n\nexport const getSiteOrPrompt = async ({\n  id,\n  slug,\n  sdk,\n}: GetSiteOrPromptArgs): Promise<Site | undefined> => {\n  if (id) {\n    return sdk.sites().get({ id });\n  }\n\n  if (slug) {\n    return sdk.sites().getBySlug({ slug });\n  }\n\n  const sites = await sdk.sites().list();\n\n  if (!sites.length) {\n    throw new SitesNotFoundError();\n  }\n\n  const selectedSiteId = await selectPrompt({\n    message: t('commonSelectXFromList', { subject: t('site') }),\n    choices: sites.map((site) => ({ title: site.name, value: site.id })),\n  });\n\n  const matchSite = sites.find((site) => site.id === selectedSiteId);\n\n  if (!matchSite) return;\n\n  return matchSite;\n};\n", "import { isSiteNameValid } from '@fleek-platform/utils-validation';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\nexport const enterSiteNamePrompt = async (): Promise<string> =>\n  textPrompt({\n    message: `${t('typeNewSiteName')}:`,\n    validate: (partialName: string) =>\n      isSiteNameValid({ name: partialName }) || t('invalidNameUseAlphDashes'),\n  });\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { output } from '../../../cli';\nimport { t } from '../../../utils/translation';\nimport { enterSiteNamePrompt } from '../prompts/enterSiteNamePrompt';\n\ntype CreateSiteArgs = { sdk: FleekSdk };\n\nexport const createSite = async ({ sdk }: CreateSiteArgs) => {\n  const name = await enterSiteNamePrompt();\n\n  output.spinner(`${t('creatingSite')}...`);\n  const site = await sdk.sites().create({ name });\n  output.printNewLine();\n  output.success(\n    t('commonNameCreateSuccess', { name: `${t('site')} \"${name}\"` }),\n  );\n  output.printNewLine();\n\n  return site;\n};\n", "import type { FleekSdk, Site } from '@fleek-platform/sdk/node';\n\nimport { output } from '../../../cli';\nimport { t } from '../../../utils/translation';\nimport { confirmUseExistingSitePrompt } from '../prompts/confirmUseExistingSitePrompt';\nimport { getSiteOrPrompt } from '../prompts/getSiteOrPrompt';\nimport { createSite } from './createSite';\n\ntype ChooseOrCreateSiteArgs = { sdk: FleekSdk };\n\nexport const chooseOrCreateSite = async ({\n  sdk,\n}: ChooseOrCreateSiteArgs): Promise<Site | undefined> => {\n  const sites = await sdk.sites().list();\n\n  if (!sites.length) {\n    output.warn(t('noSitesFound'));\n\n    return createSite({ sdk });\n  }\n\n  const useExistingSite = await confirmUseExistingSitePrompt();\n\n  if (useExistingSite) {\n    const site = getSiteOrPrompt({ sdk });\n\n    if (!site) {\n      output.error(t('expectedNotFoundGeneric', { name: 'site' }));\n\n      return;\n    }\n\n    return site;\n  }\n\n  return createSite({ sdk });\n};\n", "import { promises as fs } from 'node:fs';\nimport path from 'node:path';\n\nimport {\n  FLEEK_CONFIG_TMPL_JSON_PLACEHOLDER,\n  getConfigFileByTypeName,\n  getConfigTemplateByTypeName,\n} from '../configuration';\n\nimport { type FleekRootConfig, FleekSiteConfigFormats } from './types';\n\nimport {\n  ExpectedOneOfValuesError,\n  InvalidJSONFormat,\n} from '@fleek-platform/errors';\nimport { isValidFleekConfigFormat } from '../formats';\n\nexport type SaveConfigurationArgs = {\n  config: FleekRootConfig;\n  format: FleekSiteConfigFormats;\n};\n\ntype ConfigFilePath = string;\n\nconst DEV_SRC_UTILS_PATH = '/src/utils';\nconst basePath = path.dirname(__filename).includes(DEV_SRC_UTILS_PATH)\n  ? '../..'\n  : '';\n\nconst filePathForTypescriptConfig = path.resolve(\n  path.dirname(__filename),\n  basePath,\n  'templates/sites/config',\n  getConfigTemplateByTypeName('Typescript'),\n);\n\nconst filePathForJavascriptConfig = path.resolve(\n  path.dirname(__filename),\n  basePath,\n  'templates/sites/config',\n  getConfigTemplateByTypeName('Javascript'),\n);\n\nexport const saveConfiguration = async ({\n  config,\n  format,\n}: SaveConfigurationArgs): Promise<ConfigFilePath | undefined> => {\n  const formattedOutput = (() => {\n    try {\n      if (!Array.isArray(config.sites) || !config.sites[0].slug) throw Error();\n      return JSON.stringify(config, undefined, 2);\n    } catch (err) {\n      throw new InvalidJSONFormat();\n    }\n  })();\n\n  if (!isValidFleekConfigFormat(format)) {\n    throw new ExpectedOneOfValuesError({\n      expectedValues: Object.values(FleekSiteConfigFormats),\n      receivedValue: format,\n    });\n  }\n\n  let content: string;\n  let configFile: ConfigFilePath;\n\n  switch (format) {\n    case FleekSiteConfigFormats.Typescript: {\n      const contentForTypescriptConfig = (\n        await fs.readFile(filePathForTypescriptConfig)\n      ).toString();\n      content = contentForTypescriptConfig.replace(\n        FLEEK_CONFIG_TMPL_JSON_PLACEHOLDER,\n        formattedOutput,\n      );\n      configFile = getConfigFileByTypeName('Typescript');\n      break;\n    }\n    case FleekSiteConfigFormats.Javascript: {\n      const contentForJavascriptConfig = (\n        await fs.readFile(filePathForJavascriptConfig)\n      ).toString();\n      content = contentForJavascriptConfig.replace(\n        FLEEK_CONFIG_TMPL_JSON_PLACEHOLDER,\n        formattedOutput,\n      );\n      configFile = getConfigFileByTypeName('Javascript');\n      break;\n    }\n    case FleekSiteConfigFormats.JSON: {\n      content = formattedOutput;\n      configFile = getConfigFileByTypeName('JSON');\n      break;\n    }\n  }\n\n  try {\n    await fs.writeFile(configFile, content);\n    return configFile;\n  } catch (_err) {\n    // TODO: write to system log file, see PLAT-1097\n  }\n};\n", "import { constants, promises as fs } from 'node:fs';\nimport { join as joinPath } from 'node:path';\nimport { FleekConfigMissingFileError } from '@fleek-platform/errors';\nimport {\n  type FleekSiteConfigFormatValue,\n  FleekSiteConfigFormats,\n} from './types';\n\ntype GetConfigurationPathArgs = {\n  predefinedConfigPath?: string;\n};\n\nexport const getConfigurationPath = async ({\n  predefinedConfigPath,\n}: GetConfigurationPathArgs) => {\n  if (predefinedConfigPath) {\n    const absolutePath = joinPath(process.cwd(), predefinedConfigPath);\n\n    return fs\n      .access(absolutePath, constants.R_OK)\n      .then(() => absolutePath)\n      .catch(() =>\n        Promise.reject(\n          new FleekConfigMissingFileError({ configPath: predefinedConfigPath }),\n        ),\n      );\n  }\n\n  // Sorted by priority, we return only the first match\n  const supposedFilenames = [\n    'fleek.config.ts',\n    'fleek.config.js',\n    'fleek.config.json',\n  ];\n\n  for (const supposedFilename of supposedFilenames) {\n    const absolutePath = joinPath(process.cwd(), supposedFilename);\n\n    const isSupposedFileAccessible = await fs\n      .access(absolutePath, constants.R_OK)\n      .then(() => true)\n      .catch(() => false);\n\n    if (isSupposedFileAccessible) {\n      return absolutePath;\n    }\n  }\n\n  throw new FleekConfigMissingFileError({});\n};\n\nconst FLEEK_CONFIG_BASENAME = 'fleek.config';\nexport const FLEEK_CONFIG_TMPL_JSON_PLACEHOLDER = '$jsonContent';\n\nexport const getConfigFileByTypeName = (\n  name: keyof typeof FleekSiteConfigFormats,\n) => `${FLEEK_CONFIG_BASENAME}.${FleekSiteConfigFormats[name]}`;\n\nexport const getConfigFileByTypeValue = (val: FleekSiteConfigFormatValue) =>\n  `${FLEEK_CONFIG_BASENAME}.${val}`;\n\nexport const getConfigTemplateByTypeName = (\n  name: keyof typeof FleekSiteConfigFormats,\n) => `${getConfigFileByTypeName(name)}.tmpl`;\n", "export type FleekSiteConfig = {\n  /** An unique sequence of random words that identifies the site. */\n  slug: string;\n  /** A directory where the site's data will be uploaded from. */\n  distDir: string;\n  /** An optional command that will be run before uploading site's data. */\n  buildCommand?: string;\n};\n\nexport type FleekRootConfig = {\n  /** An array may contain one site's configuration at most. */\n  sites: FleekSiteConfig[];\n};\n\nexport type FleekConfig =\n  | FleekRootConfig\n  | (() => FleekRootConfig)\n  | (() => Promise<FleekRootConfig>)\n  | Promise<FleekRootConfig>;\n\nexport enum FleekSiteConfigFormats {\n  JSON = 'json',\n  Typescript = 'ts',\n  Javascript = 'js',\n}\n\nexport type FleekSiteConfigFormatValue =\n  FleekSiteConfigFormats[keyof FleekSiteConfigFormats];\n", "import { FleekConfigInvalidContentError } from '@fleek-platform/errors';\nimport { validateConfigurationWithResult } from '@fleek-platform/utils-validation';\n\nimport { readConfigurationFile } from './readConfigurationFile';\nimport type { FleekRootConfig } from './types';\n\ntype LoadConfigurationArgs = {\n  predefinedConfigPath?: string;\n};\n\nexport const loadConfiguration = async ({\n  predefinedConfigPath,\n}: LoadConfigurationArgs): Promise<FleekRootConfig> => {\n  const { configuration, configPath } = await readConfigurationFile({\n    predefinedConfigPath,\n  });\n\n  return validateConfigurationWithResult({ configuration }).catch(\n    (error: Error) =>\n      Promise.reject(\n        new FleekConfigInvalidContentError({\n          configPath,\n          validationResult: error.message,\n        }),\n      ),\n  );\n};\n", "import { createRequire } from 'node:module';\n\nimport { promises as fs } from 'node:fs';\nimport { extname as getExtension } from 'node:path';\nimport {\n  FleekConfigInvalidContentError,\n  FleekConfigMissingFileError,\n} from '@fleek-platform/errors';\nimport { register as registerTSNodeCompiler } from 'ts-node';\n\nimport { t } from '../../utils/translation';\nimport { getConfigurationPath } from './getConfiguration';\n\ntype ReadConfigurationFileArgs = {\n  predefinedConfigPath?: string;\n};\n\nexport const readConfigurationFile = async ({\n  predefinedConfigPath,\n}: ReadConfigurationFileArgs): Promise<{\n  configuration: object;\n  configPath: string;\n}> => {\n  const configPath = await getConfigurationPath({ predefinedConfigPath });\n\n  const fileExtension = getExtension(configPath);\n\n  if (fileExtension === '.json') {\n    const content = await fs\n      .readFile(configPath, 'utf8')\n      .catch(() => Promise.reject(new FleekConfigMissingFileError({})));\n\n    try {\n      return { configuration: JSON.parse(content), configPath };\n    } catch (e) {\n      throw new FleekConfigInvalidContentError({\n        configPath,\n        validationResult: t('jsonNotValid'),\n      });\n    }\n  }\n\n  if (fileExtension === '.ts') {\n    registerTSNodeCompiler({ skipProject: true });\n  }\n\n  if (['.js', '.ts'].includes(fileExtension)) {\n    try {\n      createRequire(configPath);\n    } catch (e) {\n      throw new FleekConfigMissingFileError({ configPath });\n    }\n\n    try {\n      // TODO: The `import` throws `UNKNOWN_FILE_EXTENSION`\n      // Tried `ts-node/register` without success\n      // Ideally `ts-node` should be removed\n      // use `bun` or the new `deno` v2\n      // Obs: For past months `bun` has been impeccable\n      const loadedConfigModule = await (async () => {\n        if (fileExtension.toLowerCase() === '.ts') {\n          const x = await import('importx');\n          const { default: loadedConfigModule } = await x.import(\n            configPath,\n            __filename,\n          );\n          return loadedConfigModule;\n        }\n        return import(configPath);\n      })();\n\n      if (typeof loadedConfigModule.default === 'function') {\n        return {\n          configuration: await loadedConfigModule.default(),\n          configPath,\n        };\n      }\n\n      if (typeof loadedConfigModule.default !== 'undefined') {\n        return { configuration: await loadedConfigModule.default, configPath };\n      }\n\n      if (typeof loadedConfigModule === 'function') {\n        return { configuration: await loadedConfigModule(), configPath };\n      }\n\n      if (typeof loadedConfigModule !== 'undefined') {\n        return { configuration: await loadedConfigModule, configPath };\n      }\n    } catch (e) {\n      throw new FleekConfigInvalidContentError({\n        configPath,\n        validationResult: e instanceof Error ? e.message : '',\n      });\n    }\n  }\n\n  throw new FleekConfigInvalidContentError({\n    configPath,\n    validationResult: t('unknownFileExt'),\n  });\n};\n", "import { FleekSiteConfigFormats } from './configuration';\n\nexport const isValidFleekConfigFormat = (format: FleekSiteConfigFormats) =>\n  Object.values(FleekSiteConfigFormats).includes(format);\n", "import { promises as fsPromises, realpathSync } from 'node:fs';\n\ninterface FsError extends Error {\n  code?: string;\n}\n\nexport const fileExists = async (path: string) => {\n  try {\n    const stat = await fsPromises.stat(path);\n\n    return stat.isFile();\n  } catch (e) {\n    const err = e as FsError;\n    if (err.code === 'ENOENT') {\n      return false;\n    }\n\n    throw e;\n  }\n};\n\nexport const isGlobalNodeModuleInstall = () => {\n  const GLOBAL_EXEC_PATH_INCLUDES =\n    'node_modules/@fleek-platform/cli/bin/index.js';\n  const executedScript = realpathSync(process.argv[1]);\n  return executedScript.includes(GLOBAL_EXEC_PATH_INCLUDES);\n};\n", "import { join as joinPath } from 'node:path';\n\nimport { output } from '../../../cli';\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\nimport { directoryExists } from '../utils/directoryExists';\n\ntype EnterDirectoryPathPromptArgs = { message: string };\n\nexport const enterDirectoryPathPrompt = async ({\n  message,\n}: EnterDirectoryPathPromptArgs): Promise<string> => {\n  const path = await textPrompt({\n    message,\n    validate: async (path) => {\n      if (!path) {\n        return t('specifyValidDir');\n      }\n\n      const isDirectory = await directoryExists(joinPath(process.cwd(), path));\n\n      return isDirectory ? true : t('specifyValidDir');\n    },\n    onCancel: () => {\n      output.warn(t('specifyValidDir'));\n      output.error(t('exiting'));\n    },\n  });\n\n  return path;\n};\n", "import { promises as fs } from 'node:fs';\n\ninterface FsError extends Error {\n  code?: string;\n}\n\nexport const directoryExists = async (path: string) => {\n  try {\n    const stat = await fs.stat(path);\n\n    return stat.isDirectory();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } catch (e) {\n    const err = e as FsError;\n    if (err.code === 'ENOENT') {\n      return false;\n    }\n\n    throw e;\n  }\n};\n", "import { selectPrompt } from '../../../prompts/selectPrompt';\nimport { getConfigFileByTypeValue } from '../../../utils/configuration';\nimport { t } from '../../../utils/translation';\n\nimport { FleekSiteConfigFormats } from '../../../utils/configuration/types';\n\nconst choices = Object.keys(FleekSiteConfigFormats).map((name) => {\n  const value =\n    FleekSiteConfigFormats[name as keyof typeof FleekSiteConfigFormats];\n\n  const configFile = getConfigFileByTypeValue(value);\n\n  return {\n    title: `${name} (${configFile})`,\n    value,\n  };\n});\n\nexport const selectConfigurationFormatPrompt = async () =>\n  selectPrompt<(typeof choices)[number]['value']>({\n    message: `${t('selectFormatForSiteConf')}:`,\n    choices,\n  });\n", "import { confirmPrompt } from '../../../prompts/confirmPrompt';\nimport { t } from '../../../utils/translation';\n\nexport const confirmIncludeBuildCommandPrompt = async (): Promise<boolean> =>\n  confirmPrompt({\n    message: t('includeOptBuildCmd', { build: 'build' }),\n    initial: true,\n  });\n", "import { promises as fs } from 'node:fs';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\n\nexport const enterBuildCommandPrompt = async (): Promise<string> =>\n  textPrompt({\n    message: 'Specify `build` command:',\n    initial: await tryToGetBuildCommand(),\n  });\n\nconst tryToGetBuildCommand = async () => {\n  const filesInRootDir = await fs.readdir(process.cwd());\n\n  // NPM\n  if (filesInRootDir.includes('package-lock.json')) {\n    return 'npm run build';\n  }\n\n  // PNPM\n  if (\n    filesInRootDir.includes('pnpm-lock.yaml') ||\n    filesInRootDir.includes('pnpm-workspace.yaml')\n  ) {\n    return 'pnpm run build';\n  }\n\n  // YARN\n  if (filesInRootDir.includes('yarn.lock')) {\n    return 'yarn run build';\n  }\n\n  return;\n};\n", "import { confirmIncludeBuildCommandPrompt } from '../prompts/confirmIncludeBuildCommandPrompt';\nimport { enterBuildCommandPrompt } from '../prompts/enterBuildCommandPrompt';\n\nexport const selectBuildCommandOrSkip = async () => {\n  const includeBuildCommand = await confirmIncludeBuildCommandPrompt();\n\n  if (!includeBuildCommand) {\n    return;\n  }\n\n  const buildCommand = await enterBuildCommandPrompt();\n\n  return buildCommand;\n};\n", "import type { Site } from '@fleek-platform/sdk/node';\n\nimport { saveConfiguration } from '../../../utils/configuration/saveConfiguration';\nimport type { FleekRootConfig } from '../../../utils/configuration/types';\nimport { isValidFleekConfigFormat } from '../../../utils/formats';\nimport { fileExists } from '../../../utils/fs';\nimport { t } from '../../../utils/translation';\nimport { enterDirectoryPathPrompt } from '../prompts/enterDirectoryPathPrompt';\nimport { selectConfigurationFormatPrompt } from '../prompts/selectConfigurationFormatPrompt';\nimport { selectBuildCommandOrSkip } from './selectBuildCommandOrSkip';\n\ntype InitConfigurationArgs = {\n  site: Site;\n  onUnexpectedFormatError: (format: string) => void;\n  onSaveConfigurationError: () => void;\n};\n\nexport const initConfiguration = async ({\n  site,\n  onUnexpectedFormatError,\n  onSaveConfigurationError,\n}: InitConfigurationArgs) => {\n  const distDir = await enterDirectoryPathPrompt({\n    message: t('specifyDistDirToSiteUpl'),\n  });\n\n  const buildCommand = await selectBuildCommandOrSkip();\n\n  const config: FleekRootConfig = {\n    sites: [{ slug: site.slug, distDir, buildCommand }],\n  };\n\n  const format = await selectConfigurationFormatPrompt();\n\n  if (!isValidFleekConfigFormat(format)) {\n    onUnexpectedFormatError(format);\n  }\n\n  const configFile = await saveConfiguration({ config, format });\n\n  if (!configFile) {\n    onSaveConfigurationError();\n\n    return;\n  }\n\n  const isFile = await fileExists(configFile);\n\n  if (!isFile) {\n    onSaveConfigurationError();\n\n    return;\n  }\n\n  return config;\n};\n", "import { output } from '../cli';\nimport { chooseOrCreateSite } from '../commands/sites/utils/chooseOrCreateSite';\nimport { initConfiguration } from '../commands/sites/utils/initConfiguration';\nimport { loadConfiguration } from '../utils/configuration/loadConfiguration';\nimport { t } from '../utils/translation';\nimport { getSdkClient } from './sdkGuard';\n\nexport const sitesGuard = async ({\n  predefinedConfigPath,\n}: { predefinedConfigPath?: string }) => {\n  const isConfigValid = await (async () => {\n    try {\n      return !!(await loadConfiguration({ predefinedConfigPath }));\n    } catch (_err) {\n      return false;\n    }\n  })();\n\n  if (!isConfigValid) {\n    output.hint(t('createValidConfAsInstruct'));\n    output.printNewLine();\n\n    const sdk = getSdkClient();\n\n    if (!sdk) {\n      output.error(t('unexpectedError'));\n\n      return false;\n    }\n\n    const site = await chooseOrCreateSite({ sdk });\n\n    if (!site) {\n      output.error(t('unexpectedError'));\n\n      return false;\n    }\n\n    await initConfiguration({\n      site,\n      onUnexpectedFormatError: (format) => {\n        output.warn(t('unexpectedFileFormat', { format }));\n        process.exit(1);\n      },\n      onSaveConfigurationError: () => {\n        output.warn(t('fsFailedToWriteConfig'));\n        process.exit(1);\n      },\n    });\n  }\n};\n", "import { output } from '../cli';\nimport { t } from '../utils/translation';\nimport { loginGuard } from './loginGuard';\nimport { projectGuard } from './projectGuard';\nimport { sdkGuard } from './sdkGuard';\nimport { sitesGuard } from './sitesGuard';\nimport type { Action, Guards, SdkGuardedFunction } from './types';\n\ntype WithGuardsArgs = { scopes: Guards };\n\nexport const withGuards = <\n  T extends {\n    predefinedConfigPath?: string;\n    [name: string]: string | string[] | boolean | undefined;\n  },\n>(\n  handler: SdkGuardedFunction<T>,\n  { scopes }: WithGuardsArgs,\n): Action<T> => {\n  return async (args: T = {} as T) => {\n    if (scopes.authenticated) {\n      await loginGuard();\n    }\n\n    if (scopes.project) {\n      await projectGuard();\n    }\n\n    if (scopes.site) {\n      await sitesGuard(args);\n    }\n\n    try {\n      const action = sdkGuard(handler);\n      await action(args);\n    } catch (error) {\n      if (error instanceof Error) {\n        output.error(error?.message);\n        return;\n      }\n\n      output.error(`${t('unexpectedError')} ${JSON.stringify(error)}`);\n    }\n  };\n};\n", "/**\n * Show prompt handler until the validator returns true.\n *\n * @param handler - Async function that prompts for user input\n * @param validator - Async function that validates the handler's response\n *\n * @returns The validated data from the handler\n *\n * @example\n * const result = await promptUntil({\n *   handler: async () => prompt('Enter a number > 5'),\n *   validator: async (num) => parseInt(num) > 5\n * });\n */\nexport const promptUntil = async <T>({\n  handler,\n  validator,\n}: {\n  handler: () => Promise<T>;\n  validator: (data: T) => Promise<boolean>;\n}): Promise<T> => {\n  const data = await handler();\n  if (!(await validator(data))) {\n    return promptUntil({ handler, validator });\n  }\n\n  return data;\n};\n", "import { ApplicationNameInvalidError } from '@fleek-platform/errors';\nimport type { Application } from '@fleek-platform/sdk/node';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\nimport { isNameValid } from '../utils/isNameValid';\n\ntype EnterApplicationNameOrPromptArgs = {\n  name?: string;\n  application?: Pick<Application, 'name'>;\n};\n\nexport const enterApplicationNameOrPrompt = async (\n  args: EnterApplicationNameOrPromptArgs,\n): Promise<string> => {\n  if (args.name && isNameValid({ name: args.name })) {\n    return args.name;\n  }\n\n  if (args.name && !isNameValid({ name: args.name })) {\n    throw new ApplicationNameInvalidError({ name: args.name });\n  }\n\n  return textPrompt({\n    message: `${t('typeAppName')}:`,\n    validate: (name) =>\n      isNameValid({ name })\n        ? true\n        : t('invalidNameUseXofYAndRegex', {\n            min: '3',\n            max: '30',\n          }),\n    initial: args.application?.name,\n  });\n};\n", "import { name as nameValidation } from '@fleek-platform/utils-validation';\n\ntype IsNameValidArgs = {\n  name: string;\n};\n\nexport const isNameValid = ({ name }: IsNameValidArgs) =>\n  nameValidation.safeParse(name).success;\n", "import { type PromptArgs, prompt } from './prompt';\n\ntype ListPromptArgs = Omit<PromptArgs, 'type' | 'initial'> & {\n  initial?: string[];\n};\n\nexport const listPrompt = async ({\n  message,\n  initial,\n  onCancel,\n}: ListPromptArgs): Promise<string[]> => {\n  return prompt<string[]>({\n    type: 'list',\n    message,\n    initial: initial?.join(', '),\n    onCancel,\n  });\n};\n", "import { output } from '../../../cli';\nimport { listPrompt } from '../../../prompts/listPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetWhitelistDomainsOrPromptArgs = {\n  whitelistDomains?: string[];\n  whitelistDomainsToUpdate?: string[];\n};\n\nexport const getWhitelistDomainsOrPrompt = async ({\n  whitelistDomains,\n  whitelistDomainsToUpdate,\n}: GetWhitelistDomainsOrPromptArgs): Promise<string[]> => {\n  if (whitelistDomains) {\n    return whitelistDomains;\n  }\n\n  const list = await listPrompt({\n    message: t('typeWhitelistDomainsSepByComma'),\n    initial: whitelistDomainsToUpdate,\n  });\n\n  const domains = list.filter((hostname) => hostname.length > 0);\n\n  if (!domains.length) {\n    output.warn(t('warnProvideValidDomainName'));\n    output.printNewLine();\n\n    return getWhitelistDomainsOrPrompt({\n      whitelistDomains,\n      whitelistDomainsToUpdate,\n    });\n  }\n\n  return domains;\n};\n", "import { ApplicationsNotFoundError } from '@fleek-platform/errors';\nimport type { FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetApplicationOrPromptArgs = {\n  id?: string;\n  sdk: FleekSdk;\n};\n\nexport const getApplicationOrPrompt = async ({\n  id,\n  sdk,\n}: GetApplicationOrPromptArgs) => {\n  if (id) {\n    return sdk.applications().get({ id });\n  }\n\n  const applications = await sdk.applications().list();\n\n  if (applications.length === 0) {\n    throw new ApplicationsNotFoundError({});\n  }\n\n  const selectedApplicationId = await selectPrompt({\n    message: `${t('selectApp')}:`,\n    choices: applications.map((application) => ({\n      title: application.name,\n      value: application.id,\n    })),\n  });\n\n  const appMatch = applications.find(\n    (application) => application.id === selectedApplicationId,\n  );\n\n  if (!appMatch) return;\n\n  return appMatch;\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getApplicationOrPrompt } from './prompts/getApplicationOrPrompt';\n\ntype DeleteApplicationArgs = {\n  id?: string;\n};\n\nconst deleteApplicationAction: SdkGuardedFunction<\n  DeleteApplicationArgs\n> = async ({ sdk, args }) => {\n  const application = await getApplicationOrPrompt({ id: args.id, sdk });\n\n  if (!application) {\n    output.error(t('expectedNotFoundGeneric', { name: 'application' }));\n\n    return;\n  }\n\n  await sdk.applications().delete({ id: application.id });\n\n  output.printNewLine();\n  output.success(\n    t('commonItemActionSuccess', {\n      subject: t('clientId'),\n      action: t('deleted'),\n    }),\n  );\n};\n\nexport const deleteApplicationActionHandler = withGuards(\n  deleteApplicationAction,\n  {\n    scopes: { authenticated: true, project: true, site: false },\n  },\n);\n", "import type {\n  ApplicationWhiteLabelDomain,\n  ApplicationWhitelistDomain,\n} from '@fleek-platform/sdk/node';\n\ntype WhitelistDomain = Omit<\n  ApplicationWhitelistDomain,\n  'createdAt' | 'updatedAt' | '__typename'\n>;\ntype WhiteLabelDomain = Omit<\n  ApplicationWhiteLabelDomain,\n  'createdAt' | 'updatedAt' | '__typename'\n>;\n\nexport const parseWhitelistDomains = ({\n  whitelistDomains,\n  whiteLabelDomains,\n}: {\n  whitelistDomains: WhitelistDomain[];\n  whiteLabelDomains: WhiteLabelDomain[];\n}) => {\n  const combinedWhitelistDomains = [\n    ...whitelistDomains.map((whitelistDomain) => whitelistDomain.hostname),\n    ...whiteLabelDomains.map((whiteLabelDomain) => whiteLabelDomain.hostname),\n  ];\n  const uniqueWhitelistDomains = Array.from(\n    new Set(combinedWhitelistDomains),\n  ).map((uniqueWhitelistDomain) => ({\n    hostname: uniqueWhitelistDomain,\n  }));\n\n  return uniqueWhitelistDomains;\n};\n", "type TruncateAndJoinStringsArgs = {\n  input: string[];\n  truncateOnPosition?: number;\n};\n\nexport const truncateAndJoinStrings = (args: TruncateAndJoinStringsArgs) => {\n  const truncatedArray = args.truncateOnPosition\n    ? args.input.slice(0, args.truncateOnPosition)\n    : args.input;\n\n  const stringifiedArray = truncatedArray.join(',');\n\n  return args.input.length > truncatedArray.length\n    ? `${stringifiedArray},...`\n    : stringifiedArray;\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { parseWhitelistDomains } from './utils/parser';\nimport { truncateAndJoinStrings } from './utils/truncateAndJoinStrings';\n\nexport const listApplicationsAction: SdkGuardedFunction<\n  Record<string, never>\n> = async ({ sdk }) => {\n  const applications = await sdk.applications().list();\n\n  if (applications.length === 0) {\n    output.log(t('noYYet', { name: `${t('sdkPoweredApp')} ${t('clientId')}` }));\n\n    return;\n  }\n\n  output.table(\n    applications.map(\n      ({\n        id,\n        name,\n        clientId,\n        whitelistDomains,\n        whiteLabelDomains,\n        createdAt,\n      }) => {\n        // Warning: The WhiteLableDomains is deprecated\n        // the parser here combines the new field with old\n        // to avoid missing any state provoked by data pushed\n        // by old clients e.g. cli 0.7.3\n        const uniqueWhitelistDomains = parseWhitelistDomains({\n          whiteLabelDomains,\n          whitelistDomains,\n        });\n\n        return {\n          ID: id,\n          Name: name,\n          'Client ID': clientId,\n          'White list domains': truncateAndJoinStrings({\n            input: uniqueWhitelistDomains.map(\n              (whitelistDomain) => whitelistDomain.hostname,\n            ),\n            truncateOnPosition: 3,\n          }),\n          'Created At': createdAt,\n        };\n      },\n    ),\n  );\n};\n\nexport const listApplicationsActionHandler = withGuards(\n  listApplicationsAction,\n  {\n    scopes: {\n      authenticated: true,\n      project: true,\n      site: false,\n    },\n  },\n);\n", "import { isHostnameValid } from '@fleek-platform/utils-validation';\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { promptUntil } from '../../utils/prompts/promptUntil';\nimport { t } from '../../utils/translation';\nimport { enterApplicationNameOrPrompt } from './prompts/enterApplicationNameOrPrompt';\nimport { getApplicationOrPrompt } from './prompts/getApplicationOrPrompt';\nimport { getWhitelistDomainsOrPrompt } from './prompts/getWhitelistDomainsOrPrompt';\n\ntype UpdateApplicationArgs = {\n  id?: string;\n  name?: string;\n  whitelistDomains?: string[];\n};\n\nconst updateApplicationAction: SdkGuardedFunction<\n  UpdateApplicationArgs\n> = async ({ sdk, args }) => {\n  const application = await getApplicationOrPrompt({ id: args.id, sdk });\n\n  if (!application) {\n    output.error(t('noAppFoundUnexpectedly'));\n\n    return;\n  }\n\n  const name = await enterApplicationNameOrPrompt({\n    name: args.name,\n    application,\n  });\n\n  const handler = async () =>\n    getWhitelistDomainsOrPrompt({\n      whitelistDomains: args.whitelistDomains,\n      whitelistDomainsToUpdate: application.whitelistDomains.map(\n        (whitelistDomain) => whitelistDomain.hostname,\n      ),\n    });\n\n  const validator = async (data: string[]) => {\n    let hasInvalidHostname = false;\n\n    for (const hostname of data) {\n      if (!isHostnameValid({ hostname })) {\n        hasInvalidHostname = true;\n        output.warn(t('invalidHostname', { hostname }));\n      }\n    }\n\n    // If error messages displayed\n    // show a new line to make it easier to read\n    if (hasInvalidHostname) {\n      output.printNewLine();\n    }\n\n    return !hasInvalidHostname;\n  };\n\n  const whitelistDomains = await promptUntil({\n    handler,\n    validator,\n  });\n\n  // Warning: The WhiteLabelDomains has been deprecated\n  // the sdk applications update copies new to old for\n  // retroactivity support.\n  await sdk\n    .applications()\n    .update({ id: application.id, name, whitelistDomains });\n\n  output.printNewLine();\n  output.success(t('appClientSuccessUpdated'));\n};\n\nexport const updateApplicationActionHandler = withGuards(\n  updateApplicationAction,\n  {\n    scopes: {\n      authenticated: true,\n      project: true,\n      site: false,\n    },\n  },\n);\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { createApplicationActionHandler } from './create';\nimport { deleteApplicationActionHandler } from './delete';\nimport { listApplicationsActionHandler } from './list';\nimport { updateApplicationActionHandler } from './update';\n\nexport default (program: Command): Command => {\n  const cmd = program\n    .command('applications')\n    .description(t('appCmdDescription'));\n\n  cmd\n    .command('list')\n    .description(t('listAllAppForProject'))\n    .action(listApplicationsActionHandler);\n\n  cmd\n    .command('create')\n    .option('--name <string>')\n    .option('--whitelistDomains <string...>', t('whitelistDomainsSepBySp'))\n    .description(t('createNewAppClient'))\n    .action((options: { name?: string; whitelistDomains?: string[] }) =>\n      createApplicationActionHandler(options),\n    );\n\n  cmd\n    .command('update')\n    .option(\n      '--id <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('clientId'),\n        subject: t('sdkPoweredApp'),\n        action: t('update'),\n      }),\n    )\n    .option('--name <string>', t('newNameOfAppClient'))\n    .option('--whitelistDomains <string...>', t('whitelistDomainsSepBySp'))\n    .description(t('updateAppClient'))\n    .action(\n      (options: { id?: string; name?: string; whitelistDomains?: string[] }) =>\n        updateApplicationActionHandler(options),\n    );\n\n  cmd\n    .command('delete')\n    .description(t('deleteAppClient'))\n    .option(\n      '--id <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('clientId'),\n        subject: t('sdkPoweredApp'),\n        action: t('delete'),\n      }),\n    )\n    .action((options: { id?: string }) =>\n      deleteApplicationActionHandler(options),\n    );\n\n  return cmd;\n};\n", "import { MissingExpectedDataError } from '@fleek-platform/errors';\nimport type { Command } from 'commander';\n\nimport { getDefined } from '../../defined';\nimport { t } from '../../utils/translation';\nimport { loginActionHandler } from './login';\nimport { logoutActionHandler } from './logout';\n\nexport default (cmd: Command): Command => {\n  cmd\n    .command('login')\n    .description(t('cmdAuthLoginDescription'))\n    .action(() => {\n      const uiAppUrl = getDefined('UI__APP_URL');\n      const authApiUrl = getDefined('SDK__GRAPHQL_API_URL');\n\n      if (!uiAppUrl || !authApiUrl) {\n        throw new MissingExpectedDataError();\n      }\n\n      return loginActionHandler({\n        uiAppUrl,\n        authApiUrl,\n      });\n    });\n\n  cmd\n    .command('logout')\n    .description(t('cmdAuthLogoutDescription'))\n    .action(logoutActionHandler);\n\n  return cmd;\n};\n", "import { output } from '../../cli';\nimport { config } from '../../config';\nimport { t } from '../../utils/translation';\n\nexport const logoutActionHandler = async () => {\n  const secretToken = config.personalAccessToken.get();\n\n  if (!secretToken) {\n    return;\n  }\n\n  config.clear();\n  output.success(t('logged', { status: t('loggedOutOf') }));\n};\n", "type HandlerArgs = Buffer;\n\nexport const usePressAnyKey = () => {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const cancel = { current: () => {} };\n\n  const waitForAnyKey = async () =>\n    new Promise((resolve, reject) => {\n      const stopWaiting = () => {\n        process.stdin.removeListener('data', handler);\n\n        if (process.stdin.isTTY) {\n          process.stdin.setRawMode(false);\n        }\n\n        process.stdin.pause();\n      };\n\n      const handler = (buffer: HandlerArgs) => {\n        stopWaiting();\n\n        const bytes = Array.from(buffer);\n\n        if (bytes.length && bytes[0] === 3) {\n          process.exit(1);\n        }\n\n        process.nextTick(resolve);\n      };\n\n      cancel.current = () => {\n        stopWaiting();\n        reject('Canceled');\n      };\n\n      process.stdin.resume();\n\n      if (process.stdin.isTTY) {\n        process.stdin.setRawMode(true);\n      }\n\n      process.stdin.once('data', handler);\n    });\n\n  return { waitForAnyKey, cancel: () => cancel.current() };\n};\n", "import { DomainHostnameInvalidError } from '@fleek-platform/errors';\nimport { isHostnameValid } from '@fleek-platform/utils-validation';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetHostnameOrPromptArgs = {\n  hostname?: string;\n};\n\nexport const getHostnameOrPrompt = async ({\n  hostname,\n}: GetHostnameOrPromptArgs) => {\n  if (hostname && isHostnameValid({ hostname })) {\n    return hostname;\n  }\n\n  if (hostname && !isHostnameValid({ hostname })) {\n    throw new DomainHostnameInvalidError({ hostname });\n  }\n\n  return textPrompt({\n    message: `${t('enterDomainName')}:`,\n    validate: (partialHostname) =>\n      isHostnameValid({ hostname: partialHostname }) ||\n      t('hostnameIncorrectForm'),\n  });\n};\n", "import { PrivateGatewaysNotFoundError } from '@fleek-platform/errors';\nimport type { FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetPrivateGatewayOrPromptArgs = {\n  id?: string;\n  slug?: string;\n  sdk: FleekSdk;\n};\n\nexport const getPrivateGatewayOrPrompt = async ({\n  id,\n  slug,\n  sdk,\n}: GetPrivateGatewayOrPromptArgs) => {\n  if (id) {\n    return sdk.privateGateways().get({ id });\n  }\n\n  if (slug) {\n    return sdk.privateGateways().getBySlug({ slug });\n  }\n\n  const privateGateways = await sdk.privateGateways().list();\n\n  if (privateGateways.length === 0) {\n    throw new PrivateGatewaysNotFoundError({});\n  }\n\n  const selectedPrivateGatewayId = await selectPrompt({\n    message: `${t('commonSelectXFromList', { subject: t('privateGateway') })}:`,\n    choices: privateGateways.map((privateGateway) => ({\n      title: `${privateGateway.name} (${privateGateway.slug})`,\n      value: privateGateway.id,\n    })),\n  });\n\n  const matchPrivateGw = privateGateways.find(\n    (privateGateway) => privateGateway.id === selectedPrivateGatewayId,\n  );\n\n  if (!matchPrivateGw) return;\n\n  return matchPrivateGw;\n};\n", "import type { FleekSdk, PrivateGateway, Site } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\nimport { getPrivateGatewayOrPrompt } from '../../gateways/prompts/getPrivateGatewayOrPrompt';\nimport { getSiteOrPrompt } from '../../sites/prompts/getSiteOrPrompt';\n\ntype GetSiteOrPrivateGatewayArgs = {\n  sdk: FleekSdk;\n  privateGatewayId?: string;\n  privateGatewaySlug?: string;\n  siteId?: string;\n  siteSlug?: string;\n};\n\nexport const getSiteOrPrivateGateway = async ({\n  sdk,\n  privateGatewayId,\n  privateGatewaySlug,\n  siteId,\n  siteSlug,\n}: GetSiteOrPrivateGatewayArgs): Promise<\n  Partial<Record<'site' | 'privateGateway', Site | PrivateGateway>>\n> => {\n  const { upperFirst } = await import('lodash-es');\n\n  const zoneType =\n    !privateGatewayId && !privateGatewaySlug && !siteId && !siteSlug\n      ? await selectPrompt({\n          message: `${t('selectDomainPurpose')}:`,\n          choices: [\n            { title: upperFirst(t('site')), value: 'SITE' },\n            { title: t('privateGateway'), value: 'PRIVATE_GATEWAY' },\n          ],\n        })\n      : null;\n\n  if (\n    privateGatewayId ||\n    privateGatewaySlug ||\n    zoneType === 'PRIVATE_GATEWAY'\n  ) {\n    const privateGateway = await getPrivateGatewayOrPrompt({\n      id: privateGatewayId,\n      slug: privateGatewaySlug,\n      sdk,\n    });\n\n    return { privateGateway };\n  }\n\n  const site = await getSiteOrPrompt({ id: siteId, slug: siteSlug, sdk });\n\n  return { site };\n};\n", "import type { FleekSdk, Zone } from '@fleek-platform/sdk/node';\n\nimport { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\n\ntype WaitForZoneCreationResultArgs = {\n  sdk: FleekSdk;\n  zone: Pick<Zone, 'id'>;\n};\n\nexport const waitForZoneCreationResult = async ({\n  zone,\n  sdk,\n}: WaitForZoneCreationResultArgs) => {\n  return checkPeriodicallyUntil({\n    conditionFn: async () => {\n      const checkedZone = await sdk.domains().getZone({ id: zone.id });\n\n      return checkedZone.status === 'CREATED' ||\n        checkedZone.status === 'CREATING_FAILED'\n        ? checkedZone.status\n        : null;\n    },\n    period: 6_000,\n    tries: 10,\n  });\n};\n", "import type {\n  FleekSdk,\n  PrivateGateway,\n  Site,\n  Zone,\n} from '@fleek-platform/sdk/node';\n\nimport { waitForZoneCreationResult } from '../wait/waitForZoneCreationResult';\n\nexport type GetZoneForSiteOrPrivateGatewayArgs = {\n  sdk: FleekSdk;\n} & (\n  | { site: Pick<Site, 'id' | 'zones'> }\n  | {\n      privateGateway: Pick<PrivateGateway, 'zone'>;\n    }\n);\n\nexport const getZoneForSiteOrPrivateGateway = async (\n  args: GetZoneForSiteOrPrivateGatewayArgs,\n): Promise<Pick<Zone, 'id'> | null> => {\n  if ('privateGateway' in args) {\n    const {\n      privateGateway: { zone },\n    } = args;\n\n    if (!zone) return null;\n\n    return zone;\n  }\n\n  const existingZones = args.site.zones?.filter(\n    (zone) => zone.status === 'CREATED',\n  );\n\n  if (existingZones?.[0]?.id) {\n    return existingZones[0];\n  }\n\n  const zone = await args.sdk\n    .domains()\n    .createZoneForSite({ siteId: args.site.id });\n\n  const zoneCreationResult = await waitForZoneCreationResult({\n    sdk: args.sdk,\n    zone,\n  });\n\n  if (zoneCreationResult !== 'CREATED') {\n    return null;\n  }\n\n  return zone;\n};\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\n\ntype WaitForDomainCreationResultArgs = {\n  sdk: FleekSdk;\n  hostname: string;\n};\n\nexport const waitForDomainCreationResult = async ({\n  hostname,\n  sdk,\n}: WaitForDomainCreationResultArgs) => {\n  return checkPeriodicallyUntil({\n    conditionFn: async () => {\n      const domain = await sdk.domains().getByHostname({ hostname });\n\n      return domain.status === 'CREATED' || domain.status === 'CREATING_FAILED'\n        ? domain.status\n        : null;\n    },\n    period: 6_000,\n    tries: 10,\n  });\n};\n", "import type { Domain, FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\n\ntype WaitForDomainVerificationResultArgs = {\n  domain: Domain;\n  sdk: FleekSdk;\n};\n\nexport const waitForDomainVerificationResult = async ({\n  domain,\n  sdk,\n}: WaitForDomainVerificationResultArgs) => {\n  return checkPeriodicallyUntil({\n    conditionFn: async () => {\n      const checkedDomain = await sdk.domains().get({ domainId: domain.id });\n\n      return checkedDomain.status === 'ACTIVE' ||\n        checkedDomain.status === 'VERIFYING_FAILED'\n        ? checkedDomain.status\n        : null;\n    },\n    period: 6_000,\n    tries: 10,\n  });\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { usePressAnyKey } from '../../utils/pressAnyKey';\nimport { t } from '../../utils/translation';\nimport { getHostnameOrPrompt } from './prompts/getHostnameOrPrompt';\nimport { getSiteOrPrivateGateway } from './prompts/getSiteOrPrivateGateway';\nimport {\n  type GetZoneForSiteOrPrivateGatewayArgs,\n  getZoneForSiteOrPrivateGateway,\n} from './utils/getZoneForSiteOrPrivateGateway';\nimport { waitForDomainCreationResult } from './wait/waitForDomainCreationResult';\nimport { waitForDomainVerificationResult } from './wait/waitForDomainVerificationResult';\n\nexport type CreateDomainActionArgs = {\n  privateGatewayId?: string;\n  privateGatewaySlug?: string;\n  siteId?: string;\n  siteSlug?: string;\n  hostname?: string;\n};\n\nexport const createDomainAction: SdkGuardedFunction<\n  CreateDomainActionArgs\n> = async ({ sdk, args }) => {\n  const { site, privateGateway } = await getSiteOrPrivateGateway({\n    sdk,\n    privateGatewayId: args.privateGatewayId,\n    privateGatewaySlug: args.privateGatewaySlug,\n    siteId: args.siteId,\n    siteSlug: args.siteSlug,\n  });\n\n  const hostname = await getHostnameOrPrompt({ hostname: args.hostname });\n\n  if (site) {\n    output.spinner(t('creatingNewDomainSite'));\n  } else {\n    output.spinner(t('creatingNewDomainGw'));\n  }\n\n  // TODO: Investigate the diff with org repo\n  // const zone = await getZoneForSiteOrPrivateGateway(\n  //   site ? ({ site, sdk } as GetZoneForSiteOrPrivateGatewayArgs) : ({ privateGateway, sdk } as GetZoneForSiteOrPrivateGatewayArgs)\n  // );\n\n  // TODO: Check commented out above\n  const zone = await getZoneForSiteOrPrivateGateway(\n    site\n      ? ({ site, sdk } as unknown as GetZoneForSiteOrPrivateGatewayArgs)\n      : ({\n          privateGateway,\n          sdk,\n        } as unknown as GetZoneForSiteOrPrivateGatewayArgs),\n  );\n\n  if (zone === null) {\n    output.error(t('createDomainFailure'));\n    output.printNewLine();\n\n    return;\n  }\n\n  await sdk.domains().createDomain({ zoneId: zone.id, hostname });\n\n  const domainCreationStatus = await waitForDomainCreationResult({\n    sdk,\n    hostname: hostname,\n  });\n\n  if (domainCreationStatus === null) {\n    output.warn(\n      t('warnSubjectProcessIsLong', { subject: t('dnsConfiguration') }),\n    );\n    output.printNewLine();\n\n    output.log(\n      `${t('commonWaitAndCheckStatusViaCmd', { subject: t('dnsConfiguration') })}:`,\n    );\n    output.log(output.textColor(`fleek domains detail ${hostname}`, 'cyan'));\n\n    return;\n  }\n\n  if (domainCreationStatus === 'CREATING_FAILED') {\n    output.error(t('createDomainFailure'));\n    output.printNewLine();\n\n    return;\n  }\n\n  output.printNewLine();\n  output.success(\n    t('commonItemActionSuccess', {\n      subject: `${t('domain')} ${output.quoted(hostname)}`,\n      action: t('created'),\n    }),\n  );\n  output.printNewLine();\n\n  const domain = await sdk.domains().getByHostname({ hostname: hostname });\n\n  output.log(`${t('updateDNSRecords', { hostname })}:`);\n  for (const { type, value } of domain.dnsConfigs) {\n    if (type === 'CNAME') {\n      output.log(`CNAME @ ${value.toLowerCase().replace('https://', '')}`);\n    }\n  }\n\n  output.printNewLine();\n\n  const { waitForAnyKey } = usePressAnyKey();\n\n  while (true) {\n    output.hint(\n      t('commonPressAnyKeyOnceConfig', { subject: t('dnsSettings') }),\n    );\n    await waitForAnyKey();\n    output.spinner(t('commonVerifyingSubject', { subject: t('dnsSettings') }));\n\n    await sdk.domains().verifyDomain({ domainId: domain.id });\n\n    const verificationResultStatus = await waitForDomainVerificationResult({\n      domain,\n      sdk,\n    });\n\n    if (!verificationResultStatus) {\n      output.warn(\n        t('warnSubjectProcessIsLong', { subject: t('dnsConfiguration') }),\n      );\n      output.printNewLine();\n\n      output.log(\n        `${t('commonWaitAndCheckStatusViaCmd', { subject: t('dnsConfiguration') })}:`,\n      );\n      output.log(output.textColor(`fleek domains detail ${hostname}`, 'cyan'));\n\n      return;\n    }\n\n    if (verificationResultStatus === 'ACTIVE') {\n      output.printNewLine();\n      output.success(`Domain ${output.quoted(hostname)} was verified.`);\n      output.printNewLine();\n\n      return;\n    }\n\n    output.error(t('domainVerificationFailureCheckDns', { hostname }));\n    output.printNewLine();\n  }\n};\n\nexport const createDomainActionHandler = withGuards(createDomainAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { DomainsNotFoundError } from '@fleek-platform/errors';\nimport type { Domain, FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetDomainOrPromptArgs = {\n  id?: string;\n  hostname?: string;\n  sdk: FleekSdk;\n  choicesFilter?: (domain: Domain) => boolean;\n};\n\nexport const getDomainOrPrompt = async ({\n  id,\n  hostname,\n  sdk,\n  choicesFilter,\n}: GetDomainOrPromptArgs): Promise<Domain | undefined> => {\n  if (id) {\n    return sdk.domains().get({ domainId: id });\n  }\n\n  if (hostname) {\n    return sdk.domains().getByHostname({ hostname });\n  }\n\n  const allDomains = await sdk.domains().list();\n\n  const domains = choicesFilter ? allDomains.filter(choicesFilter) : allDomains;\n\n  if (!domains.length) {\n    throw new DomainsNotFoundError();\n  }\n\n  const selectedDomainId = await selectPrompt({\n    message: `${t('selectDomain')}:`,\n    choices: domains.map((domain) => ({\n      title: domain.hostname,\n      value: domain.id,\n    })),\n  });\n\n  const domain = domains.find((domain) => domain.id === selectedDomainId);\n\n  if (!domain) return;\n\n  return domain;\n};\n", "import type { Domain, FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\n\ntype WaitUntilDomainDeletedArgs = {\n  domain: Domain;\n  sdk: FleekSdk;\n};\n\nexport const waitUntilDomainDeleted = async ({\n  domain,\n  sdk,\n}: WaitUntilDomainDeletedArgs): Promise<boolean> => {\n  return checkPeriodicallyUntil({\n    conditionFn: async () =>\n      sdk\n        .domains()\n        .get({ domainId: domain.id })\n        .then(() => false)\n        .catch(() => true),\n    period: 6_000,\n    tries: 10,\n  });\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getDomainOrPrompt } from './prompts/getDomainOrPrompt';\nimport { waitUntilDomainDeleted } from './wait/waitUntilDomainDeleted';\n\nexport type DeleteDomainActionArgs = {\n  id?: string;\n  hostname?: string;\n};\n\nexport const deleteDomainAction: SdkGuardedFunction<\n  DeleteDomainActionArgs\n> = async ({ sdk, args }) => {\n  const domain = await getDomainOrPrompt({\n    id: args.id,\n    hostname: args.hostname,\n    sdk,\n  });\n\n  if (!domain) {\n    output.error(t('expectedNotFoundGeneric', { name: 'domain' }));\n\n    return;\n  }\n\n  output.spinner(t('deletingDomain'));\n\n  await sdk.domains().deleteDomain({ domainId: domain.id });\n\n  const isDeleted = await waitUntilDomainDeleted({ sdk, domain });\n\n  if (!isDeleted) {\n    output.error(t('cannotDeleteDomain', { hostname: domain.hostname }));\n    output.printNewLine();\n\n    return;\n  }\n\n  output.printNewLine();\n  output.success(\n    t('commonItemActionSuccess', {\n      subject: `${t('domain')} \"${domain.hostname}\"`,\n      action: 'deleted',\n    }),\n  );\n  output.printNewLine();\n};\n\nexport const deleteDomainActionHandler = withGuards(deleteDomainAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { DomainStatus } from '@fleek-platform/sdk/node';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getDomainOrPrompt } from './prompts/getDomainOrPrompt';\n\ntype DetailDomainActionOptions = {\n  hostname?: string;\n  id?: string;\n};\n\nconst domainCreationPending: DomainStatus[] = ['CREATING', 'VERIFYING'];\n\nconst domainCreationFailed: DomainStatus[] = [\n  'CREATING_FAILED',\n  'VERIFYING_FAILED',\n];\n\nexport const detailDomainAction: SdkGuardedFunction<\n  DetailDomainActionOptions\n> = async ({ sdk, args }) => {\n  const domain = await getDomainOrPrompt({\n    id: args.id,\n    hostname: args.hostname,\n    sdk,\n  });\n\n  if (!domain) {\n    output.error(t('expectedNotFoundGeneric', { name: 'domain' }));\n\n    return;\n  }\n\n  if (domainCreationPending.includes(domain.status)) {\n    output.printNewLine();\n    output.warn(t('domainCreationPending'));\n\n    return;\n  }\n\n  if (domainCreationFailed.includes(domain.status)) {\n    output.printNewLine();\n    output.error(t('domainCreationFailed'));\n\n    return;\n  }\n\n  output.table([\n    {\n      Hostname: domain.hostname,\n      'Created At': domain.createdAt,\n      Status: domain.status,\n    },\n  ]);\n\n  output.log(`${t('configDomainAsTable')}:`);\n\n  output.table(\n    domain.dnsConfigs.map(\n      (domain: {\n        type: string;\n        name: string;\n        value: string;\n      }) => ({\n        Type: domain.type,\n        Name: domain.name,\n        Value: domain.value,\n      }),\n    ),\n  );\n};\n\nexport const detailDomainActionHandler = withGuards(detailDomainAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Domain, FleekSdk } from '@fleek-platform/sdk/node';\n\ntype GetSiteDomainsArgs = {\n  sdk: FleekSdk;\n  siteId: string;\n};\n\n// TODO: [graphql] Add field to site with list of domains and replace in CLI #682\nexport const getSiteDomains = async ({\n  sdk,\n  siteId,\n}: GetSiteDomainsArgs): Promise<Domain[]> => {\n  const site = await sdk.sites().get({ id: siteId });\n\n  const domainsGroupedByZones = await Promise.all(\n    site.zones.map((zone) => sdk.domains().listByZoneId({ zoneId: zone.id })),\n  );\n\n  return domainsGroupedByZones.flat();\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getSiteDomains } from './utils/getSiteDomains';\n\nexport type ListDomainsActionArgs = {\n  siteId?: string;\n};\n\nexport const listDomainsAction: SdkGuardedFunction<\n  ListDomainsActionArgs\n> = async ({ sdk, args }) => {\n  const domains = args.siteId\n    ? await getSiteDomains({ siteId: args.siteId, sdk })\n    : await sdk.domains().list();\n\n  if (domains.length === 0) {\n    output.mistake(t('noDomainsAssocFound'));\n\n    return;\n  }\n\n  output.table(\n    domains.map(({ hostname, createdAt, status }) => ({\n      Hostname: hostname,\n      'Created At': createdAt,\n      Status: status,\n    })),\n  );\n};\n\nexport const listDomainsActionHandler = withGuards(listDomainsAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Domain } from '@fleek-platform/sdk/node';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getDomainOrPrompt } from './prompts/getDomainOrPrompt';\nimport { waitForDomainVerificationResult } from './wait/waitForDomainVerificationResult';\n\nexport type VerifyDomainActionArgs = {\n  id?: string;\n  hostname?: string;\n};\n\nexport const verifyDomainAction: SdkGuardedFunction<\n  VerifyDomainActionArgs\n> = async ({ sdk, args }) => {\n  const domain = await getDomainOrPrompt({\n    id: args.id,\n    hostname: args.hostname,\n    sdk,\n    choicesFilter: (domain: Domain) => domain.isVerified,\n  });\n\n  if (!domain) {\n    output.error(t('noEnsRecordFoundUnexpectedly'));\n    return;\n  }\n\n  if (domain.status === 'ACTIVE') {\n    output.success(t('domainAlreadyVerified', { hostname: domain.hostname }));\n    output.printNewLine();\n\n    return;\n  }\n\n  output.spinner(t('verifyingDomain'));\n\n  await sdk.domains().verifyDomain({ domainId: domain.id });\n\n  const verificationResultStatus = await waitForDomainVerificationResult({\n    domain,\n    sdk,\n  });\n\n  if (!verificationResultStatus) {\n    output.warn(\n      t('warnSubjectProcessIsLong', {\n        subject: t('processOfDomainVerification'),\n      }),\n    );\n    output.printNewLine();\n\n    output.log(\n      `${t('commonWaitAndCheckStatusViaCmd', { subject: t('deploymentStatus') })}`,\n    );\n    output.log(\n      output.textColor(`fleek domains detail ${domain.hostname}`, 'cyan'),\n    );\n\n    return;\n  }\n\n  if (verificationResultStatus === 'VERIFYING_FAILED') {\n    output.printNewLine();\n    output.error(\n      t('domainVerificationFailureCheckDns', { hostname: domain.hostname }),\n    );\n    output.printNewLine();\n\n    return;\n  }\n\n  output.success(t('domainVerified', { hostname: domain.hostname }));\n  output.printNewLine();\n};\n\nexport const verifyDomainActionHandler = withGuards(verifyDomainAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { createDomainActionHandler } from './create';\nimport { deleteDomainActionHandler } from './delete';\nimport { detailDomainActionHandler } from './detail';\nimport { listDomainsActionHandler } from './list';\nimport { verifyDomainActionHandler } from './verify';\n\nexport default (program: Command): Command => {\n  const cmd = program.command('domains').description(t('domainsDesc'));\n\n  cmd\n    .command('list')\n    .option('--siteId <string>', t('siteIDDomainAssignTo'))\n    .description(t('listAllDomainsSelectProject'))\n    .action((options: { siteId?: string }) =>\n      listDomainsActionHandler(options),\n    );\n\n  cmd\n    .command('detail')\n    .option('--id <string>', t('idOfDomainForDetails'))\n    .option('--hostname <string>', t('hostnameOfDomainForDetails'))\n    .description(t('showDomainDetails'))\n    .action((options: { id?: string; hostname?: string }) =>\n      detailDomainActionHandler(options),\n    );\n\n  cmd\n    .command('create')\n    .option('--privateGatewayId <string>', t('idOfPvtGwToCreateDomainFor'))\n    .option('--privateGatewaySlug <string>', t('slugOfPvtGwToCreateDomainFor'))\n    .option('--siteId <string>', t('siteIdToCreateDomainFor'))\n    .option('--siteSlug <string>', t('slugCreateDomainFor'))\n    .option('--hostname <string>', t('hostnameCreateDomainFor'))\n    .description(t('createDomainForSiteOrGw'))\n    .action(\n      (options: {\n        privateGatewayName?: string;\n        siteId?: string;\n        siteSlug?: string;\n        hostname?: string;\n      }) => createDomainActionHandler(options),\n    );\n\n  cmd\n    .command('delete')\n    .option(\n      '--id <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('id'),\n        subject: t('domain'),\n        action: t('delete'),\n      }),\n    )\n    .option(\n      '--hostname <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('hostname'),\n        subject: t('ens'),\n        action: t('delete'),\n      }),\n    )\n    .description(t('deleteDomain'))\n    .action((options: { hostname?: string }) =>\n      deleteDomainActionHandler(options),\n    );\n\n  cmd\n    .command('verify')\n    .option('--id <string>', t('verifyDomainById'))\n    .option('--hostname <string>', t('verifyDomainByHostname'))\n    .description(t('verifyDomainConfig'))\n    .action((options: { hostname?: string }) =>\n      verifyDomainActionHandler(options),\n    );\n\n  return cmd;\n};\n", "import { EnsNameInvalidError } from '@fleek-platform/errors';\nimport { isEnsValid } from '@fleek-platform/utils-validation';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetEnsNameOrPromptArgs = {\n  name?: string;\n};\n\nexport const getEnsNameOrPrompt = async ({ name }: GetEnsNameOrPromptArgs) => {\n  if (name) {\n    if (isEnsValid({ name })) {\n      return name;\n    }\n\n    throw new EnsNameInvalidError({ ensRecord: { name } });\n  }\n\n  return textPrompt({\n    message: `${t('ensEnterName')}:`,\n    validate: (partialEns) =>\n      isEnsValid({ name: partialEns }) || t('ensIncorrectForm'),\n  });\n};\n", "import type { FleekSdk, IpnsRecord } from '@fleek-platform/sdk/node';\n\nimport { output } from '../../../cli';\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetIpnsRecordOrPromptArgs = {\n  name?: string;\n  siteId: string;\n  sdk: FleekSdk;\n};\n\nexport const getIpnsRecordOrPrompt = async ({\n  name,\n  sdk,\n  siteId,\n}: GetIpnsRecordOrPromptArgs): Promise<IpnsRecord | undefined> => {\n  if (name) {\n    return await sdk.ipns().getRecord({ name });\n  }\n\n  const ipnsRecords = await sdk.ipns().listRecords();\n\n  if (!ipnsRecords.length) {\n    output.spinner(t('ipnsNotLinkCreating'));\n    const record = await sdk.ipns().createRecordForSite({ siteId });\n    output.stopSpinner();\n\n    return record;\n  }\n\n  const selectedIpnsRecordId = await selectPrompt({\n    message: `${t('ipnsSelect')}:`,\n    choices: ipnsRecords.map((record: Record<'name' | 'id', string>) => ({\n      title: record.name,\n      value: record.id,\n    })),\n  });\n\n  const record = ipnsRecords.find(\n    (record) => record.id === selectedIpnsRecordId,\n  );\n\n  if (!record) return;\n\n  return record;\n};\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\n\ntype WaitForEnsRecordCreationResultArgs = {\n  id: string;\n  sdk: FleekSdk;\n};\n\nexport const waitForEnsRecordCreationResult = async ({\n  id,\n  sdk,\n}: WaitForEnsRecordCreationResultArgs) => {\n  return checkPeriodicallyUntil({\n    conditionFn: async () => {\n      const ens = await sdk.ens().get({ id });\n\n      return ens.status === 'CREATED' || null;\n    },\n    period: 6_000,\n    tries: 10,\n  });\n};\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\n\ntype WaitForEnsRecordVerificationResultArgs = {\n  id: string;\n  sdk: FleekSdk;\n};\n\nexport const waitForEnsRecordVerificationResult = async ({\n  id,\n  sdk,\n}: WaitForEnsRecordVerificationResultArgs) => {\n  return checkPeriodicallyUntil({\n    conditionFn: async () => {\n      const checkedEns = await sdk.ens().get({ id });\n\n      return checkedEns.status === 'ACTIVE' ||\n        checkedEns.status === 'VERIFYING_FAILED'\n        ? checkedEns.status\n        : null;\n    },\n    period: 6_000,\n    tries: 10,\n  });\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { usePressAnyKey } from '../../utils/pressAnyKey';\nimport { t } from '../../utils/translation';\nimport { getSiteOrPrompt } from '../sites/prompts/getSiteOrPrompt';\nimport { getEnsNameOrPrompt } from './prompts/getEnsNameOrPrompt';\nimport { getIpnsRecordOrPrompt } from './prompts/getIpnsRecordOrPrompt';\nimport { waitForEnsRecordCreationResult } from './wait/waitForEnsRecordCreationResult';\nimport { waitForEnsRecordVerificationResult } from './wait/waitForEnsRecordVerificationResult';\n\nexport type CreateEnsActionArgs = {\n  siteId?: string;\n  siteSlug?: string;\n  name?: string;\n  ipns?: string;\n};\n\nexport const createEnsAction: SdkGuardedFunction<CreateEnsActionArgs> = async ({\n  sdk,\n  args,\n}) => {\n  const site = await getSiteOrPrompt({\n    id: args.siteId,\n    slug: args.siteSlug,\n    sdk,\n  });\n\n  if (!site) {\n    output.error(t('expectedNotFoundGeneric', { name: 'site' }));\n\n    return;\n  }\n\n  const ipnsRecord = await getIpnsRecordOrPrompt({\n    name: args.ipns,\n    sdk,\n    siteId: site.id,\n  });\n\n  if (!ipnsRecord) {\n    output.error(t('noDomainsFoundUnexpectedly'));\n\n    return;\n  }\n\n  const ensName = await getEnsNameOrPrompt({ name: args.name });\n\n  output.spinner(t('ensCreatingForSelectSite'));\n\n  const ensRecord = await sdk\n    .ens()\n    .create({ name: ensName, siteId: site.id, ipnsRecordId: ipnsRecord.id });\n\n  const ensCreationStatus = await waitForEnsRecordCreationResult({\n    sdk,\n    id: ensRecord.id,\n  });\n\n  if (ensCreationStatus === null) {\n    output.warn(\n      t('warnSubjectProcessIsLong', {\n        subject: t('processOfObtainHashForENS'),\n      }),\n    );\n\n    output.printNewLine();\n\n    output.log(\n      `${t('commonWaitAndCheckStatusViaCmd', { subject: t('ensConf') })}`,\n    );\n    output.log(output.textColor(`fleek ens detail ${ensName}`, 'cyan'));\n\n    return;\n  }\n\n  output.printNewLine();\n  output.success(t('commonNameCreateSuccess', { name: `ENS \"${ensName}\"` }));\n  output.printNewLine();\n  output.hint(t('ensFollowLinkUpdateRec', { ipnsRecordName: ipnsRecord.name }));\n  output.link(`https://app.ens.domains/${ensName}?tab=records`);\n  output.printNewLine();\n\n  const { waitForAnyKey } = usePressAnyKey();\n\n  while (true) {\n    output.log(t('ensPressAnyKeyOnceENSConfig'));\n    await waitForAnyKey();\n    output.spinner(t('ensVerifying'));\n\n    await sdk.ens().verify({ id: ensRecord.id });\n\n    const verificationResultStatus = await waitForEnsRecordVerificationResult({\n      id: ensRecord.id,\n      sdk,\n    });\n\n    if (!verificationResultStatus) {\n      output.warn(\n        t('warnSubjectProcessIsLong', {\n          subject: t('processOfENSVerification'),\n        }),\n      );\n      output.printNewLine();\n\n      output.log(\n        `${t('commonWaitAndCheckStatusViaCmd', { subject: t('ensConf') })}`,\n      );\n      output.log(output.textColor(`fleek ens detail ${ensName}`, 'cyan'));\n\n      return;\n    }\n\n    if (verificationResultStatus === 'ACTIVE') {\n      output.success(t('ensVerified', { ensName }));\n      output.printNewLine();\n\n      return;\n    }\n\n    output.error(t('ensCouldNotVerifyCheckURL', { ensRecordName: ensName }));\n    output.printNewLine();\n  }\n};\n\nexport const createEnsActionHandler = withGuards(createEnsAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { EnsRecordNotFoundError } from '@fleek-platform/errors';\nimport type { EnsRecord, FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetEnsRecordOrPromptArgs = {\n  id?: string;\n  name?: string;\n  sdk: FleekSdk;\n  choicesFilter?: (ens: EnsRecord) => boolean;\n};\n\nexport const getEnsRecordOrPrompt = async ({\n  id,\n  name,\n  sdk,\n  choicesFilter,\n}: GetEnsRecordOrPromptArgs) => {\n  if (id) {\n    return await sdk.ens().get({ id });\n  }\n\n  if (name) {\n    return await sdk.ens().getByName({ name });\n  }\n\n  const allEnsRecords = await sdk.ens().list();\n\n  const ensRecords = choicesFilter\n    ? allEnsRecords.filter(choicesFilter)\n    : allEnsRecords;\n\n  if (ensRecords.length === 0) {\n    throw new EnsRecordNotFoundError({ ensRecord: {} });\n  }\n\n  const selectedEnsRecordId = await selectPrompt({\n    message: `${t('commonSelectXFromList', { subject: t('ensRecord') })}`,\n    choices: ensRecords.map((ens) => ({ title: ens.name, value: ens.id })),\n  });\n\n  const record = ensRecords.find((ens) => ens.id === selectedEnsRecordId);\n\n  return record;\n};\n", "import type { EnsRecord, FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\n\ntype WaitUntilEnsRecordDeletedArgs = {\n  ensRecord: EnsRecord;\n  sdk: FleekSdk;\n};\n\nexport const waitUntilEnsRecordDeleted = async ({\n  ensRecord,\n  sdk,\n}: WaitUntilEnsRecordDeletedArgs): Promise<boolean> => {\n  return checkPeriodicallyUntil({\n    conditionFn: async () =>\n      sdk\n        .ens()\n        .get({ id: ensRecord.id })\n        .then(() => false)\n        .catch(() => true),\n    period: 6_000,\n    tries: 10,\n  });\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getEnsRecordOrPrompt } from './prompts/getEnsRecordOrPrompt';\nimport { waitUntilEnsRecordDeleted } from './wait/waitUntilEnsRecordDeleted';\n\nexport type DeleteEnsRecordActionArgs = {\n  id?: string;\n  name?: string;\n};\n\nexport const deleteEnsAction: SdkGuardedFunction<\n  DeleteEnsRecordActionArgs\n> = async ({ sdk, args }) => {\n  const ensRecord = await getEnsRecordOrPrompt({\n    id: args.id,\n    name: args.name,\n    sdk,\n  });\n\n  if (!ensRecord) {\n    output.error(t('expectedNotFoundGeneric', { name: 'ENS record' }));\n\n    return;\n  }\n\n  output.spinner(t('ensDeleting'));\n\n  await sdk.ens().delete({ id: ensRecord.id });\n\n  const isDeleted = await waitUntilEnsRecordDeleted({ sdk, ensRecord });\n\n  if (!isDeleted) {\n    output.error(t('ensCannotDelete', { ensRecordName: ensRecord.name }));\n\n    return;\n  }\n\n  output.printNewLine();\n  output.success(\n    t('commonItemActionSuccess', {\n      subject: `${t('ens')} \"${ensRecord.name}\"`,\n      action: t('deleted'),\n    }),\n  );\n};\n\nexport const deleteEnsActionHandler = withGuards(deleteEnsAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getEnsRecordOrPrompt } from './prompts/getEnsRecordOrPrompt';\n\nexport type DetailEnsRecordsActionArgs = {\n  id?: string;\n  name?: string;\n};\n\nexport const detailEnsRecordsAction: SdkGuardedFunction<\n  DetailEnsRecordsActionArgs\n> = async ({ sdk, args }) => {\n  const ensRecord = await getEnsRecordOrPrompt({\n    id: args.id,\n    name: args.name,\n    sdk,\n  });\n\n  if (!ensRecord) {\n    output.error(t('expectedNotFoundGeneric', { name: 'ENS Record' }));\n\n    return;\n  }\n\n  output.table([\n    {\n      ENS: ensRecord.name,\n      Status: ensRecord.status,\n      'Created At': ensRecord.createdAt,\n    },\n  ]);\n\n  output.log(`${t('ensConfigAsTable')}:`);\n\n  output.table([\n    {\n      Name: 'Content Hash',\n      Value: `ipns://${ensRecord.ipnsRecord.name}`,\n    },\n  ]);\n};\n\nexport const detailEnsRecordsActionHandler = withGuards(\n  detailEnsRecordsAction,\n  {\n    scopes: {\n      authenticated: true,\n      project: true,\n      site: false,\n    },\n  },\n);\n", "import type { EnsRecord, FleekSdk, Site } from '@fleek-platform/sdk/node';\n\ntype GetSiteEnsRecordsArgs = {\n  sdk: FleekSdk;\n  site: Pick<Site, 'id'>;\n};\n\nexport const getSiteEnsRecords = async ({\n  sdk,\n  ...args\n}: GetSiteEnsRecordsArgs): Promise<EnsRecord[]> => {\n  const site = await sdk.sites().get({ id: args.site.id });\n\n  const ensRecordsGroupedByIpns = await Promise.all(\n    site.ipnsRecords.map((ipnsRecord) =>\n      sdk.ens().listByIpnsRecordId({ ipnsRecordId: ipnsRecord.id }),\n    ),\n  );\n\n  return ensRecordsGroupedByIpns.flat();\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getSiteEnsRecords } from './utils/getSiteEnsRecords';\n\nexport type ListEnsRecordsActionArgs = {\n  siteId?: string;\n};\n\nexport const listEnsRecordsAction: SdkGuardedFunction<\n  ListEnsRecordsActionArgs\n> = async ({ sdk, args }) => {\n  const ensRecords = args.siteId\n    ? await getSiteEnsRecords({ site: { id: args.siteId }, sdk })\n    : await sdk.ens().list();\n\n  if (ensRecords.length === 0) {\n    output.log(t('noENSNames'));\n\n    return;\n  }\n\n  output.table(\n    ensRecords.map(({ name, createdAt, status }) => ({\n      ENS: name,\n      Status: status,\n      'Created At': createdAt,\n    })),\n  );\n};\n\nexport const listEnsRecordsActionHandler = withGuards(listEnsRecordsAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { EnsRecord } from '@fleek-platform/sdk/node';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getEnsRecordOrPrompt } from './prompts/getEnsRecordOrPrompt';\nimport { waitForEnsRecordVerificationResult } from './wait/waitForEnsRecordVerificationResult';\n\nexport type VerifyEnsActionArgs = {\n  id?: string;\n  name?: string;\n};\n\nexport const verifyEnsRecordAction: SdkGuardedFunction<\n  VerifyEnsActionArgs\n> = async ({ sdk, args }) => {\n  const ensRecord = await getEnsRecordOrPrompt({\n    id: args.id,\n    name: args.name,\n    sdk,\n    choicesFilter: (ens: EnsRecord) => ens.status !== 'ACTIVE',\n  });\n\n  if (!ensRecord) {\n    output.error(t('noEnsRecordFoundUnexpectedly'));\n\n    return;\n  }\n\n  if (ensRecord.status === 'ACTIVE') {\n    output.success(\n      t('ensRecordNameAlreadyVerif', { ensRecordName: ensRecord.name }),\n    );\n    output.printNewLine();\n\n    return;\n  }\n\n  output.spinner(t('ensVerifying'));\n\n  await sdk.ens().verify({ id: ensRecord.id });\n\n  const verificationResultStatus = await waitForEnsRecordVerificationResult({\n    id: ensRecord.id,\n    sdk,\n  });\n\n  if (!verificationResultStatus) {\n    output.warn(\n      t('warnSubjectProcessIsLong', { subject: t('processOfENSVerification') }),\n    );\n    output.printNewLine();\n\n    output.log(\n      `${t('commonWaitAndCheckStatusViaCmd', { subject: t('ensConf') })}:`,\n    );\n    output.log(output.textColor(`fleek ens detail ${ensRecord.name}`, 'cyan'));\n\n    return;\n  }\n\n  if (verificationResultStatus === 'VERIFYING_FAILED') {\n    output.error(\n      t('ensCouldNotVerifyCheckURL', { ensRecordName: ensRecord.name }),\n    );\n    output.printNewLine();\n\n    return;\n  }\n\n  output.success(t('ensNameVerified', { ensRecordName: ensRecord.name }));\n  output.printNewLine();\n};\n\nexport const verifyEnsRecordActionHandler = withGuards(verifyEnsRecordAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { createEnsActionHandler } from './create';\nimport { deleteEnsActionHandler } from './delete';\nimport { detailEnsRecordsActionHandler } from './detail';\nimport { listEnsRecordsActionHandler } from './list';\nimport { verifyEnsRecordActionHandler } from './verify';\n\nexport default (program: Command): Command => {\n  const cmd = program.command('ens').description(t('ensCmdDescription'));\n\n  cmd\n    .command('create')\n    .option('--siteId <string>', t('siteIdOf'))\n    .option('--siteSlug <string>', t('siteSlugOf'))\n    .option('--name <string>', t('ensCreateName'))\n    .option('--ipnsName <string>', t('ensIPNSNameToLink'))\n    .description(t('ensCreateRecord'))\n    .action(\n      (options: {\n        siteId?: string;\n        siteSlug?: string;\n        name?: string;\n        ipns?: string;\n      }) => createEnsActionHandler(options),\n    );\n\n  cmd\n    .command('detail')\n    .option(\n      '--id <string>',\n      t('nameOfSubjectForDetails', { name: t('id'), subject: t('ens') }),\n    )\n    .option(\n      '--name <string>',\n      t('nameOfSubjectForDetails', { name: t('name'), subject: t('ens') }),\n    )\n    .description(t('ensShowDetails'))\n    .action((options: { id?: string; name?: string }) =>\n      detailEnsRecordsActionHandler(options),\n    );\n\n  cmd\n    .command('list')\n    .option('--siteId <string>', t('siteIdOf'))\n    .description(t('ensListAllForProject'))\n    .action((options: { siteId?: string }) =>\n      listEnsRecordsActionHandler(options),\n    );\n\n  cmd\n    .command('delete')\n    .option(\n      '--id <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('id'),\n        subject: t('ens'),\n        action: t('delete'),\n      }),\n    )\n    .option(\n      '--name <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('name'),\n        subject: t('ens'),\n        action: t('delete'),\n      }),\n    )\n    .description(t('ensDelete'))\n    .action((options: { id?: string; name?: string }) =>\n      deleteEnsActionHandler(options),\n    );\n\n  cmd\n    .command('verify')\n    .option(\n      '--id <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('id'),\n        subject: t('ens'),\n        action: t('verify'),\n      }),\n    )\n    .option(\n      '--name <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('name'),\n        subject: t('ens'),\n        action: t('verify'),\n      }),\n    )\n    .description(t('ensVerifyIsConfig'))\n    .action((options: { id?: string; name?: string }) =>\n      verifyEnsRecordActionHandler(options),\n    );\n\n  return cmd;\n};\n", "import { FleekFunctionNameNotValidError } from '@fleek-platform/errors';\nimport { isFunctionNameValid } from '@fleek-platform/utils-validation';\n\nimport { enterFunctionNamePrompt } from './enterFunctionNamePrompt';\n\ntype GetFunctionNameOrPromptArgs = {\n  name?: string;\n};\n\nexport const getFunctionNameOrPrompt = async ({\n  name,\n}: GetFunctionNameOrPromptArgs): Promise<string> => {\n  if (name && isFunctionNameValid({ name })) {\n    return name;\n  }\n\n  if (name && !isFunctionNameValid({ name })) {\n    throw new FleekFunctionNameNotValidError({ name });\n  }\n\n  return enterFunctionNamePrompt();\n};\n", "import { isFunctionNameValid } from '@fleek-platform/utils-validation';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\nexport const enterFunctionNamePrompt = async (): Promise<string> =>\n  textPrompt({\n    message: `${t('typeNewFunctionName')}:`,\n    validate: (partialName: string) =>\n      isFunctionNameValid({ name: partialName }) || t('functionInvalidName'),\n  });\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\n\nexport const isSiteIdValid = async ({\n  siteId,\n  sdk,\n}: {\n  siteId: string;\n  sdk: FleekSdk;\n}) => {\n  try {\n    await sdk.sites().get({ id: siteId });\n    return true;\n  } catch {\n    return false;\n  }\n};\n", "import { SiteNotFoundError } from '@fleek-platform/errors';\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getFunctionNameOrPrompt } from './prompts/getFunctionNameOrPrompt';\nimport { isSiteIdValid } from './utils/isSiteIdValid';\n\ntype CreateFunctionArgs = {\n  name?: string;\n  siteId?: string;\n};\n\nconst createAction: SdkGuardedFunction<CreateFunctionArgs> = async ({\n  args,\n  sdk,\n}) => {\n  const { name, siteId } = args;\n  const functionName = await getFunctionNameOrPrompt({ name });\n\n  if (siteId && !(await isSiteIdValid({ siteId: siteId as string, sdk }))) {\n    output.error(t('siteNotFound'));\n    return;\n  }\n\n  const newFunction = await sdk.functions().create({\n    name: functionName,\n    siteId: siteId as string,\n  });\n\n  output.printNewLine();\n  output.success(t('commonNameCreateSuccess', { name: 'function' }));\n  output.printNewLine();\n\n  if (!newFunction.currentDeploymentId) {\n    output.log(t('youCanDoXUsingFolCmd', { action: t('deployNewFunction') }));\n    output.log('fleek functions deploy');\n  }\n};\n\nexport const createActionHandler = withGuards(createAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { FleekFunctionsNotFoundError } from '@fleek-platform/errors';\nimport type { FleekFunction, FleekSdk } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetFunctionOrPromptArgs = {\n  name?: string;\n  sdk: FleekSdk;\n};\n\nexport const getFunctionOrPrompt = async ({\n  name,\n  sdk,\n}: GetFunctionOrPromptArgs): Promise<FleekFunction | undefined> => {\n  if (name) {\n    return sdk.functions().get({ name });\n  }\n\n  const functions = await sdk.functions().list();\n\n  if (!functions.length) {\n    throw new FleekFunctionsNotFoundError({});\n  }\n\n  const selectedFunctionId = await selectPrompt({\n    message: t('commonSelectXFromList', { subject: t('function') }),\n    choices: functions.map((f) => ({ title: f.name, value: f.id })),\n  });\n\n  const fnMatch = functions.find((f) => f.id === selectedFunctionId);\n\n  if (!fnMatch) return;\n\n  return fnMatch;\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getFunctionOrPrompt } from './prompts/getFunctionOrPrompt';\n\ntype DeleteActionArgs = {\n  name?: string;\n};\n\nconst deleteAction: SdkGuardedFunction<DeleteActionArgs> = async ({\n  sdk,\n  args,\n}) => {\n  const functionToDelete = await getFunctionOrPrompt({ name: args.name, sdk });\n\n  if (!functionToDelete) {\n    output.error(t('expectedNotFoundGeneric', { name: 'function' }));\n\n    return;\n  }\n\n  await sdk.functions().delete({ id: functionToDelete.id });\n\n  output.printNewLine();\n  output.success(t('commonNameDeleteSuccess', { name: 'function' }));\n  output.printNewLine();\n};\n\nexport const deleteActionHandler = withGuards(deleteAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import fs from 'node:fs';\nimport cliProgress from 'cli-progress';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { calculateBlake3Hash } from '../../utils/blake3';\nimport { t } from '../../utils/translation';\nimport { getFunctionOrPrompt } from './prompts/getFunctionOrPrompt';\nimport { getFunctionPathOrPrompt } from './prompts/getFunctionPathOrPrompt';\nimport { getJsCodeFromPath } from './utils/getJsCodeFromPath';\nimport { getEnvironmentVariables } from './utils/parseEnvironmentVariables';\nimport { getUploadResult } from './utils/upload';\nimport { waitUntilFileAvailable } from './wait/waitUntilFileAvailable';\n\nimport { getWasmCodeFromPath } from './utils/getWasmCodeFromPath';\nimport { uploadFunctionAssets } from './utils/uploadFunctionAssets';\n\ntype DeployActionArgs = {\n  filePath?: string;\n  name?: string;\n  bundle: string;\n  private: boolean;\n  env: string[];\n  envFile?: string;\n  sgx?: boolean;\n  assetsPath?: string;\n};\n\nconst deployAction: SdkGuardedFunction<DeployActionArgs> = async ({\n  sdk,\n  args,\n}) => {\n  const env = getEnvironmentVariables({ env: args.env, envFile: args.envFile });\n  const functionToDeploy = await getFunctionOrPrompt({ name: args.name, sdk });\n  const filePath = await getFunctionPathOrPrompt({ path: args.filePath });\n  const assetsPath = args.assetsPath;\n  const bundle = args.bundle !== 'false';\n  const isSGX = !!args.sgx;\n  const isTrustedPrivateEnvironment = isSGX && args.private;\n  const isUntrustedPublicEnvironment = !isSGX && !args.private;\n\n  if (isTrustedPrivateEnvironment) {\n    output.error(t('pvtFunctionInSgxNotSupported', { name: 'function' }));\n    return;\n  }\n\n  if (!functionToDeploy) {\n    output.error(t('expectedNotFoundGeneric', { name: 'function' }));\n    return;\n  }\n\n  if (assetsPath && isSGX) {\n    output.error(t('assetsNotSupportedInSgx'));\n    return;\n  }\n\n  const assetsCid = await uploadFunctionAssets({\n    sdk,\n    assetsPath,\n    functionName: functionToDeploy.name,\n  });\n\n  const updatedEnv = {\n    FLEEK_URL: functionToDeploy.invokeUrl,\n    ...env,\n  };\n\n  const filePathToUpload = isSGX\n    ? await getWasmCodeFromPath({ filePath })\n    : await getJsCodeFromPath({\n        filePath,\n        bundle,\n        env: updatedEnv,\n        assetsCid,\n      });\n\n  output.printNewLine();\n\n  const progressBar = new cliProgress.SingleBar(\n    {\n      format: t('uploadProgress', { action: t('uploadCodeToIpfs') }),\n    },\n    cliProgress.Presets.shades_grey,\n  );\n\n  const uploadResult = await getUploadResult({\n    filePath: filePathToUpload,\n    functionName: functionToDeploy.name,\n    isPrivate: args.private,\n    progressBar,\n    sdk,\n    onFailure: () => {\n      progressBar.stop();\n    },\n  });\n\n  if (!uploadResult) {\n    output.error(\n      t('commonFunctionActionFailure', {\n        action: 'deploy',\n        tryAgain: t('tryAgain'),\n        message: t('uploadToIpfsFailed'),\n      }),\n    );\n\n    return;\n  }\n\n  const blake3Hash = isSGX\n    ? await calculateBlake3Hash({\n        filePath: filePathToUpload,\n        onFailure: () => {\n          output.error(t('failedCalculateBlake3Hash'));\n          process.exit(1);\n        },\n      })\n    : undefined;\n\n  if (!output.debugEnabled && !args.bundle) {\n    fs.rmSync(filePathToUpload);\n  }\n\n  if (!uploadResult.pin.cid) {\n    output.error(\n      t('commonFunctionActionFailure', {\n        action: 'deploy',\n        tryAgain: t('tryAgain'),\n        message: t('uploadToIpfsFailed'),\n      }),\n    );\n\n    return;\n  }\n\n  if (\n    uploadResult.duplicate &&\n    functionToDeploy.currentDeployment &&\n    uploadResult.pin &&\n    functionToDeploy.currentDeployment.cid === uploadResult.pin.cid\n  ) {\n    output.chore(t('noChangesDetected'));\n\n    return;\n  }\n\n  if (!args.private) {\n    output.printNewLine();\n    output.spinner(t('runningAvailabilityCheck'));\n\n    const isAvailable = await waitUntilFileAvailable({\n      cid: uploadResult.pin.cid,\n    });\n\n    if (!isAvailable) {\n      output.error(t('availabilityCheckFailed'));\n\n      return;\n    }\n  }\n\n  try {\n    await sdk.functions().deploy({\n      functionId: functionToDeploy.id,\n      cid: uploadResult.pin.cid,\n      sgx: isSGX,\n      blake3Hash,\n      assetsCid,\n    });\n  } catch {\n    output.error(t('failedDeployFleekFunction'));\n    process.exit(1);\n  }\n\n  // TODO: This should probably happen just after uploadResult\n  // looks more like a post upload process due to propagation\n  if (isSGX) {\n    // We need to make a request to the network so the network can have a mapping to the blake3 hash.\n    // this is a temporarily hack until dalton comes up with a fix on network\n    // TODO: Check status of supposed fix\n    output.spinner(t('networkFetchMappings'));\n    try {\n      // TODO: The `fleek-test` address should be an env var\n      await fetch(\n        `https://fleek-test.network/services/0/ipfs/${uploadResult.pin.cid}`,\n      );\n    } catch {\n      output.error(t('networkFetchFailed'));\n      return;\n    }\n  }\n\n  output.success(t('commonNameCreateSuccess', { name: 'deployment' }));\n  output.printNewLine();\n  output.log(t('callFleekFunctionByUrlReq'));\n  output.link(functionToDeploy.invokeUrl);\n\n  if (isSGX) {\n    output.log(t('callFleekFunctionByNetworkUrlReq'));\n    output.link('https://fleek-test.network/services/3');\n    output.printNewLine();\n    output.log(`Blake3 Hash: ${blake3Hash} `);\n    output.log(\n      `Invoke by sending request to https://fleek-test.network/services/3 with payload of {hash: <Blake3Hash>, decrypt: true, inputs: \"foo\"}`,\n    );\n    output.printNewLine();\n    output.hint(`Here's an example:`);\n    output.link(\n      `curl ${functionToDeploy.invokeUrl} --data '{\"hash\": \"${blake3Hash}\", \"decrypt\": true, \"input\": \"foo\"}'`,\n    );\n  }\n\n  if (isUntrustedPublicEnvironment) {\n    output.log(t('callFleekFunctionByNetworkUrlReq'));\n    output.link(\n      `https://fleek-test.network/services/1/ipfs/${uploadResult.pin.cid}`,\n    );\n  }\n};\n\nexport const deployActionHandler = withGuards(deployAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import fs from 'node:fs/promises';\nimport { blake3 } from 'hash-wasm';\n\nexport const calculateBlake3Hash = async ({\n  filePath,\n  onFailure,\n}: {\n  filePath: string;\n  onFailure: () => void;\n}) => {\n  try {\n    const buffer = await fs.readFile(filePath);\n    return await blake3(buffer);\n  } catch {\n    if (typeof onFailure === 'function') {\n      onFailure();\n    }\n  }\n};\n", "import { FleekFunctionPathNotValidError } from '@fleek-platform/errors';\nimport {\n  isFunctionPathValid,\n  isValidFolder,\n} from '@fleek-platform/utils-validation';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetFunctionPathOrPromptArgs = {\n  path?: string;\n};\n\nconst isValidPath = async (path: string) =>\n  await isFunctionPathValid({ fileOrFolderPath: path });\n\nexport const getFunctionPathOrPrompt = async ({\n  path,\n}: GetFunctionPathOrPromptArgs): Promise<string> => {\n  let result = path;\n\n  if (!result) {\n    const p = await textPrompt({\n      message: t('typeFunctionCodePath'),\n      validate: (path) =>\n        isFunctionPathValid({ fileOrFolderPath: path }) ||\n        t('filePathValidWarning'),\n    });\n\n    result = p;\n  }\n\n  const hasValidPath = await isValidPath(result);\n\n  if (!hasValidPath) {\n    throw new FleekFunctionPathNotValidError({ path: result });\n  }\n\n  const isFolder = await isValidFolder(result);\n\n  if (isFolder) {\n    return `${result}/index.js`;\n  }\n\n  return result;\n};\n", "import * as fs from 'node:fs';\nimport * as os from 'node:os';\n\n// TODO: These error messages should be revised\n// e.g. FleekFunctionPathNotValidError happens regardless of bundling\nimport {\n  FleekFunctionBundlingFailedError,\n  FleekFunctionPathNotValidError,\n  UnknownError,\n} from '@fleek-platform/errors';\nimport cliProgress from 'cli-progress';\nimport { type Plugin, type PluginBuild, build } from 'esbuild';\nimport { filesFromPaths } from 'files-from-path';\n\nimport { output } from '../../../cli';\nimport { t } from '../../../utils/translation';\nimport type { EnvironmentVariables } from './parseEnvironmentVariables';\n\ntype TranspileResponse = {\n  path: string;\n  unsupportedModules: Set<string>;\n  success: boolean;\n  error?: string;\n};\n\ntype ShowUnsupportedModulesArgs = {\n  unsupportedModulesUsed: Set<string>;\n};\n\nconst showUnsupportedModules = (args: ShowUnsupportedModulesArgs) => {\n  const unsupportedModulesUsed = Array.from(args.unsupportedModulesUsed);\n\n  if (unsupportedModulesUsed.length) {\n    output.printNewLine();\n    for (const packageName of unsupportedModulesUsed) {\n      output.mistake(t('unsupportedPackage', { packageName }));\n    }\n\n    output.log(t('showUnsupportedModulesDocLink'));\n    output.link('https://fleek.xyz/docs');\n    output.printNewLine();\n  }\n};\n\nconst buildEnvVars = (args: { env: EnvironmentVariables }) => {\n  return Object.entries(args.env)\n    .map(([key, value]) => `${key}: \"${value}\"`)\n    .join(',');\n};\n\ntype TranspileCodeArgs = {\n  filePath: string;\n  bundle: boolean;\n  env: EnvironmentVariables;\n  assetsCid?: string;\n};\n\nconst transpileCode = async (args: TranspileCodeArgs) => {\n  const {\n    createFleekBuildConfig,\n    nodeProtocolImportSpecifier,\n    moduleChecker,\n    unsupportedRuntimeModules,\n  } = await import('@fleek-platform/functions-esbuild-config');\n\n  const { filePath, bundle, env, assetsCid } = args;\n  const progressBar = new cliProgress.SingleBar(\n    {\n      format: t('uploadProgress', {\n        action: t(bundle ? 'bundlingCode' : 'transformingCode'),\n      }),\n    },\n    cliProgress.Presets.shades_grey,\n  );\n\n  let tempDir: string;\n\n  if (!output.debugEnabled) {\n    tempDir = os.tmpdir();\n  } else {\n    tempDir = '.fleek';\n\n    if (!fs.existsSync(tempDir)) {\n      fs.mkdirSync(tempDir);\n    }\n  }\n\n  const outFile = `${tempDir}/function.js`;\n  const unsupportedModulesUsed = new Set<string>();\n\n  const plugins: Plugin[] = [\n    moduleChecker({\n      unsupportedModulesUsed: new Set<string>(unsupportedRuntimeModules),\n    }),\n    {\n      name: 'ProgressBar',\n      setup: (build: PluginBuild) => {\n        build.onStart(() => {\n          progressBar.start(100, 10);\n        });\n      },\n    },\n  ];\n\n  if (bundle) {\n    plugins.push(\n      nodeProtocolImportSpecifier({\n        // Handle the error gracefully\n        onError: () => output.error(t('failedToApplyNodeImportProtocol')),\n      }),\n    );\n  }\n\n  let adaptedEnv = env;\n  if (assetsCid) {\n    adaptedEnv = {\n      ...env,\n      ASSETS_CID: assetsCid,\n    };\n  }\n\n  const buildConfig = createFleekBuildConfig({\n    filePath,\n    bundle,\n    env: adaptedEnv,\n  });\n\n  try {\n    await build({\n      ...buildConfig,\n      outfile: outFile,\n      plugins,\n      minify: !!bundle,\n    });\n\n    progressBar.update(100);\n    progressBar.stop();\n  } catch (e) {\n    progressBar.stop();\n\n    const errorMessage =\n      e &&\n      typeof e === 'object' &&\n      'message' in e &&\n      typeof e.message === 'string'\n        ? e.message\n        : t('unknownTransformError');\n\n    const transpileResponse: TranspileResponse = {\n      path: filePath,\n      unsupportedModules: unsupportedModulesUsed,\n      success: false,\n      error: errorMessage,\n    };\n\n    return transpileResponse;\n  }\n\n  const transpileResponse: TranspileResponse = {\n    path: outFile,\n    unsupportedModules: unsupportedModulesUsed,\n    success: true,\n  };\n\n  return transpileResponse;\n};\n\nexport const getFileLikeObject = async (path: string) => {\n  const files = await filesFromPaths([path]);\n\n  if (!files.length) {\n    throw new FleekFunctionPathNotValidError({ path });\n  }\n\n  return files[0];\n};\n\n// TODO: Create a process to validate the user source code\n// using placeholder for the moment\nconst checkUserSourceCodeSupport = async (filePath: string) => {\n  const reRequireSyntax = /require\\s*\\([^)]*\\)/g;\n  const buffer = await fs.promises.readFile(filePath);\n  const contents = buffer.toString();\n\n  return reRequireSyntax.test(contents);\n};\n\nexport const getJsCodeFromPath = async (args: {\n  filePath: string;\n  bundle: boolean;\n  env: EnvironmentVariables;\n  assetsCid?: string;\n}) => {\n  const { filePath, bundle, env, assetsCid } = args;\n\n  if (!fs.existsSync(filePath)) {\n    throw new FleekFunctionPathNotValidError({ path: filePath });\n  }\n\n  const isUserSourceCodeSupported = await checkUserSourceCodeSupport(filePath);\n\n  if (isUserSourceCodeSupported) {\n    output.error(t('requireDeprecatedUseES6Syntax'));\n  }\n\n  const transpileResponse = await transpileCode({\n    filePath,\n    bundle,\n    env,\n    assetsCid,\n  });\n\n  showUnsupportedModules({\n    unsupportedModulesUsed: transpileResponse.unsupportedModules,\n  });\n\n  if (!transpileResponse.success) {\n    if (!transpileResponse.error) {\n      throw new UnknownError();\n    }\n\n    throw new FleekFunctionBundlingFailedError({\n      error: transpileResponse.error,\n    });\n  }\n\n  return transpileResponse.path;\n};\n", "import fs from 'node:fs';\nimport dotenv from 'dotenv';\n\nimport { output } from '../../../cli';\nimport { t } from '../../../utils/translation';\n\nexport type EnvironmentVariables = { [key: string]: string };\n\nexport type ParseEnvironmentVariablesArgs = { env: string[] };\nexport type ParseEnvironmentVariablesFileArgs = { envFile: string };\nexport type GetEnvironmentVariablesArgs = { env: string[]; envFile?: string };\n\nexport const parseEnvironmentVariablesFile = (\n  args: ParseEnvironmentVariablesFileArgs,\n): EnvironmentVariables => {\n  const { envFile } = args;\n\n  if (!fs.statSync(envFile).isFile()) {\n    output.mistake(t('filePathNotFound', { envFile }));\n\n    return {};\n  }\n\n  try {\n    const envFileContent = fs.readFileSync(envFile);\n    const config = dotenv.parse(envFileContent);\n\n    return config;\n  } catch (err) {\n    output.mistake(t('envFileParseError', { envFile }));\n\n    return {};\n  }\n};\n\nexport const parseEnvironmentVariables = (\n  args: ParseEnvironmentVariablesArgs,\n): EnvironmentVariables => {\n  const { env } = args;\n\n  return env.reduce<{ [key: string]: string }>((acc, curr) => {\n    const [key, value] = curr.split('=');\n\n    let varValue = value;\n\n    if (!varValue) {\n      // eslint-disable-next-line no-process-env\n      const envValue = process.env[key];\n\n      if (!envValue) {\n        output.mistake(t('missingEnvVar', { key }));\n\n        return acc;\n      }\n\n      varValue = envValue;\n    }\n\n    acc[key] = varValue;\n\n    return acc;\n  }, {});\n};\n\nexport const getEnvironmentVariables = (\n  args: GetEnvironmentVariablesArgs,\n): EnvironmentVariables => {\n  const { env, envFile } = args;\n\n  const environmentVariables = parseEnvironmentVariables({ env });\n\n  let envFileContent: EnvironmentVariables = {};\n\n  if (envFile) {\n    envFileContent = parseEnvironmentVariablesFile({ envFile });\n  }\n\n  return { ...envFileContent, ...environmentVariables };\n};\n", "import type cliProgress from 'cli-progress';\n\nexport const uploadOnProgress = (progressBar: cliProgress.SingleBar) => {\n  return ({\n    loadedSize,\n    totalSize,\n  }: { loadedSize: number; totalSize?: number }) => {\n    if (loadedSize === 0) {\n      progressBar.start(totalSize ?? loadedSize, loadedSize);\n    } else if (loadedSize === totalSize) {\n      progressBar.update(loadedSize);\n      progressBar.stop();\n    } else {\n      progressBar.update(loadedSize);\n    }\n  };\n};\n", "import { uploadOnProgress } from '../../../output/utils/uploadOnProgress';\nimport { getFileLikeObject } from './getJsCodeFromPath';\n\nimport type { FleekSdk } from '@fleek-platform/sdk/node';\nimport type { Bar as ProgressBar } from 'cli-progress';\nimport type { FileLike } from '../../storage/utils/upload';\n\nexport const getUploadResult = async ({\n  filePath,\n  functionName,\n  isPrivate,\n  progressBar,\n  sdk,\n  onFailure,\n}: {\n  filePath: string;\n  functionName: string;\n  isPrivate: boolean;\n  progressBar: ProgressBar;\n  sdk: FleekSdk;\n  onFailure?: () => void;\n}) => {\n  try {\n    if (isPrivate) {\n      return await sdk.storage().uploadPrivateFile({\n        filePath,\n        onUploadProgress: uploadOnProgress(progressBar),\n      });\n    }\n\n    const fileLikeObject = (await getFileLikeObject(filePath)) as FileLike;\n    return await sdk.storage().uploadFile({\n      file: fileLikeObject,\n      options: { functionName },\n      onUploadProgress: uploadOnProgress(progressBar),\n    });\n  } catch {\n    if (typeof onFailure === 'function') {\n      onFailure();\n    }\n  }\n\n  return;\n};\n", "import { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\n\ntype WaitUntilFileAvailableArgs = {\n  cid: string;\n};\n\nexport const waitUntilFileAvailable = async ({\n  cid,\n}: WaitUntilFileAvailableArgs) => {\n  const timeout = 10000;\n  const gatewayPatterns = [\n    'https://{cid}.ipfs.dweb.link',\n    'https://{cid}.ipfs.w3s.link',\n    'https://{cid}.ipfs.flk-ipfs.xyz',\n    'https://ipfs.io/ipfs/{cid}',\n    'https://fleek.ipfs.io/ipfs/{cid}',\n  ];\n  const createUrlPromises = () =>\n    gatewayPatterns.map((pattern: string) => {\n      const url = pattern.replace(/\\{(\\w+)\\}/g, cid);\n      const fetchPromise = fetch(url).then((response) => {\n        if (!response.ok) {\n          // eslint-disable-next-line fleek-custom/no-default-error\n          throw new Error(`Request failed for ${url}`);\n        }\n\n        return response;\n      });\n\n      const timeoutPromise = new Promise((_, reject) =>\n        setTimeout(\n          () => reject(new Error(`timeout fetching content from ${url}`)),\n          timeout,\n        ),\n      );\n\n      return Promise.race([fetchPromise, timeoutPromise]);\n    });\n\n  return checkPeriodicallyUntil({\n    conditionFn: async () => {\n      const urlPromises = createUrlPromises();\n      try {\n        await Promise.any(urlPromises);\n\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    period: 6000,\n    tries: 50,\n  });\n};\n", "import * as fs from 'node:fs';\nimport * as os from 'node:os';\n\nimport {\n  FleekFunctionInvalidWasmCodeError,\n  FleekFunctionPathNotValidError,\n  FleekFunctionWasmEncryptionFailedError,\n} from '@fleek-platform/errors';\nimport cliProgress from 'cli-progress';\nimport { encrypt } from 'eciesjs';\nimport { output } from '../../../cli';\nimport { t } from '../../../utils/translation';\n\nconst PUBLIC_KEY =\n  '02de6500ea852d2f4bdc9b6812ac76477e45eae556998d357cfa84e5a0a71bddb4';\n\nconst getWasm = async (filePath: string) => {\n  const buffer = await fs.promises.readFile(filePath);\n  if (buffer.length < 8) {\n    return null;\n  }\n\n  // WebAssembly namespace is only supported in dom in typescript\n  // https://webassembly.github.io/spec/core/binary/modules.html#binary-module\n  const wasmMagicNumber = [0x00, 0x61, 0x73, 0x6d];\n  for (let i = 0; i < 4; i++) {\n    if (buffer[i] !== wasmMagicNumber[i]) {\n      return null;\n    }\n  }\n  return buffer;\n};\n\nconst enryptCode = async (args: { filePath: string }) => {\n  const { filePath } = args;\n\n  const buffer = await getWasm(filePath);\n  if (!buffer) {\n    output.error(t('invalidWasmCode', { path: filePath }));\n    throw new FleekFunctionInvalidWasmCodeError({});\n  }\n\n  const progressBar = new cliProgress.SingleBar(\n    {\n      format: t('uploadProgress', {\n        action: t('encryptingCode'),\n      }),\n    },\n    cliProgress.Presets.shades_grey,\n  );\n\n  let tempDir: string;\n\n  if (!output.debugEnabled) {\n    tempDir = os.tmpdir();\n  } else {\n    tempDir = '.fleek';\n\n    if (!fs.existsSync(tempDir)) {\n      fs.mkdirSync(tempDir);\n    }\n  }\n  const outFile = `${tempDir}/function.wasm`;\n\n  progressBar.start(100, 10);\n  try {\n    const encryptedData = encrypt(PUBLIC_KEY, buffer);\n    progressBar.update(50);\n\n    await fs.promises.writeFile(outFile, encryptedData);\n  } catch (error) {\n    progressBar.stop();\n    throw new FleekFunctionWasmEncryptionFailedError({});\n  }\n  progressBar.update(100);\n  progressBar.stop();\n\n  return outFile;\n};\n\nexport const getWasmCodeFromPath = async (args: {\n  filePath: string;\n}) => {\n  const { filePath } = args;\n\n  if (!fs.existsSync(filePath)) {\n    throw new FleekFunctionPathNotValidError({ path: filePath });\n  }\n\n  return enryptCode({ filePath });\n};\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\nimport { isValidFolder } from '@fleek-platform/utils-validation';\nimport { output } from '../../../cli';\nimport { t } from '../../../utils/translation';\n\nexport const uploadFunctionAssets = async ({\n  sdk,\n  assetsPath,\n  functionName,\n}: {\n  sdk: FleekSdk;\n  functionName: string;\n  assetsPath?: string;\n}): Promise<string | undefined> => {\n  if (!assetsPath) {\n    return;\n  }\n\n  if (!(await isValidFolder(assetsPath))) {\n    output.error(t('assetsPathIsNotAFolder'));\n    return;\n  }\n\n  try {\n    output.spinner(t('uploadingAssets'));\n    const result = await sdk.storage().uploadDirectory({\n      path: assetsPath,\n      options: {\n        functionName,\n      },\n    });\n    output.success(t('assetsUploadSuccess'));\n    return result.pin.cid;\n  } catch (error) {\n    output.error(t('uploadAssetsFailed'));\n    throw error;\n  }\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\n\nconst listAction: SdkGuardedFunction = async ({ sdk }) => {\n  const functions = await sdk.functions().list();\n\n  if (!functions?.length) {\n    output.warn(t('noYYet', { name: 'functions' }));\n    output.log(t('youCanDoXUsingFolCmd', { action: t('createNewFunction') }));\n    output.log('fleek functions create');\n\n    return;\n  }\n\n  output.table(\n    functions.map((f) => ({\n      ID: f.id,\n      Name: f.name,\n      Slug: f.slug,\n      InvokeUrl: f.invokeUrl,\n      Status: f.status,\n    })),\n  );\n};\n\nexport const listActionHandler = withGuards(listAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getFunctionOrPrompt } from './prompts/getFunctionOrPrompt';\n\ntype ListDeploymentActionArgs = {\n  name?: string;\n};\n\nconst listDeploymentsAction: SdkGuardedFunction<\n  ListDeploymentActionArgs\n> = async ({ sdk, args }) => {\n  const functionToList = await getFunctionOrPrompt({ sdk, name: args.name });\n\n  if (!functionToList) {\n    output.error(t('expectedNotFoundGeneric', { name: 'function' }));\n\n    return;\n  }\n\n  const deployments = await sdk\n    .functions()\n    .listDeployments({ functionId: functionToList.id });\n\n  if (!deployments?.length) {\n    output.warn(t('noYYet', { name: 'deployments' }));\n    output.log(t('youCanDoXUsingFolCmd', { action: t('deployNewFunction') }));\n    output.log('fleek functions deploy');\n\n    return;\n  }\n\n  output.table(\n    deployments.map((d) => ({\n      ID: d.id,\n      CID: d.cid,\n      'Created At': d.createdAt,\n    })),\n  );\n};\n\nexport const listDeploymentsActionHandler = withGuards(listDeploymentsAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { FleekFunctionSlugNotValidError } from '@fleek-platform/errors';\nimport { isFunctionSlugValid } from '@fleek-platform/utils-validation';\n\ntype GetFunctionSlugOrPromptArgs = {\n  slug?: string;\n};\n\nexport const getFunctionSlugOrPrompt = async ({\n  slug,\n}: GetFunctionSlugOrPromptArgs): Promise<string | undefined> => {\n  if (slug && isFunctionSlugValid({ slug })) {\n    return slug;\n  }\n\n  if (!slug) return;\n\n  throw new FleekFunctionSlugNotValidError({ slug });\n};\n", "import { FleekFunctionStatusNotValidError } from '@fleek-platform/errors';\nimport type { FleekFunctionStatus } from '@fleek-platform/sdk/node';\nimport { isFunctionStatusValid } from '@fleek-platform/utils-validation';\n\ntype GetFunctionStatusOrPromptArgs = {\n  status?: string;\n};\n\nexport const getFunctionStatusOrPrompt = async ({\n  status,\n}: GetFunctionStatusOrPromptArgs): Promise<FleekFunctionStatus> => {\n  if (status && isFunctionStatusValid({ status })) {\n    return status as FleekFunctionStatus;\n  }\n\n  throw new FleekFunctionStatusNotValidError({});\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getFunctionNameOrPrompt } from './prompts/getFunctionNameOrPrompt';\nimport { getFunctionOrPrompt } from './prompts/getFunctionOrPrompt';\nimport { getFunctionSlugOrPrompt } from './prompts/getFunctionSlugOrPrompt';\nimport { getFunctionStatusOrPrompt } from './prompts/getFunctionStatusOrPrompt';\n\ntype UpdateFunctionArgs = {\n  functionName?: string;\n  name?: string;\n  slug?: string;\n  status?: string;\n};\n\nconst updateAction: SdkGuardedFunction<UpdateFunctionArgs> = async ({\n  args,\n  sdk,\n}) => {\n  if (!args.name && !args.slug && !args.status) {\n    output.error(\n      t('functionUpdateArgsNotValid', {\n        param1: 'name',\n        param2: 'slug',\n        param3: 'status',\n      }),\n    );\n\n    return;\n  }\n\n  const name = args.name\n    ? await getFunctionNameOrPrompt({ name: args.name })\n    : undefined;\n  const slug = args.slug\n    ? await getFunctionSlugOrPrompt({ slug: args.slug })\n    : undefined;\n  const status = args.status\n    ? await getFunctionStatusOrPrompt({ status: args.status })\n    : undefined;\n\n  const fleekFunction = await getFunctionOrPrompt({\n    name: args.functionName,\n    sdk,\n  });\n\n  if (!fleekFunction) {\n    output.error(t('expectedNotFoundGeneric', { name: 'function' }));\n\n    return;\n  }\n\n  await sdk.functions().update({ id: fleekFunction.id, slug, status, name });\n\n  output.printNewLine();\n  output.success(\n    t('commonItemActionSuccess', {\n      subject: t('function'),\n      action: t('updated'),\n    }),\n  );\n  output.printNewLine();\n};\n\nexport const updateActionHandler = withGuards(updateAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { createActionHandler } from './create';\nimport { deleteActionHandler } from './delete';\nimport { deployActionHandler } from './deploy';\nimport { listActionHandler } from './list';\nimport { listDeploymentsActionHandler } from './listDeployments';\nimport { updateActionHandler } from './update';\n\ntype DeployOptions = {\n  path?: string;\n  name?: string;\n  bundle: string;\n  private: boolean;\n  env?: string[];\n  envFile?: string;\n  sgx?: boolean;\n  assets?: string;\n};\n\nexport default (program: Command): Command => {\n  const cmd = program\n    .command('functions')\n    .description(t('functionsDescription'));\n\n  cmd\n    .command('create')\n    .option('-n, --name <functionName>', t('functionName'))\n    .option('--site <siteId>', t('functionsSite'))\n    .description(t('functionsCreateDescription'))\n    .action((options: { name?: string; site?: string }) =>\n      createActionHandler({ name: options.name, siteId: options.site }),\n    );\n\n  cmd\n    .command('delete')\n    .description(t('functionsDeleteDescription'))\n    .option('-n, --name <functionName>', t('functionName'))\n    .action((options: { name?: string }) =>\n      deleteActionHandler({ name: options.name }),\n    );\n\n  cmd\n    .command('update')\n    .description(t('functionsUpdateDescription'))\n    .option('-n, --functionName <functionName>', t('functionName'))\n    .option('--name <newName>', t('functionName'))\n    .option('--slug <newSlug>', t('functionSlug'))\n    .option('--status <newStatus>', t('functionStatus'))\n    .action(\n      (options: {\n        functionName?: string;\n        name?: string;\n        slug?: string;\n        status?: string;\n      }) =>\n        updateActionHandler({\n          functionName: options.functionName,\n          name: options.name,\n          slug: options.slug,\n          status: options.status,\n        }),\n    );\n\n  cmd\n    .command('deploy')\n    .description(t('deployFunction'))\n    .option('-p, --path <functionCodePath>', t('functionCodePath'))\n    .option('-n, --name <functionName>', t('functionName'))\n    .option('-b, --bundle <bundle>', t('bundleCmd'), true)\n    .option('--private', t('functionDeployToPrivateStorage'), false)\n    .option('-e, --env <environmentVariables...>', t('environmentVariables'))\n    .option('--sgx', t('functionsUseSgx'), false)\n    .option('-a --assets <assetsPath>', t('functionsUseAssets'), false)\n    .option(\n      '--envFile <environmentVariablesFilePath>',\n      t('environmentVariablesFile'),\n    )\n    .action((options: DeployOptions) =>\n      deployActionHandler({\n        filePath: options.path,\n        name: options.name,\n        bundle: options.bundle,\n        private: options.private,\n        env: options.env ?? [],\n        envFile: options.envFile,\n        sgx: options.sgx,\n        assetsPath: options.assets,\n      }),\n    );\n\n  cmd\n    .command('list')\n    .description(t('listFunctionsDesc'))\n    .action(() => listActionHandler());\n\n  cmd\n    .command('deployments')\n    .option('-n, --name <functionName>', t('functionName'))\n    .description(t('deploymentsListForSelectedFunction'))\n    .action((options: { name?: string }) =>\n      listDeploymentsActionHandler(options),\n    );\n\n  return cmd;\n};\n", "import { PrivateGatewayNameInvalidError } from '@fleek-platform/errors';\nimport { isPrivateGatewayNameValid } from '@fleek-platform/utils-validation';\n\nimport { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetPrivateGatewayNameOrPromptArgs = {\n  name?: string;\n};\n\nexport const getPrivateGatewayNameOrPrompt = async ({\n  name,\n}: GetPrivateGatewayNameOrPromptArgs) => {\n  if (name && isPrivateGatewayNameValid({ name })) {\n    return name;\n  }\n\n  if (name && !isPrivateGatewayNameValid({ name })) {\n    throw new PrivateGatewayNameInvalidError({ name });\n  }\n\n  return textPrompt({\n    message: t('gatewayEnterName'),\n    validate: (partialName: string) =>\n      isPrivateGatewayNameValid({ name: partialName }) ||\n      t('gatewayNameIncorrectForm'),\n  });\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { createDomainAction } from '../domains/create';\nimport { waitForZoneCreationResult } from '../domains/wait/waitForZoneCreationResult';\nimport { getPrivateGatewayNameOrPrompt } from './prompts/getPrivateGatewayNameOrPrompt';\n\nexport type CreatePrivateGatewayActionArgs = {\n  name?: string;\n};\n\nexport const createPrivateGatewayAction: SdkGuardedFunction<\n  CreatePrivateGatewayActionArgs\n> = async ({ sdk, args }) => {\n  const name = await getPrivateGatewayNameOrPrompt({ name: args.name });\n\n  output.spinner(`${t('creatingNewGateway')}...`);\n\n  const zone = await sdk.domains().createZoneForPrivateGateway();\n\n  const zoneCreationResult = await waitForZoneCreationResult({ sdk, zone });\n\n  if (zoneCreationResult !== 'CREATED') {\n    output.error(t('gatewayNotCreated'));\n    output.printNewLine();\n\n    return;\n  }\n\n  const privateGateway = await sdk\n    .privateGateways()\n    .create({ name, zoneId: zone.id });\n\n  output.printNewLine();\n  output.success(\n    t('commonNameCreateSuccess', { name: `${t('privateGateway')} \"${name}\"` }),\n  );\n  output.printNewLine();\n\n  await createDomainAction({\n    sdk,\n    args: { privateGatewayId: privateGateway.id },\n  });\n};\n\nexport const createPrivateGatewayActionHandler = withGuards(\n  createPrivateGatewayAction,\n  {\n    scopes: { authenticated: true, project: true, site: false },\n  },\n);\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getPrivateGatewayOrPrompt } from './prompts/getPrivateGatewayOrPrompt';\n\ntype DeletePrivateGatewayActionArgs = {\n  id?: string;\n  slug?: string;\n};\n\nexport const deletePrivateGatewayAction: SdkGuardedFunction<\n  DeletePrivateGatewayActionArgs\n> = async ({ sdk, args }) => {\n  const privateGateway = await getPrivateGatewayOrPrompt({\n    sdk,\n    id: args.id,\n    slug: args.slug,\n  });\n\n  if (!privateGateway) {\n    output.error(t('noPrivateGatewaysFoundUnexpectedly'));\n\n    return;\n  }\n\n  output.spinner(t('deletingGateway'));\n\n  await sdk.privateGateways().delete({ id: privateGateway.id });\n\n  output.printNewLine();\n  output.success(\n    t('commonItemActionSuccess', {\n      subject: `${t('privateGateway')} \"${privateGateway.name}\"`,\n      action: t('deleted'),\n    }),\n  );\n};\n\nexport const deletePrivateGatewayActionHandler = withGuards(\n  deletePrivateGatewayAction,\n  {\n    scopes: { authenticated: true, project: true, site: false },\n  },\n);\n", "import { getPrivateIpfsGatewayUrl } from '@fleek-platform/utils-ipfs';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getPrivateGatewayOrPrompt } from './prompts/getPrivateGatewayOrPrompt';\n\ntype DetailPrivateGatewayActionArgs = {\n  id?: string;\n  slug?: string;\n};\n\nexport const detailPrivateGatewayAction: SdkGuardedFunction<\n  DetailPrivateGatewayActionArgs\n> = async ({ args, sdk }) => {\n  const privateGateway = await getPrivateGatewayOrPrompt({\n    sdk,\n    id: args.id,\n    slug: args.slug,\n  });\n\n  if (!privateGateway) {\n    output.error(t('expectedNotFoundGeneric', { name: 'private gateway' }));\n\n    return;\n  }\n\n  output.table([\n    {\n      ID: privateGateway.id,\n      Slug: privateGateway.slug,\n      Name: privateGateway.name,\n      'Created At': privateGateway.createdAt,\n    },\n  ]);\n\n  const zoneId = privateGateway.zone?.id;\n\n  const domains = zoneId ? await sdk.domains().listByZoneId({ zoneId }) : [];\n\n  if (domains.length === 0) {\n    output.log(t('gatewayNoDomainsAss'));\n\n    return;\n  }\n\n  output.log(`${t('acccessContentViaDomain')}:`);\n\n  for (const domain of domains) {\n    output.link(\n      getPrivateIpfsGatewayUrl({ hostname: domain.hostname, hash: '<cid>' }),\n    );\n  }\n\n  output.printNewLine();\n};\n\nexport const detailPrivateGatewayActionHandler = withGuards(\n  detailPrivateGatewayAction,\n  {\n    scopes: { authenticated: true, project: true, site: false },\n  },\n);\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\n\nexport const listPrivateGatewaysAction: SdkGuardedFunction<\n  Record<string, never>\n> = async ({ sdk }) => {\n  const privateGateways = await sdk.privateGateways().list();\n\n  if (privateGateways.length === 0) {\n    output.log(t('noPrivateGateways'));\n\n    return;\n  }\n\n  output.table(\n    privateGateways.map(({ id, slug, name, createdAt }) => ({\n      ID: id,\n      Slug: slug,\n      Name: name,\n      'Created At': createdAt,\n    })),\n  );\n};\n\nexport const listPrivateGatewaysActionHandler = withGuards(\n  listPrivateGatewaysAction,\n  {\n    scopes: { authenticated: true, project: true, site: false },\n  },\n);\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { createPrivateGatewayActionHandler } from './create';\nimport { deletePrivateGatewayActionHandler } from './delete';\nimport { detailPrivateGatewayActionHandler } from './detail';\nimport { listPrivateGatewaysActionHandler } from './list';\n\nexport default (program: Command): Command => {\n  const cmd = program\n    .command('gateways')\n    .description(t('gatewaysCmdDescription'));\n\n  cmd\n    .command('list')\n    .description(t('listAllPrvGwForSelectProject'))\n    .action(() => listPrivateGatewaysActionHandler());\n\n  cmd\n    .command('detail')\n    .option(\n      '--id <string>',\n      t('nameOfSubjectForDetails', {\n        name: t('id'),\n        subject: t('privateGateway'),\n      }),\n    )\n    .option(\n      '--slug <string>',\n      t('nameOfSubjectForDetails', {\n        name: t('sdkPoweredApp'),\n        subject: t('privateGateway'),\n      }),\n    )\n    .description(t('gatewayShowDetails'))\n    .action((options: { id?: string; slug?: string }) =>\n      detailPrivateGatewayActionHandler(options),\n    );\n\n  cmd\n    .command('create')\n    .option('--name <string>', t('gatewayCreateName'))\n    .description(t('gatewayCreateCmdDesc'))\n    .action((options: { name?: string }) =>\n      createPrivateGatewayActionHandler(options),\n    );\n\n  cmd\n    .command('delete')\n    .option(\n      '--id <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('id'),\n        subject: t('privateGateway'),\n        action: t('delete'),\n      }),\n    )\n    .option(\n      '--slug <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('humanReadableSlugDesc'),\n        subject: t('privateGateway'),\n        action: t('delete'),\n      }),\n    )\n    .description(t('gatewayDelete'))\n    .action((options: { id?: string; slug?: string }) =>\n      deletePrivateGatewayActionHandler(options),\n    );\n\n  return cmd;\n};\n", "import fs from 'node:fs';\n\nimport {\n  getFleekXyzIpfsGatewayUrl,\n  getPrivateIpfsGatewayUrl,\n} from '@fleek-platform/utils-ipfs';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getAllActivePrivateGatewayDomains } from '../gateways/utils/getAllPrivateGatewayDomains';\nimport { uploadPathOnIpfs } from './utils/uploadPathOnIpfs';\n\ntype AddActionArgs = {\n  path: string;\n};\n\nconst addAction: SdkGuardedFunction<AddActionArgs> = async ({ sdk, args }) => {\n  if (!fs.existsSync(args.path)) {\n    output.error(t('filePathNotFound', { path: args.path }));\n    output.printNewLine();\n\n    return;\n  }\n\n  output.spinner(t('uploadingFiles'));\n\n  const root = await uploadPathOnIpfs({ sdk, path: args.path });\n\n  if (!root) {\n    output.error(t('uploadFailureSomeReason'));\n    output.printNewLine();\n\n    return;\n  }\n\n  const privateGatewayDomains = await getAllActivePrivateGatewayDomains({\n    sdk,\n  });\n\n  const hash = root.cid.toString();\n  const successMsg = t('uploadPathSuccessWithCID', { path: args.path, hash });\n\n  output.success(successMsg);\n  output.printNewLine();\n\n  if (privateGatewayDomains.length === 0) {\n    output.hint(`${t('getFileFromPubAddr')}:`);\n    output.link(getFleekXyzIpfsGatewayUrl(hash));\n\n    return;\n  }\n\n  output.log(`${t('visitViaPvtGw')}:`);\n\n  for (const privateGatewayDomain of privateGatewayDomains) {\n    output.link(\n      getPrivateIpfsGatewayUrl({\n        hostname: privateGatewayDomain.hostname,\n        hash,\n      }),\n    );\n  }\n};\n\nexport const addActionHandler = withGuards(addAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Domain, DomainStatus, FleekSdk } from '@fleek-platform/sdk/node';\n\ntype DomainFilter = {\n  status?: DomainStatus;\n  isVerified?: boolean;\n};\ntype GetAllPrivateGatewayDomainsArgs = {\n  sdk: FleekSdk;\n  filter?: DomainFilter;\n};\n\ntype GetAllActivePrivateGatewayDomainsArgs = Pick<\n  GetAllPrivateGatewayDomainsArgs,\n  'sdk'\n>;\n\nexport const getAllPrivateGatewayDomains = async ({\n  sdk,\n  filter,\n}: GetAllPrivateGatewayDomainsArgs): Promise<Domain[]> => {\n  const privateGateways = await sdk.privateGateways().list();\n\n  if (privateGateways.length === 0) {\n    return [];\n  }\n\n  const domainPromises = privateGateways.map(async (privateGateway) => {\n    const zoneId = privateGateway.zone?.id;\n\n    if (!zoneId) return [];\n\n    return sdk.domains().listByZoneId({ zoneId });\n  });\n\n  const domains = (await Promise.all(domainPromises)).flat();\n\n  return filter && Object.keys(filter).length > 0\n    ? domains.filter((domain: Domain) =>\n        Object.entries(filter).every(([key, value]) => {\n          return domain[key as keyof Domain] === value;\n        }),\n      )\n    : domains;\n};\n\nexport const getAllActivePrivateGatewayDomains = async ({\n  sdk,\n}: GetAllActivePrivateGatewayDomainsArgs): Promise<Domain[]> => {\n  return await getAllPrivateGatewayDomains({\n    sdk,\n    filter: { status: 'ACTIVE' },\n  });\n};\n", "import { promises as fs } from 'node:fs';\nimport { basename } from 'node:path';\nimport type { FleekSdk } from '@fleek-platform/sdk/node';\n\ntype UploadPathOnIpfsArgs = {\n  sdk: FleekSdk;\n  path: string;\n};\n\nexport const uploadPathOnIpfs = async ({ sdk, path }: UploadPathOnIpfsArgs) => {\n  const stat = await fs.stat(path);\n\n  if (stat.isDirectory()) {\n    const uploadResults = await sdk.ipfs().addFromPath(path, {\n      wrapWithDirectory: true,\n      // We must pass plain object instead of URLSearchParams because of ipfs-http-client bug\n      searchParams: { alias: basename(path) } as unknown as URLSearchParams,\n    });\n\n    return uploadResults.pop();\n  }\n\n  const content = await fs.readFile(path);\n\n  return sdk.ipfs().add({ path, content });\n};\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { addActionHandler } from './add';\n\nexport default (program: Command): Command => {\n  const cmd = program.command('ipfs').description(t('ipfsDescription'));\n\n  cmd\n    .command('add')\n    .description(t('ipfsAddDescription'))\n    .argument('<path>', t('ipfsAddPathDescription'))\n    .action((path: string) => addActionHandler({ path }));\n\n  return cmd;\n};\n", "import { getIpnsGatewayUrl } from '@fleek-platform/utils-ipns';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getSiteToAssignRecordOrPrompt } from './prompts/getSiteToAssignRecordOrPrompt';\n\ntype CreateActionArgs = {\n  siteId?: string;\n  siteSlug?: string;\n};\n\nconst createAction: SdkGuardedFunction<CreateActionArgs> = async ({\n  sdk,\n  args,\n}) => {\n  const site = await getSiteToAssignRecordOrPrompt({\n    sdk,\n    siteId: args.siteId,\n    siteSlug: args.siteSlug,\n  });\n\n  const record = site\n    ? await sdk.ipns().createRecordForSite({ siteId: site.id })\n    : await sdk.ipns().createRecord();\n\n  output.printNewLine();\n  output.success(t('ipnsCreatedIPNSHash', { hash: record.name }));\n  output.printNewLine();\n\n  if (site) {\n    output.chore(t('ipnsRecordToPublishAuto', { name: site.name }));\n  } else {\n    output.hint(t('youCanDoXUsingFolCmd', { action: t('publishIPNSRecord') }));\n    output.log(`fleek ipns publish --name ${record.name} --hash <ipfsCid>`);\n    output.printNewLine();\n  }\n\n  output.hint(`${t('ipnsAfterPubRecordVisitGw')}:`);\n  output.link(getIpnsGatewayUrl(record.name));\n};\n\nexport const createActionHandler = withGuards(createAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { FleekSdk, Site } from '@fleek-platform/sdk/node';\n\nimport { confirmPrompt } from '../../../prompts/confirmPrompt';\nimport { getSiteOrPrompt } from '../../sites/prompts/getSiteOrPrompt';\n\ntype GetSiteToAssignRecordOrPromptArgs = {\n  sdk: FleekSdk;\n  siteId?: string;\n  siteSlug?: string;\n};\n\nexport const getSiteToAssignRecordOrPrompt = async ({\n  sdk,\n  siteId,\n  siteSlug,\n}: GetSiteToAssignRecordOrPromptArgs): Promise<Site | undefined | null> => {\n  if (!siteId && !siteSlug) {\n    const shouldSiteAssignToRecord = await confirmPrompt({\n      message: 'Do you want to assign new IPNS record to the site?',\n      initial: false,\n    });\n\n    if (!shouldSiteAssignToRecord) {\n      return null;\n    }\n  }\n\n  return getSiteOrPrompt({ sdk, id: siteId, slug: siteSlug });\n};\n", "import { confirmPrompt } from '../../../prompts/confirmPrompt';\n\nexport const confirmDeleteRecordPrompt = async () =>\n  confirmPrompt({\n    message: 'Are you sure you want to delete the record?',\n    initial: false,\n  });\n", "import { IpnsRecordsNotFoundError } from '@fleek-platform/errors';\nimport type { FleekSdk, IpnsRecord } from '@fleek-platform/sdk/node';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetRecordOrPromptArgs = {\n  sdk: FleekSdk;\n  name?: string;\n};\n\nexport const getRecordOrPrompt = async ({\n  sdk,\n  name,\n}: GetRecordOrPromptArgs): Promise<\n  Omit<IpnsRecord, '__typename' | 'createdAt' | 'updatedAt'> | undefined\n> => {\n  if (name) {\n    return await sdk.ipns().getRecord({ name });\n  }\n\n  const records = await sdk.ipns().listRecords();\n\n  if (records.length === 0) {\n    throw new IpnsRecordsNotFoundError();\n  }\n\n  const ipnsRecordId = await selectPrompt({\n    message: `${t('ipnsSelectRecord')}:`,\n    choices: records.map((record) => ({\n      title: record.name,\n      value: record.id,\n    })),\n  });\n\n  const ipnsRecordMatch = records.find((record) => record.id === ipnsRecordId);\n\n  if (!ipnsRecordMatch) return;\n\n  return ipnsRecordMatch;\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { confirmDeleteRecordPrompt } from './prompts/confirmDeleteRecordPrompt';\nimport { getRecordOrPrompt } from './prompts/getRecordOrPrompt';\n\ntype DeleteActionArgs = {\n  name?: string;\n};\n\nconst deleteAction: SdkGuardedFunction<DeleteActionArgs> = async ({\n  sdk,\n  args,\n}) => {\n  const foundRecord = await getRecordOrPrompt({ sdk, name: args.name });\n\n  if (!foundRecord) {\n    output.error(t('expectedNotFoundGeneric', { name: 'record' }));\n\n    return;\n  }\n\n  const shouldDeleteRecord = await confirmDeleteRecordPrompt();\n\n  if (!shouldDeleteRecord) {\n    return;\n  }\n\n  await sdk.ipns().deleteRecord({ id: foundRecord.id });\n\n  output.printNewLine();\n  output.success(\n    t('commonItemActionSuccess', {\n      subject: t('ipnsRecord'),\n      action: t('deleted'),\n    }),\n  );\n};\n\nexport const deleteActionHandler = withGuards(deleteAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\n\nconst listAction: SdkGuardedFunction = async ({ sdk }) => {\n  const records = await sdk.ipns().listRecords();\n\n  if (records.length > 0) {\n    return output.table(\n      records.map((record) => ({\n        Name: record.name,\n        CID: record.hash,\n        ID: record.id,\n      })),\n    );\n  }\n\n  return output.log(t('recordsNotFound'));\n};\n\nexport const listActionHandler = withGuards(listAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { getIpnsGatewayUrl } from '@fleek-platform/utils-ipns';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getHashOrPrompt } from './prompts/getHashOrPrompt';\nimport { getRecordOrPrompt } from './prompts/getRecordOrPrompt';\n\ntype PublishActionArgs = {\n  name?: string;\n  hash: string;\n};\n\nconst publishAction: SdkGuardedFunction<PublishActionArgs> = async ({\n  sdk,\n  args,\n}) => {\n  const record = await getRecordOrPrompt({ sdk, name: args.name });\n\n  if (!record) {\n    output.error(t('recordsNotFoundUnexpectedly'));\n\n    return;\n  }\n\n  const hash = await getHashOrPrompt({ hash: args.hash });\n\n  await sdk.ipns().publishRecord({ id: record.id, hash });\n\n  output.printNewLine();\n  output.log(`${t('ipnsVisitPublishedIPNSGw')}:`);\n  output.link(getIpnsGatewayUrl(record.name));\n  output.printNewLine();\n  output.hint(t('ipnsPropagationTimeWarn'));\n};\n\nexport const publishActionHandler = withGuards(publishAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\ntype GetHashOrPromptArgs = {\n  hash?: string;\n};\n\nexport const getHashOrPrompt = async ({ hash }: GetHashOrPromptArgs) => {\n  if (hash) {\n    return hash;\n  }\n\n  return textPrompt({ message: `${t('ipnsTypeValidIPFSHash')}:` });\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\n\ntype ResolveActionArgs = {\n  name: string;\n};\n\nconst resolveAction: SdkGuardedFunction<ResolveActionArgs> = async ({\n  sdk,\n  args,\n}) => {\n  const res = await sdk.ipns().resolveName({ name: args.name });\n  const hash = res.replace('/ipfs/', '');\n\n  output.success(t('ipnsResultHashIs', { hash }));\n  output.printNewLine();\n};\n\nexport const resolveActionHandler = withGuards(resolveAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { createActionHandler } from './create';\nimport { deleteActionHandler } from './delete';\nimport { listActionHandler } from './list';\nimport { publishActionHandler } from './publish';\nimport { resolveActionHandler } from './resolve';\n\nexport default (program: Command): Command => {\n  const cmd = program.command('ipns').description(t('ipnsDescription'));\n\n  cmd\n    .command('create')\n    .description(t('ipnsCreateDescription'))\n    .option(\n      '--siteSlug <string>',\n      t('commonIdentifierXAssignedToSubjectY', {\n        name: 'humanReadableSlugDesc',\n        subject: t('ipnsRecord'),\n      }),\n    )\n    .option(\n      '--siteId <string>',\n      t('commonIdentifierXAssignedToSubjectY', {\n        name: t('uniqueIdentifier'),\n        subject: t('ipnsRecord'),\n      }),\n    )\n    .action((options: { siteId?: string; siteSlug?: string }) =>\n      createActionHandler(options),\n    );\n\n  cmd\n    .command('publish')\n    .description(t('ipnsPublishDescription'))\n    .option('--name <string>', t('ipnsPublishOptionNameDesc'))\n    .option('--hash <string>', t('ipnsPublishOptionHashDesc'))\n    .action((options: { name: string; hash: string }) =>\n      publishActionHandler(options),\n    );\n\n  cmd\n    .command('list')\n    .description(t('ipnsListDescription'))\n    .action(() => listActionHandler());\n\n  cmd\n    .command('delete')\n    .description(t('ipnsDeleteDescription'))\n    .option(\n      '--name <string>',\n      t('commonNameOfSubjectToAction', {\n        name: t('name'),\n        subject: t('ipnsRecord'),\n        action: t('delete'),\n      }),\n    )\n    .action((options: { name: string }) => deleteActionHandler(options));\n\n  cmd\n    .command('resolve')\n    .description(t('ipnsResolveDescription'))\n    .argument('<name>', t('ipnsResolveArgName'))\n    .action((name: string) => resolveActionHandler({ name }));\n\n  return cmd;\n};\n", "import { MissingExpectedDataError } from '@fleek-platform/errors';\nimport type { Command } from 'commander';\n\nimport { getDefined } from '../../defined';\nimport { t } from '../../utils/translation';\nimport { createPersonalAccessTokenActionHandler } from './create';\nimport { deletePersonalAccessTokenActionHandler } from './delete';\nimport { listPersonalAccessTokensActionHandler } from './list';\n\nexport default (program: Command): Command => {\n  const cmd = program.command('pat').description(t('patDescription'));\n\n  cmd\n    .command('list')\n    .description(t('patListDesc'))\n    .action(listPersonalAccessTokensActionHandler);\n\n  cmd\n    .command('create')\n    .description(t('createNewPat'))\n    .option('-n, --name <name>', t('patName'))\n    .action(async (args) => {\n      const uiAppUrl = getDefined('UI__APP_URL');\n      const authApiUrl = getDefined('SDK__GRAPHQL_API_URL');\n\n      if (!uiAppUrl || !authApiUrl) {\n        throw new MissingExpectedDataError();\n      }\n\n      await createPersonalAccessTokenActionHandler({\n        uiAppUrl,\n        authApiUrl,\n        ...args,\n      });\n    });\n\n  cmd\n    .command('delete')\n    .description(t('patDelete'))\n    .argument(\n      '<personalAccessTokenId>',\n      t('commonNameOfSubjectToAction', {\n        name: t('id'),\n        subject: t('personalAccessToken'),\n        action: t('delete'),\n      }),\n    )\n    .action((personalAccessTokenId: string) =>\n      deletePersonalAccessTokenActionHandler({ personalAccessTokenId }),\n    );\n\n  return cmd;\n};\n", "import { createClient } from '@fleek-platform/sdk/node';\n\nimport { output } from '../../cli';\nimport { getPersonalAccessTokenNameOrPrompt } from '../../utils/prompts/getPersonalAccessTokenNameOrPrompt';\nimport { generateVerificationSessionId } from '../../utils/token/generateVerificationSessionId';\nimport { showVerificationSessionLink } from '../../utils/token/showVerificationSessionLink';\nimport { waitForPersonalAccessTokenFromVerificationSession } from '../../utils/token/waitForPersonalAccessTokenFromVerificationSession';\nimport { t } from '../../utils/translation';\n\ntype CreatePersonalAccessTokenActionHandlerArgs = {\n  name?: string;\n  uiAppUrl: string;\n  authApiUrl: string;\n};\n\nexport const createPersonalAccessTokenActionHandler = async ({\n  uiAppUrl,\n  authApiUrl,\n  ...args\n}: CreatePersonalAccessTokenActionHandlerArgs) => {\n  const verificationSessionId = generateVerificationSessionId();\n\n  const name = await getPersonalAccessTokenNameOrPrompt({\n    name: args?.name,\n  });\n  output.printNewLine();\n  showVerificationSessionLink({ output, uiAppUrl, verificationSessionId });\n\n  const personalAccessToken =\n    await waitForPersonalAccessTokenFromVerificationSession({\n      verificationSessionId,\n      client: createClient({ url: authApiUrl }),\n      name,\n    });\n\n  if (!personalAccessToken) {\n    output.error(t('patFetchTimeout'));\n\n    return;\n  }\n\n  output.success(\n    t('newPatIs', { pat: output.textColor(personalAccessToken, 'redBright') }),\n  );\n};\n", "import { textPrompt } from '../../prompts/textPrompt';\n\ntype GetPersonalAccessTokenNameOrPromptArgs = { name?: string };\n\nexport const getPersonalAccessTokenNameOrPrompt = async ({\n  name,\n}: GetPersonalAccessTokenNameOrPromptArgs) => {\n  if (name) {\n    return name;\n  }\n\n  const personalAccessTokenName = await textPrompt({\n    message:\n      'Do you want to name your new personal access token? Keep empty to skip.',\n  });\n\n  return personalAccessTokenName;\n};\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\n\nimport type { Output } from '../../../output/Output';\nimport { t } from '../../../utils/translation';\n\ntype DeletePersonalAccessTokenArgs = {\n  output: Output;\n  sdk: FleekSdk;\n  id: string;\n};\n\nexport const deletePersonalAccessToken = async ({\n  output,\n  sdk,\n  id,\n}: DeletePersonalAccessTokenArgs) => {\n  const success = await sdk\n    .user()\n    .deletePersonalAccessToken({ id })\n    .catch(() => false);\n\n  if (!success) {\n    output.error(t('patIdNotExistForUsr'));\n\n    return;\n  }\n\n  output.printNewLine();\n  output.success(\n    t('commonItemActionSuccess', {\n      subject: t('personalAccessToken'),\n      action: t('deleted'),\n    }),\n  );\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { deletePersonalAccessToken } from './utils/deletePersonalAccessToken';\n\ntype DeletePersonalAccessTokenArgs = {\n  personalAccessTokenId: string;\n};\n\nconst deletePersonalAccessTokenAction: SdkGuardedFunction<\n  DeletePersonalAccessTokenArgs\n> = async ({ sdk, args }) => {\n  await deletePersonalAccessToken({\n    id: args.personalAccessTokenId,\n    output,\n    sdk,\n  });\n};\n\nexport const deletePersonalAccessTokenActionHandler = withGuards(\n  deletePersonalAccessTokenAction,\n  {\n    scopes: {\n      authenticated: true,\n      project: false,\n      site: false,\n    },\n  },\n);\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\n\nexport const listPersonalAccessTokensAction: SdkGuardedFunction = async ({\n  sdk,\n}) => {\n  const personalAccessTokens = await sdk.user().listPersonalAccessTokens();\n\n  if (personalAccessTokens.length === 0) {\n    output.warn(t('noYYet', { name: t('personalAccessToken') }));\n\n    return;\n  }\n\n  output.table(\n    personalAccessTokens.map(({ id, createdAt, name, maskedToken }) => ({\n      ID: id,\n      'Created At': createdAt,\n      Name: name ?? '',\n      Token: maskedToken,\n    })),\n  );\n};\n\nexport const listPersonalAccessTokensActionHandler = withGuards(\n  listPersonalAccessTokensAction,\n  {\n    scopes: {\n      authenticated: true,\n      project: false,\n      site: false,\n    },\n  },\n);\n", "import type { Writable } from 'node:stream';\n\nimport asTable from 'as-table';\nimport boxen, { type Options } from 'boxen';\nimport type { ForegroundColor } from 'chalk';\nimport chalk from 'chalk';\n\nimport { t } from '../utils/translation';\nimport { Waiter } from './utils/wait';\n\nexport type OutputOptions = {\n  debug?: boolean;\n  stream: Writable;\n};\n\n// eslint-disable-next-line no-restricted-syntax\nexport enum Icons {\n  Checkmark = '\u2705',\n  ChequeredFlag = '\uD83C\uDFC1',\n  Cross = '\u274C',\n  Chain = '\uD83D\uDD17',\n  Devil = '\uD83D\uDC79',\n  Lamp = '\uD83D\uDCA1',\n  Robot = '\uD83E\uDD16',\n  Warning = '\u26A0\uFE0F',\n}\n\nexport class Output {\n  private stream: Writable;\n  public debugEnabled: boolean;\n  private spinnerMessage = '';\n  private _spinner: Waiter | null = null;\n\n  constructor(\n    { stream, debug: debugEnabled = false }: OutputOptions = {\n      stream: process.stdout,\n    },\n  ) {\n    this.stream = stream;\n    this.debugEnabled = debugEnabled;\n  }\n\n  public print = (\n    message: string,\n    options: {\n      prefix?: {\n        message: string;\n        color?: typeof ForegroundColor;\n        bold?: boolean;\n      };\n    } = {},\n  ) => {\n    this.stopSpinner();\n\n    // Disable colors for tests\n    if (this.debugEnabled) {\n      chalk.level = 0;\n    }\n\n    const preparedMessage = options.prefix\n      ? `${options.prefix.color ? chalk[options.prefix.color](options.prefix.message) : options.prefix.message} ${\n          options.prefix.bold ? chalk.bold(message) : message\n        }`\n      : message;\n\n    return this.stream.write(preparedMessage);\n  };\n\n  public printNewLine = (count = 1) => {\n    this.print('\\n'.repeat(count));\n  };\n\n  public log = (message: string) => {\n    // TODO: Given that console backgrounds can be of any colour\n    // certain colours such as grey might not be the most accessible e.g. white background\n    // should be verified against brighter consoles and possibly disable colour\n    this.print(message, { prefix: { color: 'gray', message: '>' } });\n    this.printNewLine();\n  };\n\n  public chore = (message: string) => {\n    this.print(message, { prefix: { message: Icons.Robot, bold: false } });\n    this.printNewLine();\n  };\n\n  public hint = (message: string) => {\n    this.print(message, { prefix: { message: Icons.Lamp, bold: true } });\n    this.printNewLine();\n  };\n\n  public warn = (message: string) => {\n    this.print(message, {\n      prefix: { message: `${Icons.Warning} ${t('warning')}!` },\n    });\n    this.printNewLine();\n  };\n\n  public mistake = (message: string) => {\n    this.print(message, {\n      prefix: { message: `${Icons.Devil} ${t('mistake')}!`, bold: false },\n    });\n    this.printNewLine();\n  };\n\n  public error = (message: string) => {\n    this.print(message, {\n      prefix: { message: `${Icons.Cross} ${t('error')}:` },\n    });\n    this.printNewLine();\n  };\n\n  public ready = (message: string) => {\n    this.print(message, {\n      prefix: { message: `${Icons.ChequeredFlag} ${t('ready')}!` },\n    });\n    this.printNewLine();\n  };\n\n  public success = (message: string) => {\n    this.print(message, {\n      prefix: { message: `${Icons.Checkmark} ${t('success')}!` },\n    });\n    this.printNewLine();\n  };\n\n  public link = (url: string) => {\n    this.print(`${Icons.Chain} ${chalk.cyan.underline(url)}`);\n    this.printNewLine();\n  };\n\n  public debug = (message: string) => {\n    if (this.debugEnabled) {\n      // TODO: Given that console backgrounds can be of any colour\n      // certain colours such as grey might not be the most accessible e.g. white background\n      // should be verified against brighter consoles and possibly disable colour\n      this.print(message, {\n        prefix: { color: 'gray', message: `${t('debug')}:` },\n      });\n      this.printNewLine();\n    }\n  };\n\n  public table = (\n    data: { [key: string]: string | number | undefined | null | Date }[],\n  ) => {\n    this.printNewLine();\n    this.print(asTable(data));\n    this.printNewLine(2);\n  };\n\n  public box = (lines: string[], options: Options = {}) => {\n    const defaultOptions: Options = {\n      textAlignment: 'center',\n      margin: 1,\n      padding: 3,\n      float: 'left',\n      borderColor: 'yellow',\n    };\n\n    this.printNewLine();\n    this.print(boxen(lines.join('\\n'), { ...defaultOptions, ...options }));\n    this.printNewLine();\n  };\n\n  public textColor = (message: string, color: typeof ForegroundColor) =>\n    chalk[color](message);\n\n  public quoted = (message: string) => `\"${message}\"`;\n\n  public spinner = (message: string, delay = 300): void => {\n    if (this.debugEnabled) {\n      this.debug(\n        t('spinnerInvokedDelay', { message, delay: delay.toString() }),\n      );\n\n      return;\n    }\n\n    this.spinnerMessage = message;\n\n    if (this._spinner) {\n      this._spinner.setText(message);\n    } else {\n      this._spinner = new Waiter({\n        opts: {\n          text: message,\n          stream: this.stream,\n        },\n        delay,\n      });\n    }\n  };\n\n  public stopSpinner = () => {\n    if (this.debugEnabled && this.spinnerMessage) {\n      this.debug(t('spinnerStopped', { spinnerMessage: this.spinnerMessage }));\n      this.spinnerMessage = '';\n    }\n\n    if (this._spinner) {\n      this._spinner.stop();\n      this._spinner = null;\n      this.spinnerMessage = '';\n    }\n  };\n\n  public raw = (msg: string) => {\n    this.stream.write(msg);\n  };\n}\n", "import chalk from 'chalk';\nimport ora, { type Options, type Ora } from 'ora';\n\nimport { eraseLines } from './eraseLines';\n\ntype WaiterOptions = {\n  opts: Options;\n  delay?: number;\n};\n\nexport class Waiter {\n  private spinner: Ora | null;\n  private text: string;\n  private timeout: NodeJS.Timeout;\n  constructor({ opts, delay = 300 }: WaiterOptions) {\n    this.spinner = null;\n    this.text = opts.text?.slice() ?? '';\n    this.timeout = setTimeout(() => {\n      this.spinner = ora(opts);\n      this.spinner.text = chalk.cyan(this.text);\n      this.spinner.color = 'cyan';\n      this.spinner.start();\n    }, delay);\n  }\n\n  public stop() {\n    clearTimeout(this.timeout);\n\n    if (this.spinner) {\n      this.spinner.stop();\n      this.spinner = null;\n      process.stderr.write(eraseLines(1));\n    }\n  }\n\n  public setText(newText: string) {\n    this.text = newText;\n\n    if (this.spinner) {\n      this.spinner.text = chalk.gray(newText);\n    }\n  }\n}\n", "import { output } from '../../cli';\nimport { config } from '../../config';\nimport { sdkGuard } from '../../guards/sdkGuard';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { Icons } from '../../output/Output';\nimport { t } from '../../utils/translation';\n\nexport const listProjectsAction: SdkGuardedFunction<\n  Record<string, never>\n> = async ({ sdk }) => {\n  const projects = await sdk.projects().list();\n\n  if (projects.length === 0) {\n    output.log(t('noYYet', { name: t('projects') }));\n\n    return;\n  }\n\n  const currentProjectId = config.projectId.get();\n\n  output.table(\n    projects.map(({ id, name, createdAt }) => ({\n      ID: id,\n      Name: name,\n      'Created At': createdAt,\n      Current: currentProjectId === id ? Icons.Checkmark : '',\n    })),\n  );\n};\n\nexport const listProjectsActionHandler = sdkGuard(listProjectsAction);\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { createProjectActionHandler } from './create';\nimport { listProjectsActionHandler } from './list';\nimport { switchProjectActionHandler } from './switch';\n\nexport default (program: Command): Command => {\n  const cmd = program.command('projects').description(t('projectsDescription'));\n\n  cmd\n    .command('list')\n    .description(t('projectsListDesc'))\n    .action(() => listProjectsActionHandler());\n\n  cmd\n    .command('switch')\n    .option('--id <string>', t('projectsSwitchOptId'))\n    .description(t('projectsSwitchBetween'))\n    .action((options: { id?: string }) => switchProjectActionHandler(options));\n\n  cmd\n    .command('create')\n    .option('--name <string>', t('projectsWhatNameOfProject'))\n    .description(t('projectsCreateNewDesc'))\n    .action((options: { name: string }) => createProjectActionHandler(options));\n\n  return cmd;\n};\n", "import type { Choice } from 'prompts';\n\nimport { selectPrompt } from '../../../prompts/selectPrompt';\nimport { t } from '../../../utils/translation';\n\nconst providerChoices: Choice[] = [\n  {\n    title: 'GitHub Actions',\n    description: t('githubActionGenDescription'),\n    value: 'github',\n  },\n];\n\nexport type CIProvider = 'github';\n\ntype GetCIProviderOrPromptArgs = {\n  provider?: CIProvider | undefined;\n};\n\nexport const getCIProviderOrPrompt = async (\n  args?: GetCIProviderOrPromptArgs,\n): Promise<CIProvider> => {\n  if (args?.provider) {\n    return args.provider;\n  }\n\n  const provider = await selectPrompt({\n    message: `${t('selectProviderForBuildDeploySite')}:`,\n    choices: providerChoices,\n    initial: 0,\n  });\n\n  return provider;\n};\n", "import { join as joinPath } from 'node:path';\n\nimport { generateDeploymentWorkflowYaml } from '@fleek-platform/utils-github';\nimport { parse as parseSemver } from 'semver';\n\nimport type { Output } from '../../../output/Output';\nimport { fileExists } from '../../../utils/fs';\nimport { confirmFileOverridePrompt } from '../prompts/confirmFileOverridePrompt';\nimport { getDeploymentWorkflowYamlLocation } from './getDeploymentWorkflowYamlLocation';\nimport { initializeDeploymentWorkflowDirectory } from './initializeDeploymentWorkflowDirectory';\nimport { requestDeploymentWorkflowInstallCommand } from './requestDeploymentWorkflowInstallCommand';\nimport { saveDeploymentWorkflowYaml } from './saveDeploymentWorkflowYaml';\nimport { loadJSONFromPackageRoot } from '../../../utils/json';\n\nexport const ghWorkflowFilename = 'fleek-deploy.yaml';\nexport const ghActionsWorflowsDirectory = joinPath(\n  process.cwd(),\n  '.github/workflows',\n);\nexport const ghActionsDeploySitesYamlPath = joinPath(\n  ghActionsWorflowsDirectory,\n  ghWorkflowFilename,\n);\n\ntype PrepareGitHubActionsIntegrationArgs = {\n  personalAccessToken: string;\n  projectId: string;\n  fleekConfigPath?: string;\n  output: Output;\n};\n\nexport const prepareGitHubActionsIntegration = async ({\n  personalAccessToken,\n  projectId,\n  fleekConfigPath,\n  output,\n}: PrepareGitHubActionsIntegrationArgs) => {\n  let nodeVersion;\n\n  try {\n    const nodeSemver = loadJSONFromPackageRoot(\n      'package.json',\n    ).engines.node.replace(/[^0-9\\.]+/, '');\n\n    nodeVersion = parseSemver(nodeSemver)?.major ?? 18;\n  } catch {\n    nodeVersion = 18;\n  }\n\n  const installCommand = await requestDeploymentWorkflowInstallCommand();\n  const yamlContent = generateDeploymentWorkflowYaml({\n    nodeVersion,\n    fleekConfigPath,\n    installCommand,\n  });\n  const yamlPath = await getDeploymentWorkflowYamlLocation();\n  const pathExists = await fileExists(yamlPath);\n\n  if (pathExists && !(await confirmFileOverridePrompt({ path: yamlPath }))) {\n    return;\n  }\n\n  if (yamlPath === ghActionsDeploySitesYamlPath) {\n    await initializeDeploymentWorkflowDirectory({\n      output,\n      ghActionsWorflowsDirectory,\n    });\n  }\n\n  await saveDeploymentWorkflowYaml({\n    yamlPath,\n    yamlContent,\n    personalAccessToken,\n    projectId,\n    output,\n  });\n};\n", "import { confirmPrompt } from '../../../prompts/confirmPrompt';\nimport { t } from '../../../utils/translation';\n\ntype ConfirmFileOverridePromptArgs = { path: string };\n\nexport const confirmFileOverridePrompt = async ({\n  path,\n}: ConfirmFileOverridePromptArgs): Promise<boolean> =>\n  confirmPrompt({\n    message: t('fileExistAskIfOverwrite', { path }),\n    initial: true,\n  });\n", "import { join as joinPath } from 'node:path';\n\nimport { t } from '../../../utils/translation';\nimport { confirmWorkflowCustomPathPrompt } from '../prompts/confirmWorkflowCustomPathPrompt';\nimport { enterDirectoryPathPrompt } from '../prompts/enterDirectoryPathPrompt';\nimport {\n  ghActionsDeploySitesYamlPath,\n  ghWorkflowFilename,\n} from './prepareGitHubActionsIntegration';\n\nexport const getDeploymentWorkflowYamlLocation = async (): Promise<string> => {\n  const useCustomLocation = await confirmWorkflowCustomPathPrompt({\n    path: ghActionsDeploySitesYamlPath,\n  });\n\n  if (useCustomLocation === false) {\n    return ghActionsDeploySitesYamlPath;\n  }\n\n  const directory = await enterDirectoryPathPrompt({\n    message: t('specifyDirToSaveWorkConf'),\n  });\n  const yamlPath = joinPath(directory, ghWorkflowFilename);\n\n  return yamlPath;\n};\n", "import { confirmPrompt } from '../../../prompts/confirmPrompt';\nimport { t } from '../../../utils/translation';\n\ntype ConfirmWorkflowCustomPathPromptArgs = { path: string };\n\nexport const confirmWorkflowCustomPathPrompt = async ({\n  path,\n}: ConfirmWorkflowCustomPathPromptArgs): Promise<boolean> =>\n  confirmPrompt({\n    message: t('workflowToBeSavePathOrOther', { path }),\n    initial: false,\n  });\n", "import { promises as fs } from 'node:fs';\n\nimport type { Output } from '../../../output/Output';\nimport { t } from '../../../utils/translation';\nimport { directoryExists } from './directoryExists';\n\ntype InitializeDeploymentWorkflowDirectoryArgs = {\n  output: Output;\n  ghActionsWorflowsDirectory: string;\n};\n\nexport const initializeDeploymentWorkflowDirectory = async ({\n  output,\n  ghActionsWorflowsDirectory,\n}: InitializeDeploymentWorkflowDirectoryArgs) => {\n  const exists = await directoryExists(ghActionsWorflowsDirectory);\n\n  if (exists) {\n    return;\n  }\n\n  output.warn(t('cantFindGithubWorkfl'));\n  output.warn(t('creatingGithubWorkflDir'));\n  await fs.mkdir(ghActionsWorflowsDirectory, { recursive: true });\n};\n", "import { confirmPrompt } from '../../../prompts/confirmPrompt';\nimport { t } from '../../../utils/translation';\n\ntype ConfirmInstallCommandPromptArgs = { installCommand: string };\n\nexport const confirmInstallCommandPrompt = async ({\n  installCommand,\n}: ConfirmInstallCommandPromptArgs) =>\n  confirmPrompt({\n    message: t('isGenInstallCmdCorrect', { installCommand }),\n    initial: true,\n  });\n", "import { confirmPrompt } from '../../../prompts/confirmPrompt';\nimport { t } from '../../../utils/translation';\n\nexport const confirmUserWantsInstallCommandPrompt = async () =>\n  confirmPrompt({\n    message: t('runInstallCmdBeforeBuild'),\n    initial: false,\n  });\n", "import { confirmPrompt } from '../../../prompts/confirmPrompt';\nimport { t } from '../../../utils/translation';\n\nexport const confirmUserWantsToSpecifyInstallCommandPrompt = async () =>\n  confirmPrompt({\n    message: t('specifyinstallCmdOpt'),\n    initial: true,\n  });\n", "import { textPrompt } from '../../../prompts/textPrompt';\nimport { t } from '../../../utils/translation';\n\n// TODO: All these prompts should be transformed into a generic method\nexport const enterInstallCommandPrompt = async () =>\n  textPrompt({\n    message: `${t('specifyInstallCmd')}:`,\n  });\n", "import { promises as fs } from 'node:fs';\n\nimport { output } from '../../../cli';\nimport { t } from '../../../utils/translation';\n\nconst lockToInstallCommandMap: { [key: string]: string } = {\n  'yarn.lock': 'npm install -g yarn && yarn install',\n  'pnpm-lock.yaml': 'npm install -g pnpm && pnpm install',\n  'package-lock.json': 'npm install',\n};\n\nexport const deriveInstallCommandFromLockfile = async () => {\n  const directoryContents = await fs.readdir(process.cwd());\n  const lockFile = directoryContents.find((file) => file.includes('lock'));\n\n  if (!lockFile) {\n    output.warn(t('noLockfileFound'));\n\n    return;\n  }\n\n  return lockToInstallCommandMap[lockFile];\n};\n", "import { loadConfiguration } from '../../../utils/configuration/loadConfiguration';\nimport { confirmInstallCommandPrompt } from '../prompts/confirmInstallCommandPrompt';\nimport { confirmUserWantsInstallCommandPrompt } from '../prompts/confirmUserWantsInstallCommandPrompt';\nimport { confirmUserWantsToSpecifyInstallCommandPrompt } from '../prompts/confirmUserWantsToSpecifyInstallCommandPrompt';\nimport { enterInstallCommandPrompt } from '../prompts/enterInstallCommandPrompt';\nimport { deriveInstallCommandFromLockfile } from './deriveInstallCommandFromLockfile';\n\nexport const requestDeploymentWorkflowInstallCommand = async () => {\n  const config = await loadConfiguration({}).catch(() => null);\n\n  if (config === null || !config.sites[0]?.buildCommand) {\n    return;\n  }\n\n  const wantsInstallCommand = await confirmUserWantsInstallCommandPrompt();\n\n  if (!wantsInstallCommand) {\n    return;\n  }\n\n  const wantsToSpecifyCommand =\n    await confirmUserWantsToSpecifyInstallCommandPrompt();\n\n  if (wantsToSpecifyCommand) {\n    return enterInstallCommandPrompt();\n  }\n\n  const installCommand = await deriveInstallCommandFromLockfile();\n\n  if (\n    !installCommand ||\n    !(await confirmInstallCommandPrompt({ installCommand }))\n  ) {\n    return enterInstallCommandPrompt();\n  }\n\n  return installCommand;\n};\n", "import { promises as fs } from 'node:fs';\nimport chalk from 'chalk';\n\nimport type { Output } from '../../../output/Output';\nimport { t } from '../../../utils/translation';\n\ntype SaveDeploymentWorkflowYamlArgs = {\n  yamlPath: string;\n  yamlContent: string;\n  projectId: string;\n  personalAccessToken: string;\n  output: Output;\n};\n\nexport const saveDeploymentWorkflowYaml = async ({\n  yamlContent,\n  yamlPath,\n  personalAccessToken,\n  projectId,\n  output,\n}: SaveDeploymentWorkflowYamlArgs) => {\n  try {\n    await fs.writeFile(yamlPath, yamlContent);\n    output.printNewLine();\n    output.success(\n      t('githubActionWrkflSavedTo', {\n        path: chalk.underline(chalk.cyan(yamlPath)),\n      }),\n    );\n    output.printNewLine();\n\n    output.chore(`${t('setSecretsInGithugRepoSettings')}:`);\n    output.table([\n      {\n        Name: 'FLEEK_TOKEN',\n        Value: personalAccessToken,\n      },\n      {\n        Name: 'FLEEK_PROJECT_ID',\n        Value: projectId,\n      },\n    ]);\n\n    output.printNewLine();\n  } catch (e) {\n    output.error(t('failSaveGenYaml', { yamlPath }));\n  }\n};\n", "import { output } from '../../cli';\nimport { config } from '../../config';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport {\n  type CIProvider,\n  getCIProviderOrPrompt,\n} from './prompts/getCIProviderOrPrompt';\nimport { prepareGitHubActionsIntegration } from './utils/prepareGitHubActionsIntegration';\n\ntype CiActionArgs = {\n  predefinedConfigPath?: string;\n  provider?: string;\n};\n\nconst ciAction: SdkGuardedFunction<CiActionArgs> = async ({ args }) => {\n  const provider = await getCIProviderOrPrompt({\n    provider: args?.provider as CIProvider,\n  });\n\n  const personalAccessToken = config.personalAccessToken.get();\n  const projectId = config.projectId.get();\n\n  if (!personalAccessToken) {\n    output.error(t('noPatFoundUnexpectedly'));\n\n    return;\n  }\n\n  if (!projectId) {\n    output.error(t('noProjectIdFoundUnexpectedly'));\n\n    return;\n  }\n\n  switch (provider) {\n    case 'github':\n      await prepareGitHubActionsIntegration({\n        projectId,\n        personalAccessToken,\n        fleekConfigPath: args.predefinedConfigPath,\n        output,\n      });\n      break;\n    default:\n      output.error(t('providerNotSupported'));\n\n      return;\n  }\n};\n\nexport const ciActionHandler = withGuards(ciAction, {\n  scopes: {\n    project: true,\n    site: true,\n    authenticated: true,\n  },\n});\n", "import { exec as runCommand } from 'node:child_process';\n\nexport const runCommandAndForwardOutput = async (buildCommand: string) => {\n  const buildCommandProcess = runCommand(buildCommand);\n\n  buildCommandProcess.stdout?.on('data', console.log);\n  buildCommandProcess.stderr?.on('data', console.log);\n\n  return new Promise((resolve: (exitCode: number) => void) => {\n    buildCommandProcess.on('close', (exitCode) => resolve(exitCode ?? 0));\n  });\n};\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\nimport { getFleekDefaultGatewayBySlug } from '@fleek-platform/utils-gateways';\n\nimport type { Output } from '../../../output/Output';\nimport { checkPeriodicallyUntil } from '../../../utils/checkPeriodicallyUntil';\nimport { t } from '../../../utils/translation';\nimport { returnDeploymentWhenFinished } from './returnDeploymentWhenFinished';\n\ntype WaitUntilDeploymentFinishedAndInformUserArgs = {\n  sdk: FleekSdk;\n  deploymentId: string;\n  siteId: string;\n  slug: string;\n  hostname?: string;\n  hash: string;\n  output: Output;\n};\n\nexport const waitUntilDeploymentFinishedAndInformUser = async ({\n  sdk,\n  siteId,\n  slug,\n  hostname,\n  deploymentId,\n  hash,\n  output,\n}: WaitUntilDeploymentFinishedAndInformUserArgs) => {\n  const deploymentStatus = await checkPeriodicallyUntil({\n    conditionFn: returnDeploymentWhenFinished({ sdk, deploymentId }),\n    period: 6_000,\n    tries: 30,\n  });\n\n  if (!deploymentStatus) {\n    output.warn(\n      t('warnSubjectProcessIsLong', { subject: t('processOfDeployment') }),\n    );\n    output.printNewLine();\n\n    output.log(\n      `${t('commonWaitAndCheckStatusViaCmd', { subject: t('deploymentStatus') })}`,\n    );\n    output.log(\n      output.textColor(`fleek sites deployments --id ${siteId}`, 'cyan'),\n    );\n\n    return;\n  }\n\n  if (deploymentStatus === 'RELEASE_FAILED') {\n    output.error(t('deployNotFinishTryAgain'));\n    output.printNewLine();\n    process.exit(1);\n  }\n\n  output.success(`${t('deployed')}!`);\n  output.printNewLine();\n  output.log(t('siteIPFSCid', { hash }));\n\n  output.hint(`${t('visitViaGateway')}:`);\n  output.link(\n    hostname ? `https://${hostname}` : getFleekDefaultGatewayBySlug({ slug }),\n  );\n};\n", "import type { FleekSdk } from '@fleek-platform/sdk/node';\n\ntype ReturnDeploymentWhenFinishedArgs = {\n  sdk: FleekSdk;\n  deploymentId: string;\n};\n\nexport const returnDeploymentWhenFinished =\n  ({ sdk, deploymentId }: ReturnDeploymentWhenFinishedArgs) =>\n  async () => {\n    const deployment = await sdk.sites().getDeployment({ id: deploymentId });\n\n    if (\n      deployment.status === 'RELEASE_COMPLETED' ||\n      deployment.status === 'RELEASE_FAILED'\n    ) {\n      return deployment.status;\n    }\n\n    return null;\n  };\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { loadConfiguration } from '../../utils/configuration/loadConfiguration';\nimport { t } from '../../utils/translation';\nimport { runCommandAndForwardOutput } from './utils/runCommandAndForwardOutput';\nimport { waitUntilDeploymentFinishedAndInformUser } from './utils/waitUntilDeploymentFinishedAndInformUser';\n\ntype DeployActionArgs = {\n  predefinedConfigPath?: string;\n};\n\nconst deployAction: SdkGuardedFunction<DeployActionArgs> = async ({\n  sdk,\n  args: { predefinedConfigPath },\n}) => {\n  const config = await loadConfiguration({ predefinedConfigPath });\n\n  const siteConfig = config.sites[0];\n\n  const site = await sdk.sites().getBySlug({ slug: siteConfig.slug });\n\n  if (siteConfig.buildCommand) {\n    const exitCode = await runCommandAndForwardOutput(siteConfig.buildCommand);\n\n    if (exitCode !== 0) {\n      output.error(t('buildCmdFailedSeeErr', { cmd: siteConfig.buildCommand }));\n      output.printNewLine();\n      process.exit(exitCode);\n    }\n  }\n\n  output.spinner(t('uploadingFiles'));\n\n  const uploadResults = await sdk.ipfs().addSitesToIpfs(siteConfig.distDir, {\n    wrapWithDirectory: true,\n    // We must pass plain object instead of URLSearchParams because of ipfs-http-client bug\n    searchParams: { site_id: site.id } as unknown as URLSearchParams,\n  });\n\n  const root = uploadResults.pop();\n\n  if (!root) {\n    output.error(t('somethingWrongDurUpload'));\n    output.printNewLine();\n    process.exit(1);\n  }\n\n  output.spinner(t('startingSiteDeployment'));\n\n  const hash = root.cid.toString();\n\n  const deployment = await sdk\n    .sites()\n    .createCustomIpfsDeployment({ cid: hash, siteId: site.id });\n\n  await waitUntilDeploymentFinishedAndInformUser({\n    sdk,\n    deploymentId: deployment.id,\n    siteId: site.id,\n    slug: site.slug,\n    hostname: site.primaryDomain?.hostname,\n    hash,\n    output,\n  });\n};\n\nexport const deployActionHandler = withGuards(deployAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: true,\n  },\n});\n", "import {\n  FleekConfigInvalidContentError,\n  FleekConfigMissingFileError,\n  type FleekError,\n} from '@fleek-platform/errors';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { loadConfiguration } from '../../utils/configuration/loadConfiguration';\nimport { t } from '../../utils/translation';\nimport { confirmFileOverridePrompt } from './prompts/confirmFileOverridePrompt';\nimport { chooseOrCreateSite } from './utils/chooseOrCreateSite';\nimport { initConfiguration } from './utils/initConfiguration';\n\nconst initAction: SdkGuardedFunction = async ({ sdk }) => {\n  const configLoadingResult = await loadConfiguration({})\n    .then(() => {\n      return { isContentValid: true, isFilePresent: true } as const;\n    })\n    .catch((e: FleekError<unknown>) => {\n      if (e instanceof FleekConfigInvalidContentError) {\n        return {\n          isContentValid: false,\n          isFilePresent: true,\n          configPath: e.data.configPath,\n        } as const;\n      }\n\n      if (e instanceof FleekConfigMissingFileError) {\n        return { isContentValid: false, isFilePresent: false } as const;\n      }\n\n      throw e;\n    });\n\n  if (configLoadingResult.isContentValid && configLoadingResult.isFilePresent) {\n    output.error(t('configFileExists'));\n    output.printNewLine();\n    output.log(t('siteAlreadyExists'));\n\n    return;\n  }\n\n  if (\n    !configLoadingResult.isContentValid &&\n    configLoadingResult.isFilePresent\n  ) {\n    const overrideInvalidConfig = await confirmFileOverridePrompt({\n      path: configLoadingResult.configPath,\n    });\n\n    if (!overrideInvalidConfig) {\n      return;\n    }\n  }\n\n  const site = await chooseOrCreateSite({ sdk });\n\n  if (!site) {\n    output.error(t('unexpectedError'));\n\n    return;\n  }\n\n  await initConfiguration({\n    site,\n    onUnexpectedFormatError: (format: string) => {\n      output.warn(t('unexpectedFileFormat', { format }));\n      process.exit(1);\n    },\n    onSaveConfigurationError: () => {\n      output.warn(t('fsFailedToWriteConfig'));\n      process.exit(1);\n    },\n  });\n\n  output.printNewLine();\n  output.success(t('fleekConfigSaved'));\n  output.printNewLine();\n};\n\nexport const initActionHandler = withGuards(initAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\n\nconst listAction: SdkGuardedFunction = async ({ sdk }) => {\n  const sites = await sdk.sites().list();\n\n  if (!sites?.length) {\n    output.warn(t('noSitesYet'));\n    output.log(t('youCanDoXUsingFolCmd', { action: t('createNewSite') }));\n    output.log('fleek sites init');\n\n    return;\n  }\n\n  output.table(\n    sites.map((site) => ({\n      Name: site.name,\n      Slug: site.slug,\n      ID: site.id,\n    })),\n  );\n};\n\nexport const listActionHandler = withGuards(listAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Deployment } from '@fleek-platform/sdk/node';\n\nimport type { Output } from '../../../output/Output';\nimport { t } from '../../../utils/translation';\n\ntype PrintDeploymentsTableArgs = {\n  output: Output;\n  deployments: Deployment[];\n};\n\nexport const printDeploymentsTable = ({\n  output,\n  deployments,\n}: PrintDeploymentsTableArgs) => {\n  if (deployments.length === 0) {\n    output.warn(\n      t('noYForXYet', { name: t('deployments'), subject: t('site') }),\n    );\n\n    return;\n  }\n\n  output.table(\n    deployments.map(({ id, createdAt, updatedAt, status, cid }) => ({\n      ID: id,\n      'Created At': createdAt,\n      'Updated At': updatedAt,\n      Status: status,\n      CID: cid,\n    })),\n  );\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getSiteOrPrompt } from './prompts/getSiteOrPrompt';\nimport { printDeploymentsTable } from './utils/printDeploymentsTable';\n\ntype ListDeploymentsActionArgs = {\n  id?: string;\n  slug?: string;\n};\n\nconst listDeploymentsAction: SdkGuardedFunction<\n  ListDeploymentsActionArgs\n> = async ({ sdk, args }) => {\n  const site = await getSiteOrPrompt({ id: args.id, slug: args.slug, sdk });\n\n  if (!site) {\n    output.error(t('expectedNotFoundGeneric', { name: 'site' }));\n\n    return;\n  }\n\n  printDeploymentsTable({ output, deployments: site.deployments });\n};\n\nexport const listDeploymentsActionHandler = withGuards(listDeploymentsAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Command } from 'commander';\n\nimport { t } from '../../utils/translation';\nimport { ciActionHandler } from './ci';\nimport { deployActionHandler } from './deploy';\nimport { initActionHandler } from './init';\nimport { listActionHandler } from './list';\nimport { listDeploymentsActionHandler } from './listDeployments';\n\nexport default (program: Command): Command => {\n  const cmd = program.command('sites').description(t('sitesDescription'));\n\n  cmd\n    .command('init')\n    .description(t('sitesInitDescription'))\n    .action(() => initActionHandler());\n\n  cmd\n    .command('ci')\n    .description(t('genConfForCIProviders'))\n    .option('-c, --config <fleekConfigPath>', t('specifyFleekJsonPath'))\n    .option('-p, --provider <provider>', t('specifyCIProvider'))\n    .action((options: { config?: string; provider?: string }) =>\n      ciActionHandler({\n        predefinedConfigPath: options.config,\n        provider: options.provider,\n      }),\n    );\n\n  cmd\n    .command('deploy')\n    .description(t('deploySite'))\n    .option('-c, --config <fleekConfigPath>', t('deploySpecifyPathJson'))\n    .action((options: { config?: string }) =>\n      deployActionHandler({ predefinedConfigPath: options.config }),\n    );\n\n  cmd\n    .command('list')\n    .description(t('listSitesDesc'))\n    .action(() => listActionHandler());\n\n  cmd\n    .command('deployments')\n    .option(\n      '--slug <string>',\n      t('nameOfWichDeploymentsBelong', { name: t('humanReadableSlugDesc') }),\n    )\n    .option(\n      '--id <string>',\n      t('nameOfWichDeploymentsBelong', { name: t('uniqueIdentifier') }),\n    )\n    .description(t('deploymentsListForSelectedSite'))\n    .action((options: { id?: string; slug?: string }) =>\n      listDeploymentsActionHandler(options),\n    );\n\n  return cmd;\n};\n", "import { promises as fs, existsSync } from 'node:fs';\nimport { basename } from 'node:path';\n\nimport {\n  getFleekXyzIpfsGatewayUrl,\n  getPrivateIpfsGatewayUrl,\n} from '@fleek-platform/utils-ipfs';\nimport cliProgress from 'cli-progress';\nimport { filesFromPaths } from 'files-from-path';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { getAllActivePrivateGatewayDomains } from '../gateways/utils/getAllPrivateGatewayDomains';\nimport type { FileLike } from './utils/upload';\nimport { uploadStorage } from './utils/upload';\n\ntype AddStorageActionArgs = {\n  path: string;\n};\n\nexport const addStorageAction: SdkGuardedFunction<\n  AddStorageActionArgs\n> = async ({ sdk, args }) => {\n  if (!existsSync(args.path)) {\n    output.error(t('filePathNotFound', { path: args.path }));\n\n    return;\n  }\n\n  const progressBar = new cliProgress.SingleBar(\n    {\n      format:\n        'Upload Progress [{bar}] {percentage}% | ETA: {eta}s | {value}/{total}',\n    },\n    cliProgress.Presets.shades_grey,\n  );\n  const directoryName = basename(args.path);\n  const files: FileLike[] = await filesFromPaths([args.path]);\n\n  const storage = await uploadStorage({\n    path: args.path,\n    sdk,\n    files,\n    directoryName,\n    progressBar,\n    onFailure: () => {\n      progressBar.stop();\n    },\n  });\n\n  if (!storage) {\n    output.error(t('somethingWrongDurUpload'));\n\n    return;\n  }\n\n  const hash = storage?.pin.cid.toString();\n\n  if (storage.duplicate) {\n    output.warn(t('fileAlreadyExistWarn', { path: args.path }));\n\n    output.printNewLine();\n  } else {\n    output.success(t('storageUploadSuccessCid', { cid: hash }));\n    output.printNewLine();\n  }\n\n  const privateGatewayDomains = await getAllActivePrivateGatewayDomains({\n    sdk,\n  });\n\n  if (privateGatewayDomains.length === 0) {\n    output.log(t('visitViaGateway'));\n    output.link(getFleekXyzIpfsGatewayUrl(hash));\n\n    return;\n  }\n\n  output.log(t('visitViaPvtGw'));\n\n  for (const privateGatewayDomain of privateGatewayDomains) {\n    output.link(\n      getPrivateIpfsGatewayUrl({\n        hostname: privateGatewayDomain.hostname,\n        hash,\n      }),\n    );\n  }\n\n  output.printNewLine();\n};\n\nexport const addStorageActionHandler = withGuards(addStorageAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import fs from 'node:fs/promises';\nimport { uploadOnProgress } from '../../../output/utils/uploadOnProgress';\n\nimport type { FleekSdk, UploadPinResponse } from '@fleek-platform/sdk/node';\nimport type { SingleBar as ProgressSingleBar } from 'cli-progress';\n\nimport type { ReadableStream } from 'node:stream/web';\n\nexport type FileLike = {\n  name: string;\n  stream: () => ReadableStream<Uint8Array>;\n  size: number;\n};\n\nexport const uploadStorage = async ({\n  path,\n  sdk,\n  files,\n  directoryName,\n  progressBar,\n  onFailure,\n}: {\n  path: string;\n  sdk: FleekSdk;\n  files: FileLike[];\n  directoryName: string;\n  progressBar: ProgressSingleBar;\n  onFailure?: () => void;\n}): Promise<UploadPinResponse | undefined> => {\n  try {\n    const stat = await fs.stat(path);\n\n    if (stat.isDirectory()) {\n      return sdk.storage().uploadVirtualDirectory({\n        files,\n        directoryName,\n        onUploadProgress: uploadOnProgress(progressBar),\n      });\n    }\n\n    // TODO: The progressBar is displayed twice\n    // seem like different instances\n    // where one is initialized purposely on set 0\n    // investigate why this is\n    return sdk.storage().uploadFile({\n      file: files[0],\n      onUploadProgress: uploadOnProgress(progressBar),\n    });\n  } catch {\n    if (typeof onFailure === 'function') {\n      onFailure();\n    }\n  }\n\n  return;\n};\n", "import { InvalidCidError } from '@fleek-platform/errors';\nimport { CID } from 'multiformats';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { processPromisesBatch } from '../../utils/processPromisesBatch';\nimport { t } from '../../utils/translation';\n\ntype DeleteActionArgs = {\n  cid?: string;\n  name?: string;\n};\n\nexport const deleteStorageAction: SdkGuardedFunction<\n  DeleteActionArgs\n> = async ({ sdk, args }) => {\n  const { cid, name } = args;\n\n  const cidsToDelete = [];\n\n  if (typeof name === 'string') {\n    const splitFilename = name.split('.');\n    const extension = (splitFilename.length > 1 && splitFilename.pop()) || '';\n    const filename = splitFilename.join('.');\n    const storage = await sdk.storage().getByFilename({ filename, extension });\n    for (const s of storage) {\n      cidsToDelete.push(s.cid);\n    }\n  } else if (cid) {\n    try {\n      CID.parse(cid);\n    } catch (err) {\n      throw new InvalidCidError({ name: cid });\n    }\n\n    cidsToDelete.push(cid);\n  }\n\n  try {\n    await processPromisesBatch(\n      cidsToDelete,\n      async (cid: string): Promise<undefined> => {\n        const response = await sdk.storage().delete({ cid });\n        output.log(\n          `${t('processing')}${cid ? ` cid: ${cid}` : ''}${name ? ` name: ${name}` : ''}`,\n        );\n\n        if (response.status === 200) {\n          output.success(\n            t('commonItemActionSuccess', {\n              subject: cid ? `CID ${cid}` : `filename ${name}`,\n              action: t('deleted'),\n            }),\n          );\n        } else if (response.status === 500) {\n          // 500 status should be caught and should not affect other deletes in case of multiple deletes\n          output.error(\n            t('commonItemActionFailure', {\n              action: t('delete'),\n              subject: `${t('storage')} \"`,\n              message: `${response.body.message}`,\n            }),\n          );\n        } else {\n          // eslint-disable-next-line fleek-custom/no-default-error\n          throw new Error(response.body.message);\n        }\n\n        return;\n      },\n    );\n  } catch (error) {\n    if (error instanceof Error) {\n      output.error(error.message);\n    } else {\n      console.error(error);\n    }\n  }\n};\n\nexport const deleteStorageActionHandler = withGuards(deleteStorageAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "export const processPromisesBatch = async <T, R>(\n  items: T[],\n  fn: (item: T) => Promise<R>,\n  batchSize = 10,\n) => {\n  let results: R[] = [];\n  for (let i = 0; i < items.length; i += batchSize) {\n    const batch = items.slice(\n      i,\n      i + batchSize > items.length ? items.length : i + batchSize,\n    );\n    const batchResults = await Promise.all(batch.map((item) => fn(item)));\n    results = [...results, ...batchResults];\n  }\n\n  return results;\n};\n", "import { InvalidCidError } from '@fleek-platform/errors';\nimport { CID } from 'multiformats';\n\nimport { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { createOutputTable } from './utils/CreateOutputTable';\n\nimport type { StoragePin } from '@fleek-platform/sdk/node';\n\ntype GetActionArgs = {\n  cid?: string;\n  name?: string;\n};\n\nexport const getStorageAction: SdkGuardedFunction<GetActionArgs> = async ({\n  sdk,\n  args,\n}) => {\n  const { cid, name } = args;\n  let storage: StoragePin[] | undefined;\n\n  if (typeof name === 'string') {\n    const splitFilename = name.split('.');\n    const extension = (splitFilename.length > 1 && splitFilename.pop()) || '';\n    const filename = splitFilename.join('.');\n    storage = await sdk.storage().getByFilename({ filename, extension });\n  } else if (cid) {\n    try {\n      CID.parse(cid);\n    } catch (err) {\n      throw new InvalidCidError({ name: cid });\n    }\n\n    try {\n      storage = [await sdk.storage().get({ cid })];\n    } catch (err) {\n      storage = undefined;\n    }\n  }\n\n  if (!storage || storage?.length === 0) {\n    output.warn(\n      t('storageGetNotFound', {\n        type: `${cid ? 'cid' : 'name'}`,\n        value: cid || name || '',\n      }),\n    );\n    output.log(t('storageAddSuggestion'));\n    output.log('fleek storage add <file_path>');\n\n    return;\n  }\n\n  const table = await createOutputTable({ sdk, storage });\n  output.table(table);\n};\n\nexport const getStorageActionHandler = withGuards(getStorageAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { FleekSdk, StoragePin } from '@fleek-platform/sdk/node';\nimport {\n  getFleekXyzIpfsGatewayUrl,\n  getPrivateIpfsGatewayUrl,\n} from '@fleek-platform/utils-ipfs';\n\nimport { getAllActivePrivateGatewayDomains } from '../../gateways/utils/getAllPrivateGatewayDomains';\n\ntype CreateOutputTableArgs = {\n  sdk: FleekSdk;\n  storage: StoragePin[];\n};\n\ntype TableCoulmns = {\n  filename: string;\n  cid: string;\n  'filecoin id'?: string;\n  'arweave id'?: string;\n  link: string;\n};\n\nexport const createOutputTable = async ({\n  sdk,\n  storage,\n}: CreateOutputTableArgs): Promise<TableCoulmns[]> => {\n  const privateGatewayDomains = await getAllActivePrivateGatewayDomains({\n    sdk,\n  });\n  const privateGatewayExists = privateGatewayDomains.length > 0;\n\n  return storage.flatMap((s) => {\n    const filename = `${s.filename}${s.extension ? `.${s.extension}` : ''}`;\n    const gatewayUrls = privateGatewayExists\n      ? privateGatewayDomains.map((privateGatewayDomain) =>\n          getPrivateIpfsGatewayUrl({\n            hostname: privateGatewayDomain.hostname,\n            hash: s.cid,\n          }),\n        )\n      : [getFleekXyzIpfsGatewayUrl(s.cid)];\n\n    return gatewayUrls.map((link) => ({\n      filename,\n      cid: s.cid,\n      'filecoin id': s.filecoinDealIds,\n      'arweave id': s.arweaveId,\n      link,\n    }));\n  });\n};\n", "import { output } from '../../cli';\nimport type { SdkGuardedFunction } from '../../guards/types';\nimport { withGuards } from '../../guards/withGuards';\nimport { t } from '../../utils/translation';\nimport { createOutputTable } from './utils/CreateOutputTable';\n\nexport const listStorageAction: SdkGuardedFunction<\n  Record<string, never>\n> = async ({ sdk }) => {\n  const storage = await sdk.storage().list();\n\n  if (!storage?.length) {\n    output.warn(t('storageListNotFound'));\n    output.log(t('storageAddSuggestion'));\n    output.log('fleek storage add <file_path>');\n\n    return;\n  }\n\n  const table = await createOutputTable({ sdk, storage });\n  output.table(table);\n};\n\nexport const listStorageActionHandler = withGuards(listStorageAction, {\n  scopes: {\n    authenticated: true,\n    project: true,\n    site: false,\n  },\n});\n", "import type { Command } from 'commander';\n\nimport { output } from '../../cli';\nimport { t } from '../../utils/translation';\nimport { addStorageActionHandler } from './add';\nimport { deleteStorageActionHandler } from './delete';\nimport { getStorageActionHandler } from './get';\nimport { listStorageActionHandler } from './list';\n\nexport default (program: Command): Command => {\n  const cmd = program\n    .command('storage')\n    .description(t('storageCmdDescription'));\n\n  cmd\n    .command('list')\n    .description(t('storageListDescription'))\n    .action(() => listStorageActionHandler());\n\n  const getStorage = cmd\n    .command('get')\n    .description(t('storageDescription', { action: t('get') }))\n    .option('-c, --cid <cid>', t('storageCidOption', { action: t('get') }))\n    .option(\n      '-n, --name <filenameWithExtension>',\n      t('storageNameOption', { action: t('get') }),\n    );\n\n  getStorage.action((options: { cid?: string; name?: string }) => {\n    if ((!options.name && !options.cid) || (options.name && options.cid)) {\n      if (\n        !getStorage.args.includes('help') &&\n        !getStorage.optsWithGlobals().help\n      ) {\n        output.error(t('storageMissingOptCidOrName'));\n      }\n\n      output.printNewLine();\n      getStorage.outputHelp();\n\n      return;\n    }\n\n    return getStorageActionHandler({ cid: options.cid, name: options.name });\n  });\n\n  const deleteStorage = cmd\n    .command('delete')\n    .description(t('storageDescription', { action: t('delete') }))\n    .option('-c, --cid <cid>', t('storageCidOption', { action: t('delete') }))\n    .option(\n      '-n, --name <filenameWithExtension>',\n      t('storageNameOption', { action: t('delete') }),\n    );\n\n  deleteStorage.action((options: { cid?: string; name?: string }) => {\n    if ((!options.name && !options.cid) || (options.name && options.cid)) {\n      if (\n        !getStorage.args.includes('help') &&\n        !getStorage.optsWithGlobals().help\n      ) {\n        output.error(t('storageMissingOptCidOrName'));\n      }\n\n      output.printNewLine();\n      deleteStorage.outputHelp();\n\n      return;\n    }\n\n    return deleteStorageActionHandler({ cid: options.cid, name: options.name });\n  });\n\n  cmd\n    .command('add')\n    .description(t('storageAddDescription'))\n    .argument('<path>', t('ipfsAddPathDescription'))\n    .action((path: string) => addStorageActionHandler({ path }));\n\n  return cmd;\n};\n"],
  "mappings": "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,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBA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,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB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E,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,CAAC,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,CAAC,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,CAAC,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,CAAC,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,CAAC,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,CAAC,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,GAAE,GAAEA,IAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAEN,IAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAEM,IAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAEN,IAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,GAAE,GAAEA,IAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAEM,IAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAE,IAAE,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,EAAE,EAAE,CAAC,GAAEP,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,IAAE,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,IAAE,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,IAAE,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,IAAE;gBAAC,GAAER,GAAE,UAAU,KAAG,WAAU;AAAC,sBAAII,KAAE,KAAK,IAAGJ,KAAEI,GAAE,OAAMC,KAAE,IAAE,KAAK,IAAGC,KAAE,IAAEF,GAAE;AAAUJ,qBAAEM,OAAI,CAAC,KAAG,OAAK,KAAGA,KAAE;AAAG,sBAAIC,KAAE,KAAK,MAAMF,KAAE,UAAU,GAAEG,KAAEH;AAAEL,qBAAE,MAAIM,KAAE,OAAK,KAAG,EAAE,IAAE,YAAUC,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAGP,GAAE,MAAIM,KAAE,OAAK,KAAG,EAAE,IAAE,YAAUE,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAGJ,GAAE,YAAU,KAAGJ,GAAE,SAAO,IAAG,KAAK,GAAG;AAAE,2BAAQS,KAAE,KAAK,IAAGC,KAAED,GAAE,OAAME,KAAE,GAAEA,KAAE,GAAEA,MAAI;AAAC,wBAAIC,KAAEF,GAAEC,EAAC;AAAED,uBAAEC,EAAC,IAAE,YAAUC,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI;kBAAE;AAAC,yBAAOH;gBAAC,GAAET,GAAE,UAAU,QAAM,WAAU;AAAC,yBAAO,IAAIA,GAAE,EAAC,MAAK,KAAK,IAAG,WAAU,KAAK,GAAE,MAAK,KAAK,IAAG,QAAO,KAAK,GAAE,CAAC;gBAAC,GAAEA,GAAE,OAAK,SAASI,IAAE;AAAC,yBAAO,IAAIJ,GAAAA,EAAG,SAASI,EAAC;gBAAC,GAAEJ;cAAC,EAAE,EAAE,CAAC;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,KAAI,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,EAAE,GAAE,IAAEA,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,WAAU;AAAC,wBAAO,IAAE,OAAO,UAAQ,SAASD,IAAE;AAAC,2BAAQJ,IAAEK,KAAE,GAAEC,KAAE,UAAU,QAAOD,KAAEC,IAAED,KAAI,UAAQE,MAAKP,KAAE,UAAUK,EAAC,EAAE,QAAO,UAAU,eAAe,KAAKL,IAAEO,EAAC,MAAIH,GAAEG,EAAC,IAAEP,GAAEO,EAAC;AAAG,yBAAOH;gBAAC,GAAG,MAAM,MAAK,SAAS;cAAC,GAAE,IAAE,SAASA,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,yBAAOK,GAAE,IAAE,CAAC,GAAEA,GAAE,IAAE,GAAEA,GAAE,IAAE,GAAEA,GAAE,IAAEL,IAAEK,GAAE,EAAE,GAAEA;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAAC,sBAAII,KAAE,KAAK,GAAEJ,KAAEI,GAAE,OAAMC,KAAED,GAAE;AAAU,uBAAK,IAAE,CAAC;AAAE,2BAAQE,KAAE,GAAEA,KAAE,KAAIA,KAAI,MAAK,EAAEA,EAAC,IAAEA;AAAEA,uBAAE;AAAE,2BAAQC,KAAE,GAAED,KAAE,KAAIA,MAAI;AAAC,wBAAIE,KAAEF,KAAED,IAAEI,KAAET,GAAEQ,OAAI,CAAC,MAAI,KAAGA,KAAE,IAAE,IAAE;AAAID,0BAAGA,KAAE,KAAK,EAAED,EAAC,IAAEG,MAAG;AAAI,wBAAIC,KAAE,KAAK,EAAEJ,EAAC;AAAE,yBAAK,EAAEA,EAAC,IAAE,KAAK,EAAEC,EAAC,GAAE,KAAK,EAAEA,EAAC,IAAEG;kBAAC;AAAC,uBAAK,IAAE,KAAK,IAAE;gBAAC,GAAEV,GAAE,UAAU,KAAG,SAASI,IAAEJ,IAAE;AAACI,qBAAEJ,EAAC,KAAG,KAAK,sBAAsB;gBAAC,GAAEA,GAAE,UAAU,wBAAsB,WAAU;AAAC,2BAAQI,KAAE,KAAK,GAAEJ,KAAE,KAAK,GAAEK,KAAE,KAAK,GAAEC,KAAE,GAAEC,KAAE,GAAEA,KAAE,GAAEA,MAAI;AAACF,0BAAGA,KAAED,GAAEJ,MAAGA,KAAE,KAAG,GAAG,KAAG;AAAI,wBAAIQ,KAAEJ,GAAEJ,EAAC;AAAEI,uBAAEJ,EAAC,IAAEI,GAAEC,EAAC,GAAED,GAAEC,EAAC,IAAEG,IAAEF,MAAGF,IAAGA,GAAEJ,EAAC,IAAEI,GAAEC,EAAC,KAAG,GAAG,KAAG,KAAG,IAAEE;kBAAC;AAAC,yBAAO,KAAK,IAAEP,IAAE,KAAK,IAAEK,IAAEC;gBAAC,GAAEN,GAAE,kBAAgB,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAE,EAAE,EAAE,CAAC,GAAEK,KAAE,WAASA,KAAE,CAAC,IAAEA,EAAC,GAAE,EAAC,KAAID,GAAC,CAAC,CAAC;gBAAC,GAAEJ,GAAE,kBAAgB,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAE,EAAE,EAAE,CAAC,GAAEK,KAAE,WAASA,KAAE,CAAC,IAAEA,EAAC,GAAE,EAAC,KAAID,GAAC,CAAC,CAAC;gBAAC,GAAEJ,GAAE,UAAQ,SAASI,IAAEC,IAAEC,IAAE;AAAC,yBAAM,YAAU,OAAOD,KAAE,EAAE,EAAE,QAAQL,IAAEI,IAAEC,IAAEC,EAAC,IAAE,EAAE,EAAE,QAAQN,IAAEI,IAAEC,IAAEC,EAAC;gBAAC,GAAEN,GAAE,UAAQ,SAASI,IAAEC,IAAEC,IAAE;AAAC,yBAAM,YAAU,OAAOD,KAAE,EAAE,EAAE,QAAQL,IAAEI,IAAEC,IAAEC,EAAC,IAAE,EAAE,EAAE,QAAQN,IAAEI,IAAEC,IAAEC,EAAC;gBAAC,GAAEN,GAAE,SAAO,GAAEA,GAAE,UAAQ,GAAEA;cAAC,EAAE,EAAE,CAAC;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,SAAQ,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,WAAU;AAAC,wBAAO,IAAE,OAAO,UAAQ,SAASD,IAAE;AAAC,2BAAQJ,IAAEK,KAAE,GAAEC,KAAE,UAAU,QAAOD,KAAEC,IAAED,KAAI,UAAQE,MAAKP,KAAE,UAAUK,EAAC,EAAE,QAAO,UAAU,eAAe,KAAKL,IAAEO,EAAC,MAAIH,GAAEG,EAAC,IAAEP,GAAEO,EAAC;AAAG,yBAAOH;gBAAC,GAAG,MAAM,MAAK,SAAS;cAAC,GAAE,IAAE,SAASA,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,yBAAOK,GAAE,OAAK,KAAIA,GAAE,IAAEL,IAAEA,MAAG,YAAU,OAAOA,GAAE,SAAOK,GAAE,OAAKL,GAAE,OAAMK,GAAE,EAAE,GAAEA;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAACI,qBAAE,UAAU,EAAE,KAAK,IAAI;AAAE,2BAAQJ,KAAE,KAAK,MAAKA,KAAE,GAAEA,KAAI,MAAK,sBAAsB;gBAAC,GAAEA,GAAE,kBAAgB,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAE,EAAE,EAAE,CAAC,GAAEK,KAAE,WAASA,KAAE,CAAC,IAAEA,EAAC,GAAE,EAAC,KAAID,GAAC,CAAC,CAAC;gBAAC,GAAEJ,GAAE,kBAAgB,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAE,EAAE,EAAE,CAAC,GAAEK,KAAE,WAASA,KAAE,CAAC,IAAEA,EAAC,GAAE,EAAC,KAAID,GAAC,CAAC,CAAC;gBAAC,GAAEJ,GAAE,UAAQ,SAASI,IAAEC,IAAEC,IAAE;AAAC,yBAAM,YAAU,OAAOD,KAAE,EAAE,EAAE,QAAQL,IAAEI,IAAEC,IAAEC,EAAC,IAAE,EAAE,EAAE,QAAQN,IAAEI,IAAEC,IAAEC,EAAC;gBAAC,GAAEN,GAAE,UAAQ,SAASI,IAAEC,IAAEC,IAAE;AAAC,yBAAM,YAAU,OAAOD,KAAE,EAAE,EAAE,QAAQL,IAAEI,IAAEC,IAAEC,EAAC,IAAE,EAAE,EAAE,QAAQN,IAAEI,IAAEC,IAAEC,EAAC;gBAAC,GAAEN;cAAC,EAAE,EAAE,GAAG;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,WAAU,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,IAAI,EAAE,EAAE,CAAC,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,EAAE,CAAC,GAAE,IAAE,IAAI,EAAE,EAAE,CAAC,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,EAAE,CAAC,GAAE,IAAE,IAAI,EAAE,EAAE,CAAC,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,CAAC,CAAC,GAAE,IAAE,IAAI,EAAE,EAAE,CAAC,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,IAAE,IAAI,EAAE,EAAE,CAAC,GAAE,YAAW,YAAW,YAAW,UAAU,CAAC,GAAE,IAAE,IAAI,EAAE,EAAE,CAAC,YAAW,YAAW,YAAW,YAAW,CAAC,CAAC;AAAE,uBAAS,EAAED,IAAEJ,IAAEK,IAAE;AAAC,uBAAOD,KAAEJ,KAAEK;cAAC;AAAC,uBAAS,EAAED,IAAEJ,IAAEK,IAAE;AAAC,uBAAOD,KAAEJ,KAAE,CAACI,KAAEC;cAAC;AAAC,uBAAS,EAAED,IAAEJ,IAAEK,IAAE;AAAC,wBAAOD,KAAE,CAACJ,MAAGK;cAAC;AAAC,uBAAS,EAAED,IAAEJ,IAAEK,IAAE;AAAC,uBAAOD,KAAEC,KAAEL,KAAE,CAACK;cAAC;AAAC,uBAAS,EAAED,IAAEJ,IAAEK,IAAE;AAAC,uBAAOD,MAAGJ,KAAE,CAACK;cAAE;AAAC,uBAAS,EAAED,IAAEJ,IAAE;AAAC,uBAAOI,MAAGJ,KAAEI,OAAI,KAAGJ;cAAC;AAAC,kBAAI,IAAE,SAASI,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,yBAAOK,GAAE,KAAG,IAAI,EAAE,EAAE,CAAC,YAAW,YAAW,YAAW,WAAU,UAAU,CAAC,GAAEA,GAAE,IAAEL,IAAEA,MAAG,WAASA,GAAE,SAAOK,GAAE,KAAGL,GAAE,KAAK,MAAM,IAAGK;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAAC,uBAAK,KAAG,IAAI,EAAE,EAAE,CAAC,YAAW,YAAW,YAAW,WAAU,UAAU,CAAC;gBAAC,GAAEA,GAAE,UAAU,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,KAAE,GAAEA,KAAE,IAAGA,MAAI;AAAC,wBAAIC,KAAEN,KAAEK,IAAEE,KAAEH,GAAEE,EAAC;AAAEF,uBAAEE,EAAC,IAAE,YAAUC,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI;kBAAE;AAAC,sBAAIC,IAAEC,IAAEa,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAE,KAAK,GAAG,OAAM,IAAE,EAAE,OAAM,IAAE,EAAE,OAAM,IAAE,EAAE,OAAM,IAAE,EAAE,OAAM,IAAE,EAAE,OAAM,IAAE,EAAE;AAAM,sBAAEd,KAAE,EAAE,CAAC,GAAE,IAAEC,KAAE,EAAE,CAAC,GAAE,IAAEa,KAAE,EAAE,CAAC,GAAE,IAAE,IAAE,EAAE,CAAC,GAAE,IAAE,IAAE,EAAE,CAAC;AAAE,uBAAIjB,KAAE,GAAEA,KAAE,IAAGA,MAAG,EAAE,KAAEG,KAAEJ,GAAEJ,KAAE,EAAEK,EAAC,CAAC,IAAE,GAAE,KAAGA,KAAE,KAAG,EAAEI,IAAEa,IAAE,CAAC,IAAE,EAAE,CAAC,IAAEjB,KAAE,KAAG,EAAEI,IAAEa,IAAE,CAAC,IAAE,EAAE,CAAC,IAAEjB,KAAE,KAAG,EAAEI,IAAEa,IAAE,CAAC,IAAE,EAAE,CAAC,IAAEjB,KAAE,KAAG,EAAEI,IAAEa,IAAE,CAAC,IAAE,EAAE,CAAC,IAAE,EAAEb,IAAEa,IAAE,CAAC,IAAE,EAAE,CAAC,GAAE,KAAG,IAAE,EAAE,KAAG,GAAE,EAAEjB,EAAC,CAAC,KAAG,IAAE,GAAEG,KAAE,GAAE,IAAE,GAAE,IAAE,EAAEc,IAAE,EAAE,GAAEA,KAAEb,IAAEA,KAAE,GAAE,IAAE,IAAEL,GAAEJ,KAAE,EAAEK,EAAC,CAAC,IAAE,GAAE,KAAGA,KAAE,KAAG,EAAE,GAAE,GAAE,CAAC,IAAE,EAAE,CAAC,IAAEA,KAAE,KAAG,EAAE,GAAE,GAAE,CAAC,IAAE,EAAE,CAAC,IAAEA,KAAE,KAAG,EAAE,GAAE,GAAE,CAAC,IAAE,EAAE,CAAC,IAAEA,KAAE,KAAG,EAAE,GAAE,GAAE,CAAC,IAAE,EAAE,CAAC,IAAE,EAAE,GAAE,GAAE,CAAC,IAAE,EAAE,CAAC,GAAE,KAAG,IAAE,EAAE,KAAG,GAAE,EAAEA,EAAC,CAAC,KAAG,IAAE,GAAE,IAAE,GAAE,IAAE,GAAE,IAAE,EAAE,GAAE,EAAE,GAAE,IAAE,GAAE,IAAE;AAAE,sBAAE,EAAE,CAAC,IAAEiB,KAAE,IAAE,GAAE,EAAE,CAAC,IAAE,EAAE,CAAC,IAAE,IAAE,IAAE,GAAE,EAAE,CAAC,IAAE,EAAE,CAAC,IAAE,IAAE,IAAE,GAAE,EAAE,CAAC,IAAE,EAAE,CAAC,IAAEd,KAAE,IAAE,GAAE,EAAE,CAAC,IAAE,EAAE,CAAC,IAAEC,KAAE,IAAE,GAAE,EAAE,CAAC,IAAE;gBAAC,GAAET,GAAE,UAAU,KAAG,WAAU;AAAC,sBAAII,KAAE,KAAK,IAAGJ,KAAEI,GAAE,OAAMC,KAAE,IAAE,KAAK,IAAGC,KAAE,IAAEF,GAAE;AAAUJ,qBAAEM,OAAI,CAAC,KAAG,OAAK,KAAGA,KAAE,IAAGN,GAAE,MAAIM,KAAE,OAAK,KAAG,EAAE,IAAE,YAAUD,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAGD,GAAE,YAAU,KAAGJ,GAAE,SAAO,IAAG,KAAK,GAAG;AAAE,2BAAQO,KAAE,KAAK,IAAGC,KAAED,GAAE,OAAME,KAAE,GAAEA,KAAE,GAAEA,MAAI;AAAC,wBAAIC,KAAEF,GAAEC,EAAC;AAAED,uBAAEC,EAAC,IAAE,YAAUC,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI;kBAAE;AAAC,yBAAOH;gBAAC,GAAEP,GAAE,UAAU,QAAM,WAAU;AAAC,yBAAO,IAAIA,GAAE,EAAC,MAAK,KAAK,IAAG,WAAU,KAAK,GAAE,MAAK,KAAK,IAAG,QAAO,KAAK,GAAE,CAAC;gBAAC,GAAEA,GAAE,OAAK,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAEK,EAAC,EAAE,SAASD,EAAC;gBAAC,GAAEJ;cAAC,EAAE,EAAE,CAAC;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,QAAO,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,EAAE,GAAE,IAAEA,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,WAAU;AAAC,wBAAO,IAAE,OAAO,UAAQ,SAASD,IAAE;AAAC,2BAAQJ,IAAEK,KAAE,GAAEC,KAAE,UAAU,QAAOD,KAAEC,IAAED,KAAI,UAAQE,MAAKP,KAAE,UAAUK,EAAC,EAAE,QAAO,UAAU,eAAe,KAAKL,IAAEO,EAAC,MAAIH,GAAEG,EAAC,IAAEP,GAAEO,EAAC;AAAG,yBAAOH;gBAAC,GAAG,MAAM,MAAK,SAAS;cAAC,GAAE,IAAE,SAASA,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,yBAAOK,GAAE,IAAE,GAAEA,GAAE,IAAE,CAAC,GAAEA,GAAE,IAAE,CAAC,GAAEA,GAAE,IAAE,CAAC,GAAEA,GAAE,KAAG,CAAC,GAAEA,GAAE,KAAG,CAAC,GAAEA,GAAE,KAAG,GAAEA,GAAE,IAAEL,IAAEK,GAAE,EAAE,GAAEA;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAAC,2BAAQI,KAAE,KAAK,EAAE,OAAMJ,KAAE,KAAK,IAAGK,KAAE,GAAEA,KAAE,GAAEA,KAAID,IAAEC,EAAC,IAAE,YAAUD,GAAEC,EAAC,KAAG,IAAED,GAAEC,EAAC,MAAI,MAAI,cAAYD,GAAEC,EAAC,KAAG,KAAGD,GAAEC,EAAC,MAAI;AAAG,sBAAIC,KAAE,KAAK,KAAG,CAACF,GAAE,CAAC,GAAEA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,IAAGA,GAAE,CAAC,GAAEA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,IAAGA,GAAE,CAAC,GAAEA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,IAAGA,GAAE,CAAC,GAAEA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,EAAE,GAAEG,KAAE,KAAK,KAAG,CAACH,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,IAAG,aAAWA,GAAE,CAAC,IAAE,QAAMA,GAAE,CAAC,GAAEA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,IAAG,aAAWA,GAAE,CAAC,IAAE,QAAMA,GAAE,CAAC,GAAEA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,IAAG,aAAWA,GAAE,CAAC,IAAE,QAAMA,GAAE,CAAC,GAAEA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,IAAG,aAAWA,GAAE,CAAC,IAAE,QAAMA,GAAE,CAAC,CAAC;AAAE,uBAAK,KAAG;AAAE,uBAAIC,KAAE,GAAEA,KAAE,GAAEA,KAAI,MAAK,UAAU;AAAE,uBAAIA,KAAE,GAAEA,KAAE,GAAEA,KAAIE,IAAEF,EAAC,KAAGC,GAAED,KAAE,IAAE,CAAC;AAAE,sBAAGL,IAAE;AAAC,wBAAIQ,KAAER,GAAE,OAAMS,KAAED,GAAE,CAAC,GAAEE,KAAEF,GAAE,CAAC,GAAEG,KAAE,YAAUF,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAGG,KAAE,YAAUF,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAG,IAAEC,OAAI,KAAG,aAAWC,IAAE,IAAEA,MAAG,KAAG,QAAMD;AAAEJ,uBAAE,CAAC,KAAGI,IAAEJ,GAAE,CAAC,KAAG,GAAEA,GAAE,CAAC,KAAGK,IAAEL,GAAE,CAAC,KAAG,GAAEA,GAAE,CAAC,KAAGI,IAAEJ,GAAE,CAAC,KAAG,GAAEA,GAAE,CAAC,KAAGK,IAAEL,GAAE,CAAC,KAAG;AAAE,yBAAIF,KAAE,GAAEA,KAAE,GAAEA,KAAI,MAAK,UAAU;kBAAC;gBAAC,GAAEL,GAAE,UAAU,KAAG,SAASI,IAAEJ,IAAE;AAAC,sBAAIK,KAAE,KAAK;AAAG,uBAAK,UAAU,GAAE,KAAK,EAAE,CAAC,IAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,MAAI,KAAGA,GAAE,CAAC,KAAG,IAAG,KAAK,EAAE,CAAC,IAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,MAAI,KAAGA,GAAE,CAAC,KAAG,IAAG,KAAK,EAAE,CAAC,IAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,MAAI,KAAGA,GAAE,CAAC,KAAG,IAAG,KAAK,EAAE,CAAC,IAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,MAAI,KAAGA,GAAE,CAAC,KAAG;AAAG,2BAAQC,KAAE,GAAEA,KAAE,GAAEA,KAAI,MAAK,EAAEA,EAAC,IAAE,YAAU,KAAK,EAAEA,EAAC,KAAG,IAAE,KAAK,EAAEA,EAAC,MAAI,MAAI,cAAY,KAAK,EAAEA,EAAC,KAAG,KAAG,KAAK,EAAEA,EAAC,MAAI,IAAGF,GAAEJ,KAAEM,EAAC,KAAG,KAAK,EAAEA,EAAC;gBAAC,GAAEN,GAAE,UAAU,YAAU,WAAU;AAAC,2BAAQI,KAAE,KAAK,IAAGJ,KAAE,KAAK,IAAGK,KAAE,GAAEA,KAAE,GAAEA,KAAI,MAAK,EAAEA,EAAC,IAAEL,GAAEK,EAAC;AAAEL,qBAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,aAAW,KAAK,KAAG,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,cAAYA,GAAE,CAAC,MAAI,IAAE,KAAK,EAAE,CAAC,MAAI,IAAE,IAAE,KAAG,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,aAAWA,GAAE,CAAC,MAAI,IAAE,KAAK,EAAE,CAAC,MAAI,IAAE,IAAE,KAAG,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,cAAYA,GAAE,CAAC,MAAI,IAAE,KAAK,EAAE,CAAC,MAAI,IAAE,IAAE,KAAG,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,cAAYA,GAAE,CAAC,MAAI,IAAE,KAAK,EAAE,CAAC,MAAI,IAAE,IAAE,KAAG,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,aAAWA,GAAE,CAAC,MAAI,IAAE,KAAK,EAAE,CAAC,MAAI,IAAE,IAAE,KAAG,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,cAAYA,GAAE,CAAC,MAAI,IAAE,KAAK,EAAE,CAAC,MAAI,IAAE,IAAE,KAAG,GAAEA,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAE,cAAYA,GAAE,CAAC,MAAI,IAAE,KAAK,EAAE,CAAC,MAAI,IAAE,IAAE,KAAG,GAAE,KAAK,KAAGA,GAAE,CAAC,MAAI,IAAE,KAAK,EAAE,CAAC,MAAI,IAAE,IAAE;AAAE,uBAAIK,KAAE,GAAEA,KAAE,GAAEA,MAAI;AAAC,wBAAIC,KAAEF,GAAEC,EAAC,IAAEL,GAAEK,EAAC,GAAEE,KAAE,QAAMD,IAAEE,KAAEF,OAAI,IAAGG,OAAIF,KAAEA,OAAI,MAAIA,KAAEC,OAAI,MAAIA,KAAEA,IAAEE,OAAI,aAAWJ,MAAGA,KAAE,OAAK,QAAMA,MAAGA,KAAE;AAAG,yBAAK,EAAED,EAAC,IAAEI,KAAEC;kBAAC;AAAC,sBAAIC,KAAE,KAAK;AAAEP,qBAAE,CAAC,IAAEO,GAAE,CAAC,KAAGA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,OAAKA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,MAAI,GAAEP,GAAE,CAAC,IAAEO,GAAE,CAAC,KAAGA,GAAE,CAAC,KAAG,IAAEA,GAAE,CAAC,MAAI,MAAIA,GAAE,CAAC,IAAE,GAAEP,GAAE,CAAC,IAAEO,GAAE,CAAC,KAAGA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,OAAKA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,MAAI,GAAEP,GAAE,CAAC,IAAEO,GAAE,CAAC,KAAGA,GAAE,CAAC,KAAG,IAAEA,GAAE,CAAC,MAAI,MAAIA,GAAE,CAAC,IAAE,GAAEP,GAAE,CAAC,IAAEO,GAAE,CAAC,KAAGA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,OAAKA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,MAAI,GAAEP,GAAE,CAAC,IAAEO,GAAE,CAAC,KAAGA,GAAE,CAAC,KAAG,IAAEA,GAAE,CAAC,MAAI,MAAIA,GAAE,CAAC,IAAE,GAAEP,GAAE,CAAC,IAAEO,GAAE,CAAC,KAAGA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,OAAKA,GAAE,CAAC,KAAG,KAAGA,GAAE,CAAC,MAAI,MAAI,GAAEP,GAAE,CAAC,IAAEO,GAAE,CAAC,KAAGA,GAAE,CAAC,KAAG,IAAEA,GAAE,CAAC,MAAI,MAAIA,GAAE,CAAC,IAAE;gBAAC,GAAEX,GAAE,kBAAgB,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAE,EAAE,EAAE,CAAC,GAAEK,KAAE,WAASA,KAAE,CAAC,IAAEA,EAAC,GAAE,EAAC,KAAID,GAAC,CAAC,CAAC;gBAAC,GAAEJ,GAAE,kBAAgB,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAE,EAAE,EAAE,CAAC,GAAEK,KAAE,WAASA,KAAE,CAAC,IAAEA,EAAC,GAAE,EAAC,KAAID,GAAC,CAAC,CAAC;gBAAC,GAAEJ,GAAE,UAAQ,SAASI,IAAEC,IAAEC,IAAE;AAAC,yBAAM,YAAU,OAAOD,KAAE,EAAE,EAAE,QAAQL,IAAEI,IAAEC,IAAEC,EAAC,IAAE,EAAE,EAAE,QAAQN,IAAEI,IAAEC,IAAEC,EAAC;gBAAC,GAAEN,GAAE,UAAQ,SAASI,IAAEC,IAAEC,IAAE;AAAC,yBAAM,YAAU,OAAOD,KAAE,EAAE,EAAE,QAAQL,IAAEI,IAAEC,IAAEC,EAAC,IAAE,EAAE,EAAE,QAAQN,IAAEI,IAAEC,IAAEC,EAAC;gBAAC,GAAEN,GAAE,SAAO,GAAEA;cAAC,EAAE,EAAE,CAAC;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,MAAK,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,CAAC,GAAE,IAAE,SAASD,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,yBAAOK,GAAE,KAAG,IAAI,EAAE,EAAE,CAAC,YAAW,YAAW,YAAW,WAAU,UAAU,CAAC,GAAEA,GAAE,IAAEL,IAAEA,MAAG,WAASA,GAAE,SAAOK,GAAE,KAAGL,GAAE,KAAK,MAAM,IAAGK;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAAC,uBAAK,KAAG,IAAI,EAAE,EAAE,CAAC,YAAW,YAAW,YAAW,WAAU,UAAU,CAAC;gBAAC,GAAEA,GAAE,UAAU,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,KAAE,KAAK,GAAG,OAAMC,KAAED,GAAE,CAAC,GAAEE,KAAEF,GAAE,CAAC,GAAEG,KAAEH,GAAE,CAAC,GAAEI,KAAEJ,GAAE,CAAC,GAAEM,KAAEN,GAAE,CAAC,GAAE,IAAE,GAAE,IAAE,IAAG,KAAI;AAAC,wBAAG,IAAE,GAAG,GAAE,CAAC,IAAE,IAAED,GAAEJ,KAAE,CAAC;yBAAM;AAAC,0BAAI,IAAE,EAAE,IAAE,CAAC,IAAE,EAAE,IAAE,CAAC,IAAE,EAAE,IAAE,EAAE,IAAE,EAAE,IAAE,EAAE;AAAE,wBAAE,CAAC,IAAE,KAAG,IAAE,MAAI;oBAAE;AAAC,wBAAI,KAAGM,MAAG,IAAEA,OAAI,MAAIK,KAAE,EAAE,CAAC;AAAE,yBAAG,IAAE,KAAG,cAAYJ,KAAEC,KAAE,CAACD,KAAEE,MAAG,IAAE,KAAG,cAAYF,KAAEC,KAAEC,MAAG,IAAE,MAAIF,KAAEC,KAAED,KAAEE,KAAED,KAAEC,MAAG,cAAYF,KAAEC,KAAEC,MAAG,WAAUE,KAAEF,IAAEA,KAAED,IAAEA,KAAED,MAAG,KAAGA,OAAI,GAAEA,KAAED,IAAEA,KAAE;kBAAC;AAACD,qBAAE,CAAC,IAAEA,GAAE,CAAC,IAAEC,KAAE,GAAED,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEE,KAAE,GAAEF,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEG,KAAE,GAAEH,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEI,KAAE,GAAEJ,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEM,KAAE;gBAAC,GAAEX,GAAE,UAAU,KAAG,WAAU;AAAC,sBAAII,KAAE,KAAK,GAAG,OAAMJ,KAAE,IAAE,KAAK,IAAGK,KAAE,IAAE,KAAK,GAAG;AAAU,yBAAOD,GAAEC,OAAI,CAAC,KAAG,OAAK,KAAGA,KAAE,IAAGD,GAAE,MAAIC,KAAE,OAAK,KAAG,EAAE,IAAE,KAAK,MAAML,KAAE,UAAU,GAAEI,GAAE,MAAIC,KAAE,OAAK,KAAG,EAAE,IAAEL,IAAE,KAAK,GAAG,YAAU,IAAEI,GAAE,QAAO,KAAK,GAAG,GAAE,KAAK;gBAAE,GAAEJ,GAAE,UAAU,QAAM,WAAU;AAAC,yBAAO,IAAIA,GAAE,EAAC,MAAK,KAAK,IAAG,WAAU,KAAK,GAAE,MAAK,KAAK,IAAG,QAAO,KAAK,GAAE,CAAC;gBAAC,GAAEA,GAAE,OAAK,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAEK,EAAC,EAAE,SAASD,EAAC;gBAAC,GAAEJ;cAAC,EAAE,EAAE,CAAC;YAAC,GAAE,KAAI,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,QAAO,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,SAASD,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,yBAAOK,GAAE,KAAG,IAAI,EAAE,EAAE,CAAC,YAAW,WAAU,WAAU,YAAW,YAAW,YAAW,YAAW,UAAU,CAAC,GAAEA,GAAE,IAAEL,IAAEA,MAAG,WAASA,GAAE,SAAOK,GAAE,KAAGL,GAAE,KAAK,MAAM,IAAGK;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAAC,uBAAK,KAAG,IAAI,EAAE,EAAE,CAAC,YAAW,WAAU,WAAU,YAAW,YAAW,YAAW,YAAW,UAAU,CAAC;gBAAC,GAAEA,GAAE,UAAU,KAAG,WAAU;AAAC,sBAAIA,KAAEI,GAAE,UAAU,GAAG,KAAK,IAAI;AAAE,yBAAOJ,GAAE,aAAW,GAAEA;gBAAC,GAAEA,GAAE,UAAU,QAAM,WAAU;AAAC,yBAAO,IAAIA,GAAE,EAAC,MAAK,KAAK,IAAG,WAAU,KAAK,GAAE,MAAK,KAAK,IAAG,QAAO,KAAK,GAAE,CAAC;gBAAC,GAAEA,GAAE,OAAK,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAEK,EAAC,EAAE,SAASD,EAAC;gBAAC,GAAEJ;cAAC,EAAE,EAAE,MAAM;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,QAAO,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,CAAC,GAAE,IAAE,CAAC;AAAE,uBAAS,EAAED,IAAE;AAAC,yBAAQJ,KAAE,KAAK,KAAKI,EAAC,GAAEC,KAAE,GAAEA,MAAGL,IAAEK,KAAI,KAAG,EAAED,KAAEC,IAAG,QAAM;AAAG,uBAAM;cAAE;AAAC,uBAAS,EAAED,IAAE;AAAC,uBAAO,cAAYA,MAAG,IAAEA,OAAI;cAAC;AAAC,eAAC,WAAU;AAAC,yBAAQA,KAAE,GAAEJ,KAAE,GAAEA,KAAE,KAAI,GAAEI,EAAC,MAAIJ,KAAE,MAAI,EAAEA,EAAC,IAAE,EAAE,KAAK,IAAII,IAAE,GAAE,CAAC,IAAG,EAAEJ,EAAC,IAAE,EAAE,KAAK,IAAII,IAAE,IAAE,CAAC,CAAC,GAAEJ,OAAKI;cAAG,EAAE;AAAE,kBAAI,IAAE,CAAC,GAAE,IAAE,SAASA,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,yBAAOK,GAAE,KAAG,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,GAAEA,GAAE,IAAEL,IAAEA,MAAG,WAASA,GAAE,SAAOK,GAAE,KAAGL,GAAE,KAAK,MAAM,IAAGK;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAAC,uBAAK,KAAG,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;gBAAC,GAAEA,GAAE,UAAU,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,KAAE,KAAK,GAAG,OAAMC,KAAED,GAAE,CAAC,GAAEE,KAAEF,GAAE,CAAC,GAAEG,KAAEH,GAAE,CAAC,GAAEI,KAAEJ,GAAE,CAAC,GAAEK,KAAEL,GAAE,CAAC,GAAEO,KAAEP,GAAE,CAAC,GAAEQ,KAAER,GAAE,CAAC,GAAEU,KAAEV,GAAE,CAAC,GAAE,IAAE,GAAE,IAAE,IAAG,KAAI;AAAC,wBAAG,IAAE,GAAG,GAAE,CAAC,IAAE,IAAED,GAAEJ,KAAE,CAAC;yBAAM;AAAC,0BAAI,IAAE,EAAE,IAAE,EAAE,GAAE,KAAG,KAAG,KAAG,MAAI,MAAI,KAAG,KAAG,MAAI,MAAI,MAAI,GAAE,IAAE,EAAE,IAAE,CAAC,GAAE,KAAG,KAAG,KAAG,MAAI,OAAK,KAAG,KAAG,MAAI,MAAI,MAAI;AAAG,wBAAE,CAAC,IAAE,IAAE,EAAE,IAAE,CAAC,IAAE,IAAE,EAAE,IAAE,EAAE;oBAAC;AAAC,wBAAI,IAAEM,KAAEC,KAAED,KAAEE,KAAED,KAAEC,IAAE,KAAGF,MAAG,KAAGA,OAAI,MAAIA,MAAG,KAAGA,OAAI,OAAKA,MAAG,KAAGA,OAAI,KAAI,IAAES,OAAIL,MAAG,KAAGA,OAAI,MAAIA,MAAG,KAAGA,OAAI,OAAKA,MAAG,IAAEA,OAAI,QAAMA,KAAEE,KAAE,CAACF,KAAEG,MAAG,EAAE,CAAC,IAAE,EAAE,CAAC;AAAEE,yBAAEF,IAAEA,KAAED,IAAEA,KAAEF,IAAEA,KAAED,KAAE,IAAE,GAAEA,KAAED,IAAEA,KAAED,IAAEA,KAAED,IAAEA,KAAE,KAAG,IAAE,KAAG;kBAAC;AAACD,qBAAE,CAAC,IAAEA,GAAE,CAAC,IAAEC,KAAE,GAAED,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEE,KAAE,GAAEF,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEG,KAAE,GAAEH,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEI,KAAE,GAAEJ,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEK,KAAE,GAAEL,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEO,KAAE,GAAEP,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEQ,KAAE,GAAER,GAAE,CAAC,IAAEA,GAAE,CAAC,IAAEU,KAAE;gBAAC,GAAEf,GAAE,UAAU,KAAG,WAAU;AAAC,sBAAII,KAAE,KAAK,GAAG,OAAMJ,KAAE,IAAE,KAAK,IAAGK,KAAE,IAAE,KAAK,GAAG;AAAU,yBAAOD,GAAEC,OAAI,CAAC,KAAG,OAAK,KAAGA,KAAE,IAAGD,GAAE,MAAIC,KAAE,OAAK,KAAG,EAAE,IAAE,KAAK,MAAML,KAAE,UAAU,GAAEI,GAAE,MAAIC,KAAE,OAAK,KAAG,EAAE,IAAEL,IAAE,KAAK,GAAG,YAAU,IAAEI,GAAE,QAAO,KAAK,GAAG,GAAE,KAAK;gBAAE,GAAEJ,GAAE,UAAU,QAAM,WAAU;AAAC,yBAAO,IAAIA,GAAE,EAAC,MAAK,KAAK,IAAG,WAAU,KAAK,GAAE,MAAK,KAAK,IAAG,QAAO,KAAK,GAAE,CAAC;gBAAC,GAAEA,GAAE,OAAK,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAEK,EAAC,EAAE,SAASD,EAAC;gBAAC,GAAEJ;cAAC,EAAE,EAAE,CAAC;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,MAAK,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,CAAC,GAAE,IAAE,CAAC,GAAE,IAAE,CAAC;AAAE,eAAC,WAAU;AAAC,yBAAQD,KAAE,GAAEJ,KAAE,GAAEK,KAAE,GAAEA,KAAE,IAAGA,MAAI;AAAC,oBAAED,KAAE,IAAEJ,EAAC,KAAGK,KAAE,MAAIA,KAAE,KAAG,IAAE;AAAG,sBAAIC,MAAG,IAAEF,KAAE,IAAEJ,MAAG;AAAEI,uBAAEJ,KAAE,GAAEA,KAAEM;gBAAC;AAAC,yBAAQE,KAAE,GAAEA,KAAE,GAAEA,KAAI,UAAQC,KAAE,GAAEA,KAAE,GAAEA,KAAI,GAAED,KAAE,IAAEC,EAAC,IAAEA,MAAG,IAAED,KAAE,IAAEC,MAAG,IAAE;AAAE,yBAAQC,KAAE,GAAEI,KAAE,GAAEA,KAAE,IAAGA,MAAI;AAAC,2BAAQC,KAAE,GAAE,IAAE,GAAE,IAAE,GAAE,IAAE,GAAE,KAAI;AAAC,wBAAG,IAAEL,IAAE;AAAC,0BAAI,KAAG,KAAG,KAAG;AAAE,0BAAE,KAAG,KAAG,KAAG,IAAEK,MAAG,KAAG,IAAE;oBAAE;AAAC,0BAAIL,KAAEA,KAAEA,MAAG,IAAE,MAAIA,OAAI;kBAAC;AAAC,oBAAEI,EAAC,IAAE,IAAI,EAAE,EAAEC,IAAE,CAAC;gBAAC;cAAC,EAAE;AAAE,kBAAI,IAAE,CAAC;AAAE,eAAC,WAAU;AAAC,yBAAQX,KAAE,GAAEA,KAAE,IAAGA,KAAI,GAAEA,EAAC,IAAE,IAAI,EAAE,EAAE,GAAE,CAAC;cAAC,EAAE;AAAE,kBAAI,IAAE,SAASA,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,sBAAGK,GAAE,IAAE,IAAGA,GAAE,KAAG,CAAC,GAAEA,GAAE,KAAG,KAAIA,GAAE,IAAEL,IAAEA,IAAE;AAAC,wBAAG,WAASA,GAAE,cAAa;AAAC,0BAAG,CAAC,CAAC,KAAI,KAAI,KAAI,GAAG,EAAE,SAASA,GAAE,YAAY,EAAE,OAAM,IAAI,MAAM,4BAA4B;AAAEK,yBAAE,KAAGL,GAAE;oBAAY;AAAC,+BAASA,GAAE,UAAQK,GAAE,KAAGL,GAAE,MAAM,IAAK,SAASI,IAAE;AAAC,6BAAOA,GAAE,MAAM;oBAAC,CAAE;kBAAE;AAAC,sBAAG,MAAIC,GAAE,GAAG,OAAO,UAAQC,KAAE,GAAEA,KAAE,IAAGA,KAAID,IAAE,GAAGC,EAAC,IAAE,IAAI,EAAE,EAAE,GAAE,CAAC;AAAE,yBAAOD,GAAE,KAAG,OAAK,IAAEA,GAAE,MAAI,IAAGA;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAAC,uBAAK,KAAG,CAAC;AAAE,2BAAQI,KAAE,GAAEA,KAAE,IAAGA,KAAI,MAAK,GAAGA,EAAC,IAAE,IAAI,EAAE,EAAE,GAAE,CAAC;AAAE,uBAAK,KAAG,OAAK,IAAE,KAAK,MAAI;gBAAE,GAAEJ,GAAE,UAAU,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,KAAE,KAAK,IAAGC,KAAE,KAAK,IAAE,GAAEC,KAAE,GAAEA,KAAED,IAAEC,MAAI;AAAC,wBAAIC,KAAEJ,GAAEJ,KAAE,IAAEO,EAAC,GAAEE,KAAEL,GAAEJ,KAAE,IAAEO,KAAE,CAAC;AAAEC,yBAAE,YAAUA,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAGC,KAAE,YAAUA,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAGJ,GAAEE,EAAC,EAAE,QAAME,IAAEJ,GAAEE,EAAC,EAAE,OAAKC;kBAAC;AAAC,2BAAQE,KAAE,GAAEA,KAAE,IAAGA,MAAI;AAAC,6BAAQK,KAAE,GAAEA,KAAE,GAAEA,MAAI;AAAC,+BAAQ,IAAE,GAAE,IAAE,GAAE,IAAE,GAAE,IAAE,GAAE,KAAI;AAAC,8BAAI,IAAEV,GAAEU,KAAE,IAAE,CAAC,GAAG,MAAK,KAAG,EAAE;sBAAG;AAAC,0BAAI,IAAE,EAAEA,EAAC;AAAE,wBAAE,OAAK,GAAE,EAAE,MAAI;oBAAC;AAAC,yBAAIA,KAAE,GAAEA,KAAE,GAAEA,MAAI;AAAC,0BAAI,IAAE,GAAGA,KAAE,KAAG,CAAC,GAAE,IAAE,GAAGA,KAAE,KAAG,CAAC,GAAE,IAAE,EAAE,MAAK,IAAE,EAAE;AAAI,2BAAI,IAAE,EAAE,QAAM,KAAG,IAAE,MAAI,KAAI,IAAE,EAAE,OAAK,KAAG,IAAE,MAAI,KAAI,IAAE,GAAE,IAAE,GAAE,KAAI;AAAC,yBAAC,IAAEV,GAAEU,KAAE,IAAE,CAAC,GAAG,QAAM,GAAE,EAAE,OAAK;sBAAC;oBAAC;AAAC,6BAAQ,IAAE,GAAE,IAAE,IAAG,KAAI;AAAC,0BAAE,QAAO,IAAE;AAAO,0BAAI,IAAEV,GAAE,CAAC,EAAE,MAAK,IAAEA,GAAE,CAAC,EAAE,KAAI,IAAE,EAAE,CAAC;AAAE,0BAAE,MAAI,IAAE,KAAG,IAAE,MAAI,KAAG,GAAE,IAAE,KAAG,IAAE,MAAI,KAAG,MAAI,IAAE,KAAG,IAAE,KAAG,MAAI,KAAG,GAAE,IAAE,KAAG,IAAE,KAAG,MAAI,KAAG;AAAG,0BAAI,IAAE,EAAE,EAAE,CAAC,CAAC;AAAE,wBAAE,OAAK,GAAE,EAAE,MAAI;oBAAC;AAAC,wBAAI,IAAE,EAAE,CAAC,GAAE,IAAEA,GAAE,CAAC;AAAE,sBAAE,OAAK,EAAE,MAAK,EAAE,MAAI,EAAE;AAAI,yBAAIU,KAAE,GAAEA,KAAE,GAAEA,KAAI,MAAI,IAAE,GAAE,IAAE,GAAE,KAAI;AAAC,0BAAI,IAAEV,GAAE,IAAEU,KAAE,IAAE,CAAC,GAAE,IAAE,EAAE,CAAC,GAAE,IAAE,GAAGA,KAAE,KAAG,IAAE,IAAE,CAAC,GAAE,IAAE,GAAGA,KAAE,KAAG,IAAE,IAAE,CAAC;AAAE,wBAAE,OAAK,EAAE,OAAK,CAAC,EAAE,OAAK,EAAE,MAAK,EAAE,MAAI,EAAE,MAAI,CAAC,EAAE,MAAI,EAAE;oBAAG;AAAC,wBAAI,IAAEV,GAAE,CAAC,GAAE,IAAE,EAAEK,EAAC;AAAE,sBAAE,QAAM,EAAE,MAAK,EAAE,OAAK,EAAE;kBAAG;gBAAC,GAAEV,GAAE,UAAU,KAAG,WAAU;AAAC,sBAAII,KAAE,KAAK,IAAGJ,KAAEI,GAAE,OAAMC,KAAE,IAAED,GAAE,WAAUE,KAAE,KAAG,KAAK;AAAUN,qBAAEK,OAAI,CAAC,KAAG,KAAG,KAAGA,KAAE,IAAGL,IAAG,KAAK,MAAMK,KAAE,KAAGC,EAAC,IAAEA,OAAI,KAAG,CAAC,KAAG,KAAIF,GAAE,YAAU,IAAEJ,GAAE,QAAO,KAAK,GAAG;AAAE,2BAAQO,KAAE,KAAK,IAAGC,KAAE,KAAK,KAAG,GAAEE,KAAEF,KAAE,GAAEG,KAAE,CAAC,GAAEC,KAAE,GAAEA,KAAEF,IAAEE,MAAI;AAAC,wBAAIC,KAAEN,GAAEK,EAAC,GAAEE,KAAED,GAAE,MAAKE,KAAEF,GAAE;AAAIC,yBAAE,YAAUA,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAGC,KAAE,YAAUA,MAAG,IAAEA,OAAI,MAAI,cAAYA,MAAG,KAAGA,OAAI,IAAGJ,GAAE,KAAKI,EAAC,GAAEJ,GAAE,KAAKG,EAAC;kBAAC;AAAC,yBAAO,IAAI,EAAE,EAAEH,IAAEH,EAAC;gBAAC,GAAER,GAAE,UAAU,QAAM,WAAU;AAAC,yBAAO,IAAIA,GAAE,EAAC,cAAa,KAAK,IAAG,OAAM,KAAK,IAAG,WAAU,KAAK,GAAE,MAAK,KAAK,IAAG,QAAO,KAAK,GAAE,CAAC;gBAAC,GAAEA,GAAE,OAAK,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAEK,EAAC,EAAE,SAASD,EAAC;gBAAC,GAAEJ;cAAC,EAAE,EAAE,CAAC;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,QAAO,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,SAASD,IAAE;AAAC,yBAASJ,GAAEA,IAAE;AAAC,sBAAIK,KAAED,GAAE,KAAK,MAAKJ,EAAC,KAAG;AAAK,yBAAOK,GAAE,KAAG,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,CAAC,CAAC,GAAEA,GAAE,IAAEL,IAAEA,MAAG,WAASA,GAAE,SAAOK,GAAE,KAAGL,GAAE,KAAK,MAAM,IAAGK;gBAAC;AAAC,uBAAO,EAAEL,IAAEI,EAAC,GAAEJ,GAAE,UAAU,IAAE,WAAU;AAAC,uBAAK,KAAG,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,CAAC,CAAC;gBAAC,GAAEA,GAAE,UAAU,KAAG,WAAU;AAAC,sBAAIA,KAAEI,GAAE,UAAU,GAAG,KAAK,IAAI;AAAE,yBAAOJ,GAAE,aAAW,IAAGA;gBAAC,GAAEA,GAAE,UAAU,QAAM,WAAU;AAAC,yBAAO,IAAIA,GAAE,EAAC,MAAK,KAAK,IAAG,WAAU,KAAK,GAAE,MAAK,KAAK,IAAG,QAAO,KAAK,GAAE,CAAC;gBAAC,GAAEA,GAAE,OAAK,SAASI,IAAEC,IAAE;AAAC,yBAAO,IAAIL,GAAEK,EAAC,EAAE,SAASD,EAAC;gBAAC,GAAEJ;cAAC,EAAE,EAAE,MAAM;YAAC,GAAE,MAAK,SAASI,IAAEJ,KAAEK,IAAE;AAACA,iBAAE,EAAEL,KAAE,EAAC,QAAO,WAAU;AAAC,uBAAO;cAAC,EAAC,CAAC;AAAE,kBAAIM,IAAE,IAAED,GAAE,IAAI,GAAE,IAAEA,GAAE,IAAI,GAAE,KAAGC,KAAE,SAASF,IAAEJ,IAAE;AAAC,wBAAOM,KAAE,OAAO,kBAAgB,EAAC,WAAU,CAAC,EAAC,aAAY,SAAO,SAASF,IAAEJ,IAAE;AAACI,qBAAE,YAAUJ;gBAAC,KAAG,SAASI,IAAEJ,IAAE;AAAC,2BAAQK,MAAKL,GAAE,QAAO,UAAU,eAAe,KAAKA,IAAEK,EAAC,MAAID,GAAEC,EAAC,IAAEL,GAAEK,EAAC;gBAAE,GAAGD,IAAEJ,EAAC;cAAC,GAAE,SAASI,IAAEJ,IAAE;AAAC,yBAASK,KAAG;AAAC,uBAAK,cAAYD;gBAAC;AAACE,mBAAEF,IAAEJ,EAAC,GAAEI,GAAE,YAAU,SAAOJ,KAAE,OAAO,OAAOA,EAAC,KAAGK,GAAE,YAAUL,GAAE,WAAU,IAAIK,GAAAA;cAAE,IAAG,IAAE,CAAC,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,SAAS,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,SAAS,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,SAAS,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,YAAW,UAAU,GAAE,IAAI,EAAE,EAAE,WAAU,UAAU,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",
  "names": ["exports", "util", "objectUtil", "t", "exports", "exports", "exports", "exports", "path", "exports", "exports", "errorUtil", "exports", "path", "ctx", "result", "schema", "_b", "issues", "elements", "processed", "ZodFirstPartyTypeKind", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "length", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "hash", "output", "exports", "exports", "exports", "randomBytes", "t", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "length", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "length", "consumed", "value", "exports", "value", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "err", "exports", "exports", "exports", "exports", "exports", "cause", "exports", "formatted", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "event", "args", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "cause", "exports", "args", "exports", "exports", "exports", "exports", "data", "exports", "args", "size", "exports", "exports", "exports", "listeners", "cleanup", "exports", "poll", "exports", "exports", "cacheKey", "exports", "exports", "exports", "eventName", "args", "exports", "exports", "cause", "exports", "exports", "exports", "request", "exports", "exports", "exports", "exports", "exports", "exports", "createClient", "config", "key", "exports", "exports", "exports", "exports", "config", "exports", "config", "fetch", "transport", "transports_", "exports", "sample", "exports", "exports", "module", "exports", "module", "output", "exports", "module", "exports", "module", "data", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "randomBytes", "URL", "WebSocket", "key", "exports", "module", "err", "exports", "module", "protocol", "exports", "module", "WebSocket", "exports", "module", "WebSocket", "exports", "exports", "exports", "response", "body", "exports", "webSocket", "id", "config", "body", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "res", "exports", "exports", "exports", "exports", "exports", "exports", "event", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "config", "exports", "exports", "exports", "exports", "t", "struct", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "length", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "window", "exports", "exports", "s", "a", "randomBytes", "r", "tv5", "c1", "c2", "exports", "exports", "exports", "exports", "t", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "v", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "args", "result", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "block", "exports", "event", "args", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "config", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "config", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "__export", "module", "__toCommonJS", "zod", "__toESM", "joinPath", "path", "issue", "createMessageBuilderFromOptions", "validateConfigurationWithResult", "exports", "isHostnameValid", "exports", "isPrivateGatewayNameValid", "exports", "isProjectNameValid", "exports", "isFunctionNameValid", "exports", "isFunctionSlugValid", "exports", "isFunctionStatusValid", "exports", "isSiteNameValid", "exports", "require_dist", "exports", "init", "V", "output", "split", "g", "decomposed", "cps", "isEnsValid", "exports", "exports", "exports", "exports", "exports", "fs", "exports", "isValidFolder", "path", "isFunctionPathValid", "exports", "exports", "exports", "exports", "DomainsNotFoundError", "exports", "exports", "exports", "DomainHostnameInvalidError", "exports", "UnknownError", "exports", "exports", "SitesNotFoundError", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "IpnsRecordsNotFoundError", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "ProjectsNotFoundError", "exports", "exports", "ProjectInvalidNameError", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "FleekConfigInvalidContentError", "exports", "FleekConfigMissingFileError", "exports", "exports", "exports", "ApplicationsNotFoundError", "exports", "exports", "ApplicationNameInvalidError", "exports", "EnsRecordNotFoundError", "exports", "exports", "EnsNameInvalidError", "exports", "exports", "exports", "exports", "exports", "exports", "PrivateGatewayNameInvalidError", "exports", "PrivateGatewaysNotFoundError", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "FleekFunctionsNotFoundError", "exports", "FleekFunctionPathNotValidError", "exports", "FleekFunctionNameNotValidError", "exports", "FleekFunctionStatusNotValidError", "exports", "FleekFunctionSlugNotValidError", "exports", "exports", "exports", "InvalidCidError", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "MissingExpectedDataError", "exports", "exports", "exports", "exports", "exports", "FleekFunctionBundlingFailedError", "exports", "exports", "exports", "ExpectedOneOfValuesError", "exports", "InvalidJSONFormat", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "FleekFunctionInvalidWasmCodeError", "exports", "FleekFunctionWasmEncryptionFailedError", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "module", "i", "j", "require_util", "exports", "module", "output", "require_base", "exports", "module", "exports", "module", "require_constants", "exports", "module", "constants", "require_src", "exports", "module", "constants", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "require_constants", "exports", "module", "exports", "exports", "exports", "module", "string", "exports", "exports", "require_concat", "exports", "output", "require_src", "exports", "module", "require_encode", "exports", "module", "require_decode", "exports", "module", "require_length", "exports", "module", "require_varint", "exports", "module", "require_util", "exports", "module", "exports", "module", "exports", "module", "require_src", "exports", "module", "exports", "module", "exports", "require_src", "exports", "module", "CID", "exports", "require_FleekError", "DomainsNotFoundError", "DomainHostnameInvalidError", "UnknownError", "SitesNotFoundError", "IpnsRecordsNotFoundError", "ProjectsNotFoundError", "ProjectInvalidNameError", "FleekConfigInvalidContentError", "FleekConfigMissingFileError", "ApplicationsNotFoundError", "ApplicationNameInvalidError", "EnsRecordNotFoundError", "EnsNameInvalidError", "PrivateGatewayNameInvalidError", "PrivateGatewaysNotFoundError", "FleekFunctionsNotFoundError", "FleekFunctionPathNotValidError", "FleekFunctionNameNotValidError", "FleekFunctionStatusNotValidError", "FleekFunctionSlugNotValidError", "InvalidCidError", "MissingExpectedDataError", "FleekFunctionBundlingFailedError", "ExpectedOneOfValuesError", "InvalidJSONFormat", "FleekFunctionInvalidWasmCodeError", "FleekFunctionWasmEncryptionFailedError", "require_BunnyPullZoneNotFoundError", "require_DomainNotFoundError", "require_DomainsNotFoundError", "require_DomainAlreadyExistsInProjectError", "require_DomainInPendingStateError", "require_DomainHostnameInvalidError", "require_UnknownError", "require_SiteNotFoundError", "require_SitesNotFoundError", "require_SiteAlreadyExistsError", "require_SiteDeploymentNotFoundError", "require_SiteHasDependentsError", "require_SiteHasNoSourceProviderError", "require_SiteNotDeployedError", "require_IpnsRecordNotFoundError", "require_IpnsRecordsNotFoundError", "require_IpnsFailToDecryptKeyError", "require_IpnsRecordsForSiteLimitError", "require_StorageIpfsUploadFailedError", "require_SdkRequiredNodeRuntimeError", "require_AuthorizationError", "require_ProjectMembershipNotFoundError", "require_GithubAppInstallationNotFoundError", "require_UserNotFoundError", "require_UserAlreadyExistsError", "require_ProjectNotFoundError", "require_ProjectsNotFoundError", "require_ProjectHasDependentsError", "require_ProjectInvalidNameError", "require_PublicKeyAlreadyExistsError", "require_VerificationSessionAlreadyExistsError", "require_UnauthenticatedError", "require_DomainZoneNotFoundError", "require_DomainZoneHasDependentsError", "require_DomainZoneInPendingStateError", "require_DomainNotFoundUnderPullzoneError", "require_DomainZoneInvalidTypeError", "require_UnauthorizedError", "require_FleekConfigInvalidContentError", "require_FleekConfigMissingFileError", "require_ApplicationWhitelistDomainDuplicityError", "require_ApplicationAlreadyExistsError", "require_ApplicationsNotFoundError", "require_ApplicationNotFoundError", "require_ApplicationNameInvalidError", "require_EnsRecordNotFoundError", "require_EnsRecordAlreadyExistsInProjectError", "require_EnsNameInvalidError", "require_EnsRecordInPendingStateError", "require_InvalidPersonalAccessTokenError", "require_PersonalAccessTokenNotFoundError", "require_PrivateGatewayNotFoundError", "require_PrivateGatewayAlreadyExistsError", "require_PrivateGatewayNameInvalidError", "require_PrivateGatewaysNotFoundError", "require_TemplateAlreadyExistsError", "require_TemplateNotFoundError", "require_UserHasNoAccessToAnotherUserError", "require_SiteFrameworkAlreadyExistsError", "require_SiteFrameworkNotFoundError", "require_TemplateCategoryNotFoundError", "require_TemplateDeploymentNotFoundError", "require_ProjectMembershipHasInefficientRoleError", "require_SecretGroupNotFoundError", "require_SecretNotFoundError", "require_SecretVisibilityAlreadyEncryptedError", "require_SecretKeyAlreadyExistsError", "require_SecretFailToEncryptError", "require_PinNotFoundError", "require_PinAlreadyExistsInProjectError", "require_UnstoppableDeploymentError", "require_SiteDeploymentNotReleasedError", "require_InvalidDeploymentTriggerError", "require_IpfsGatewayContentUnreachableError", "require_InvitationNotFoundError", "require_MigrationTokenInvalidError", "require_MigrationRequestsAlreadyExistError", "require_MigrationRequestNotFoundError", "require_MigrationRequestInPendingStateError", "require_ProjectInvitationAlreadyExistError", "require_ProjectMembershipAlreadyExistError", "require_ProjectMembershipNoOwnersError", "require_UploadedS3KeyNotFoundError", "require_PathIsNotADirectoryError", "require_FleekFunctionAlreadyExistsError", "require_FleekFunctionNotFoundError", "require_FleekFunctionDeploymentNotFoundError", "require_FleekFunctionsNotFoundError", "require_FleekFunctionPathNotValidError", "require_FleekFunctionNameNotValidError", "require_FleekFunctionStatusNotValidError", "require_FleekFunctionSlugNotValidError", "require_MaintenanceError", "require_UserHasNoAccessToFeatureError", "require_InvalidCidError", "require_ValidationError", "require_UserInBlocklistError", "require_EnsNameContentHashCodecMistmatchError", "require_EnsNameContentHashUndefinedError", "require_DnsConfigAlreadyExistsError", "require_DnsConfigNotFoundError", "require_TwoFactorSecretKeyFailedToEncryptError", "require_UserSecretKeyAlreadyExistsError", "require_UserSecretKeyNotFoundError", "require_TwoFactorSecretKeyFailedToDecryptError", "require_RecoveryCodesAlreadyExistsError", "require_WriteFileFromStreamError", "require_InvalidTOTPTokenError", "require_InvalidRecoveryCodeError", "require_MissingTwoFactorProtectionCredentialsError", "require_DeploymentInProgressError", "require_PullzoneNotFoundForZoneIdError", "require_RecoveryCodeFailedToEncryptError", "require_RecoveryCodeFailedToDecryptError", "require_PermissionGroupNotFoundError", "require_PermissionScopeError", "require_InvalidAdminAccessTokenError", "require_MissingExpectedDataError", "require_EnvNotSetError", "require_GitSecretsFailedToEncryptError", "require_GitConfigFailedToParseError", "require_PathIsNotAFileError", "require_FleekFunctionBundlingFailedError", "require_GitIntegrationNotFoundError", "require_GitProviderNotFoundError", "require_ExpectedOneOfValuesError", "require_InvalidJSONFormat", "require_StorageUploadFileCountQuotaExceededError", "require_StorageUploadTotalSizeQuotaExceededError", "require_GitProviderNotSupportedError", "require_GitProviderNotAuthorizedError", "require_GitAccessTokenInvalidError", "require_QueuedDeploymentsLimitError", "require_GitIntegrationInstallationConflictError", "require_GitLinkMultipleAccountError", "require_GitRepoByNameAndOwnerNotFoundError", "require_GitAccessTokenNotFoundError", "require_FolderNotFoundError", "require_FolderAlreadyExistsError", "require_FolderNameContainsReservedWordError", "require_PinsNotFoundError", "require_SiteCreationFailedError", "require_FleekFunctionInvalidWasmCodeError", "require_FleekFunctionWasmEncryptionFailedError", "require_UploadProxyStoreAsCarError", "require_UploadProxyUploadFileError", "require_IpfsDenylistUpdateWorkflowTriggerFailedError", "require_ProjectSiteLimitExceededError", "require_ProjectFleekFunctionLimitExceededError", "require_UserProjectLimitExceededError", "__commonJS", "require_errors", "encrypt", "_b", "enc$1", "der", "keyObject", "byteLength", "require_decrypt", "protectedHeader", "require_encrypt", "jwe", "sign", "require_verify", "require_sign", "jwk", "require_base64url", "require_cjs", "t", "createAssetsAccessToken", "module", "require_dist", "n", "r", "i", "e", "o", "u", "f", "c", "s", "a", "h", "v", "w", "l", "b", "d", "y", "p", "O", "j", "_", "en", "__export", "getFleekXyzIpfsGatewayUrl", "getPrivateIpfsGatewayUrl", "__toCommonJS", "import_errors", "__toESM", "defined", "override_env_var_prefix", "getDefined", "CID", "require_dist2", "getIpnsGatewayUrl", "exports", "exports", "exports", "path", "exports", "exports", "exports", "exports", "res", "exports", "res", "exports", "anchors", "exports", "exports", "t", "schema", "node", "exports", "schema", "path", "exports", "exports", "i", "end", "exports", "t", "require_stringify", "exports", "t", "exports", "require_log", "exports", "exports", "value", "exports", "exports", "schema", "exports", "stringify", "comment", "str", "exports", "schema", "exports", "map", "schema", "exports", "schema", "exports", "seq", "schema", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "schema", "require_schema", "exports", "schema", "exports", "exports", "schema", "pairs", "exports", "schema", "omap", "require_bool", "exports", "require_float", "exports", "require_int", "exports", "n", "exports", "schema", "set", "exports", "res", "require_schema", "exports", "schema", "exports", "schema", "tags", "exports", "schema", "exports", "exports", "path", "res", "require_errors", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "t", "exports", "value", "end", "exports", "exports", "schema", "tag", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "path", "exports", "exports", "i", "ch", "exports", "exports", "start", "fs", "exports", "lineCounter", "require_dist", "exports", "exports", "generateDeploymentWorkflowYaml", "exports", "override_env_var_prefix", "getDefined", "path", "exports", "exports", "getFleekDefaultGatewayBySlug", "path", "chalk", "txt", "import_utils_validation", "Conf", "output", "import_node", "import_errors", "prompts", "import_errors", "ansiEscapes", "choices", "import_errors", "import_utils_validation", "import_node_fs", "import_node_path", "import_node_fs", "import_node_path", "import_errors", "FleekSiteConfigFormats", "joinPath", "fs", "import_errors", "import_utils_validation", "import_node_fs", "import_node_path", "import_errors", "getExtension", "fs", "registerTSNodeCompiler", "loadedConfigModule", "import_errors", "path", "config", "fs", "import_node_fs", "path", "fsPromises", "import_node_path", "import_node_fs", "path", "fs", "path", "joinPath", "import_node_fs", "fs", "config", "import_errors", "import_utils_validation", "nameValidation", "import_errors", "import_utils_validation", "import_errors", "import_errors", "import_utils_validation", "import_errors", "zone", "import_errors", "domain", "domain", "domain", "import_errors", "import_utils_validation", "record", "import_errors", "import_errors", "import_utils_validation", "import_utils_validation", "import_errors", "import_node_fs", "import_cli_progress", "fs", "import_errors", "import_utils_validation", "path", "fs", "import_errors", "cliProgress", "build", "transpileResponse", "path", "import_node_fs", "fs", "config", "dotenv", "fs", "os", "import_errors", "import_cli_progress", "cliProgress", "import_utils_validation", "cliProgress", "fs", "import_errors", "import_utils_validation", "import_errors", "import_utils_validation", "import_errors", "import_utils_validation", "import_node_fs", "import_utils_ipfs", "import_node_fs", "import_node_path", "path", "fs", "fs", "path", "createAction", "createActionHandler", "import_errors", "deleteAction", "deleteActionHandler", "listAction", "listActionHandler", "import_utils_ipns", "createActionHandler", "listActionHandler", "deleteActionHandler", "import_errors", "import_node", "output", "import_chalk", "import_chalk", "ora", "chalk", "chalk", "asTable", "boxen", "import_node_path", "path", "import_node_path", "path", "joinPath", "import_node_fs", "output", "ghActionsWorflowsDirectory", "fs", "import_node_fs", "fs", "config", "import_node_fs", "import_chalk", "output", "fs", "chalk", "joinPath", "output", "parseSemver", "runCommand", "output", "deployAction", "config", "deployActionHandler", "import_errors", "listAction", "listActionHandler", "output", "listDeploymentsAction", "listDeploymentsActionHandler", "deployActionHandler", "listActionHandler", "listDeploymentsActionHandler", "import_node_fs", "import_node_path", "import_utils_ipfs", "import_cli_progress", "import_files_from_path", "import_promises", "path", "fs", "cliProgress", "import_errors", "cid", "import_errors", "import_multiformats", "import_utils_ipfs", "path", "program"]
}
